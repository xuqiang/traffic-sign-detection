+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=
+ NET=
+ NET_lc=
+ DATASET=
+ array=($@)
+ len=0
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ echo 'No dataset given'
No dataset given
+ exit
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-46-14
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-46-14
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-46-14
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-46-14
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:46:18.216676  3386 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 15:46:18.216732  3386 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 15:46:18.217474  3386 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 15:46:18.217630  3386 layer_factory.hpp:77] Creating layer input-data
I0419 15:46:18.218180  3386 net.cpp:106] Creating Layer input-data
I0419 15:46:18.218192  3386 net.cpp:411] input-data -> data
I0419 15:46:18.218207  3386 net.cpp:411] input-data -> im_info
I0419 15:46:18.218212  3386 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 15:46:18.234274  3386 net.cpp:150] Setting up input-data
I0419 15:46:18.234299  3386 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:46:18.234308  3386 net.cpp:157] Top shape: 1 3 (3)
I0419 15:46:18.234313  3386 net.cpp:157] Top shape: 1 4 (4)
I0419 15:46:18.234318  3386 net.cpp:165] Memory required for data: 7200028
I0419 15:46:18.234323  3386 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 15:46:18.234361  3386 net.cpp:106] Creating Layer data_input-data_0_split
I0419 15:46:18.234369  3386 net.cpp:454] data_input-data_0_split <- data
I0419 15:46:18.234381  3386 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 15:46:18.234391  3386 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 15:46:18.234441  3386 net.cpp:150] Setting up data_input-data_0_split
I0419 15:46:18.234453  3386 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:46:18.234460  3386 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:46:18.234464  3386 net.cpp:165] Memory required for data: 21600028
I0419 15:46:18.234468  3386 layer_factory.hpp:77] Creating layer conv1
I0419 15:46:18.234488  3386 net.cpp:106] Creating Layer conv1
I0419 15:46:18.234498  3386 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 15:46:18.234508  3386 net.cpp:411] conv1 -> conv1
I0419 15:46:18.235867  3386 net.cpp:150] Setting up conv1
I0419 15:46:18.235887  3386 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:46:18.235891  3386 net.cpp:165] Memory required for data: 79200028
I0419 15:46:18.235914  3386 layer_factory.hpp:77] Creating layer relu1
I0419 15:46:18.235927  3386 net.cpp:106] Creating Layer relu1
I0419 15:46:18.235936  3386 net.cpp:454] relu1 <- conv1
I0419 15:46:18.235946  3386 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:46:18.235960  3386 net.cpp:150] Setting up relu1
I0419 15:46:18.235970  3386 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:46:18.235973  3386 net.cpp:165] Memory required for data: 136800028
I0419 15:46:18.235977  3386 layer_factory.hpp:77] Creating layer norm1
I0419 15:46:18.235987  3386 net.cpp:106] Creating Layer norm1
I0419 15:46:18.235993  3386 net.cpp:454] norm1 <- conv1
I0419 15:46:18.235999  3386 net.cpp:411] norm1 -> norm1
I0419 15:46:18.236111  3386 net.cpp:150] Setting up norm1
I0419 15:46:18.236125  3386 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:46:18.236130  3386 net.cpp:165] Memory required for data: 194400028
I0419 15:46:18.236135  3386 layer_factory.hpp:77] Creating layer pool1
I0419 15:46:18.236145  3386 net.cpp:106] Creating Layer pool1
I0419 15:46:18.236150  3386 net.cpp:454] pool1 <- norm1
I0419 15:46:18.236156  3386 net.cpp:411] pool1 -> pool1
I0419 15:46:18.236202  3386 net.cpp:150] Setting up pool1
I0419 15:46:18.236213  3386 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 15:46:18.236218  3386 net.cpp:165] Memory required for data: 208954012
I0419 15:46:18.236222  3386 layer_factory.hpp:77] Creating layer conv2
I0419 15:46:18.236232  3386 net.cpp:106] Creating Layer conv2
I0419 15:46:18.236237  3386 net.cpp:454] conv2 <- pool1
I0419 15:46:18.236243  3386 net.cpp:411] conv2 -> conv2
I0419 15:46:18.237941  3386 net.cpp:150] Setting up conv2
I0419 15:46:18.237959  3386 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:46:18.237964  3386 net.cpp:165] Memory required for data: 218759836
I0419 15:46:18.237977  3386 layer_factory.hpp:77] Creating layer relu2
I0419 15:46:18.237985  3386 net.cpp:106] Creating Layer relu2
I0419 15:46:18.237993  3386 net.cpp:454] relu2 <- conv2
I0419 15:46:18.238005  3386 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:46:18.238015  3386 net.cpp:150] Setting up relu2
I0419 15:46:18.238023  3386 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:46:18.238028  3386 net.cpp:165] Memory required for data: 228565660
I0419 15:46:18.238032  3386 layer_factory.hpp:77] Creating layer norm2
I0419 15:46:18.238047  3386 net.cpp:106] Creating Layer norm2
I0419 15:46:18.238059  3386 net.cpp:454] norm2 <- conv2
I0419 15:46:18.238065  3386 net.cpp:411] norm2 -> norm2
I0419 15:46:18.238157  3386 net.cpp:150] Setting up norm2
I0419 15:46:18.238169  3386 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:46:18.238173  3386 net.cpp:165] Memory required for data: 238371484
I0419 15:46:18.238178  3386 layer_factory.hpp:77] Creating layer pool2
I0419 15:46:18.238184  3386 net.cpp:106] Creating Layer pool2
I0419 15:46:18.238189  3386 net.cpp:454] pool2 <- norm2
I0419 15:46:18.238201  3386 net.cpp:411] pool2 -> pool2
I0419 15:46:18.238236  3386 net.cpp:150] Setting up pool2
I0419 15:46:18.238247  3386 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:46:18.238251  3386 net.cpp:165] Memory required for data: 240927388
I0419 15:46:18.238255  3386 layer_factory.hpp:77] Creating layer conv3
I0419 15:46:18.238267  3386 net.cpp:106] Creating Layer conv3
I0419 15:46:18.238273  3386 net.cpp:454] conv3 <- pool2
I0419 15:46:18.238281  3386 net.cpp:411] conv3 -> conv3
I0419 15:46:18.241585  3386 net.cpp:150] Setting up conv3
I0419 15:46:18.241603  3386 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:46:18.241608  3386 net.cpp:165] Memory required for data: 244761244
I0419 15:46:18.241621  3386 layer_factory.hpp:77] Creating layer relu3
I0419 15:46:18.241632  3386 net.cpp:106] Creating Layer relu3
I0419 15:46:18.241643  3386 net.cpp:454] relu3 <- conv3
I0419 15:46:18.241650  3386 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:46:18.241659  3386 net.cpp:150] Setting up relu3
I0419 15:46:18.241667  3386 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:46:18.241672  3386 net.cpp:165] Memory required for data: 248595100
I0419 15:46:18.241677  3386 layer_factory.hpp:77] Creating layer conv4
I0419 15:46:18.241688  3386 net.cpp:106] Creating Layer conv4
I0419 15:46:18.241693  3386 net.cpp:454] conv4 <- conv3
I0419 15:46:18.241701  3386 net.cpp:411] conv4 -> conv4
I0419 15:46:18.245051  3386 net.cpp:150] Setting up conv4
I0419 15:46:18.245070  3386 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:46:18.245075  3386 net.cpp:165] Memory required for data: 252428956
I0419 15:46:18.245085  3386 layer_factory.hpp:77] Creating layer relu4
I0419 15:46:18.245092  3386 net.cpp:106] Creating Layer relu4
I0419 15:46:18.245097  3386 net.cpp:454] relu4 <- conv4
I0419 15:46:18.245107  3386 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:46:18.245116  3386 net.cpp:150] Setting up relu4
I0419 15:46:18.245131  3386 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:46:18.245136  3386 net.cpp:165] Memory required for data: 256262812
I0419 15:46:18.245139  3386 layer_factory.hpp:77] Creating layer conv5
I0419 15:46:18.245149  3386 net.cpp:106] Creating Layer conv5
I0419 15:46:18.245154  3386 net.cpp:454] conv5 <- conv4
I0419 15:46:18.245164  3386 net.cpp:411] conv5 -> conv5
I0419 15:46:18.247514  3386 net.cpp:150] Setting up conv5
I0419 15:46:18.247534  3386 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:46:18.247537  3386 net.cpp:165] Memory required for data: 258818716
I0419 15:46:18.247553  3386 layer_factory.hpp:77] Creating layer relu5
I0419 15:46:18.247562  3386 net.cpp:106] Creating Layer relu5
I0419 15:46:18.247573  3386 net.cpp:454] relu5 <- conv5
I0419 15:46:18.247586  3386 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:46:18.247598  3386 net.cpp:150] Setting up relu5
I0419 15:46:18.247606  3386 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:46:18.247611  3386 net.cpp:165] Memory required for data: 261374620
I0419 15:46:18.247618  3386 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:46:18.247634  3386 net.cpp:106] Creating Layer rpn_conv1
I0419 15:46:18.247642  3386 net.cpp:454] rpn_conv1 <- conv5
I0419 15:46:18.247650  3386 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:46:18.264714  3386 net.cpp:150] Setting up rpn_conv1
I0419 15:46:18.264732  3386 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:46:18.264736  3386 net.cpp:165] Memory required for data: 263930524
I0419 15:46:18.264746  3386 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:46:18.264757  3386 net.cpp:106] Creating Layer rpn_relu1
I0419 15:46:18.264762  3386 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:46:18.264777  3386 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:46:18.264786  3386 net.cpp:150] Setting up rpn_relu1
I0419 15:46:18.264797  3386 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:46:18.264802  3386 net.cpp:165] Memory required for data: 266486428
I0419 15:46:18.264807  3386 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:46:18.264825  3386 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:46:18.264832  3386 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:46:18.264838  3386 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:46:18.264847  3386 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:46:18.264890  3386 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:46:18.264902  3386 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:46:18.264909  3386 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:46:18.264914  3386 net.cpp:165] Memory required for data: 271598236
I0419 15:46:18.264919  3386 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:46:18.264933  3386 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:46:18.264945  3386 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:46:18.264956  3386 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:46:18.265290  3386 net.cpp:150] Setting up rpn_cls_score
I0419 15:46:18.265305  3386 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:46:18.265310  3386 net.cpp:165] Memory required for data: 271777948
I0419 15:46:18.265318  3386 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:46:18.265326  3386 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:46:18.265331  3386 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 15:46:18.265337  3386 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 15:46:18.265348  3386 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 15:46:18.265389  3386 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 15:46:18.265401  3386 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:46:18.265408  3386 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:46:18.265411  3386 net.cpp:165] Memory required for data: 272137372
I0419 15:46:18.265415  3386 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:46:18.265429  3386 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:46:18.265436  3386 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:46:18.265449  3386 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:46:18.265898  3386 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:46:18.265913  3386 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:46:18.265918  3386 net.cpp:165] Memory required for data: 272496796
I0419 15:46:18.265925  3386 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 15:46:18.265935  3386 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 15:46:18.265943  3386 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 15:46:18.265950  3386 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 15:46:18.265986  3386 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 15:46:18.265998  3386 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 15:46:18.266002  3386 net.cpp:165] Memory required for data: 272676508
I0419 15:46:18.266007  3386 layer_factory.hpp:77] Creating layer rpn-data
I0419 15:46:18.266549  3386 net.cpp:106] Creating Layer rpn-data
I0419 15:46:18.266567  3386 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 15:46:18.266575  3386 net.cpp:454] rpn-data <- gt_boxes
I0419 15:46:18.266582  3386 net.cpp:454] rpn-data <- im_info
I0419 15:46:18.266587  3386 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 15:46:18.266594  3386 net.cpp:411] rpn-data -> rpn_labels
I0419 15:46:18.266605  3386 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 15:46:18.266619  3386 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 15:46:18.266629  3386 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 15:46:18.267926  3386 net.cpp:150] Setting up rpn-data
I0419 15:46:18.267949  3386 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 15:46:18.267956  3386 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:46:18.267962  3386 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:46:18.267967  3386 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:46:18.267971  3386 net.cpp:165] Memory required for data: 273844636
I0419 15:46:18.267977  3386 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 15:46:18.267997  3386 net.cpp:106] Creating Layer rpn_loss_cls
I0419 15:46:18.268005  3386 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 15:46:18.268013  3386 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 15:46:18.268025  3386 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 15:46:18.268043  3386 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 15:46:18.268162  3386 net.cpp:150] Setting up rpn_loss_cls
I0419 15:46:18.268175  3386 net.cpp:157] Top shape: (1)
I0419 15:46:18.268179  3386 net.cpp:160]     with loss weight 1
I0419 15:46:18.268203  3386 net.cpp:165] Memory required for data: 273844640
I0419 15:46:18.268209  3386 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 15:46:18.268221  3386 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 15:46:18.268230  3386 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 15:46:18.268236  3386 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 15:46:18.268247  3386 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 15:46:18.268254  3386 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 15:46:18.268260  3386 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 15:46:18.268854  3386 net.cpp:150] Setting up rpn_loss_bbox
I0419 15:46:18.268867  3386 net.cpp:157] Top shape: (1)
I0419 15:46:18.268872  3386 net.cpp:160]     with loss weight 1
I0419 15:46:18.268879  3386 net.cpp:165] Memory required for data: 273844644
I0419 15:46:18.268884  3386 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 15:46:18.268899  3386 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 15:46:18.268913  3386 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 15:46:18.268950  3386 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 15:46:18.268962  3386 net.cpp:157] Top shape: 1 9216 (9216)
I0419 15:46:18.268966  3386 net.cpp:165] Memory required for data: 273881508
I0419 15:46:18.268971  3386 layer_factory.hpp:77] Creating layer fc6
I0419 15:46:18.268985  3386 net.cpp:106] Creating Layer fc6
I0419 15:46:18.268993  3386 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 15:46:18.269001  3386 net.cpp:411] fc6 -> fc6
I0419 15:46:18.368332  3386 net.cpp:150] Setting up fc6
I0419 15:46:18.368376  3386 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:46:18.368381  3386 net.cpp:165] Memory required for data: 273897892
I0419 15:46:18.368404  3386 layer_factory.hpp:77] Creating layer relu6
I0419 15:46:18.368418  3386 net.cpp:106] Creating Layer relu6
I0419 15:46:18.368425  3386 net.cpp:454] relu6 <- fc6
I0419 15:46:18.368434  3386 net.cpp:397] relu6 -> fc6 (in-place)
I0419 15:46:18.368456  3386 net.cpp:150] Setting up relu6
I0419 15:46:18.368463  3386 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:46:18.368468  3386 net.cpp:165] Memory required for data: 273914276
I0419 15:46:18.368476  3386 layer_factory.hpp:77] Creating layer fc7
I0419 15:46:18.368489  3386 net.cpp:106] Creating Layer fc7
I0419 15:46:18.368495  3386 net.cpp:454] fc7 <- fc6
I0419 15:46:18.368502  3386 net.cpp:411] fc7 -> fc7
I0419 15:46:18.412681  3386 net.cpp:150] Setting up fc7
I0419 15:46:18.412724  3386 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:46:18.412730  3386 net.cpp:165] Memory required for data: 273930660
I0419 15:46:18.412744  3386 layer_factory.hpp:77] Creating layer silence_fc7
I0419 15:46:18.412763  3386 net.cpp:106] Creating Layer silence_fc7
I0419 15:46:18.412770  3386 net.cpp:454] silence_fc7 <- fc7
I0419 15:46:18.412780  3386 net.cpp:150] Setting up silence_fc7
I0419 15:46:18.412789  3386 net.cpp:165] Memory required for data: 273930660
I0419 15:46:18.412794  3386 net.cpp:228] silence_fc7 does not need backward computation.
I0419 15:46:18.412803  3386 net.cpp:228] fc7 does not need backward computation.
I0419 15:46:18.412808  3386 net.cpp:228] relu6 does not need backward computation.
I0419 15:46:18.412817  3386 net.cpp:228] fc6 does not need backward computation.
I0419 15:46:18.412822  3386 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 15:46:18.412825  3386 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 15:46:18.412832  3386 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 15:46:18.412839  3386 net.cpp:226] rpn-data needs backward computation.
I0419 15:46:18.412847  3386 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 15:46:18.412853  3386 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 15:46:18.412860  3386 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 15:46:18.412865  3386 net.cpp:226] rpn_cls_score needs backward computation.
I0419 15:46:18.412870  3386 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 15:46:18.412876  3386 net.cpp:226] rpn_relu1 needs backward computation.
I0419 15:46:18.412881  3386 net.cpp:226] rpn_conv1 needs backward computation.
I0419 15:46:18.412889  3386 net.cpp:226] relu5 needs backward computation.
I0419 15:46:18.412894  3386 net.cpp:226] conv5 needs backward computation.
I0419 15:46:18.412899  3386 net.cpp:226] relu4 needs backward computation.
I0419 15:46:18.412902  3386 net.cpp:226] conv4 needs backward computation.
I0419 15:46:18.412906  3386 net.cpp:226] relu3 needs backward computation.
I0419 15:46:18.412910  3386 net.cpp:226] conv3 needs backward computation.
I0419 15:46:18.412915  3386 net.cpp:226] pool2 needs backward computation.
I0419 15:46:18.412919  3386 net.cpp:226] norm2 needs backward computation.
I0419 15:46:18.412925  3386 net.cpp:226] relu2 needs backward computation.
I0419 15:46:18.412930  3386 net.cpp:226] conv2 needs backward computation.
I0419 15:46:18.412933  3386 net.cpp:226] pool1 needs backward computation.
I0419 15:46:18.412942  3386 net.cpp:226] norm1 needs backward computation.
I0419 15:46:18.412948  3386 net.cpp:226] relu1 needs backward computation.
I0419 15:46:18.412952  3386 net.cpp:226] conv1 needs backward computation.
I0419 15:46:18.412958  3386 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 15:46:18.412964  3386 net.cpp:228] input-data does not need backward computation.
I0419 15:46:18.412973  3386 net.cpp:270] This network produces output rpn_cls_loss
I0419 15:46:18.412978  3386 net.cpp:270] This network produces output rpn_loss_bbox
I0419 15:46:18.413017  3386 net.cpp:283] Network initialization done.
I0419 15:46:18.413144  3386 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 15:46:18.863663  3386 net.cpp:816] Ignoring source layer pool5_spm6
I0419 15:46:18.863694  3386 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 15:46:18.894071  3386 net.cpp:816] Ignoring source layer drop6
I0419 15:46:18.907569  3386 net.cpp:816] Ignoring source layer relu7
I0419 15:46:18.907595  3386 net.cpp:816] Ignoring source layer drop7
I0419 15:46:18.907599  3386 net.cpp:816] Ignoring source layer fc8
I0419 15:46:18.907603  3386 net.cpp:816] Ignoring source layer prob
Solving...
I0419 15:46:19.091526  3386 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 15:46:19.091578  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 15:46:19.091590  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 15:46:19.091605  3386 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 15:46:22.000605  3386 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 15:46:22.000651  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 15:46:22.000661  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 15:46:22.000670  3386 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 15:46:24.837846  3386 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 15:46:24.837899  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 15:46:24.837910  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 15:46:24.837918  3386 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 15:46:27.679627  3386 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 15:46:27.679682  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 15:46:27.679692  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 15:46:27.679700  3386 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 15:46:30.526686  3386 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 15:46:30.526736  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 15:46:30.526747  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 15:46:30.526756  3386 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 15:46:33.369498  3386 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 15:46:33.369551  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 15:46:33.369563  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 15:46:33.369571  3386 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 15:46:36.212188  3386 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 15:46:36.212240  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 15:46:36.212251  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 15:46:36.212260  3386 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 15:46:39.062476  3386 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 15:46:39.062526  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 15:46:39.062538  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 15:46:39.062546  3386 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 15:46:41.908581  3386 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 15:46:41.908630  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 15:46:41.908640  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 15:46:41.908648  3386 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 15:46:44.761389  3386 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 15:46:44.761442  3386 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 15:46:44.761452  3386 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 15:46:44.761461  3386 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:46:50.901124  3406 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 15:46:50.901301  3406 net.cpp:413] Input 0 -> data
I0419 15:46:50.916885  3406 net.cpp:413] Input 1 -> im_info
I0419 15:46:50.916939  3406 layer_factory.hpp:77] Creating layer conv1
I0419 15:46:50.916968  3406 net.cpp:106] Creating Layer conv1
I0419 15:46:50.916981  3406 net.cpp:454] conv1 <- data
I0419 15:46:50.916996  3406 net.cpp:411] conv1 -> conv1
I0419 15:46:50.917779  3406 net.cpp:150] Setting up conv1
I0419 15:46:50.917803  3406 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:46:50.917806  3406 net.cpp:165] Memory required for data: 4816896
I0419 15:46:50.917827  3406 layer_factory.hpp:77] Creating layer relu1
I0419 15:46:50.917848  3406 net.cpp:106] Creating Layer relu1
I0419 15:46:50.917857  3406 net.cpp:454] relu1 <- conv1
I0419 15:46:50.917867  3406 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:46:50.917881  3406 net.cpp:150] Setting up relu1
I0419 15:46:50.917896  3406 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:46:50.917899  3406 net.cpp:165] Memory required for data: 9633792
I0419 15:46:50.917904  3406 layer_factory.hpp:77] Creating layer norm1
I0419 15:46:50.917913  3406 net.cpp:106] Creating Layer norm1
I0419 15:46:50.917918  3406 net.cpp:454] norm1 <- conv1
I0419 15:46:50.917927  3406 net.cpp:411] norm1 -> norm1
I0419 15:46:50.918051  3406 net.cpp:150] Setting up norm1
I0419 15:46:50.918063  3406 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:46:50.918066  3406 net.cpp:165] Memory required for data: 14450688
I0419 15:46:50.918069  3406 layer_factory.hpp:77] Creating layer pool1
I0419 15:46:50.918077  3406 net.cpp:106] Creating Layer pool1
I0419 15:46:50.918088  3406 net.cpp:454] pool1 <- norm1
I0419 15:46:50.918095  3406 net.cpp:411] pool1 -> pool1
I0419 15:46:50.918145  3406 net.cpp:150] Setting up pool1
I0419 15:46:50.918157  3406 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 15:46:50.918160  3406 net.cpp:165] Memory required for data: 15698304
I0419 15:46:50.918164  3406 layer_factory.hpp:77] Creating layer conv2
I0419 15:46:50.918172  3406 net.cpp:106] Creating Layer conv2
I0419 15:46:50.918182  3406 net.cpp:454] conv2 <- pool1
I0419 15:46:50.918190  3406 net.cpp:411] conv2 -> conv2
I0419 15:46:50.920387  3406 net.cpp:150] Setting up conv2
I0419 15:46:50.920405  3406 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:46:50.920408  3406 net.cpp:165] Memory required for data: 16559488
I0419 15:46:50.920419  3406 layer_factory.hpp:77] Creating layer relu2
I0419 15:46:50.920436  3406 net.cpp:106] Creating Layer relu2
I0419 15:46:50.920444  3406 net.cpp:454] relu2 <- conv2
I0419 15:46:50.920451  3406 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:46:50.920462  3406 net.cpp:150] Setting up relu2
I0419 15:46:50.920469  3406 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:46:50.920475  3406 net.cpp:165] Memory required for data: 17420672
I0419 15:46:50.920480  3406 layer_factory.hpp:77] Creating layer norm2
I0419 15:46:50.920487  3406 net.cpp:106] Creating Layer norm2
I0419 15:46:50.920493  3406 net.cpp:454] norm2 <- conv2
I0419 15:46:50.920502  3406 net.cpp:411] norm2 -> norm2
I0419 15:46:50.920600  3406 net.cpp:150] Setting up norm2
I0419 15:46:50.920614  3406 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:46:50.920615  3406 net.cpp:165] Memory required for data: 18281856
I0419 15:46:50.920619  3406 layer_factory.hpp:77] Creating layer pool2
I0419 15:46:50.920626  3406 net.cpp:106] Creating Layer pool2
I0419 15:46:50.920632  3406 net.cpp:454] pool2 <- norm2
I0419 15:46:50.920639  3406 net.cpp:411] pool2 -> pool2
I0419 15:46:50.920691  3406 net.cpp:150] Setting up pool2
I0419 15:46:50.920706  3406 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:46:50.920708  3406 net.cpp:165] Memory required for data: 18512256
I0419 15:46:50.920711  3406 layer_factory.hpp:77] Creating layer conv3
I0419 15:46:50.920722  3406 net.cpp:106] Creating Layer conv3
I0419 15:46:50.920732  3406 net.cpp:454] conv3 <- pool2
I0419 15:46:50.920740  3406 net.cpp:411] conv3 -> conv3
I0419 15:46:50.923072  3406 net.cpp:150] Setting up conv3
I0419 15:46:50.923089  3406 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:46:50.923091  3406 net.cpp:165] Memory required for data: 18857856
I0419 15:46:50.923105  3406 layer_factory.hpp:77] Creating layer relu3
I0419 15:46:50.923118  3406 net.cpp:106] Creating Layer relu3
I0419 15:46:50.923123  3406 net.cpp:454] relu3 <- conv3
I0419 15:46:50.923135  3406 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:46:50.923146  3406 net.cpp:150] Setting up relu3
I0419 15:46:50.923153  3406 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:46:50.923156  3406 net.cpp:165] Memory required for data: 19203456
I0419 15:46:50.923161  3406 layer_factory.hpp:77] Creating layer conv4
I0419 15:46:50.923169  3406 net.cpp:106] Creating Layer conv4
I0419 15:46:50.923182  3406 net.cpp:454] conv4 <- conv3
I0419 15:46:50.923188  3406 net.cpp:411] conv4 -> conv4
I0419 15:46:50.926522  3406 net.cpp:150] Setting up conv4
I0419 15:46:50.926538  3406 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:46:50.926542  3406 net.cpp:165] Memory required for data: 19549056
I0419 15:46:50.926548  3406 layer_factory.hpp:77] Creating layer relu4
I0419 15:46:50.926556  3406 net.cpp:106] Creating Layer relu4
I0419 15:46:50.926564  3406 net.cpp:454] relu4 <- conv4
I0419 15:46:50.926573  3406 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:46:50.926589  3406 net.cpp:150] Setting up relu4
I0419 15:46:50.926596  3406 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:46:50.926602  3406 net.cpp:165] Memory required for data: 19894656
I0419 15:46:50.926606  3406 layer_factory.hpp:77] Creating layer conv5
I0419 15:46:50.926618  3406 net.cpp:106] Creating Layer conv5
I0419 15:46:50.926630  3406 net.cpp:454] conv5 <- conv4
I0419 15:46:50.926636  3406 net.cpp:411] conv5 -> conv5
I0419 15:46:50.928936  3406 net.cpp:150] Setting up conv5
I0419 15:46:50.928952  3406 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:46:50.928956  3406 net.cpp:165] Memory required for data: 20125056
I0419 15:46:50.928966  3406 layer_factory.hpp:77] Creating layer relu5
I0419 15:46:50.928979  3406 net.cpp:106] Creating Layer relu5
I0419 15:46:50.928984  3406 net.cpp:454] relu5 <- conv5
I0419 15:46:50.928997  3406 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:46:50.929005  3406 net.cpp:150] Setting up relu5
I0419 15:46:50.929013  3406 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:46:50.929018  3406 net.cpp:165] Memory required for data: 20355456
I0419 15:46:50.929023  3406 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:46:50.929034  3406 net.cpp:106] Creating Layer rpn_conv1
I0419 15:46:50.929044  3406 net.cpp:454] rpn_conv1 <- conv5
I0419 15:46:50.929055  3406 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:46:50.930697  3406 net.cpp:150] Setting up rpn_conv1
I0419 15:46:50.930713  3406 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:46:50.930716  3406 net.cpp:165] Memory required for data: 20585856
I0419 15:46:50.930723  3406 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:46:50.930733  3406 net.cpp:106] Creating Layer rpn_relu1
I0419 15:46:50.930743  3406 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:46:50.930750  3406 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:46:50.930766  3406 net.cpp:150] Setting up rpn_relu1
I0419 15:46:50.930773  3406 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:46:50.930779  3406 net.cpp:165] Memory required for data: 20816256
I0419 15:46:50.930783  3406 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:46:50.930796  3406 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:46:50.930807  3406 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:46:50.930816  3406 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:46:50.930824  3406 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:46:50.930869  3406 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:46:50.930879  3406 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:46:50.930882  3406 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:46:50.930886  3406 net.cpp:165] Memory required for data: 21277056
I0419 15:46:50.930888  3406 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:46:50.930899  3406 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:46:50.930910  3406 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:46:50.930922  3406 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:46:50.931136  3406 net.cpp:150] Setting up rpn_cls_score
I0419 15:46:50.931149  3406 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 15:46:50.931151  3406 net.cpp:165] Memory required for data: 21293256
I0419 15:46:50.931157  3406 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:46:50.931169  3406 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:46:50.931180  3406 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:46:50.931187  3406 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:46:50.931391  3406 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:46:50.931401  3406 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 15:46:50.931404  3406 net.cpp:165] Memory required for data: 21325656
I0419 15:46:50.931409  3406 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 15:46:50.931418  3406 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 15:46:50.931423  3406 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 15:46:50.931435  3406 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 15:46:50.931476  3406 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 15:46:50.931489  3406 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 15:46:50.931491  3406 net.cpp:165] Memory required for data: 21341856
I0419 15:46:50.931495  3406 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 15:46:50.931501  3406 net.cpp:106] Creating Layer rpn_cls_prob
I0419 15:46:50.931507  3406 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 15:46:50.931516  3406 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 15:46:50.931588  3406 net.cpp:150] Setting up rpn_cls_prob
I0419 15:46:50.931599  3406 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 15:46:50.931602  3406 net.cpp:165] Memory required for data: 21358056
I0419 15:46:50.931605  3406 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 15:46:50.931612  3406 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 15:46:50.931617  3406 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 15:46:50.931627  3406 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 15:46:50.931660  3406 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 15:46:50.931674  3406 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 15:46:50.931679  3406 net.cpp:165] Memory required for data: 21374256
I0419 15:46:50.931682  3406 layer_factory.hpp:77] Creating layer proposal
I0419 15:46:50.935029  3406 net.cpp:106] Creating Layer proposal
I0419 15:46:50.935048  3406 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 15:46:50.935053  3406 net.cpp:454] proposal <- rpn_bbox_pred
I0419 15:46:50.935057  3406 net.cpp:454] proposal <- im_info
I0419 15:46:50.935067  3406 net.cpp:411] proposal -> rois
I0419 15:46:50.935083  3406 net.cpp:411] proposal -> scores
I0419 15:46:50.936379  3406 net.cpp:150] Setting up proposal
I0419 15:46:50.936400  3406 net.cpp:157] Top shape: 1 5 (5)
I0419 15:46:50.936405  3406 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 15:46:50.936409  3406 net.cpp:165] Memory required for data: 21374280
I0419 15:46:50.936416  3406 net.cpp:228] proposal does not need backward computation.
I0419 15:46:50.936424  3406 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 15:46:50.936434  3406 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 15:46:50.936440  3406 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 15:46:50.936447  3406 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 15:46:50.936452  3406 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 15:46:50.936457  3406 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 15:46:50.936462  3406 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 15:46:50.936468  3406 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 15:46:50.936473  3406 net.cpp:228] relu5 does not need backward computation.
I0419 15:46:50.936477  3406 net.cpp:228] conv5 does not need backward computation.
I0419 15:46:50.936482  3406 net.cpp:228] relu4 does not need backward computation.
I0419 15:46:50.936488  3406 net.cpp:228] conv4 does not need backward computation.
I0419 15:46:50.936492  3406 net.cpp:228] relu3 does not need backward computation.
I0419 15:46:50.936497  3406 net.cpp:228] conv3 does not need backward computation.
I0419 15:46:50.936501  3406 net.cpp:228] pool2 does not need backward computation.
I0419 15:46:50.936506  3406 net.cpp:228] norm2 does not need backward computation.
I0419 15:46:50.936511  3406 net.cpp:228] relu2 does not need backward computation.
I0419 15:46:50.936514  3406 net.cpp:228] conv2 does not need backward computation.
I0419 15:46:50.936519  3406 net.cpp:228] pool1 does not need backward computation.
I0419 15:46:50.936525  3406 net.cpp:228] norm1 does not need backward computation.
I0419 15:46:50.936529  3406 net.cpp:228] relu1 does not need backward computation.
I0419 15:46:50.936534  3406 net.cpp:228] conv1 does not need backward computation.
I0419 15:46:50.936539  3406 net.cpp:270] This network produces output rois
I0419 15:46:50.936545  3406 net.cpp:270] This network produces output scores
I0419 15:46:50.936573  3406 net.cpp:283] Network initialization done.
I0419 15:46:51.371631  3406 net.cpp:816] Ignoring source layer input-data
I0419 15:46:51.371665  3406 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 15:46:51.375236  3406 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:46:51.375265  3406 net.cpp:816] Ignoring source layer rpn-data
I0419 15:46:51.375273  3406 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 15:46:51.375278  3406 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 15:46:51.375282  3406 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 15:46:51.375288  3406 net.cpp:816] Ignoring source layer fc6
I0419 15:46:51.375293  3406 net.cpp:816] Ignoring source layer relu6
I0419 15:46:51.375296  3406 net.cpp:816] Ignoring source layer fc7
I0419 15:46:51.375303  3406 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.140s
im_proposals: 2/506 0.128s
im_proposals: 3/506 0.124s
im_proposals: 4/506 0.123s
im_proposals: 5/506 0.122s
im_proposals: 6/506 0.121s
im_proposals: 7/506 0.120s
im_proposals: 8/506 0.120s
im_proposals: 9/506 0.119s
im_proposals: 10/506 0.119s
im_proposals: 11/506 0.119s
im_proposals: 12/506 0.118s
im_proposals: 13/506 0.118s
im_proposals: 14/506 0.118s
im_proposals: 15/506 0.118s
im_proposals: 16/506 0.118s
im_proposals: 17/506 0.118s
im_proposals: 18/506 0.118s
im_proposals: 19/506 0.118s
im_proposals: 20/506 0.118s
im_proposals: 21/506 0.118s
im_proposals: 22/506 0.118s
im_proposals: 23/506 0.118s
im_proposals: 24/506 0.118s
im_proposals: 25/506 0.118s
im_proposals: 26/506 0.118s
im_proposals: 27/506 0.118s
im_proposals: 28/506 0.118s
im_proposals: 29/506 0.117s
im_proposals: 30/506 0.117s
im_proposals: 31/506 0.117s
im_proposals: 32/506 0.117s
im_proposals: 33/506 0.117s
im_proposals: 34/506 0.117s
im_proposals: 35/506 0.117s
im_proposals: 36/506 0.117s
im_proposals: 37/506 0.117s
im_proposals: 38/506 0.117s
im_proposals: 39/506 0.118s
im_proposals: 40/506 0.118s
im_proposals: 41/506 0.118s
im_proposals: 42/506 0.118s
im_proposals: 43/506 0.118s
im_proposals: 44/506 0.118s
im_proposals: 45/506 0.118s
im_proposals: 46/506 0.118s
im_proposals: 47/506 0.118s
im_proposals: 48/506 0.119s
im_proposals: 49/506 0.119s
im_proposals: 50/506 0.119s
im_proposals: 51/506 0.119s
im_proposals: 52/506 0.119s
im_proposals: 53/506 0.119s
im_proposals: 54/506 0.119s
im_proposals: 55/506 0.119s
im_proposals: 56/506 0.120s
im_proposals: 57/506 0.120s
im_proposals: 58/506 0.120s
im_proposals: 59/506 0.120s
im_proposals: 60/506 0.120s
im_proposals: 61/506 0.121s
im_proposals: 62/506 0.121s
im_proposals: 63/506 0.121s
im_proposals: 64/506 0.121s
im_proposals: 65/506 0.121s
im_proposals: 66/506 0.121s
im_proposals: 67/506 0.121s
im_proposals: 68/506 0.122s
im_proposals: 69/506 0.122s
im_proposals: 70/506 0.122s
im_proposals: 71/506 0.122s
im_proposals: 72/506 0.122s
im_proposals: 73/506 0.122s
im_proposals: 74/506 0.122s
im_proposals: 75/506 0.122s
im_proposals: 76/506 0.123s
im_proposals: 77/506 0.123s
im_proposals: 78/506 0.123s
im_proposals: 79/506 0.123s
im_proposals: 80/506 0.123s
im_proposals: 81/506 0.123s
im_proposals: 82/506 0.123s
im_proposals: 83/506 0.123s
im_proposals: 84/506 0.123s
im_proposals: 85/506 0.123s
im_proposals: 86/506 0.123s
im_proposals: 87/506 0.123s
im_proposals: 88/506 0.124s
im_proposals: 89/506 0.124s
im_proposals: 90/506 0.124s
im_proposals: 91/506 0.124s
im_proposals: 92/506 0.124s
im_proposals: 93/506 0.124s
im_proposals: 94/506 0.124s
im_proposals: 95/506 0.124s
im_proposals: 96/506 0.124s
im_proposals: 97/506 0.124s
im_proposals: 98/506 0.124s
im_proposals: 99/506 0.125s
im_proposals: 100/506 0.125s
im_proposals: 101/506 0.125s
im_proposals: 102/506 0.125s
im_proposals: 103/506 0.125s
im_proposals: 104/506 0.125s
im_proposals: 105/506 0.125s
im_proposals: 106/506 0.125s
im_proposals: 107/506 0.125s
im_proposals: 108/506 0.125s
im_proposals: 109/506 0.125s
im_proposals: 110/506 0.125s
im_proposals: 111/506 0.125s
im_proposals: 112/506 0.125s
im_proposals: 113/506 0.125s
im_proposals: 114/506 0.125s
im_proposals: 115/506 0.126s
im_proposals: 116/506 0.126s
im_proposals: 117/506 0.126s
im_proposals: 118/506 0.126s
im_proposals: 119/506 0.126s
im_proposals: 120/506 0.126s
im_proposals: 121/506 0.126s
im_proposals: 122/506 0.126s
im_proposals: 123/506 0.126s
im_proposals: 124/506 0.126s
im_proposals: 125/506 0.126s
im_proposals: 126/506 0.126s
im_proposals: 127/506 0.126s
im_proposals: 128/506 0.126s
im_proposals: 129/506 0.126s
im_proposals: 130/506 0.126s
im_proposals: 131/506 0.126s
im_proposals: 132/506 0.126s
im_proposals: 133/506 0.126s
im_proposals: 134/506 0.126s
im_proposals: 135/506 0.126s
im_proposals: 136/506 0.126s
im_proposals: 137/506 0.126s
im_proposals: 138/506 0.126s
im_proposals: 139/506 0.126s
im_proposals: 140/506 0.126s
im_proposals: 141/506 0.127s
im_proposals: 142/506 0.127s
im_proposals: 143/506 0.127s
im_proposals: 144/506 0.127s
im_proposals: 145/506 0.127s
im_proposals: 146/506 0.127s
im_proposals: 147/506 0.127s
im_proposals: 148/506 0.127s
im_proposals: 149/506 0.127s
im_proposals: 150/506 0.127s
im_proposals: 151/506 0.127s
im_proposals: 152/506 0.127s
im_proposals: 153/506 0.127s
im_proposals: 154/506 0.127s
im_proposals: 155/506 0.127s
im_proposals: 156/506 0.127s
im_proposals: 157/506 0.127s
im_proposals: 158/506 0.127s
im_proposals: 159/506 0.127s
im_proposals: 160/506 0.127s
im_proposals: 161/506 0.127s
im_proposals: 162/506 0.127s
im_proposals: 163/506 0.128s
im_proposals: 164/506 0.128s
im_proposals: 165/506 0.128s
im_proposals: 166/506 0.128s
im_proposals: 167/506 0.128s
im_proposals: 168/506 0.128s
im_proposals: 169/506 0.128s
im_proposals: 170/506 0.128s
im_proposals: 171/506 0.128s
im_proposals: 172/506 0.128s
im_proposals: 173/506 0.128s
im_proposals: 174/506 0.128s
im_proposals: 175/506 0.128s
im_proposals: 176/506 0.128s
im_proposals: 177/506 0.129s
im_proposals: 178/506 0.129s
im_proposals: 179/506 0.129s
im_proposals: 180/506 0.129s
im_proposals: 181/506 0.129s
im_proposals: 182/506 0.129s
im_proposals: 183/506 0.129s
im_proposals: 184/506 0.129s
im_proposals: 185/506 0.129s
im_proposals: 186/506 0.129s
im_proposals: 187/506 0.129s
im_proposals: 188/506 0.129s
im_proposals: 189/506 0.129s
im_proposals: 190/506 0.129s
im_proposals: 191/506 0.129s
im_proposals: 192/506 0.129s
im_proposals: 193/506 0.129s
im_proposals: 194/506 0.130s
im_proposals: 195/506 0.130s
im_proposals: 196/506 0.130s
im_proposals: 197/506 0.130s
im_proposals: 198/506 0.130s
im_proposals: 199/506 0.130s
im_proposals: 200/506 0.130s
im_proposals: 201/506 0.130s
im_proposals: 202/506 0.130s
im_proposals: 203/506 0.130s
im_proposals: 204/506 0.130s
im_proposals: 205/506 0.130s
im_proposals: 206/506 0.130s
im_proposals: 207/506 0.130s
im_proposals: 208/506 0.130s
im_proposals: 209/506 0.130s
im_proposals: 210/506 0.130s
im_proposals: 211/506 0.131s
im_proposals: 212/506 0.131s
im_proposals: 213/506 0.131s
im_proposals: 214/506 0.131s
im_proposals: 215/506 0.131s
im_proposals: 216/506 0.131s
im_proposals: 217/506 0.131s
im_proposals: 218/506 0.131s
im_proposals: 219/506 0.131s
im_proposals: 220/506 0.131s
im_proposals: 221/506 0.131s
im_proposals: 222/506 0.131s
im_proposals: 223/506 0.131s
im_proposals: 224/506 0.131s
im_proposals: 225/506 0.131s
im_proposals: 226/506 0.131s
im_proposals: 227/506 0.131s
im_proposals: 228/506 0.131s
im_proposals: 229/506 0.131s
im_proposals: 230/506 0.131s
im_proposals: 231/506 0.131s
im_proposals: 232/506 0.131s
im_proposals: 233/506 0.131s
im_proposals: 234/506 0.131s
im_proposals: 235/506 0.131s
im_proposals: 236/506 0.131s
im_proposals: 237/506 0.132s
im_proposals: 238/506 0.132s
im_proposals: 239/506 0.132s
im_proposals: 240/506 0.132s
im_proposals: 241/506 0.132s
im_proposals: 242/506 0.132s
im_proposals: 243/506 0.132s
im_proposals: 244/506 0.132s
im_proposals: 245/506 0.132s
im_proposals: 246/506 0.132s
im_proposals: 247/506 0.132s
im_proposals: 248/506 0.132s
im_proposals: 249/506 0.132s
im_proposals: 250/506 0.132s
im_proposals: 251/506 0.132s
im_proposals: 252/506 0.132s
im_proposals: 253/506 0.132s
im_proposals: 254/506 0.132s
im_proposals: 255/506 0.132s
im_proposals: 256/506 0.132s
im_proposals: 257/506 0.132s
im_proposals: 258/506 0.132s
im_proposals: 259/506 0.132s
im_proposals: 260/506 0.132s
im_proposals: 261/506 0.132s
im_proposals: 262/506 0.132s
im_proposals: 263/506 0.132s
im_proposals: 264/506 0.132s
im_proposals: 265/506 0.132s
im_proposals: 266/506 0.132s
im_proposals: 267/506 0.132s
im_proposals: 268/506 0.132s
im_proposals: 269/506 0.133s
im_proposals: 270/506 0.133s
im_proposals: 271/506 0.133s
im_proposals: 272/506 0.133s
im_proposals: 273/506 0.133s
im_proposals: 274/506 0.133s
im_proposals: 275/506 0.133s
im_proposals: 276/506 0.133s
im_proposals: 277/506 0.133s
im_proposals: 278/506 0.133s
im_proposals: 279/506 0.133s
im_proposals: 280/506 0.133s
im_proposals: 281/506 0.133s
im_proposals: 282/506 0.133s
im_proposals: 283/506 0.133s
im_proposals: 284/506 0.133s
im_proposals: 285/506 0.133s
im_proposals: 286/506 0.133s
im_proposals: 287/506 0.133s
im_proposals: 288/506 0.133s
im_proposals: 289/506 0.133s
im_proposals: 290/506 0.133s
im_proposals: 291/506 0.133s
im_proposals: 292/506 0.133s
im_proposals: 293/506 0.133s
im_proposals: 294/506 0.133s
im_proposals: 295/506 0.133s
im_proposals: 296/506 0.133s
im_proposals: 297/506 0.133s
im_proposals: 298/506 0.133s
im_proposals: 299/506 0.133s
im_proposals: 300/506 0.133s
im_proposals: 301/506 0.133s
im_proposals: 302/506 0.133s
im_proposals: 303/506 0.133s
im_proposals: 304/506 0.133s
im_proposals: 305/506 0.133s
im_proposals: 306/506 0.133s
im_proposals: 307/506 0.133s
im_proposals: 308/506 0.133s
im_proposals: 309/506 0.133s
im_proposals: 310/506 0.133s
im_proposals: 311/506 0.133s
im_proposals: 312/506 0.133s
im_proposals: 313/506 0.133s
im_proposals: 314/506 0.134s
im_proposals: 315/506 0.134s
im_proposals: 316/506 0.134s
im_proposals: 317/506 0.134s
im_proposals: 318/506 0.134s
im_proposals: 319/506 0.134s
im_proposals: 320/506 0.134s
im_proposals: 321/506 0.134s
im_proposals: 322/506 0.134s
im_proposals: 323/506 0.134s
im_proposals: 324/506 0.134s
im_proposals: 325/506 0.134s
im_proposals: 326/506 0.134s
im_proposals: 327/506 0.134s
im_proposals: 328/506 0.134s
im_proposals: 329/506 0.134s
im_proposals: 330/506 0.134s
im_proposals: 331/506 0.134s
im_proposals: 332/506 0.134s
im_proposals: 333/506 0.134s
im_proposals: 334/506 0.134s
im_proposals: 335/506 0.134s
im_proposals: 336/506 0.134s
im_proposals: 337/506 0.134s
im_proposals: 338/506 0.134s
im_proposals: 339/506 0.134s
im_proposals: 340/506 0.134s
im_proposals: 341/506 0.134s
im_proposals: 342/506 0.134s
im_proposals: 343/506 0.134s
im_proposals: 344/506 0.134s
im_proposals: 345/506 0.134s
im_proposals: 346/506 0.134s
im_proposals: 347/506 0.134s
im_proposals: 348/506 0.134s
im_proposals: 349/506 0.134s
im_proposals: 350/506 0.134s
im_proposals: 351/506 0.134s
im_proposals: 352/506 0.134s
im_proposals: 353/506 0.134s
im_proposals: 354/506 0.134s
im_proposals: 355/506 0.134s
im_proposals: 356/506 0.134s
im_proposals: 357/506 0.134s
im_proposals: 358/506 0.134s
im_proposals: 359/506 0.134s
im_proposals: 360/506 0.134s
im_proposals: 361/506 0.134s
im_proposals: 362/506 0.134s
im_proposals: 363/506 0.134s
im_proposals: 364/506 0.134s
im_proposals: 365/506 0.134s
im_proposals: 366/506 0.134s
im_proposals: 367/506 0.134s
im_proposals: 368/506 0.134s
im_proposals: 369/506 0.134s
im_proposals: 370/506 0.134s
im_proposals: 371/506 0.134s
im_proposals: 372/506 0.134s
im_proposals: 373/506 0.134s
im_proposals: 374/506 0.134s
im_proposals: 375/506 0.134s
im_proposals: 376/506 0.134s
im_proposals: 377/506 0.135s
im_proposals: 378/506 0.135s
im_proposals: 379/506 0.135s
im_proposals: 380/506 0.135s
im_proposals: 381/506 0.135s
im_proposals: 382/506 0.135s
im_proposals: 383/506 0.135s
im_proposals: 384/506 0.135s
im_proposals: 385/506 0.135s
im_proposals: 386/506 0.135s
im_proposals: 387/506 0.135s
im_proposals: 388/506 0.135s
im_proposals: 389/506 0.135s
im_proposals: 390/506 0.135s
im_proposals: 391/506 0.135s
im_proposals: 392/506 0.135s
im_proposals: 393/506 0.135s
im_proposals: 394/506 0.135s
im_proposals: 395/506 0.135s
im_proposals: 396/506 0.135s
im_proposals: 397/506 0.135s
im_proposals: 398/506 0.135s
im_proposals: 399/506 0.135s
im_proposals: 400/506 0.135s
im_proposals: 401/506 0.135s
im_proposals: 402/506 0.135s
im_proposals: 403/506 0.135s
im_proposals: 404/506 0.135s
im_proposals: 405/506 0.135s
im_proposals: 406/506 0.135s
im_proposals: 407/506 0.135s
im_proposals: 408/506 0.135s
im_proposals: 409/506 0.135s
im_proposals: 410/506 0.135s
im_proposals: 411/506 0.135s
im_proposals: 412/506 0.135s
im_proposals: 413/506 0.135s
im_proposals: 414/506 0.135s
im_proposals: 415/506 0.135s
im_proposals: 416/506 0.135s
im_proposals: 417/506 0.135s
im_proposals: 418/506 0.135s
im_proposals: 419/506 0.135s
im_proposals: 420/506 0.135s
im_proposals: 421/506 0.135s
im_proposals: 422/506 0.135s
im_proposals: 423/506 0.135s
im_proposals: 424/506 0.135s
im_proposals: 425/506 0.135s
im_proposals: 426/506 0.135s
im_proposals: 427/506 0.135s
im_proposals: 428/506 0.135s
im_proposals: 429/506 0.135s
im_proposals: 430/506 0.135s
im_proposals: 431/506 0.135s
im_proposals: 432/506 0.135s
im_proposals: 433/506 0.135s
im_proposals: 434/506 0.135s
im_proposals: 435/506 0.135s
im_proposals: 436/506 0.135s
im_proposals: 437/506 0.135s
im_proposals: 438/506 0.135s
im_proposals: 439/506 0.135s
im_proposals: 440/506 0.135s
im_proposals: 441/506 0.135s
im_proposals: 442/506 0.135s
im_proposals: 443/506 0.135s
im_proposals: 444/506 0.135s
im_proposals: 445/506 0.135s
im_proposals: 446/506 0.135s
im_proposals: 447/506 0.135s
im_proposals: 448/506 0.135s
im_proposals: 449/506 0.135s
im_proposals: 450/506 0.135s
im_proposals: 451/506 0.135s
im_proposals: 452/506 0.135s
im_proposals: 453/506 0.135s
im_proposals: 454/506 0.135s
im_proposals: 455/506 0.135s
im_proposals: 456/506 0.135s
im_proposals: 457/506 0.135s
im_proposals: 458/506 0.135s
im_proposals: 459/506 0.135s
im_proposals: 460/506 0.135s
im_proposals: 461/506 0.135s
im_proposals: 462/506 0.135s
im_proposals: 463/506 0.135s
im_proposals: 464/506 0.135s
im_proposals: 465/506 0.135s
im_proposals: 466/506 0.135s
im_proposals: 467/506 0.135s
im_proposals: 468/506 0.135s
im_proposals: 469/506 0.135s
im_proposals: 470/506 0.135s
im_proposals: 471/506 0.135s
im_proposals: 472/506 0.135s
im_proposals: 473/506 0.135s
im_proposals: 474/506 0.135s
im_proposals: 475/506 0.135s
im_proposals: 476/506 0.135s
im_proposals: 477/506 0.135s
im_proposals: 478/506 0.135s
im_proposals: 479/506 0.135s
im_proposals: 480/506 0.135s
im_proposals: 481/506 0.135s
im_proposals: 482/506 0.135s
im_proposals: 483/506 0.135s
im_proposals: 484/506 0.135s
im_proposals: 485/506 0.135s
im_proposals: 486/506 0.135s
im_proposals: 487/506 0.135s
im_proposals: 488/506 0.135s
im_proposals: 489/506 0.135s
im_proposals: 490/506 0.135s
im_proposals: 491/506 0.135s
im_proposals: 492/506 0.135s
im_proposals: 493/506 0.135s
im_proposals: 494/506 0.135s
im_proposals: 495/506 0.135s
im_proposals: 496/506 0.135s
im_proposals: 497/506 0.135s
im_proposals: 498/506 0.135s
im_proposals: 499/506 0.135s
im_proposals: 500/506 0.135s
im_proposals: 501/506 0.135s
im_proposals: 502/506 0.136s
im_proposals: 503/506 0.136s
im_proposals: 504/506 0.136s
im_proposals: 505/506 0.136s
im_proposals: 506/506 0.136s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:48:24.084506  3417 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 15:48:24.084563  3417 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 15:48:24.085420  3417 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 15:48:24.085638  3417 layer_factory.hpp:77] Creating layer data
I0419 15:48:24.086467  3417 net.cpp:106] Creating Layer data
I0419 15:48:24.086494  3417 net.cpp:411] data -> data
I0419 15:48:24.086518  3417 net.cpp:411] data -> rois
I0419 15:48:24.086534  3417 net.cpp:411] data -> labels
I0419 15:48:24.086544  3417 net.cpp:411] data -> bbox_targets
I0419 15:48:24.086552  3417 net.cpp:411] data -> bbox_inside_weights
I0419 15:48:24.086561  3417 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 15:48:24.101948  3417 net.cpp:150] Setting up data
I0419 15:48:24.101974  3417 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 15:48:24.101981  3417 net.cpp:157] Top shape: 1 5 (5)
I0419 15:48:24.101985  3417 net.cpp:157] Top shape: 1 (1)
I0419 15:48:24.101989  3417 net.cpp:157] Top shape: 1 176 (176)
I0419 15:48:24.101994  3417 net.cpp:157] Top shape: 1 176 (176)
I0419 15:48:24.102004  3417 net.cpp:157] Top shape: 1 176 (176)
I0419 15:48:24.102007  3417 net.cpp:165] Memory required for data: 14402136
I0419 15:48:24.102013  3417 layer_factory.hpp:77] Creating layer conv1
I0419 15:48:24.102035  3417 net.cpp:106] Creating Layer conv1
I0419 15:48:24.102048  3417 net.cpp:454] conv1 <- data
I0419 15:48:24.102061  3417 net.cpp:411] conv1 -> conv1
I0419 15:48:24.103489  3417 net.cpp:150] Setting up conv1
I0419 15:48:24.103507  3417 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:48:24.103510  3417 net.cpp:165] Memory required for data: 129602136
I0419 15:48:24.103524  3417 layer_factory.hpp:77] Creating layer relu1
I0419 15:48:24.103538  3417 net.cpp:106] Creating Layer relu1
I0419 15:48:24.103549  3417 net.cpp:454] relu1 <- conv1
I0419 15:48:24.103556  3417 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:48:24.103569  3417 net.cpp:150] Setting up relu1
I0419 15:48:24.103582  3417 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:48:24.103587  3417 net.cpp:165] Memory required for data: 244802136
I0419 15:48:24.103591  3417 layer_factory.hpp:77] Creating layer norm1
I0419 15:48:24.103600  3417 net.cpp:106] Creating Layer norm1
I0419 15:48:24.103611  3417 net.cpp:454] norm1 <- conv1
I0419 15:48:24.103622  3417 net.cpp:411] norm1 -> norm1
I0419 15:48:24.103745  3417 net.cpp:150] Setting up norm1
I0419 15:48:24.103756  3417 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:48:24.103760  3417 net.cpp:165] Memory required for data: 360002136
I0419 15:48:24.103762  3417 layer_factory.hpp:77] Creating layer pool1
I0419 15:48:24.103768  3417 net.cpp:106] Creating Layer pool1
I0419 15:48:24.103773  3417 net.cpp:454] pool1 <- norm1
I0419 15:48:24.103780  3417 net.cpp:411] pool1 -> pool1
I0419 15:48:24.103828  3417 net.cpp:150] Setting up pool1
I0419 15:48:24.103843  3417 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 15:48:24.103845  3417 net.cpp:165] Memory required for data: 389110104
I0419 15:48:24.103848  3417 layer_factory.hpp:77] Creating layer conv2
I0419 15:48:24.103854  3417 net.cpp:106] Creating Layer conv2
I0419 15:48:24.103858  3417 net.cpp:454] conv2 <- pool1
I0419 15:48:24.103865  3417 net.cpp:411] conv2 -> conv2
I0419 15:48:24.105551  3417 net.cpp:150] Setting up conv2
I0419 15:48:24.105567  3417 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:48:24.105571  3417 net.cpp:165] Memory required for data: 408721752
I0419 15:48:24.105579  3417 layer_factory.hpp:77] Creating layer relu2
I0419 15:48:24.105593  3417 net.cpp:106] Creating Layer relu2
I0419 15:48:24.105599  3417 net.cpp:454] relu2 <- conv2
I0419 15:48:24.105607  3417 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:48:24.105615  3417 net.cpp:150] Setting up relu2
I0419 15:48:24.105623  3417 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:48:24.105628  3417 net.cpp:165] Memory required for data: 428333400
I0419 15:48:24.105633  3417 layer_factory.hpp:77] Creating layer norm2
I0419 15:48:24.105645  3417 net.cpp:106] Creating Layer norm2
I0419 15:48:24.105657  3417 net.cpp:454] norm2 <- conv2
I0419 15:48:24.105664  3417 net.cpp:411] norm2 -> norm2
I0419 15:48:24.105763  3417 net.cpp:150] Setting up norm2
I0419 15:48:24.105774  3417 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:48:24.105777  3417 net.cpp:165] Memory required for data: 447945048
I0419 15:48:24.105780  3417 layer_factory.hpp:77] Creating layer pool2
I0419 15:48:24.105787  3417 net.cpp:106] Creating Layer pool2
I0419 15:48:24.105790  3417 net.cpp:454] pool2 <- norm2
I0419 15:48:24.105795  3417 net.cpp:411] pool2 -> pool2
I0419 15:48:24.105834  3417 net.cpp:150] Setting up pool2
I0419 15:48:24.105847  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.105850  3417 net.cpp:165] Memory required for data: 453056856
I0419 15:48:24.105854  3417 layer_factory.hpp:77] Creating layer conv3
I0419 15:48:24.105859  3417 net.cpp:106] Creating Layer conv3
I0419 15:48:24.105864  3417 net.cpp:454] conv3 <- pool2
I0419 15:48:24.105868  3417 net.cpp:411] conv3 -> conv3
I0419 15:48:24.109165  3417 net.cpp:150] Setting up conv3
I0419 15:48:24.109184  3417 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:48:24.109186  3417 net.cpp:165] Memory required for data: 460724568
I0419 15:48:24.109195  3417 layer_factory.hpp:77] Creating layer relu3
I0419 15:48:24.109205  3417 net.cpp:106] Creating Layer relu3
I0419 15:48:24.109210  3417 net.cpp:454] relu3 <- conv3
I0419 15:48:24.109218  3417 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:48:24.109226  3417 net.cpp:150] Setting up relu3
I0419 15:48:24.109239  3417 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:48:24.109244  3417 net.cpp:165] Memory required for data: 468392280
I0419 15:48:24.109248  3417 layer_factory.hpp:77] Creating layer conv4
I0419 15:48:24.109261  3417 net.cpp:106] Creating Layer conv4
I0419 15:48:24.109272  3417 net.cpp:454] conv4 <- conv3
I0419 15:48:24.109282  3417 net.cpp:411] conv4 -> conv4
I0419 15:48:24.112618  3417 net.cpp:150] Setting up conv4
I0419 15:48:24.112637  3417 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:48:24.112640  3417 net.cpp:165] Memory required for data: 476059992
I0419 15:48:24.112646  3417 layer_factory.hpp:77] Creating layer relu4
I0419 15:48:24.112653  3417 net.cpp:106] Creating Layer relu4
I0419 15:48:24.112658  3417 net.cpp:454] relu4 <- conv4
I0419 15:48:24.112664  3417 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:48:24.112673  3417 net.cpp:150] Setting up relu4
I0419 15:48:24.112686  3417 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:48:24.112690  3417 net.cpp:165] Memory required for data: 483727704
I0419 15:48:24.112695  3417 layer_factory.hpp:77] Creating layer conv5
I0419 15:48:24.112707  3417 net.cpp:106] Creating Layer conv5
I0419 15:48:24.112718  3417 net.cpp:454] conv5 <- conv4
I0419 15:48:24.112726  3417 net.cpp:411] conv5 -> conv5
I0419 15:48:24.115061  3417 net.cpp:150] Setting up conv5
I0419 15:48:24.115078  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.115082  3417 net.cpp:165] Memory required for data: 488839512
I0419 15:48:24.115092  3417 layer_factory.hpp:77] Creating layer relu5
I0419 15:48:24.115100  3417 net.cpp:106] Creating Layer relu5
I0419 15:48:24.115105  3417 net.cpp:454] relu5 <- conv5
I0419 15:48:24.115113  3417 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:48:24.115123  3417 net.cpp:150] Setting up relu5
I0419 15:48:24.115128  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.115135  3417 net.cpp:165] Memory required for data: 493951320
I0419 15:48:24.115140  3417 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 15:48:24.115154  3417 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 15:48:24.115159  3417 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 15:48:24.115170  3417 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 15:48:24.115185  3417 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 15:48:24.115233  3417 net.cpp:150] Setting up conv5_relu5_0_split
I0419 15:48:24.115248  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.115254  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.115257  3417 net.cpp:165] Memory required for data: 504174936
I0419 15:48:24.115260  3417 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 15:48:24.115269  3417 net.cpp:106] Creating Layer roi_pool_conv5
I0419 15:48:24.115274  3417 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 15:48:24.115283  3417 net.cpp:454] roi_pool_conv5 <- rois
I0419 15:48:24.115293  3417 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 15:48:24.115314  3417 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 15:48:24.115367  3417 net.cpp:150] Setting up roi_pool_conv5
I0419 15:48:24.115383  3417 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 15:48:24.115387  3417 net.cpp:165] Memory required for data: 504211800
I0419 15:48:24.115392  3417 layer_factory.hpp:77] Creating layer fc6
I0419 15:48:24.115402  3417 net.cpp:106] Creating Layer fc6
I0419 15:48:24.115413  3417 net.cpp:454] fc6 <- roi_pool_conv5
I0419 15:48:24.115420  3417 net.cpp:411] fc6 -> fc6
I0419 15:48:24.214190  3417 net.cpp:150] Setting up fc6
I0419 15:48:24.214229  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.214233  3417 net.cpp:165] Memory required for data: 504228184
I0419 15:48:24.214244  3417 layer_factory.hpp:77] Creating layer relu6
I0419 15:48:24.214256  3417 net.cpp:106] Creating Layer relu6
I0419 15:48:24.214267  3417 net.cpp:454] relu6 <- fc6
I0419 15:48:24.214273  3417 net.cpp:397] relu6 -> fc6 (in-place)
I0419 15:48:24.214284  3417 net.cpp:150] Setting up relu6
I0419 15:48:24.214288  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.214292  3417 net.cpp:165] Memory required for data: 504244568
I0419 15:48:24.214294  3417 layer_factory.hpp:77] Creating layer drop6
I0419 15:48:24.214309  3417 net.cpp:106] Creating Layer drop6
I0419 15:48:24.214320  3417 net.cpp:454] drop6 <- fc6
I0419 15:48:24.214337  3417 net.cpp:397] drop6 -> fc6 (in-place)
I0419 15:48:24.214388  3417 net.cpp:150] Setting up drop6
I0419 15:48:24.214399  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.214402  3417 net.cpp:165] Memory required for data: 504260952
I0419 15:48:24.214406  3417 layer_factory.hpp:77] Creating layer fc7
I0419 15:48:24.214412  3417 net.cpp:106] Creating Layer fc7
I0419 15:48:24.214418  3417 net.cpp:454] fc7 <- fc6
I0419 15:48:24.214424  3417 net.cpp:411] fc7 -> fc7
I0419 15:48:24.258607  3417 net.cpp:150] Setting up fc7
I0419 15:48:24.258648  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.258651  3417 net.cpp:165] Memory required for data: 504277336
I0419 15:48:24.258663  3417 layer_factory.hpp:77] Creating layer relu7
I0419 15:48:24.258673  3417 net.cpp:106] Creating Layer relu7
I0419 15:48:24.258682  3417 net.cpp:454] relu7 <- fc7
I0419 15:48:24.258690  3417 net.cpp:397] relu7 -> fc7 (in-place)
I0419 15:48:24.258702  3417 net.cpp:150] Setting up relu7
I0419 15:48:24.258708  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.258711  3417 net.cpp:165] Memory required for data: 504293720
I0419 15:48:24.258715  3417 layer_factory.hpp:77] Creating layer drop7
I0419 15:48:24.258723  3417 net.cpp:106] Creating Layer drop7
I0419 15:48:24.258729  3417 net.cpp:454] drop7 <- fc7
I0419 15:48:24.258738  3417 net.cpp:397] drop7 -> fc7 (in-place)
I0419 15:48:24.258767  3417 net.cpp:150] Setting up drop7
I0419 15:48:24.258781  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.258786  3417 net.cpp:165] Memory required for data: 504310104
I0419 15:48:24.258790  3417 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 15:48:24.258798  3417 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 15:48:24.258808  3417 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 15:48:24.258818  3417 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 15:48:24.258827  3417 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 15:48:24.258877  3417 net.cpp:150] Setting up fc7_drop7_0_split
I0419 15:48:24.258890  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.258895  3417 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:48:24.258898  3417 net.cpp:165] Memory required for data: 504342872
I0419 15:48:24.258900  3417 layer_factory.hpp:77] Creating layer cls_score
I0419 15:48:24.258909  3417 net.cpp:106] Creating Layer cls_score
I0419 15:48:24.258919  3417 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 15:48:24.258926  3417 net.cpp:411] cls_score -> cls_score
I0419 15:48:24.264704  3417 net.cpp:150] Setting up cls_score
I0419 15:48:24.264720  3417 net.cpp:157] Top shape: 1 44 (44)
I0419 15:48:24.264724  3417 net.cpp:165] Memory required for data: 504343048
I0419 15:48:24.264729  3417 layer_factory.hpp:77] Creating layer bbox_pred
I0419 15:48:24.264739  3417 net.cpp:106] Creating Layer bbox_pred
I0419 15:48:24.264744  3417 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 15:48:24.264750  3417 net.cpp:411] bbox_pred -> bbox_pred
I0419 15:48:24.286234  3417 net.cpp:150] Setting up bbox_pred
I0419 15:48:24.286250  3417 net.cpp:157] Top shape: 1 176 (176)
I0419 15:48:24.286254  3417 net.cpp:165] Memory required for data: 504343752
I0419 15:48:24.286267  3417 layer_factory.hpp:77] Creating layer loss_cls
I0419 15:48:24.286286  3417 net.cpp:106] Creating Layer loss_cls
I0419 15:48:24.286293  3417 net.cpp:454] loss_cls <- cls_score
I0419 15:48:24.286301  3417 net.cpp:454] loss_cls <- labels
I0419 15:48:24.286314  3417 net.cpp:411] loss_cls -> cls_loss
I0419 15:48:24.286345  3417 layer_factory.hpp:77] Creating layer loss_cls
I0419 15:48:24.286450  3417 net.cpp:150] Setting up loss_cls
I0419 15:48:24.286461  3417 net.cpp:157] Top shape: (1)
I0419 15:48:24.286464  3417 net.cpp:160]     with loss weight 1
I0419 15:48:24.286478  3417 net.cpp:165] Memory required for data: 504343756
I0419 15:48:24.286480  3417 layer_factory.hpp:77] Creating layer loss_bbox
I0419 15:48:24.286490  3417 net.cpp:106] Creating Layer loss_bbox
I0419 15:48:24.286501  3417 net.cpp:454] loss_bbox <- bbox_pred
I0419 15:48:24.286509  3417 net.cpp:454] loss_bbox <- bbox_targets
I0419 15:48:24.286514  3417 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 15:48:24.286521  3417 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 15:48:24.286527  3417 net.cpp:411] loss_bbox -> bbox_loss
I0419 15:48:24.286612  3417 net.cpp:150] Setting up loss_bbox
I0419 15:48:24.286623  3417 net.cpp:157] Top shape: (1)
I0419 15:48:24.286626  3417 net.cpp:160]     with loss weight 1
I0419 15:48:24.286631  3417 net.cpp:165] Memory required for data: 504343760
I0419 15:48:24.286634  3417 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:48:24.286645  3417 net.cpp:106] Creating Layer rpn_conv1
I0419 15:48:24.286655  3417 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 15:48:24.286665  3417 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:48:24.303692  3417 net.cpp:150] Setting up rpn_conv1
I0419 15:48:24.303709  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.303712  3417 net.cpp:165] Memory required for data: 509455568
I0419 15:48:24.303719  3417 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:48:24.303727  3417 net.cpp:106] Creating Layer rpn_relu1
I0419 15:48:24.303732  3417 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:48:24.303737  3417 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:48:24.303743  3417 net.cpp:150] Setting up rpn_relu1
I0419 15:48:24.303751  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.303755  3417 net.cpp:165] Memory required for data: 514567376
I0419 15:48:24.303761  3417 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:48:24.303767  3417 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:48:24.303773  3417 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:48:24.303784  3417 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:48:24.303792  3417 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:48:24.303838  3417 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:48:24.303851  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.303854  3417 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:48:24.303858  3417 net.cpp:165] Memory required for data: 524790992
I0419 15:48:24.303860  3417 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:48:24.303875  3417 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:48:24.303885  3417 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:48:24.303894  3417 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:48:24.304229  3417 net.cpp:150] Setting up rpn_cls_score
I0419 15:48:24.304241  3417 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 15:48:24.304244  3417 net.cpp:165] Memory required for data: 525150416
I0419 15:48:24.304250  3417 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:48:24.304268  3417 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:48:24.304280  3417 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:48:24.304288  3417 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:48:24.304751  3417 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:48:24.304764  3417 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 15:48:24.304767  3417 net.cpp:165] Memory required for data: 525869264
I0419 15:48:24.304772  3417 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 15:48:24.304782  3417 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 15:48:24.304792  3417 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 15:48:24.304800  3417 net.cpp:150] Setting up silence_rpn_cls_score
I0419 15:48:24.304805  3417 net.cpp:165] Memory required for data: 525869264
I0419 15:48:24.304811  3417 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 15:48:24.304821  3417 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 15:48:24.304832  3417 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 15:48:24.304837  3417 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 15:48:24.304841  3417 net.cpp:165] Memory required for data: 525869264
I0419 15:48:24.304847  3417 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 15:48:24.304850  3417 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 15:48:24.304854  3417 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 15:48:24.304857  3417 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 15:48:24.304860  3417 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 15:48:24.304864  3417 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 15:48:24.304872  3417 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 15:48:24.304877  3417 net.cpp:226] loss_bbox needs backward computation.
I0419 15:48:24.304883  3417 net.cpp:226] loss_cls needs backward computation.
I0419 15:48:24.304895  3417 net.cpp:226] bbox_pred needs backward computation.
I0419 15:48:24.304900  3417 net.cpp:226] cls_score needs backward computation.
I0419 15:48:24.304905  3417 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 15:48:24.304911  3417 net.cpp:226] drop7 needs backward computation.
I0419 15:48:24.304916  3417 net.cpp:226] relu7 needs backward computation.
I0419 15:48:24.304924  3417 net.cpp:226] fc7 needs backward computation.
I0419 15:48:24.304927  3417 net.cpp:226] drop6 needs backward computation.
I0419 15:48:24.304934  3417 net.cpp:226] relu6 needs backward computation.
I0419 15:48:24.304939  3417 net.cpp:226] fc6 needs backward computation.
I0419 15:48:24.304945  3417 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 15:48:24.304952  3417 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 15:48:24.304957  3417 net.cpp:226] relu5 needs backward computation.
I0419 15:48:24.304963  3417 net.cpp:226] conv5 needs backward computation.
I0419 15:48:24.304968  3417 net.cpp:226] relu4 needs backward computation.
I0419 15:48:24.304972  3417 net.cpp:226] conv4 needs backward computation.
I0419 15:48:24.304977  3417 net.cpp:226] relu3 needs backward computation.
I0419 15:48:24.304983  3417 net.cpp:226] conv3 needs backward computation.
I0419 15:48:24.304988  3417 net.cpp:226] pool2 needs backward computation.
I0419 15:48:24.304996  3417 net.cpp:226] norm2 needs backward computation.
I0419 15:48:24.305001  3417 net.cpp:226] relu2 needs backward computation.
I0419 15:48:24.305011  3417 net.cpp:226] conv2 needs backward computation.
I0419 15:48:24.305016  3417 net.cpp:226] pool1 needs backward computation.
I0419 15:48:24.305019  3417 net.cpp:226] norm1 needs backward computation.
I0419 15:48:24.305024  3417 net.cpp:226] relu1 needs backward computation.
I0419 15:48:24.305030  3417 net.cpp:226] conv1 needs backward computation.
I0419 15:48:24.305037  3417 net.cpp:228] data does not need backward computation.
I0419 15:48:24.305043  3417 net.cpp:270] This network produces output bbox_loss
I0419 15:48:24.305048  3417 net.cpp:270] This network produces output cls_loss
I0419 15:48:24.305086  3417 net.cpp:283] Network initialization done.
I0419 15:48:24.305244  3417 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 15:48:24.755880  3417 net.cpp:816] Ignoring source layer pool5_spm6
I0419 15:48:24.755908  3417 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 15:48:24.799861  3417 net.cpp:816] Ignoring source layer fc8
I0419 15:48:24.799888  3417 net.cpp:816] Ignoring source layer prob
Solving...
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "./tools/train_faster_rcnn_alt_opt.py", line 196, in train_fast_rcnn
    max_iters=max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 161, in train_net
    model_paths = sw.train_model(max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 102, in train_model
    self.solver.step(1)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 144, in forward
    blobs = self._get_next_minibatch()
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 63, in _get_next_minibatch
    return get_minibatch(minibatch_db, self._num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 55, in get_minibatch
    num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 100, in _sample_rois
    fg_inds, size=fg_rois_per_this_image, replace=False)
  File "mtrand.pyx", line 1176, in mtrand.RandomState.choice (numpy/random/mtrand/mtrand.c:18822)
TypeError: 'numpy.float64' object cannot be interpreted as an index
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-52-11
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-52-11
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-52-11
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-52-11
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:52:14.437014  3465 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 15:52:14.437070  3465 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 15:52:14.437809  3465 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 15:52:14.437959  3465 layer_factory.hpp:77] Creating layer input-data
I0419 15:52:14.440160  3465 net.cpp:106] Creating Layer input-data
I0419 15:52:14.440183  3465 net.cpp:411] input-data -> data
I0419 15:52:14.440201  3465 net.cpp:411] input-data -> im_info
I0419 15:52:14.440212  3465 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 15:52:14.456190  3465 net.cpp:150] Setting up input-data
I0419 15:52:14.456212  3465 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:52:14.456221  3465 net.cpp:157] Top shape: 1 3 (3)
I0419 15:52:14.456224  3465 net.cpp:157] Top shape: 1 4 (4)
I0419 15:52:14.456228  3465 net.cpp:165] Memory required for data: 7200028
I0419 15:52:14.456231  3465 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 15:52:14.456243  3465 net.cpp:106] Creating Layer data_input-data_0_split
I0419 15:52:14.456250  3465 net.cpp:454] data_input-data_0_split <- data
I0419 15:52:14.456259  3465 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 15:52:14.456269  3465 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 15:52:14.456303  3465 net.cpp:150] Setting up data_input-data_0_split
I0419 15:52:14.456315  3465 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:52:14.456318  3465 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:52:14.456321  3465 net.cpp:165] Memory required for data: 21600028
I0419 15:52:14.456326  3465 layer_factory.hpp:77] Creating layer conv1
I0419 15:52:14.456336  3465 net.cpp:106] Creating Layer conv1
I0419 15:52:14.456343  3465 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 15:52:14.456351  3465 net.cpp:411] conv1 -> conv1
I0419 15:52:14.457690  3465 net.cpp:150] Setting up conv1
I0419 15:52:14.457708  3465 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:52:14.457711  3465 net.cpp:165] Memory required for data: 79200028
I0419 15:52:14.457725  3465 layer_factory.hpp:77] Creating layer relu1
I0419 15:52:14.457737  3465 net.cpp:106] Creating Layer relu1
I0419 15:52:14.457742  3465 net.cpp:454] relu1 <- conv1
I0419 15:52:14.457749  3465 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:52:14.457763  3465 net.cpp:150] Setting up relu1
I0419 15:52:14.457768  3465 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:52:14.457772  3465 net.cpp:165] Memory required for data: 136800028
I0419 15:52:14.457775  3465 layer_factory.hpp:77] Creating layer norm1
I0419 15:52:14.457782  3465 net.cpp:106] Creating Layer norm1
I0419 15:52:14.457788  3465 net.cpp:454] norm1 <- conv1
I0419 15:52:14.457794  3465 net.cpp:411] norm1 -> norm1
I0419 15:52:14.457895  3465 net.cpp:150] Setting up norm1
I0419 15:52:14.457906  3465 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:52:14.457908  3465 net.cpp:165] Memory required for data: 194400028
I0419 15:52:14.457911  3465 layer_factory.hpp:77] Creating layer pool1
I0419 15:52:14.457916  3465 net.cpp:106] Creating Layer pool1
I0419 15:52:14.457923  3465 net.cpp:454] pool1 <- norm1
I0419 15:52:14.457927  3465 net.cpp:411] pool1 -> pool1
I0419 15:52:14.457958  3465 net.cpp:150] Setting up pool1
I0419 15:52:14.457967  3465 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 15:52:14.457969  3465 net.cpp:165] Memory required for data: 208954012
I0419 15:52:14.457973  3465 layer_factory.hpp:77] Creating layer conv2
I0419 15:52:14.457979  3465 net.cpp:106] Creating Layer conv2
I0419 15:52:14.457986  3465 net.cpp:454] conv2 <- pool1
I0419 15:52:14.457991  3465 net.cpp:411] conv2 -> conv2
I0419 15:52:14.459682  3465 net.cpp:150] Setting up conv2
I0419 15:52:14.459699  3465 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:52:14.459702  3465 net.cpp:165] Memory required for data: 218759836
I0419 15:52:14.459712  3465 layer_factory.hpp:77] Creating layer relu2
I0419 15:52:14.459727  3465 net.cpp:106] Creating Layer relu2
I0419 15:52:14.459729  3465 net.cpp:454] relu2 <- conv2
I0419 15:52:14.459735  3465 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:52:14.459741  3465 net.cpp:150] Setting up relu2
I0419 15:52:14.459748  3465 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:52:14.459751  3465 net.cpp:165] Memory required for data: 228565660
I0419 15:52:14.459753  3465 layer_factory.hpp:77] Creating layer norm2
I0419 15:52:14.459761  3465 net.cpp:106] Creating Layer norm2
I0419 15:52:14.459767  3465 net.cpp:454] norm2 <- conv2
I0419 15:52:14.459771  3465 net.cpp:411] norm2 -> norm2
I0419 15:52:14.459851  3465 net.cpp:150] Setting up norm2
I0419 15:52:14.459859  3465 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:52:14.459862  3465 net.cpp:165] Memory required for data: 238371484
I0419 15:52:14.459864  3465 layer_factory.hpp:77] Creating layer pool2
I0419 15:52:14.459869  3465 net.cpp:106] Creating Layer pool2
I0419 15:52:14.459873  3465 net.cpp:454] pool2 <- norm2
I0419 15:52:14.459879  3465 net.cpp:411] pool2 -> pool2
I0419 15:52:14.459911  3465 net.cpp:150] Setting up pool2
I0419 15:52:14.459919  3465 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:52:14.459923  3465 net.cpp:165] Memory required for data: 240927388
I0419 15:52:14.459924  3465 layer_factory.hpp:77] Creating layer conv3
I0419 15:52:14.459930  3465 net.cpp:106] Creating Layer conv3
I0419 15:52:14.459936  3465 net.cpp:454] conv3 <- pool2
I0419 15:52:14.459944  3465 net.cpp:411] conv3 -> conv3
I0419 15:52:14.463264  3465 net.cpp:150] Setting up conv3
I0419 15:52:14.463282  3465 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:52:14.463285  3465 net.cpp:165] Memory required for data: 244761244
I0419 15:52:14.463294  3465 layer_factory.hpp:77] Creating layer relu3
I0419 15:52:14.463305  3465 net.cpp:106] Creating Layer relu3
I0419 15:52:14.463309  3465 net.cpp:454] relu3 <- conv3
I0419 15:52:14.463315  3465 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:52:14.463322  3465 net.cpp:150] Setting up relu3
I0419 15:52:14.463327  3465 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:52:14.463330  3465 net.cpp:165] Memory required for data: 248595100
I0419 15:52:14.463332  3465 layer_factory.hpp:77] Creating layer conv4
I0419 15:52:14.463343  3465 net.cpp:106] Creating Layer conv4
I0419 15:52:14.463351  3465 net.cpp:454] conv4 <- conv3
I0419 15:52:14.463356  3465 net.cpp:411] conv4 -> conv4
I0419 15:52:14.466676  3465 net.cpp:150] Setting up conv4
I0419 15:52:14.466693  3465 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:52:14.466696  3465 net.cpp:165] Memory required for data: 252428956
I0419 15:52:14.466702  3465 layer_factory.hpp:77] Creating layer relu4
I0419 15:52:14.466712  3465 net.cpp:106] Creating Layer relu4
I0419 15:52:14.466717  3465 net.cpp:454] relu4 <- conv4
I0419 15:52:14.466725  3465 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:52:14.466732  3465 net.cpp:150] Setting up relu4
I0419 15:52:14.466735  3465 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:52:14.466739  3465 net.cpp:165] Memory required for data: 256262812
I0419 15:52:14.466742  3465 layer_factory.hpp:77] Creating layer conv5
I0419 15:52:14.466751  3465 net.cpp:106] Creating Layer conv5
I0419 15:52:14.466758  3465 net.cpp:454] conv5 <- conv4
I0419 15:52:14.466763  3465 net.cpp:411] conv5 -> conv5
I0419 15:52:14.469053  3465 net.cpp:150] Setting up conv5
I0419 15:52:14.469069  3465 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:52:14.469071  3465 net.cpp:165] Memory required for data: 258818716
I0419 15:52:14.469080  3465 layer_factory.hpp:77] Creating layer relu5
I0419 15:52:14.469089  3465 net.cpp:106] Creating Layer relu5
I0419 15:52:14.469092  3465 net.cpp:454] relu5 <- conv5
I0419 15:52:14.469101  3465 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:52:14.469108  3465 net.cpp:150] Setting up relu5
I0419 15:52:14.469113  3465 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:52:14.469116  3465 net.cpp:165] Memory required for data: 261374620
I0419 15:52:14.469118  3465 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:52:14.469131  3465 net.cpp:106] Creating Layer rpn_conv1
I0419 15:52:14.469138  3465 net.cpp:454] rpn_conv1 <- conv5
I0419 15:52:14.469143  3465 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:52:14.486171  3465 net.cpp:150] Setting up rpn_conv1
I0419 15:52:14.486186  3465 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:52:14.486189  3465 net.cpp:165] Memory required for data: 263930524
I0419 15:52:14.486196  3465 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:52:14.486205  3465 net.cpp:106] Creating Layer rpn_relu1
I0419 15:52:14.486209  3465 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:52:14.486217  3465 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:52:14.486222  3465 net.cpp:150] Setting up rpn_relu1
I0419 15:52:14.486230  3465 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:52:14.486233  3465 net.cpp:165] Memory required for data: 266486428
I0419 15:52:14.486237  3465 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:52:14.486243  3465 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:52:14.486249  3465 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:52:14.486253  3465 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:52:14.486258  3465 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:52:14.486294  3465 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:52:14.486304  3465 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:52:14.486307  3465 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:52:14.486310  3465 net.cpp:165] Memory required for data: 271598236
I0419 15:52:14.486313  3465 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:52:14.486325  3465 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:52:14.486340  3465 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:52:14.486347  3465 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:52:14.486667  3465 net.cpp:150] Setting up rpn_cls_score
I0419 15:52:14.486678  3465 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:52:14.486681  3465 net.cpp:165] Memory required for data: 271777948
I0419 15:52:14.486687  3465 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:52:14.486696  3465 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:52:14.486699  3465 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 15:52:14.486706  3465 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 15:52:14.486714  3465 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 15:52:14.486743  3465 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 15:52:14.486752  3465 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:52:14.486755  3465 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:52:14.486757  3465 net.cpp:165] Memory required for data: 272137372
I0419 15:52:14.486760  3465 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:52:14.486771  3465 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:52:14.486778  3465 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:52:14.486783  3465 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:52:14.487215  3465 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:52:14.487226  3465 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:52:14.487228  3465 net.cpp:165] Memory required for data: 272496796
I0419 15:52:14.487233  3465 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 15:52:14.487244  3465 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 15:52:14.487247  3465 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 15:52:14.487256  3465 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 15:52:14.487282  3465 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 15:52:14.487292  3465 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 15:52:14.487294  3465 net.cpp:165] Memory required for data: 272676508
I0419 15:52:14.487298  3465 layer_factory.hpp:77] Creating layer rpn-data
I0419 15:52:14.487866  3465 net.cpp:106] Creating Layer rpn-data
I0419 15:52:14.487884  3465 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 15:52:14.487890  3465 net.cpp:454] rpn-data <- gt_boxes
I0419 15:52:14.487895  3465 net.cpp:454] rpn-data <- im_info
I0419 15:52:14.487898  3465 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 15:52:14.487905  3465 net.cpp:411] rpn-data -> rpn_labels
I0419 15:52:14.487911  3465 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 15:52:14.487921  3465 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 15:52:14.487927  3465 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 15:52:14.489204  3465 net.cpp:150] Setting up rpn-data
I0419 15:52:14.489225  3465 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 15:52:14.489231  3465 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:52:14.489235  3465 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:52:14.489240  3465 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:52:14.489243  3465 net.cpp:165] Memory required for data: 273844636
I0419 15:52:14.489248  3465 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 15:52:14.489259  3465 net.cpp:106] Creating Layer rpn_loss_cls
I0419 15:52:14.489267  3465 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 15:52:14.489272  3465 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 15:52:14.489279  3465 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 15:52:14.489291  3465 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 15:52:14.489400  3465 net.cpp:150] Setting up rpn_loss_cls
I0419 15:52:14.489410  3465 net.cpp:157] Top shape: (1)
I0419 15:52:14.489413  3465 net.cpp:160]     with loss weight 1
I0419 15:52:14.489431  3465 net.cpp:165] Memory required for data: 273844640
I0419 15:52:14.489434  3465 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 15:52:14.489444  3465 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 15:52:14.489451  3465 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 15:52:14.489455  3465 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 15:52:14.489459  3465 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 15:52:14.489464  3465 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 15:52:14.489470  3465 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 15:52:14.490057  3465 net.cpp:150] Setting up rpn_loss_bbox
I0419 15:52:14.490068  3465 net.cpp:157] Top shape: (1)
I0419 15:52:14.490072  3465 net.cpp:160]     with loss weight 1
I0419 15:52:14.490077  3465 net.cpp:165] Memory required for data: 273844644
I0419 15:52:14.490079  3465 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 15:52:14.490089  3465 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 15:52:14.490103  3465 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 15:52:14.490135  3465 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 15:52:14.490144  3465 net.cpp:157] Top shape: 1 9216 (9216)
I0419 15:52:14.490147  3465 net.cpp:165] Memory required for data: 273881508
I0419 15:52:14.490150  3465 layer_factory.hpp:77] Creating layer fc6
I0419 15:52:14.490159  3465 net.cpp:106] Creating Layer fc6
I0419 15:52:14.490165  3465 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 15:52:14.490171  3465 net.cpp:411] fc6 -> fc6
I0419 15:52:14.589350  3465 net.cpp:150] Setting up fc6
I0419 15:52:14.589392  3465 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:52:14.589396  3465 net.cpp:165] Memory required for data: 273897892
I0419 15:52:14.589412  3465 layer_factory.hpp:77] Creating layer relu6
I0419 15:52:14.589422  3465 net.cpp:106] Creating Layer relu6
I0419 15:52:14.589428  3465 net.cpp:454] relu6 <- fc6
I0419 15:52:14.589435  3465 net.cpp:397] relu6 -> fc6 (in-place)
I0419 15:52:14.589449  3465 net.cpp:150] Setting up relu6
I0419 15:52:14.589455  3465 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:52:14.589458  3465 net.cpp:165] Memory required for data: 273914276
I0419 15:52:14.589463  3465 layer_factory.hpp:77] Creating layer fc7
I0419 15:52:14.589473  3465 net.cpp:106] Creating Layer fc7
I0419 15:52:14.589479  3465 net.cpp:454] fc7 <- fc6
I0419 15:52:14.589484  3465 net.cpp:411] fc7 -> fc7
I0419 15:52:14.633714  3465 net.cpp:150] Setting up fc7
I0419 15:52:14.633754  3465 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:52:14.633757  3465 net.cpp:165] Memory required for data: 273930660
I0419 15:52:14.633766  3465 layer_factory.hpp:77] Creating layer silence_fc7
I0419 15:52:14.633783  3465 net.cpp:106] Creating Layer silence_fc7
I0419 15:52:14.633790  3465 net.cpp:454] silence_fc7 <- fc7
I0419 15:52:14.633798  3465 net.cpp:150] Setting up silence_fc7
I0419 15:52:14.633805  3465 net.cpp:165] Memory required for data: 273930660
I0419 15:52:14.633808  3465 net.cpp:228] silence_fc7 does not need backward computation.
I0419 15:52:14.633811  3465 net.cpp:228] fc7 does not need backward computation.
I0419 15:52:14.633815  3465 net.cpp:228] relu6 does not need backward computation.
I0419 15:52:14.633817  3465 net.cpp:228] fc6 does not need backward computation.
I0419 15:52:14.633822  3465 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 15:52:14.633826  3465 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 15:52:14.633832  3465 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 15:52:14.633836  3465 net.cpp:226] rpn-data needs backward computation.
I0419 15:52:14.633842  3465 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 15:52:14.633849  3465 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 15:52:14.633852  3465 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 15:52:14.633857  3465 net.cpp:226] rpn_cls_score needs backward computation.
I0419 15:52:14.633859  3465 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 15:52:14.633863  3465 net.cpp:226] rpn_relu1 needs backward computation.
I0419 15:52:14.633868  3465 net.cpp:226] rpn_conv1 needs backward computation.
I0419 15:52:14.633872  3465 net.cpp:226] relu5 needs backward computation.
I0419 15:52:14.633875  3465 net.cpp:226] conv5 needs backward computation.
I0419 15:52:14.633878  3465 net.cpp:226] relu4 needs backward computation.
I0419 15:52:14.633882  3465 net.cpp:226] conv4 needs backward computation.
I0419 15:52:14.633885  3465 net.cpp:226] relu3 needs backward computation.
I0419 15:52:14.633888  3465 net.cpp:226] conv3 needs backward computation.
I0419 15:52:14.633891  3465 net.cpp:226] pool2 needs backward computation.
I0419 15:52:14.633895  3465 net.cpp:226] norm2 needs backward computation.
I0419 15:52:14.633899  3465 net.cpp:226] relu2 needs backward computation.
I0419 15:52:14.633903  3465 net.cpp:226] conv2 needs backward computation.
I0419 15:52:14.633904  3465 net.cpp:226] pool1 needs backward computation.
I0419 15:52:14.633908  3465 net.cpp:226] norm1 needs backward computation.
I0419 15:52:14.633911  3465 net.cpp:226] relu1 needs backward computation.
I0419 15:52:14.633913  3465 net.cpp:226] conv1 needs backward computation.
I0419 15:52:14.633919  3465 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 15:52:14.633924  3465 net.cpp:228] input-data does not need backward computation.
I0419 15:52:14.633925  3465 net.cpp:270] This network produces output rpn_cls_loss
I0419 15:52:14.633929  3465 net.cpp:270] This network produces output rpn_loss_bbox
I0419 15:52:14.633958  3465 net.cpp:283] Network initialization done.
I0419 15:52:14.634071  3465 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 15:52:15.082451  3465 net.cpp:816] Ignoring source layer pool5_spm6
I0419 15:52:15.082480  3465 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 15:52:15.112761  3465 net.cpp:816] Ignoring source layer drop6
I0419 15:52:15.126446  3465 net.cpp:816] Ignoring source layer relu7
I0419 15:52:15.126471  3465 net.cpp:816] Ignoring source layer drop7
I0419 15:52:15.126473  3465 net.cpp:816] Ignoring source layer fc8
I0419 15:52:15.126477  3465 net.cpp:816] Ignoring source layer prob
Solving...
I0419 15:52:15.293438  3465 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 15:52:15.293486  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 15:52:15.293495  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 15:52:15.293507  3465 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 15:52:18.144351  3465 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 15:52:18.144398  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 15:52:18.144405  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 15:52:18.144412  3465 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 15:52:20.993827  3465 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 15:52:20.993875  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 15:52:20.993881  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 15:52:20.993888  3465 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 15:52:23.844434  3465 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 15:52:23.844482  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 15:52:23.844490  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 15:52:23.844496  3465 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 15:52:26.693703  3465 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 15:52:26.693753  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 15:52:26.693759  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 15:52:26.693764  3465 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 15:52:29.552240  3465 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 15:52:29.552287  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 15:52:29.552294  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 15:52:29.552300  3465 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 15:52:32.406105  3465 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 15:52:32.406154  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 15:52:32.406162  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 15:52:32.406167  3465 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 15:52:35.266381  3465 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 15:52:35.266427  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 15:52:35.266434  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 15:52:35.266440  3465 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 15:52:38.129815  3465 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 15:52:38.129864  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 15:52:38.129871  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 15:52:38.129878  3465 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 15:52:40.992190  3465 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 15:52:40.992239  3465 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 15:52:40.992246  3465 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 15:52:40.992254  3465 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:52:47.616781  3480 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 15:52:47.616920  3480 net.cpp:413] Input 0 -> data
I0419 15:52:47.632210  3480 net.cpp:413] Input 1 -> im_info
I0419 15:52:47.632266  3480 layer_factory.hpp:77] Creating layer conv1
I0419 15:52:47.632289  3480 net.cpp:106] Creating Layer conv1
I0419 15:52:47.632300  3480 net.cpp:454] conv1 <- data
I0419 15:52:47.632316  3480 net.cpp:411] conv1 -> conv1
I0419 15:52:47.633090  3480 net.cpp:150] Setting up conv1
I0419 15:52:47.633117  3480 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:52:47.633122  3480 net.cpp:165] Memory required for data: 4816896
I0419 15:52:47.633143  3480 layer_factory.hpp:77] Creating layer relu1
I0419 15:52:47.633158  3480 net.cpp:106] Creating Layer relu1
I0419 15:52:47.633167  3480 net.cpp:454] relu1 <- conv1
I0419 15:52:47.633177  3480 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:52:47.633191  3480 net.cpp:150] Setting up relu1
I0419 15:52:47.633199  3480 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:52:47.633204  3480 net.cpp:165] Memory required for data: 9633792
I0419 15:52:47.633209  3480 layer_factory.hpp:77] Creating layer norm1
I0419 15:52:47.633219  3480 net.cpp:106] Creating Layer norm1
I0419 15:52:47.633226  3480 net.cpp:454] norm1 <- conv1
I0419 15:52:47.633234  3480 net.cpp:411] norm1 -> norm1
I0419 15:52:47.633347  3480 net.cpp:150] Setting up norm1
I0419 15:52:47.633361  3480 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:52:47.633365  3480 net.cpp:165] Memory required for data: 14450688
I0419 15:52:47.633370  3480 layer_factory.hpp:77] Creating layer pool1
I0419 15:52:47.633378  3480 net.cpp:106] Creating Layer pool1
I0419 15:52:47.633383  3480 net.cpp:454] pool1 <- norm1
I0419 15:52:47.633389  3480 net.cpp:411] pool1 -> pool1
I0419 15:52:47.633432  3480 net.cpp:150] Setting up pool1
I0419 15:52:47.633445  3480 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 15:52:47.633450  3480 net.cpp:165] Memory required for data: 15698304
I0419 15:52:47.633455  3480 layer_factory.hpp:77] Creating layer conv2
I0419 15:52:47.633467  3480 net.cpp:106] Creating Layer conv2
I0419 15:52:47.633476  3480 net.cpp:454] conv2 <- pool1
I0419 15:52:47.633482  3480 net.cpp:411] conv2 -> conv2
I0419 15:52:47.635694  3480 net.cpp:150] Setting up conv2
I0419 15:52:47.635713  3480 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:52:47.635718  3480 net.cpp:165] Memory required for data: 16559488
I0419 15:52:47.635731  3480 layer_factory.hpp:77] Creating layer relu2
I0419 15:52:47.635743  3480 net.cpp:106] Creating Layer relu2
I0419 15:52:47.635754  3480 net.cpp:454] relu2 <- conv2
I0419 15:52:47.635761  3480 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:52:47.635771  3480 net.cpp:150] Setting up relu2
I0419 15:52:47.635781  3480 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:52:47.635785  3480 net.cpp:165] Memory required for data: 17420672
I0419 15:52:47.635790  3480 layer_factory.hpp:77] Creating layer norm2
I0419 15:52:47.635800  3480 net.cpp:106] Creating Layer norm2
I0419 15:52:47.635807  3480 net.cpp:454] norm2 <- conv2
I0419 15:52:47.635814  3480 net.cpp:411] norm2 -> norm2
I0419 15:52:47.635903  3480 net.cpp:150] Setting up norm2
I0419 15:52:47.635917  3480 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:52:47.635921  3480 net.cpp:165] Memory required for data: 18281856
I0419 15:52:47.635926  3480 layer_factory.hpp:77] Creating layer pool2
I0419 15:52:47.635933  3480 net.cpp:106] Creating Layer pool2
I0419 15:52:47.635938  3480 net.cpp:454] pool2 <- norm2
I0419 15:52:47.635947  3480 net.cpp:411] pool2 -> pool2
I0419 15:52:47.635987  3480 net.cpp:150] Setting up pool2
I0419 15:52:47.635998  3480 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:52:47.636003  3480 net.cpp:165] Memory required for data: 18512256
I0419 15:52:47.636008  3480 layer_factory.hpp:77] Creating layer conv3
I0419 15:52:47.636021  3480 net.cpp:106] Creating Layer conv3
I0419 15:52:47.636028  3480 net.cpp:454] conv3 <- pool2
I0419 15:52:47.636034  3480 net.cpp:411] conv3 -> conv3
I0419 15:52:47.638370  3480 net.cpp:150] Setting up conv3
I0419 15:52:47.638387  3480 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:52:47.638392  3480 net.cpp:165] Memory required for data: 18857856
I0419 15:52:47.638404  3480 layer_factory.hpp:77] Creating layer relu3
I0419 15:52:47.638413  3480 net.cpp:106] Creating Layer relu3
I0419 15:52:47.638418  3480 net.cpp:454] relu3 <- conv3
I0419 15:52:47.638428  3480 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:52:47.638439  3480 net.cpp:150] Setting up relu3
I0419 15:52:47.638447  3480 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:52:47.638453  3480 net.cpp:165] Memory required for data: 19203456
I0419 15:52:47.638458  3480 layer_factory.hpp:77] Creating layer conv4
I0419 15:52:47.638468  3480 net.cpp:106] Creating Layer conv4
I0419 15:52:47.638473  3480 net.cpp:454] conv4 <- conv3
I0419 15:52:47.638484  3480 net.cpp:411] conv4 -> conv4
I0419 15:52:47.641819  3480 net.cpp:150] Setting up conv4
I0419 15:52:47.641839  3480 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:52:47.641842  3480 net.cpp:165] Memory required for data: 19549056
I0419 15:52:47.641851  3480 layer_factory.hpp:77] Creating layer relu4
I0419 15:52:47.641860  3480 net.cpp:106] Creating Layer relu4
I0419 15:52:47.641868  3480 net.cpp:454] relu4 <- conv4
I0419 15:52:47.641875  3480 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:52:47.641885  3480 net.cpp:150] Setting up relu4
I0419 15:52:47.641893  3480 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:52:47.641898  3480 net.cpp:165] Memory required for data: 19894656
I0419 15:52:47.641902  3480 layer_factory.hpp:77] Creating layer conv5
I0419 15:52:47.641914  3480 net.cpp:106] Creating Layer conv5
I0419 15:52:47.641919  3480 net.cpp:454] conv5 <- conv4
I0419 15:52:47.641927  3480 net.cpp:411] conv5 -> conv5
I0419 15:52:47.644243  3480 net.cpp:150] Setting up conv5
I0419 15:52:47.644263  3480 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:52:47.644268  3480 net.cpp:165] Memory required for data: 20125056
I0419 15:52:47.644279  3480 layer_factory.hpp:77] Creating layer relu5
I0419 15:52:47.644289  3480 net.cpp:106] Creating Layer relu5
I0419 15:52:47.644294  3480 net.cpp:454] relu5 <- conv5
I0419 15:52:47.644305  3480 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:52:47.644315  3480 net.cpp:150] Setting up relu5
I0419 15:52:47.644322  3480 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:52:47.644326  3480 net.cpp:165] Memory required for data: 20355456
I0419 15:52:47.644335  3480 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:52:47.644345  3480 net.cpp:106] Creating Layer rpn_conv1
I0419 15:52:47.644353  3480 net.cpp:454] rpn_conv1 <- conv5
I0419 15:52:47.644363  3480 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:52:47.645977  3480 net.cpp:150] Setting up rpn_conv1
I0419 15:52:47.645995  3480 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:52:47.646000  3480 net.cpp:165] Memory required for data: 20585856
I0419 15:52:47.646009  3480 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:52:47.646018  3480 net.cpp:106] Creating Layer rpn_relu1
I0419 15:52:47.646023  3480 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:52:47.646039  3480 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:52:47.646049  3480 net.cpp:150] Setting up rpn_relu1
I0419 15:52:47.646056  3480 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:52:47.646061  3480 net.cpp:165] Memory required for data: 20816256
I0419 15:52:47.646065  3480 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:52:47.646080  3480 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:52:47.646091  3480 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:52:47.646098  3480 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:52:47.646106  3480 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:52:47.646150  3480 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:52:47.646162  3480 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:52:47.646168  3480 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:52:47.646173  3480 net.cpp:165] Memory required for data: 21277056
I0419 15:52:47.646176  3480 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:52:47.646186  3480 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:52:47.646193  3480 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:52:47.646201  3480 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:52:47.646404  3480 net.cpp:150] Setting up rpn_cls_score
I0419 15:52:47.646417  3480 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 15:52:47.646421  3480 net.cpp:165] Memory required for data: 21293256
I0419 15:52:47.646430  3480 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:52:47.646442  3480 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:52:47.646450  3480 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:52:47.646456  3480 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:52:47.646651  3480 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:52:47.646666  3480 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 15:52:47.646669  3480 net.cpp:165] Memory required for data: 21325656
I0419 15:52:47.646677  3480 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 15:52:47.646687  3480 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 15:52:47.646692  3480 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 15:52:47.646702  3480 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 15:52:47.646742  3480 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 15:52:47.646755  3480 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 15:52:47.646760  3480 net.cpp:165] Memory required for data: 21341856
I0419 15:52:47.646764  3480 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 15:52:47.646773  3480 net.cpp:106] Creating Layer rpn_cls_prob
I0419 15:52:47.646778  3480 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 15:52:47.646788  3480 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 15:52:47.646853  3480 net.cpp:150] Setting up rpn_cls_prob
I0419 15:52:47.646867  3480 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 15:52:47.646870  3480 net.cpp:165] Memory required for data: 21358056
I0419 15:52:47.646875  3480 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 15:52:47.646883  3480 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 15:52:47.646888  3480 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 15:52:47.646899  3480 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 15:52:47.646937  3480 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 15:52:47.646950  3480 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 15:52:47.646953  3480 net.cpp:165] Memory required for data: 21374256
I0419 15:52:47.646958  3480 layer_factory.hpp:77] Creating layer proposal
I0419 15:52:47.648578  3480 net.cpp:106] Creating Layer proposal
I0419 15:52:47.648599  3480 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 15:52:47.648607  3480 net.cpp:454] proposal <- rpn_bbox_pred
I0419 15:52:47.648612  3480 net.cpp:454] proposal <- im_info
I0419 15:52:47.648622  3480 net.cpp:411] proposal -> rois
I0419 15:52:47.648633  3480 net.cpp:411] proposal -> scores
I0419 15:52:47.649967  3480 net.cpp:150] Setting up proposal
I0419 15:52:47.649991  3480 net.cpp:157] Top shape: 1 5 (5)
I0419 15:52:47.649998  3480 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 15:52:47.650003  3480 net.cpp:165] Memory required for data: 21374280
I0419 15:52:47.650009  3480 net.cpp:228] proposal does not need backward computation.
I0419 15:52:47.650015  3480 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 15:52:47.650020  3480 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 15:52:47.650025  3480 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 15:52:47.650030  3480 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 15:52:47.650038  3480 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 15:52:47.650043  3480 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 15:52:47.650048  3480 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 15:52:47.650053  3480 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 15:52:47.650059  3480 net.cpp:228] relu5 does not need backward computation.
I0419 15:52:47.650063  3480 net.cpp:228] conv5 does not need backward computation.
I0419 15:52:47.650068  3480 net.cpp:228] relu4 does not need backward computation.
I0419 15:52:47.650074  3480 net.cpp:228] conv4 does not need backward computation.
I0419 15:52:47.650079  3480 net.cpp:228] relu3 does not need backward computation.
I0419 15:52:47.650084  3480 net.cpp:228] conv3 does not need backward computation.
I0419 15:52:47.650089  3480 net.cpp:228] pool2 does not need backward computation.
I0419 15:52:47.650094  3480 net.cpp:228] norm2 does not need backward computation.
I0419 15:52:47.650099  3480 net.cpp:228] relu2 does not need backward computation.
I0419 15:52:47.650102  3480 net.cpp:228] conv2 does not need backward computation.
I0419 15:52:47.650108  3480 net.cpp:228] pool1 does not need backward computation.
I0419 15:52:47.650113  3480 net.cpp:228] norm1 does not need backward computation.
I0419 15:52:47.650117  3480 net.cpp:228] relu1 does not need backward computation.
I0419 15:52:47.650122  3480 net.cpp:228] conv1 does not need backward computation.
I0419 15:52:47.650126  3480 net.cpp:270] This network produces output rois
I0419 15:52:47.650132  3480 net.cpp:270] This network produces output scores
I0419 15:52:47.650161  3480 net.cpp:283] Network initialization done.
I0419 15:52:48.085875  3480 net.cpp:816] Ignoring source layer input-data
I0419 15:52:48.085913  3480 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 15:52:48.089476  3480 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:52:48.089506  3480 net.cpp:816] Ignoring source layer rpn-data
I0419 15:52:48.089511  3480 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 15:52:48.089514  3480 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 15:52:48.089519  3480 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 15:52:48.089522  3480 net.cpp:816] Ignoring source layer fc6
I0419 15:52:48.089526  3480 net.cpp:816] Ignoring source layer relu6
I0419 15:52:48.089530  3480 net.cpp:816] Ignoring source layer fc7
I0419 15:52:48.089534  3480 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.163s
im_proposals: 2/506 0.153s
im_proposals: 3/506 0.149s
im_proposals: 4/506 0.147s
im_proposals: 5/506 0.146s
im_proposals: 6/506 0.146s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.145s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.144s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.143s
im_proposals: 13/506 0.143s
im_proposals: 14/506 0.143s
im_proposals: 15/506 0.143s
im_proposals: 16/506 0.143s
im_proposals: 17/506 0.143s
im_proposals: 18/506 0.143s
im_proposals: 19/506 0.143s
im_proposals: 20/506 0.143s
im_proposals: 21/506 0.143s
im_proposals: 22/506 0.143s
im_proposals: 23/506 0.143s
im_proposals: 24/506 0.143s
im_proposals: 25/506 0.143s
im_proposals: 26/506 0.143s
im_proposals: 27/506 0.143s
im_proposals: 28/506 0.143s
im_proposals: 29/506 0.143s
im_proposals: 30/506 0.143s
im_proposals: 31/506 0.143s
im_proposals: 32/506 0.143s
im_proposals: 33/506 0.143s
im_proposals: 34/506 0.143s
im_proposals: 35/506 0.143s
im_proposals: 36/506 0.143s
im_proposals: 37/506 0.143s
im_proposals: 38/506 0.143s
im_proposals: 39/506 0.143s
im_proposals: 40/506 0.143s
im_proposals: 41/506 0.143s
im_proposals: 42/506 0.143s
im_proposals: 43/506 0.143s
im_proposals: 44/506 0.143s
im_proposals: 45/506 0.143s
im_proposals: 46/506 0.143s
im_proposals: 47/506 0.143s
im_proposals: 48/506 0.143s
im_proposals: 49/506 0.143s
im_proposals: 50/506 0.142s
im_proposals: 51/506 0.143s
im_proposals: 52/506 0.142s
im_proposals: 53/506 0.143s
im_proposals: 54/506 0.143s
im_proposals: 55/506 0.143s
im_proposals: 56/506 0.143s
im_proposals: 57/506 0.143s
im_proposals: 58/506 0.143s
im_proposals: 59/506 0.143s
im_proposals: 60/506 0.143s
im_proposals: 61/506 0.143s
im_proposals: 62/506 0.143s
im_proposals: 63/506 0.143s
im_proposals: 64/506 0.143s
im_proposals: 65/506 0.143s
im_proposals: 66/506 0.143s
im_proposals: 67/506 0.143s
im_proposals: 68/506 0.143s
im_proposals: 69/506 0.143s
im_proposals: 70/506 0.143s
im_proposals: 71/506 0.143s
im_proposals: 72/506 0.143s
im_proposals: 73/506 0.143s
im_proposals: 74/506 0.143s
im_proposals: 75/506 0.143s
im_proposals: 76/506 0.143s
im_proposals: 77/506 0.143s
im_proposals: 78/506 0.142s
im_proposals: 79/506 0.142s
im_proposals: 80/506 0.142s
im_proposals: 81/506 0.142s
im_proposals: 82/506 0.142s
im_proposals: 83/506 0.142s
im_proposals: 84/506 0.142s
im_proposals: 85/506 0.142s
im_proposals: 86/506 0.142s
im_proposals: 87/506 0.142s
im_proposals: 88/506 0.142s
im_proposals: 89/506 0.142s
im_proposals: 90/506 0.142s
im_proposals: 91/506 0.142s
im_proposals: 92/506 0.142s
im_proposals: 93/506 0.142s
im_proposals: 94/506 0.142s
im_proposals: 95/506 0.142s
im_proposals: 96/506 0.142s
im_proposals: 97/506 0.142s
im_proposals: 98/506 0.142s
im_proposals: 99/506 0.142s
im_proposals: 100/506 0.142s
im_proposals: 101/506 0.142s
im_proposals: 102/506 0.142s
im_proposals: 103/506 0.142s
im_proposals: 104/506 0.142s
im_proposals: 105/506 0.142s
im_proposals: 106/506 0.142s
im_proposals: 107/506 0.142s
im_proposals: 108/506 0.142s
im_proposals: 109/506 0.142s
im_proposals: 110/506 0.142s
im_proposals: 111/506 0.142s
im_proposals: 112/506 0.142s
im_proposals: 113/506 0.142s
im_proposals: 114/506 0.142s
im_proposals: 115/506 0.142s
im_proposals: 116/506 0.142s
im_proposals: 117/506 0.142s
im_proposals: 118/506 0.142s
im_proposals: 119/506 0.142s
im_proposals: 120/506 0.142s
im_proposals: 121/506 0.142s
im_proposals: 122/506 0.142s
im_proposals: 123/506 0.142s
im_proposals: 124/506 0.142s
im_proposals: 125/506 0.142s
im_proposals: 126/506 0.142s
im_proposals: 127/506 0.142s
im_proposals: 128/506 0.142s
im_proposals: 129/506 0.142s
im_proposals: 130/506 0.142s
im_proposals: 131/506 0.142s
im_proposals: 132/506 0.142s
im_proposals: 133/506 0.142s
im_proposals: 134/506 0.142s
im_proposals: 135/506 0.142s
im_proposals: 136/506 0.142s
im_proposals: 137/506 0.142s
im_proposals: 138/506 0.142s
im_proposals: 139/506 0.142s
im_proposals: 140/506 0.142s
im_proposals: 141/506 0.142s
im_proposals: 142/506 0.142s
im_proposals: 143/506 0.142s
im_proposals: 144/506 0.142s
im_proposals: 145/506 0.142s
im_proposals: 146/506 0.142s
im_proposals: 147/506 0.142s
im_proposals: 148/506 0.142s
im_proposals: 149/506 0.142s
im_proposals: 150/506 0.142s
im_proposals: 151/506 0.142s
im_proposals: 152/506 0.142s
im_proposals: 153/506 0.142s
im_proposals: 154/506 0.142s
im_proposals: 155/506 0.142s
im_proposals: 156/506 0.142s
im_proposals: 157/506 0.142s
im_proposals: 158/506 0.142s
im_proposals: 159/506 0.142s
im_proposals: 160/506 0.142s
im_proposals: 161/506 0.142s
im_proposals: 162/506 0.142s
im_proposals: 163/506 0.142s
im_proposals: 164/506 0.142s
im_proposals: 165/506 0.142s
im_proposals: 166/506 0.142s
im_proposals: 167/506 0.142s
im_proposals: 168/506 0.142s
im_proposals: 169/506 0.142s
im_proposals: 170/506 0.142s
im_proposals: 171/506 0.142s
im_proposals: 172/506 0.142s
im_proposals: 173/506 0.142s
im_proposals: 174/506 0.142s
im_proposals: 175/506 0.142s
im_proposals: 176/506 0.142s
im_proposals: 177/506 0.142s
im_proposals: 178/506 0.142s
im_proposals: 179/506 0.142s
im_proposals: 180/506 0.142s
im_proposals: 181/506 0.142s
im_proposals: 182/506 0.142s
im_proposals: 183/506 0.142s
im_proposals: 184/506 0.142s
im_proposals: 185/506 0.142s
im_proposals: 186/506 0.142s
im_proposals: 187/506 0.142s
im_proposals: 188/506 0.142s
im_proposals: 189/506 0.142s
im_proposals: 190/506 0.142s
im_proposals: 191/506 0.142s
im_proposals: 192/506 0.142s
im_proposals: 193/506 0.142s
im_proposals: 194/506 0.142s
im_proposals: 195/506 0.142s
im_proposals: 196/506 0.142s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.142s
im_proposals: 455/506 0.142s
im_proposals: 456/506 0.142s
im_proposals: 457/506 0.142s
im_proposals: 458/506 0.142s
im_proposals: 459/506 0.142s
im_proposals: 460/506 0.142s
im_proposals: 461/506 0.142s
im_proposals: 462/506 0.142s
im_proposals: 463/506 0.142s
im_proposals: 464/506 0.142s
im_proposals: 465/506 0.142s
im_proposals: 466/506 0.142s
im_proposals: 467/506 0.142s
im_proposals: 468/506 0.142s
im_proposals: 469/506 0.142s
im_proposals: 470/506 0.142s
im_proposals: 471/506 0.142s
im_proposals: 472/506 0.142s
im_proposals: 473/506 0.142s
im_proposals: 474/506 0.142s
im_proposals: 475/506 0.142s
im_proposals: 476/506 0.142s
im_proposals: 477/506 0.142s
im_proposals: 478/506 0.142s
im_proposals: 479/506 0.142s
im_proposals: 480/506 0.142s
im_proposals: 481/506 0.142s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:54:23.981194  3503 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 15:54:23.981257  3503 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 15:54:23.982087  3503 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 15:54:23.982280  3503 layer_factory.hpp:77] Creating layer data
I0419 15:54:23.983052  3503 net.cpp:106] Creating Layer data
I0419 15:54:23.983078  3503 net.cpp:411] data -> data
I0419 15:54:23.983103  3503 net.cpp:411] data -> rois
I0419 15:54:23.983115  3503 net.cpp:411] data -> labels
I0419 15:54:23.983125  3503 net.cpp:411] data -> bbox_targets
I0419 15:54:23.983134  3503 net.cpp:411] data -> bbox_inside_weights
I0419 15:54:23.983148  3503 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 15:54:23.998517  3503 net.cpp:150] Setting up data
I0419 15:54:23.998543  3503 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 15:54:23.998550  3503 net.cpp:157] Top shape: 1 5 (5)
I0419 15:54:23.998556  3503 net.cpp:157] Top shape: 1 (1)
I0419 15:54:23.998566  3503 net.cpp:157] Top shape: 1 176 (176)
I0419 15:54:23.998572  3503 net.cpp:157] Top shape: 1 176 (176)
I0419 15:54:23.998577  3503 net.cpp:157] Top shape: 1 176 (176)
I0419 15:54:23.998584  3503 net.cpp:165] Memory required for data: 14402136
I0419 15:54:23.998590  3503 layer_factory.hpp:77] Creating layer conv1
I0419 15:54:23.998611  3503 net.cpp:106] Creating Layer conv1
I0419 15:54:23.998623  3503 net.cpp:454] conv1 <- data
I0419 15:54:23.998641  3503 net.cpp:411] conv1 -> conv1
I0419 15:54:23.999995  3503 net.cpp:150] Setting up conv1
I0419 15:54:24.000015  3503 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:54:24.000020  3503 net.cpp:165] Memory required for data: 129602136
I0419 15:54:24.000042  3503 layer_factory.hpp:77] Creating layer relu1
I0419 15:54:24.000061  3503 net.cpp:106] Creating Layer relu1
I0419 15:54:24.000067  3503 net.cpp:454] relu1 <- conv1
I0419 15:54:24.000074  3503 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:54:24.000092  3503 net.cpp:150] Setting up relu1
I0419 15:54:24.000107  3503 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:54:24.000111  3503 net.cpp:165] Memory required for data: 244802136
I0419 15:54:24.000115  3503 layer_factory.hpp:77] Creating layer norm1
I0419 15:54:24.000124  3503 net.cpp:106] Creating Layer norm1
I0419 15:54:24.000131  3503 net.cpp:454] norm1 <- conv1
I0419 15:54:24.000139  3503 net.cpp:411] norm1 -> norm1
I0419 15:54:24.000253  3503 net.cpp:150] Setting up norm1
I0419 15:54:24.000267  3503 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:54:24.000270  3503 net.cpp:165] Memory required for data: 360002136
I0419 15:54:24.000275  3503 layer_factory.hpp:77] Creating layer pool1
I0419 15:54:24.000288  3503 net.cpp:106] Creating Layer pool1
I0419 15:54:24.000293  3503 net.cpp:454] pool1 <- norm1
I0419 15:54:24.000301  3503 net.cpp:411] pool1 -> pool1
I0419 15:54:24.000346  3503 net.cpp:150] Setting up pool1
I0419 15:54:24.000360  3503 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 15:54:24.000363  3503 net.cpp:165] Memory required for data: 389110104
I0419 15:54:24.000367  3503 layer_factory.hpp:77] Creating layer conv2
I0419 15:54:24.000377  3503 net.cpp:106] Creating Layer conv2
I0419 15:54:24.000383  3503 net.cpp:454] conv2 <- pool1
I0419 15:54:24.000391  3503 net.cpp:411] conv2 -> conv2
I0419 15:54:24.002063  3503 net.cpp:150] Setting up conv2
I0419 15:54:24.002081  3503 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:54:24.002086  3503 net.cpp:165] Memory required for data: 408721752
I0419 15:54:24.002099  3503 layer_factory.hpp:77] Creating layer relu2
I0419 15:54:24.002107  3503 net.cpp:106] Creating Layer relu2
I0419 15:54:24.002115  3503 net.cpp:454] relu2 <- conv2
I0419 15:54:24.002125  3503 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:54:24.002140  3503 net.cpp:150] Setting up relu2
I0419 15:54:24.002147  3503 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:54:24.002152  3503 net.cpp:165] Memory required for data: 428333400
I0419 15:54:24.002156  3503 layer_factory.hpp:77] Creating layer norm2
I0419 15:54:24.002166  3503 net.cpp:106] Creating Layer norm2
I0419 15:54:24.002171  3503 net.cpp:454] norm2 <- conv2
I0419 15:54:24.002180  3503 net.cpp:411] norm2 -> norm2
I0419 15:54:24.002276  3503 net.cpp:150] Setting up norm2
I0419 15:54:24.002290  3503 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:54:24.002295  3503 net.cpp:165] Memory required for data: 447945048
I0419 15:54:24.002300  3503 layer_factory.hpp:77] Creating layer pool2
I0419 15:54:24.002308  3503 net.cpp:106] Creating Layer pool2
I0419 15:54:24.002313  3503 net.cpp:454] pool2 <- norm2
I0419 15:54:24.002322  3503 net.cpp:411] pool2 -> pool2
I0419 15:54:24.002380  3503 net.cpp:150] Setting up pool2
I0419 15:54:24.002393  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.002398  3503 net.cpp:165] Memory required for data: 453056856
I0419 15:54:24.002401  3503 layer_factory.hpp:77] Creating layer conv3
I0419 15:54:24.002414  3503 net.cpp:106] Creating Layer conv3
I0419 15:54:24.002419  3503 net.cpp:454] conv3 <- pool2
I0419 15:54:24.002426  3503 net.cpp:411] conv3 -> conv3
I0419 15:54:24.005712  3503 net.cpp:150] Setting up conv3
I0419 15:54:24.005733  3503 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:54:24.005738  3503 net.cpp:165] Memory required for data: 460724568
I0419 15:54:24.005749  3503 layer_factory.hpp:77] Creating layer relu3
I0419 15:54:24.005761  3503 net.cpp:106] Creating Layer relu3
I0419 15:54:24.005769  3503 net.cpp:454] relu3 <- conv3
I0419 15:54:24.005776  3503 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:54:24.005787  3503 net.cpp:150] Setting up relu3
I0419 15:54:24.005796  3503 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:54:24.005800  3503 net.cpp:165] Memory required for data: 468392280
I0419 15:54:24.005806  3503 layer_factory.hpp:77] Creating layer conv4
I0419 15:54:24.005820  3503 net.cpp:106] Creating Layer conv4
I0419 15:54:24.005830  3503 net.cpp:454] conv4 <- conv3
I0419 15:54:24.005837  3503 net.cpp:411] conv4 -> conv4
I0419 15:54:24.009148  3503 net.cpp:150] Setting up conv4
I0419 15:54:24.009169  3503 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:54:24.009173  3503 net.cpp:165] Memory required for data: 476059992
I0419 15:54:24.009183  3503 layer_factory.hpp:77] Creating layer relu4
I0419 15:54:24.009191  3503 net.cpp:106] Creating Layer relu4
I0419 15:54:24.009196  3503 net.cpp:454] relu4 <- conv4
I0419 15:54:24.009207  3503 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:54:24.009219  3503 net.cpp:150] Setting up relu4
I0419 15:54:24.009227  3503 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:54:24.009234  3503 net.cpp:165] Memory required for data: 483727704
I0419 15:54:24.009239  3503 layer_factory.hpp:77] Creating layer conv5
I0419 15:54:24.009249  3503 net.cpp:106] Creating Layer conv5
I0419 15:54:24.009260  3503 net.cpp:454] conv5 <- conv4
I0419 15:54:24.009271  3503 net.cpp:411] conv5 -> conv5
I0419 15:54:24.011590  3503 net.cpp:150] Setting up conv5
I0419 15:54:24.011610  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.011615  3503 net.cpp:165] Memory required for data: 488839512
I0419 15:54:24.011631  3503 layer_factory.hpp:77] Creating layer relu5
I0419 15:54:24.011639  3503 net.cpp:106] Creating Layer relu5
I0419 15:54:24.011648  3503 net.cpp:454] relu5 <- conv5
I0419 15:54:24.011659  3503 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:54:24.011670  3503 net.cpp:150] Setting up relu5
I0419 15:54:24.011677  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.011683  3503 net.cpp:165] Memory required for data: 493951320
I0419 15:54:24.011688  3503 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 15:54:24.011699  3503 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 15:54:24.011709  3503 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 15:54:24.011718  3503 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 15:54:24.011725  3503 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 15:54:24.011770  3503 net.cpp:150] Setting up conv5_relu5_0_split
I0419 15:54:24.011781  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.011788  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.011792  3503 net.cpp:165] Memory required for data: 504174936
I0419 15:54:24.011797  3503 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 15:54:24.011813  3503 net.cpp:106] Creating Layer roi_pool_conv5
I0419 15:54:24.011821  3503 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 15:54:24.011827  3503 net.cpp:454] roi_pool_conv5 <- rois
I0419 15:54:24.011834  3503 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 15:54:24.011849  3503 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 15:54:24.011910  3503 net.cpp:150] Setting up roi_pool_conv5
I0419 15:54:24.011922  3503 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 15:54:24.011927  3503 net.cpp:165] Memory required for data: 504211800
I0419 15:54:24.011931  3503 layer_factory.hpp:77] Creating layer fc6
I0419 15:54:24.011942  3503 net.cpp:106] Creating Layer fc6
I0419 15:54:24.011947  3503 net.cpp:454] fc6 <- roi_pool_conv5
I0419 15:54:24.011957  3503 net.cpp:411] fc6 -> fc6
I0419 15:54:24.110997  3503 net.cpp:150] Setting up fc6
I0419 15:54:24.111039  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.111045  3503 net.cpp:165] Memory required for data: 504228184
I0419 15:54:24.111058  3503 layer_factory.hpp:77] Creating layer relu6
I0419 15:54:24.111073  3503 net.cpp:106] Creating Layer relu6
I0419 15:54:24.111081  3503 net.cpp:454] relu6 <- fc6
I0419 15:54:24.111090  3503 net.cpp:397] relu6 -> fc6 (in-place)
I0419 15:54:24.111112  3503 net.cpp:150] Setting up relu6
I0419 15:54:24.111119  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.111125  3503 net.cpp:165] Memory required for data: 504244568
I0419 15:54:24.111130  3503 layer_factory.hpp:77] Creating layer drop6
I0419 15:54:24.111146  3503 net.cpp:106] Creating Layer drop6
I0419 15:54:24.111157  3503 net.cpp:454] drop6 <- fc6
I0419 15:54:24.111165  3503 net.cpp:397] drop6 -> fc6 (in-place)
I0419 15:54:24.111197  3503 net.cpp:150] Setting up drop6
I0419 15:54:24.111209  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.111214  3503 net.cpp:165] Memory required for data: 504260952
I0419 15:54:24.111218  3503 layer_factory.hpp:77] Creating layer fc7
I0419 15:54:24.111235  3503 net.cpp:106] Creating Layer fc7
I0419 15:54:24.111241  3503 net.cpp:454] fc7 <- fc6
I0419 15:54:24.111249  3503 net.cpp:411] fc7 -> fc7
I0419 15:54:24.155457  3503 net.cpp:150] Setting up fc7
I0419 15:54:24.155499  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.155504  3503 net.cpp:165] Memory required for data: 504277336
I0419 15:54:24.155519  3503 layer_factory.hpp:77] Creating layer relu7
I0419 15:54:24.155531  3503 net.cpp:106] Creating Layer relu7
I0419 15:54:24.155539  3503 net.cpp:454] relu7 <- fc7
I0419 15:54:24.155547  3503 net.cpp:397] relu7 -> fc7 (in-place)
I0419 15:54:24.155558  3503 net.cpp:150] Setting up relu7
I0419 15:54:24.155570  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.155575  3503 net.cpp:165] Memory required for data: 504293720
I0419 15:54:24.155578  3503 layer_factory.hpp:77] Creating layer drop7
I0419 15:54:24.155591  3503 net.cpp:106] Creating Layer drop7
I0419 15:54:24.155602  3503 net.cpp:454] drop7 <- fc7
I0419 15:54:24.155609  3503 net.cpp:397] drop7 -> fc7 (in-place)
I0419 15:54:24.155642  3503 net.cpp:150] Setting up drop7
I0419 15:54:24.155655  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.155660  3503 net.cpp:165] Memory required for data: 504310104
I0419 15:54:24.155665  3503 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 15:54:24.155673  3503 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 15:54:24.155683  3503 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 15:54:24.155690  3503 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 15:54:24.155704  3503 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 15:54:24.155747  3503 net.cpp:150] Setting up fc7_drop7_0_split
I0419 15:54:24.155760  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.155766  3503 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:54:24.155769  3503 net.cpp:165] Memory required for data: 504342872
I0419 15:54:24.155774  3503 layer_factory.hpp:77] Creating layer cls_score
I0419 15:54:24.155789  3503 net.cpp:106] Creating Layer cls_score
I0419 15:54:24.155799  3503 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 15:54:24.155808  3503 net.cpp:411] cls_score -> cls_score
I0419 15:54:24.161379  3503 net.cpp:150] Setting up cls_score
I0419 15:54:24.161398  3503 net.cpp:157] Top shape: 1 44 (44)
I0419 15:54:24.161402  3503 net.cpp:165] Memory required for data: 504343048
I0419 15:54:24.161412  3503 layer_factory.hpp:77] Creating layer bbox_pred
I0419 15:54:24.161423  3503 net.cpp:106] Creating Layer bbox_pred
I0419 15:54:24.161433  3503 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 15:54:24.161445  3503 net.cpp:411] bbox_pred -> bbox_pred
I0419 15:54:24.182081  3503 net.cpp:150] Setting up bbox_pred
I0419 15:54:24.182101  3503 net.cpp:157] Top shape: 1 176 (176)
I0419 15:54:24.182106  3503 net.cpp:165] Memory required for data: 504343752
I0419 15:54:24.182123  3503 layer_factory.hpp:77] Creating layer loss_cls
I0419 15:54:24.182142  3503 net.cpp:106] Creating Layer loss_cls
I0419 15:54:24.182153  3503 net.cpp:454] loss_cls <- cls_score
I0419 15:54:24.182162  3503 net.cpp:454] loss_cls <- labels
I0419 15:54:24.182169  3503 net.cpp:411] loss_cls -> cls_loss
I0419 15:54:24.182188  3503 layer_factory.hpp:77] Creating layer loss_cls
I0419 15:54:24.182289  3503 net.cpp:150] Setting up loss_cls
I0419 15:54:24.182301  3503 net.cpp:157] Top shape: (1)
I0419 15:54:24.182307  3503 net.cpp:160]     with loss weight 1
I0419 15:54:24.182337  3503 net.cpp:165] Memory required for data: 504343756
I0419 15:54:24.182348  3503 layer_factory.hpp:77] Creating layer loss_bbox
I0419 15:54:24.182360  3503 net.cpp:106] Creating Layer loss_bbox
I0419 15:54:24.182365  3503 net.cpp:454] loss_bbox <- bbox_pred
I0419 15:54:24.182375  3503 net.cpp:454] loss_bbox <- bbox_targets
I0419 15:54:24.182381  3503 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 15:54:24.182389  3503 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 15:54:24.182395  3503 net.cpp:411] loss_bbox -> bbox_loss
I0419 15:54:24.182479  3503 net.cpp:150] Setting up loss_bbox
I0419 15:54:24.182492  3503 net.cpp:157] Top shape: (1)
I0419 15:54:24.182497  3503 net.cpp:160]     with loss weight 1
I0419 15:54:24.182503  3503 net.cpp:165] Memory required for data: 504343760
I0419 15:54:24.182508  3503 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:54:24.182525  3503 net.cpp:106] Creating Layer rpn_conv1
I0419 15:54:24.182534  3503 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 15:54:24.182544  3503 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:54:24.199576  3503 net.cpp:150] Setting up rpn_conv1
I0419 15:54:24.199595  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.199600  3503 net.cpp:165] Memory required for data: 509455568
I0419 15:54:24.199609  3503 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:54:24.199618  3503 net.cpp:106] Creating Layer rpn_relu1
I0419 15:54:24.199625  3503 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:54:24.199631  3503 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:54:24.199645  3503 net.cpp:150] Setting up rpn_relu1
I0419 15:54:24.199652  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.199661  3503 net.cpp:165] Memory required for data: 514567376
I0419 15:54:24.199666  3503 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:54:24.199678  3503 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:54:24.199683  3503 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:54:24.199690  3503 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:54:24.199700  3503 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:54:24.199743  3503 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:54:24.199754  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.199760  3503 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:54:24.199764  3503 net.cpp:165] Memory required for data: 524790992
I0419 15:54:24.199769  3503 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:54:24.199784  3503 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:54:24.199795  3503 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:54:24.199807  3503 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:54:24.200147  3503 net.cpp:150] Setting up rpn_cls_score
I0419 15:54:24.200162  3503 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 15:54:24.200166  3503 net.cpp:165] Memory required for data: 525150416
I0419 15:54:24.200176  3503 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:54:24.200196  3503 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:54:24.200204  3503 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:54:24.200217  3503 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:54:24.200680  3503 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:54:24.200695  3503 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 15:54:24.200700  3503 net.cpp:165] Memory required for data: 525869264
I0419 15:54:24.200707  3503 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 15:54:24.200719  3503 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 15:54:24.200729  3503 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 15:54:24.200738  3503 net.cpp:150] Setting up silence_rpn_cls_score
I0419 15:54:24.200742  3503 net.cpp:165] Memory required for data: 525869264
I0419 15:54:24.200747  3503 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 15:54:24.200753  3503 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 15:54:24.200758  3503 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 15:54:24.200763  3503 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 15:54:24.200768  3503 net.cpp:165] Memory required for data: 525869264
I0419 15:54:24.200773  3503 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 15:54:24.200778  3503 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 15:54:24.200783  3503 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 15:54:24.200788  3503 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 15:54:24.200793  3503 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 15:54:24.200800  3503 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 15:54:24.200804  3503 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 15:54:24.200809  3503 net.cpp:226] loss_bbox needs backward computation.
I0419 15:54:24.200817  3503 net.cpp:226] loss_cls needs backward computation.
I0419 15:54:24.200822  3503 net.cpp:226] bbox_pred needs backward computation.
I0419 15:54:24.200830  3503 net.cpp:226] cls_score needs backward computation.
I0419 15:54:24.200841  3503 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 15:54:24.200846  3503 net.cpp:226] drop7 needs backward computation.
I0419 15:54:24.200850  3503 net.cpp:226] relu7 needs backward computation.
I0419 15:54:24.200855  3503 net.cpp:226] fc7 needs backward computation.
I0419 15:54:24.200861  3503 net.cpp:226] drop6 needs backward computation.
I0419 15:54:24.200866  3503 net.cpp:226] relu6 needs backward computation.
I0419 15:54:24.200870  3503 net.cpp:226] fc6 needs backward computation.
I0419 15:54:24.200876  3503 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 15:54:24.200883  3503 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 15:54:24.200889  3503 net.cpp:226] relu5 needs backward computation.
I0419 15:54:24.200894  3503 net.cpp:226] conv5 needs backward computation.
I0419 15:54:24.200901  3503 net.cpp:226] relu4 needs backward computation.
I0419 15:54:24.200904  3503 net.cpp:226] conv4 needs backward computation.
I0419 15:54:24.200909  3503 net.cpp:226] relu3 needs backward computation.
I0419 15:54:24.200914  3503 net.cpp:226] conv3 needs backward computation.
I0419 15:54:24.200919  3503 net.cpp:226] pool2 needs backward computation.
I0419 15:54:24.200924  3503 net.cpp:226] norm2 needs backward computation.
I0419 15:54:24.200930  3503 net.cpp:226] relu2 needs backward computation.
I0419 15:54:24.200935  3503 net.cpp:226] conv2 needs backward computation.
I0419 15:54:24.200942  3503 net.cpp:226] pool1 needs backward computation.
I0419 15:54:24.200947  3503 net.cpp:226] norm1 needs backward computation.
I0419 15:54:24.200951  3503 net.cpp:226] relu1 needs backward computation.
I0419 15:54:24.200955  3503 net.cpp:226] conv1 needs backward computation.
I0419 15:54:24.200963  3503 net.cpp:228] data does not need backward computation.
I0419 15:54:24.200968  3503 net.cpp:270] This network produces output bbox_loss
I0419 15:54:24.200973  3503 net.cpp:270] This network produces output cls_loss
I0419 15:54:24.201011  3503 net.cpp:283] Network initialization done.
I0419 15:54:24.201162  3503 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 15:54:24.653476  3503 net.cpp:816] Ignoring source layer pool5_spm6
I0419 15:54:24.653506  3503 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 15:54:24.697355  3503 net.cpp:816] Ignoring source layer fc8
I0419 15:54:24.697383  3503 net.cpp:816] Ignoring source layer prob
Solving...
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "./tools/train_faster_rcnn_alt_opt.py", line 196, in train_fast_rcnn
    max_iters=max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 161, in train_net
    model_paths = sw.train_model(max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 102, in train_model
    self.solver.step(1)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 144, in forward
    blobs = self._get_next_minibatch()
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 63, in _get_next_minibatch
    return get_minibatch(minibatch_db, self._num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 55, in get_minibatch
    num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 113, in _sample_rois
    bg_inds, size=bg_rois_per_this_image, replace=False)
  File "mtrand.pyx", line 1176, in mtrand.RandomState.choice (numpy/random/mtrand/mtrand.c:18822)
TypeError: 'numpy.float64' object cannot be interpreted as an index
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-57-34
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-57-34
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-57-34
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_15-57-34
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:57:38.309430  3532 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 15:57:38.309487  3532 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 15:57:38.310225  3532 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 15:57:38.310415  3532 layer_factory.hpp:77] Creating layer input-data
I0419 15:57:38.312588  3532 net.cpp:106] Creating Layer input-data
I0419 15:57:38.312613  3532 net.cpp:411] input-data -> data
I0419 15:57:38.312633  3532 net.cpp:411] input-data -> im_info
I0419 15:57:38.312644  3532 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 15:57:38.328685  3532 net.cpp:150] Setting up input-data
I0419 15:57:38.328706  3532 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:57:38.328712  3532 net.cpp:157] Top shape: 1 3 (3)
I0419 15:57:38.328716  3532 net.cpp:157] Top shape: 1 4 (4)
I0419 15:57:38.328718  3532 net.cpp:165] Memory required for data: 7200028
I0419 15:57:38.328725  3532 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 15:57:38.328738  3532 net.cpp:106] Creating Layer data_input-data_0_split
I0419 15:57:38.328745  3532 net.cpp:454] data_input-data_0_split <- data
I0419 15:57:38.328754  3532 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 15:57:38.328763  3532 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 15:57:38.328796  3532 net.cpp:150] Setting up data_input-data_0_split
I0419 15:57:38.328806  3532 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:57:38.328812  3532 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 15:57:38.328816  3532 net.cpp:165] Memory required for data: 21600028
I0419 15:57:38.328819  3532 layer_factory.hpp:77] Creating layer conv1
I0419 15:57:38.328830  3532 net.cpp:106] Creating Layer conv1
I0419 15:57:38.328837  3532 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 15:57:38.328845  3532 net.cpp:411] conv1 -> conv1
I0419 15:57:38.330183  3532 net.cpp:150] Setting up conv1
I0419 15:57:38.330200  3532 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:57:38.330204  3532 net.cpp:165] Memory required for data: 79200028
I0419 15:57:38.330217  3532 layer_factory.hpp:77] Creating layer relu1
I0419 15:57:38.330230  3532 net.cpp:106] Creating Layer relu1
I0419 15:57:38.330235  3532 net.cpp:454] relu1 <- conv1
I0419 15:57:38.330240  3532 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:57:38.330248  3532 net.cpp:150] Setting up relu1
I0419 15:57:38.330256  3532 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:57:38.330260  3532 net.cpp:165] Memory required for data: 136800028
I0419 15:57:38.330262  3532 layer_factory.hpp:77] Creating layer norm1
I0419 15:57:38.330272  3532 net.cpp:106] Creating Layer norm1
I0419 15:57:38.330277  3532 net.cpp:454] norm1 <- conv1
I0419 15:57:38.330283  3532 net.cpp:411] norm1 -> norm1
I0419 15:57:38.330397  3532 net.cpp:150] Setting up norm1
I0419 15:57:38.330409  3532 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 15:57:38.330411  3532 net.cpp:165] Memory required for data: 194400028
I0419 15:57:38.330415  3532 layer_factory.hpp:77] Creating layer pool1
I0419 15:57:38.330421  3532 net.cpp:106] Creating Layer pool1
I0419 15:57:38.330428  3532 net.cpp:454] pool1 <- norm1
I0419 15:57:38.330432  3532 net.cpp:411] pool1 -> pool1
I0419 15:57:38.330463  3532 net.cpp:150] Setting up pool1
I0419 15:57:38.330472  3532 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 15:57:38.330474  3532 net.cpp:165] Memory required for data: 208954012
I0419 15:57:38.330477  3532 layer_factory.hpp:77] Creating layer conv2
I0419 15:57:38.330489  3532 net.cpp:106] Creating Layer conv2
I0419 15:57:38.330495  3532 net.cpp:454] conv2 <- pool1
I0419 15:57:38.330500  3532 net.cpp:411] conv2 -> conv2
I0419 15:57:38.332180  3532 net.cpp:150] Setting up conv2
I0419 15:57:38.332196  3532 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:57:38.332200  3532 net.cpp:165] Memory required for data: 218759836
I0419 15:57:38.332211  3532 layer_factory.hpp:77] Creating layer relu2
I0419 15:57:38.332221  3532 net.cpp:106] Creating Layer relu2
I0419 15:57:38.332224  3532 net.cpp:454] relu2 <- conv2
I0419 15:57:38.332229  3532 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:57:38.332237  3532 net.cpp:150] Setting up relu2
I0419 15:57:38.332240  3532 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:57:38.332243  3532 net.cpp:165] Memory required for data: 228565660
I0419 15:57:38.332245  3532 layer_factory.hpp:77] Creating layer norm2
I0419 15:57:38.332252  3532 net.cpp:106] Creating Layer norm2
I0419 15:57:38.332255  3532 net.cpp:454] norm2 <- conv2
I0419 15:57:38.332260  3532 net.cpp:411] norm2 -> norm2
I0419 15:57:38.332342  3532 net.cpp:150] Setting up norm2
I0419 15:57:38.332352  3532 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 15:57:38.332355  3532 net.cpp:165] Memory required for data: 238371484
I0419 15:57:38.332357  3532 layer_factory.hpp:77] Creating layer pool2
I0419 15:57:38.332362  3532 net.cpp:106] Creating Layer pool2
I0419 15:57:38.332366  3532 net.cpp:454] pool2 <- norm2
I0419 15:57:38.332372  3532 net.cpp:411] pool2 -> pool2
I0419 15:57:38.332399  3532 net.cpp:150] Setting up pool2
I0419 15:57:38.332408  3532 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:57:38.332411  3532 net.cpp:165] Memory required for data: 240927388
I0419 15:57:38.332413  3532 layer_factory.hpp:77] Creating layer conv3
I0419 15:57:38.332422  3532 net.cpp:106] Creating Layer conv3
I0419 15:57:38.332428  3532 net.cpp:454] conv3 <- pool2
I0419 15:57:38.332433  3532 net.cpp:411] conv3 -> conv3
I0419 15:57:38.335737  3532 net.cpp:150] Setting up conv3
I0419 15:57:38.335754  3532 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:57:38.335757  3532 net.cpp:165] Memory required for data: 244761244
I0419 15:57:38.335767  3532 layer_factory.hpp:77] Creating layer relu3
I0419 15:57:38.335778  3532 net.cpp:106] Creating Layer relu3
I0419 15:57:38.335782  3532 net.cpp:454] relu3 <- conv3
I0419 15:57:38.335786  3532 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:57:38.335798  3532 net.cpp:150] Setting up relu3
I0419 15:57:38.335801  3532 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:57:38.335804  3532 net.cpp:165] Memory required for data: 248595100
I0419 15:57:38.335808  3532 layer_factory.hpp:77] Creating layer conv4
I0419 15:57:38.335815  3532 net.cpp:106] Creating Layer conv4
I0419 15:57:38.335821  3532 net.cpp:454] conv4 <- conv3
I0419 15:57:38.335826  3532 net.cpp:411] conv4 -> conv4
I0419 15:57:38.339159  3532 net.cpp:150] Setting up conv4
I0419 15:57:38.339176  3532 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:57:38.339179  3532 net.cpp:165] Memory required for data: 252428956
I0419 15:57:38.339185  3532 layer_factory.hpp:77] Creating layer relu4
I0419 15:57:38.339192  3532 net.cpp:106] Creating Layer relu4
I0419 15:57:38.339196  3532 net.cpp:454] relu4 <- conv4
I0419 15:57:38.339202  3532 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:57:38.339208  3532 net.cpp:150] Setting up relu4
I0419 15:57:38.339212  3532 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 15:57:38.339215  3532 net.cpp:165] Memory required for data: 256262812
I0419 15:57:38.339217  3532 layer_factory.hpp:77] Creating layer conv5
I0419 15:57:38.339224  3532 net.cpp:106] Creating Layer conv5
I0419 15:57:38.339228  3532 net.cpp:454] conv5 <- conv4
I0419 15:57:38.339238  3532 net.cpp:411] conv5 -> conv5
I0419 15:57:38.341533  3532 net.cpp:150] Setting up conv5
I0419 15:57:38.341549  3532 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:57:38.341552  3532 net.cpp:165] Memory required for data: 258818716
I0419 15:57:38.341562  3532 layer_factory.hpp:77] Creating layer relu5
I0419 15:57:38.341572  3532 net.cpp:106] Creating Layer relu5
I0419 15:57:38.341574  3532 net.cpp:454] relu5 <- conv5
I0419 15:57:38.341578  3532 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:57:38.341585  3532 net.cpp:150] Setting up relu5
I0419 15:57:38.341589  3532 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:57:38.341593  3532 net.cpp:165] Memory required for data: 261374620
I0419 15:57:38.341595  3532 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:57:38.341609  3532 net.cpp:106] Creating Layer rpn_conv1
I0419 15:57:38.341616  3532 net.cpp:454] rpn_conv1 <- conv5
I0419 15:57:38.341621  3532 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:57:38.358675  3532 net.cpp:150] Setting up rpn_conv1
I0419 15:57:38.358692  3532 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:57:38.358695  3532 net.cpp:165] Memory required for data: 263930524
I0419 15:57:38.358701  3532 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:57:38.358706  3532 net.cpp:106] Creating Layer rpn_relu1
I0419 15:57:38.358711  3532 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:57:38.358716  3532 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:57:38.358721  3532 net.cpp:150] Setting up rpn_relu1
I0419 15:57:38.358726  3532 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:57:38.358728  3532 net.cpp:165] Memory required for data: 266486428
I0419 15:57:38.358734  3532 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:57:38.358739  3532 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:57:38.358741  3532 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:57:38.358754  3532 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:57:38.358760  3532 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:57:38.358795  3532 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:57:38.358804  3532 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:57:38.358809  3532 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 15:57:38.358811  3532 net.cpp:165] Memory required for data: 271598236
I0419 15:57:38.358814  3532 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:57:38.358825  3532 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:57:38.358829  3532 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:57:38.358834  3532 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:57:38.359149  3532 net.cpp:150] Setting up rpn_cls_score
I0419 15:57:38.359160  3532 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:57:38.359163  3532 net.cpp:165] Memory required for data: 271777948
I0419 15:57:38.359169  3532 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:57:38.359175  3532 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:57:38.359179  3532 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 15:57:38.359182  3532 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 15:57:38.359189  3532 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 15:57:38.359220  3532 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 15:57:38.359228  3532 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:57:38.359231  3532 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 15:57:38.359235  3532 net.cpp:165] Memory required for data: 272137372
I0419 15:57:38.359237  3532 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:57:38.359246  3532 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:57:38.359253  3532 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:57:38.359259  3532 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:57:38.359693  3532 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:57:38.359704  3532 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:57:38.359706  3532 net.cpp:165] Memory required for data: 272496796
I0419 15:57:38.359712  3532 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 15:57:38.359721  3532 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 15:57:38.359725  3532 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 15:57:38.359732  3532 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 15:57:38.359760  3532 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 15:57:38.359768  3532 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 15:57:38.359771  3532 net.cpp:165] Memory required for data: 272676508
I0419 15:57:38.359773  3532 layer_factory.hpp:77] Creating layer rpn-data
I0419 15:57:38.360323  3532 net.cpp:106] Creating Layer rpn-data
I0419 15:57:38.360340  3532 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 15:57:38.360345  3532 net.cpp:454] rpn-data <- gt_boxes
I0419 15:57:38.360352  3532 net.cpp:454] rpn-data <- im_info
I0419 15:57:38.360354  3532 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 15:57:38.360359  3532 net.cpp:411] rpn-data -> rpn_labels
I0419 15:57:38.360365  3532 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 15:57:38.360375  3532 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 15:57:38.360381  3532 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 15:57:38.361639  3532 net.cpp:150] Setting up rpn-data
I0419 15:57:38.361661  3532 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 15:57:38.361665  3532 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:57:38.361670  3532 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:57:38.361673  3532 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 15:57:38.361676  3532 net.cpp:165] Memory required for data: 273844636
I0419 15:57:38.361681  3532 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 15:57:38.361693  3532 net.cpp:106] Creating Layer rpn_loss_cls
I0419 15:57:38.361701  3532 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 15:57:38.361706  3532 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 15:57:38.361714  3532 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 15:57:38.361732  3532 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 15:57:38.361840  3532 net.cpp:150] Setting up rpn_loss_cls
I0419 15:57:38.361850  3532 net.cpp:157] Top shape: (1)
I0419 15:57:38.361853  3532 net.cpp:160]     with loss weight 1
I0419 15:57:38.361871  3532 net.cpp:165] Memory required for data: 273844640
I0419 15:57:38.361874  3532 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 15:57:38.361884  3532 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 15:57:38.361891  3532 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 15:57:38.361894  3532 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 15:57:38.361898  3532 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 15:57:38.361902  3532 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 15:57:38.361907  3532 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 15:57:38.362507  3532 net.cpp:150] Setting up rpn_loss_bbox
I0419 15:57:38.362521  3532 net.cpp:157] Top shape: (1)
I0419 15:57:38.362524  3532 net.cpp:160]     with loss weight 1
I0419 15:57:38.362530  3532 net.cpp:165] Memory required for data: 273844644
I0419 15:57:38.362534  3532 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 15:57:38.362542  3532 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 15:57:38.362550  3532 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 15:57:38.362579  3532 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 15:57:38.362588  3532 net.cpp:157] Top shape: 1 9216 (9216)
I0419 15:57:38.362591  3532 net.cpp:165] Memory required for data: 273881508
I0419 15:57:38.362594  3532 layer_factory.hpp:77] Creating layer fc6
I0419 15:57:38.362602  3532 net.cpp:106] Creating Layer fc6
I0419 15:57:38.362608  3532 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 15:57:38.362613  3532 net.cpp:411] fc6 -> fc6
I0419 15:57:38.462098  3532 net.cpp:150] Setting up fc6
I0419 15:57:38.462141  3532 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:57:38.462146  3532 net.cpp:165] Memory required for data: 273897892
I0419 15:57:38.462162  3532 layer_factory.hpp:77] Creating layer relu6
I0419 15:57:38.462174  3532 net.cpp:106] Creating Layer relu6
I0419 15:57:38.462183  3532 net.cpp:454] relu6 <- fc6
I0419 15:57:38.462189  3532 net.cpp:397] relu6 -> fc6 (in-place)
I0419 15:57:38.462199  3532 net.cpp:150] Setting up relu6
I0419 15:57:38.462206  3532 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:57:38.462208  3532 net.cpp:165] Memory required for data: 273914276
I0419 15:57:38.462211  3532 layer_factory.hpp:77] Creating layer fc7
I0419 15:57:38.462218  3532 net.cpp:106] Creating Layer fc7
I0419 15:57:38.462226  3532 net.cpp:454] fc7 <- fc6
I0419 15:57:38.462234  3532 net.cpp:411] fc7 -> fc7
I0419 15:57:38.506628  3532 net.cpp:150] Setting up fc7
I0419 15:57:38.506666  3532 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:57:38.506670  3532 net.cpp:165] Memory required for data: 273930660
I0419 15:57:38.506681  3532 layer_factory.hpp:77] Creating layer silence_fc7
I0419 15:57:38.506700  3532 net.cpp:106] Creating Layer silence_fc7
I0419 15:57:38.506705  3532 net.cpp:454] silence_fc7 <- fc7
I0419 15:57:38.506712  3532 net.cpp:150] Setting up silence_fc7
I0419 15:57:38.506719  3532 net.cpp:165] Memory required for data: 273930660
I0419 15:57:38.506722  3532 net.cpp:228] silence_fc7 does not need backward computation.
I0419 15:57:38.506726  3532 net.cpp:228] fc7 does not need backward computation.
I0419 15:57:38.506728  3532 net.cpp:228] relu6 does not need backward computation.
I0419 15:57:38.506731  3532 net.cpp:228] fc6 does not need backward computation.
I0419 15:57:38.506736  3532 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 15:57:38.506739  3532 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 15:57:38.506743  3532 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 15:57:38.506749  3532 net.cpp:226] rpn-data needs backward computation.
I0419 15:57:38.506754  3532 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 15:57:38.506759  3532 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 15:57:38.506762  3532 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 15:57:38.506767  3532 net.cpp:226] rpn_cls_score needs backward computation.
I0419 15:57:38.506769  3532 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 15:57:38.506774  3532 net.cpp:226] rpn_relu1 needs backward computation.
I0419 15:57:38.506778  3532 net.cpp:226] rpn_conv1 needs backward computation.
I0419 15:57:38.506780  3532 net.cpp:226] relu5 needs backward computation.
I0419 15:57:38.506783  3532 net.cpp:226] conv5 needs backward computation.
I0419 15:57:38.506788  3532 net.cpp:226] relu4 needs backward computation.
I0419 15:57:38.506791  3532 net.cpp:226] conv4 needs backward computation.
I0419 15:57:38.506794  3532 net.cpp:226] relu3 needs backward computation.
I0419 15:57:38.506798  3532 net.cpp:226] conv3 needs backward computation.
I0419 15:57:38.506801  3532 net.cpp:226] pool2 needs backward computation.
I0419 15:57:38.506804  3532 net.cpp:226] norm2 needs backward computation.
I0419 15:57:38.506808  3532 net.cpp:226] relu2 needs backward computation.
I0419 15:57:38.506810  3532 net.cpp:226] conv2 needs backward computation.
I0419 15:57:38.506814  3532 net.cpp:226] pool1 needs backward computation.
I0419 15:57:38.506816  3532 net.cpp:226] norm1 needs backward computation.
I0419 15:57:38.506819  3532 net.cpp:226] relu1 needs backward computation.
I0419 15:57:38.506821  3532 net.cpp:226] conv1 needs backward computation.
I0419 15:57:38.506825  3532 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 15:57:38.506830  3532 net.cpp:228] input-data does not need backward computation.
I0419 15:57:38.506832  3532 net.cpp:270] This network produces output rpn_cls_loss
I0419 15:57:38.506836  3532 net.cpp:270] This network produces output rpn_loss_bbox
I0419 15:57:38.506866  3532 net.cpp:283] Network initialization done.
I0419 15:57:38.506979  3532 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 15:57:38.957412  3532 net.cpp:816] Ignoring source layer pool5_spm6
I0419 15:57:38.957444  3532 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 15:57:38.987854  3532 net.cpp:816] Ignoring source layer drop6
I0419 15:57:39.001453  3532 net.cpp:816] Ignoring source layer relu7
I0419 15:57:39.001477  3532 net.cpp:816] Ignoring source layer drop7
I0419 15:57:39.001480  3532 net.cpp:816] Ignoring source layer fc8
I0419 15:57:39.001482  3532 net.cpp:816] Ignoring source layer prob
Solving...
I0419 15:57:39.184439  3532 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 15:57:39.184489  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 15:57:39.184496  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 15:57:39.184509  3532 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 15:57:42.101493  3532 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 15:57:42.101541  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 15:57:42.101547  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 15:57:42.101553  3532 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 15:57:44.949698  3532 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 15:57:44.949745  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 15:57:44.949753  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 15:57:44.949759  3532 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 15:57:47.797586  3532 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 15:57:47.797638  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 15:57:47.797646  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 15:57:47.797652  3532 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 15:57:50.661226  3532 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 15:57:50.661276  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 15:57:50.661284  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 15:57:50.661290  3532 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 15:57:53.525120  3532 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 15:57:53.525169  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 15:57:53.525177  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 15:57:53.525182  3532 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 15:57:56.385246  3532 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 15:57:56.385298  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 15:57:56.385305  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 15:57:56.385311  3532 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 15:57:59.243042  3532 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 15:57:59.243090  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 15:57:59.243098  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 15:57:59.243104  3532 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 15:58:02.112031  3532 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 15:58:02.112081  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 15:58:02.112087  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 15:58:02.112094  3532 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 15:58:04.980024  3532 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 15:58:04.980074  3532 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 15:58:04.980085  3532 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 15:58:04.980094  3532 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:58:11.597561  3547 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 15:58:11.597698  3547 net.cpp:413] Input 0 -> data
I0419 15:58:11.612943  3547 net.cpp:413] Input 1 -> im_info
I0419 15:58:11.612993  3547 layer_factory.hpp:77] Creating layer conv1
I0419 15:58:11.613021  3547 net.cpp:106] Creating Layer conv1
I0419 15:58:11.613028  3547 net.cpp:454] conv1 <- data
I0419 15:58:11.613044  3547 net.cpp:411] conv1 -> conv1
I0419 15:58:11.613811  3547 net.cpp:150] Setting up conv1
I0419 15:58:11.613837  3547 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:58:11.613842  3547 net.cpp:165] Memory required for data: 4816896
I0419 15:58:11.613862  3547 layer_factory.hpp:77] Creating layer relu1
I0419 15:58:11.613878  3547 net.cpp:106] Creating Layer relu1
I0419 15:58:11.613883  3547 net.cpp:454] relu1 <- conv1
I0419 15:58:11.613890  3547 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:58:11.613903  3547 net.cpp:150] Setting up relu1
I0419 15:58:11.613911  3547 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:58:11.613915  3547 net.cpp:165] Memory required for data: 9633792
I0419 15:58:11.613920  3547 layer_factory.hpp:77] Creating layer norm1
I0419 15:58:11.613930  3547 net.cpp:106] Creating Layer norm1
I0419 15:58:11.613935  3547 net.cpp:454] norm1 <- conv1
I0419 15:58:11.613943  3547 net.cpp:411] norm1 -> norm1
I0419 15:58:11.614059  3547 net.cpp:150] Setting up norm1
I0419 15:58:11.614076  3547 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 15:58:11.614081  3547 net.cpp:165] Memory required for data: 14450688
I0419 15:58:11.614085  3547 layer_factory.hpp:77] Creating layer pool1
I0419 15:58:11.614094  3547 net.cpp:106] Creating Layer pool1
I0419 15:58:11.614099  3547 net.cpp:454] pool1 <- norm1
I0419 15:58:11.614104  3547 net.cpp:411] pool1 -> pool1
I0419 15:58:11.614156  3547 net.cpp:150] Setting up pool1
I0419 15:58:11.614167  3547 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 15:58:11.614172  3547 net.cpp:165] Memory required for data: 15698304
I0419 15:58:11.614176  3547 layer_factory.hpp:77] Creating layer conv2
I0419 15:58:11.614189  3547 net.cpp:106] Creating Layer conv2
I0419 15:58:11.614197  3547 net.cpp:454] conv2 <- pool1
I0419 15:58:11.614205  3547 net.cpp:411] conv2 -> conv2
I0419 15:58:11.616397  3547 net.cpp:150] Setting up conv2
I0419 15:58:11.616417  3547 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:58:11.616422  3547 net.cpp:165] Memory required for data: 16559488
I0419 15:58:11.616435  3547 layer_factory.hpp:77] Creating layer relu2
I0419 15:58:11.616443  3547 net.cpp:106] Creating Layer relu2
I0419 15:58:11.616448  3547 net.cpp:454] relu2 <- conv2
I0419 15:58:11.616457  3547 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:58:11.616466  3547 net.cpp:150] Setting up relu2
I0419 15:58:11.616472  3547 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:58:11.616477  3547 net.cpp:165] Memory required for data: 17420672
I0419 15:58:11.616480  3547 layer_factory.hpp:77] Creating layer norm2
I0419 15:58:11.616487  3547 net.cpp:106] Creating Layer norm2
I0419 15:58:11.616495  3547 net.cpp:454] norm2 <- conv2
I0419 15:58:11.616505  3547 net.cpp:411] norm2 -> norm2
I0419 15:58:11.616598  3547 net.cpp:150] Setting up norm2
I0419 15:58:11.616612  3547 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 15:58:11.616616  3547 net.cpp:165] Memory required for data: 18281856
I0419 15:58:11.616621  3547 layer_factory.hpp:77] Creating layer pool2
I0419 15:58:11.616628  3547 net.cpp:106] Creating Layer pool2
I0419 15:58:11.616633  3547 net.cpp:454] pool2 <- norm2
I0419 15:58:11.616644  3547 net.cpp:411] pool2 -> pool2
I0419 15:58:11.616686  3547 net.cpp:150] Setting up pool2
I0419 15:58:11.616698  3547 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:58:11.616703  3547 net.cpp:165] Memory required for data: 18512256
I0419 15:58:11.616706  3547 layer_factory.hpp:77] Creating layer conv3
I0419 15:58:11.616720  3547 net.cpp:106] Creating Layer conv3
I0419 15:58:11.616726  3547 net.cpp:454] conv3 <- pool2
I0419 15:58:11.616734  3547 net.cpp:411] conv3 -> conv3
I0419 15:58:11.619060  3547 net.cpp:150] Setting up conv3
I0419 15:58:11.619078  3547 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:58:11.619083  3547 net.cpp:165] Memory required for data: 18857856
I0419 15:58:11.619096  3547 layer_factory.hpp:77] Creating layer relu3
I0419 15:58:11.619104  3547 net.cpp:106] Creating Layer relu3
I0419 15:58:11.619109  3547 net.cpp:454] relu3 <- conv3
I0419 15:58:11.619117  3547 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:58:11.619132  3547 net.cpp:150] Setting up relu3
I0419 15:58:11.619138  3547 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:58:11.619143  3547 net.cpp:165] Memory required for data: 19203456
I0419 15:58:11.619146  3547 layer_factory.hpp:77] Creating layer conv4
I0419 15:58:11.619159  3547 net.cpp:106] Creating Layer conv4
I0419 15:58:11.619165  3547 net.cpp:454] conv4 <- conv3
I0419 15:58:11.619175  3547 net.cpp:411] conv4 -> conv4
I0419 15:58:11.622486  3547 net.cpp:150] Setting up conv4
I0419 15:58:11.622505  3547 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:58:11.622510  3547 net.cpp:165] Memory required for data: 19549056
I0419 15:58:11.622519  3547 layer_factory.hpp:77] Creating layer relu4
I0419 15:58:11.622529  3547 net.cpp:106] Creating Layer relu4
I0419 15:58:11.622532  3547 net.cpp:454] relu4 <- conv4
I0419 15:58:11.622542  3547 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:58:11.622550  3547 net.cpp:150] Setting up relu4
I0419 15:58:11.622558  3547 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 15:58:11.622562  3547 net.cpp:165] Memory required for data: 19894656
I0419 15:58:11.622575  3547 layer_factory.hpp:77] Creating layer conv5
I0419 15:58:11.622584  3547 net.cpp:106] Creating Layer conv5
I0419 15:58:11.622588  3547 net.cpp:454] conv5 <- conv4
I0419 15:58:11.622598  3547 net.cpp:411] conv5 -> conv5
I0419 15:58:11.624891  3547 net.cpp:150] Setting up conv5
I0419 15:58:11.624910  3547 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:58:11.624914  3547 net.cpp:165] Memory required for data: 20125056
I0419 15:58:11.624930  3547 layer_factory.hpp:77] Creating layer relu5
I0419 15:58:11.624938  3547 net.cpp:106] Creating Layer relu5
I0419 15:58:11.624949  3547 net.cpp:454] relu5 <- conv5
I0419 15:58:11.624960  3547 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:58:11.624969  3547 net.cpp:150] Setting up relu5
I0419 15:58:11.624976  3547 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:58:11.624984  3547 net.cpp:165] Memory required for data: 20355456
I0419 15:58:11.624989  3547 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:58:11.624996  3547 net.cpp:106] Creating Layer rpn_conv1
I0419 15:58:11.625001  3547 net.cpp:454] rpn_conv1 <- conv5
I0419 15:58:11.625011  3547 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:58:11.626649  3547 net.cpp:150] Setting up rpn_conv1
I0419 15:58:11.626667  3547 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:58:11.626672  3547 net.cpp:165] Memory required for data: 20585856
I0419 15:58:11.626680  3547 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:58:11.626688  3547 net.cpp:106] Creating Layer rpn_relu1
I0419 15:58:11.626693  3547 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:58:11.626703  3547 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:58:11.626715  3547 net.cpp:150] Setting up rpn_relu1
I0419 15:58:11.626721  3547 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:58:11.626726  3547 net.cpp:165] Memory required for data: 20816256
I0419 15:58:11.626730  3547 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:58:11.626744  3547 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:58:11.626749  3547 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:58:11.626758  3547 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:58:11.626767  3547 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:58:11.626812  3547 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:58:11.626827  3547 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:58:11.626833  3547 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 15:58:11.626837  3547 net.cpp:165] Memory required for data: 21277056
I0419 15:58:11.626842  3547 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:58:11.626852  3547 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:58:11.626857  3547 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:58:11.626866  3547 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:58:11.627054  3547 net.cpp:150] Setting up rpn_cls_score
I0419 15:58:11.627068  3547 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 15:58:11.627071  3547 net.cpp:165] Memory required for data: 21293256
I0419 15:58:11.627080  3547 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:58:11.627089  3547 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:58:11.627095  3547 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:58:11.627106  3547 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:58:11.627305  3547 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:58:11.627317  3547 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 15:58:11.627321  3547 net.cpp:165] Memory required for data: 21325656
I0419 15:58:11.627331  3547 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 15:58:11.627339  3547 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 15:58:11.627343  3547 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 15:58:11.627353  3547 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 15:58:11.627393  3547 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 15:58:11.627406  3547 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 15:58:11.627410  3547 net.cpp:165] Memory required for data: 21341856
I0419 15:58:11.627414  3547 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 15:58:11.627423  3547 net.cpp:106] Creating Layer rpn_cls_prob
I0419 15:58:11.627427  3547 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 15:58:11.627434  3547 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 15:58:11.627493  3547 net.cpp:150] Setting up rpn_cls_prob
I0419 15:58:11.627506  3547 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 15:58:11.627509  3547 net.cpp:165] Memory required for data: 21358056
I0419 15:58:11.627514  3547 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 15:58:11.627522  3547 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 15:58:11.627527  3547 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 15:58:11.627537  3547 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 15:58:11.627570  3547 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 15:58:11.627583  3547 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 15:58:11.627586  3547 net.cpp:165] Memory required for data: 21374256
I0419 15:58:11.627591  3547 layer_factory.hpp:77] Creating layer proposal
I0419 15:58:11.629173  3547 net.cpp:106] Creating Layer proposal
I0419 15:58:11.629192  3547 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 15:58:11.629200  3547 net.cpp:454] proposal <- rpn_bbox_pred
I0419 15:58:11.629205  3547 net.cpp:454] proposal <- im_info
I0419 15:58:11.629215  3547 net.cpp:411] proposal -> rois
I0419 15:58:11.629226  3547 net.cpp:411] proposal -> scores
I0419 15:58:11.630555  3547 net.cpp:150] Setting up proposal
I0419 15:58:11.630578  3547 net.cpp:157] Top shape: 1 5 (5)
I0419 15:58:11.630585  3547 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 15:58:11.630589  3547 net.cpp:165] Memory required for data: 21374280
I0419 15:58:11.630595  3547 net.cpp:228] proposal does not need backward computation.
I0419 15:58:11.630601  3547 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 15:58:11.630606  3547 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 15:58:11.630611  3547 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 15:58:11.630615  3547 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 15:58:11.630620  3547 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 15:58:11.630628  3547 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 15:58:11.630633  3547 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 15:58:11.630637  3547 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 15:58:11.630641  3547 net.cpp:228] relu5 does not need backward computation.
I0419 15:58:11.630645  3547 net.cpp:228] conv5 does not need backward computation.
I0419 15:58:11.630650  3547 net.cpp:228] relu4 does not need backward computation.
I0419 15:58:11.630656  3547 net.cpp:228] conv4 does not need backward computation.
I0419 15:58:11.630661  3547 net.cpp:228] relu3 does not need backward computation.
I0419 15:58:11.630664  3547 net.cpp:228] conv3 does not need backward computation.
I0419 15:58:11.630669  3547 net.cpp:228] pool2 does not need backward computation.
I0419 15:58:11.630674  3547 net.cpp:228] norm2 does not need backward computation.
I0419 15:58:11.630678  3547 net.cpp:228] relu2 does not need backward computation.
I0419 15:58:11.630683  3547 net.cpp:228] conv2 does not need backward computation.
I0419 15:58:11.630689  3547 net.cpp:228] pool1 does not need backward computation.
I0419 15:58:11.630693  3547 net.cpp:228] norm1 does not need backward computation.
I0419 15:58:11.630698  3547 net.cpp:228] relu1 does not need backward computation.
I0419 15:58:11.630702  3547 net.cpp:228] conv1 does not need backward computation.
I0419 15:58:11.630707  3547 net.cpp:270] This network produces output rois
I0419 15:58:11.630712  3547 net.cpp:270] This network produces output scores
I0419 15:58:11.630741  3547 net.cpp:283] Network initialization done.
I0419 15:58:12.066561  3547 net.cpp:816] Ignoring source layer input-data
I0419 15:58:12.066601  3547 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 15:58:12.070122  3547 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 15:58:12.070152  3547 net.cpp:816] Ignoring source layer rpn-data
I0419 15:58:12.070155  3547 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 15:58:12.070159  3547 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 15:58:12.070163  3547 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 15:58:12.070168  3547 net.cpp:816] Ignoring source layer fc6
I0419 15:58:12.070171  3547 net.cpp:816] Ignoring source layer relu6
I0419 15:58:12.070175  3547 net.cpp:816] Ignoring source layer fc7
I0419 15:58:12.070178  3547 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.163s
im_proposals: 2/506 0.153s
im_proposals: 3/506 0.149s
im_proposals: 4/506 0.147s
im_proposals: 5/506 0.146s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.144s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.143s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.142s
im_proposals: 13/506 0.142s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.142s
im_proposals: 16/506 0.142s
im_proposals: 17/506 0.142s
im_proposals: 18/506 0.142s
im_proposals: 19/506 0.142s
im_proposals: 20/506 0.142s
im_proposals: 21/506 0.142s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.142s
im_proposals: 33/506 0.142s
im_proposals: 34/506 0.142s
im_proposals: 35/506 0.142s
im_proposals: 36/506 0.142s
im_proposals: 37/506 0.142s
im_proposals: 38/506 0.142s
im_proposals: 39/506 0.142s
im_proposals: 40/506 0.142s
im_proposals: 41/506 0.142s
im_proposals: 42/506 0.142s
im_proposals: 43/506 0.142s
im_proposals: 44/506 0.142s
im_proposals: 45/506 0.142s
im_proposals: 46/506 0.142s
im_proposals: 47/506 0.142s
im_proposals: 48/506 0.142s
im_proposals: 49/506 0.142s
im_proposals: 50/506 0.142s
im_proposals: 51/506 0.142s
im_proposals: 52/506 0.142s
im_proposals: 53/506 0.142s
im_proposals: 54/506 0.142s
im_proposals: 55/506 0.141s
im_proposals: 56/506 0.141s
im_proposals: 57/506 0.142s
im_proposals: 58/506 0.142s
im_proposals: 59/506 0.142s
im_proposals: 60/506 0.142s
im_proposals: 61/506 0.142s
im_proposals: 62/506 0.142s
im_proposals: 63/506 0.142s
im_proposals: 64/506 0.141s
im_proposals: 65/506 0.141s
im_proposals: 66/506 0.141s
im_proposals: 67/506 0.141s
im_proposals: 68/506 0.141s
im_proposals: 69/506 0.141s
im_proposals: 70/506 0.141s
im_proposals: 71/506 0.141s
im_proposals: 72/506 0.141s
im_proposals: 73/506 0.141s
im_proposals: 74/506 0.141s
im_proposals: 75/506 0.141s
im_proposals: 76/506 0.141s
im_proposals: 77/506 0.141s
im_proposals: 78/506 0.141s
im_proposals: 79/506 0.141s
im_proposals: 80/506 0.141s
im_proposals: 81/506 0.141s
im_proposals: 82/506 0.141s
im_proposals: 83/506 0.141s
im_proposals: 84/506 0.141s
im_proposals: 85/506 0.141s
im_proposals: 86/506 0.141s
im_proposals: 87/506 0.141s
im_proposals: 88/506 0.141s
im_proposals: 89/506 0.141s
im_proposals: 90/506 0.141s
im_proposals: 91/506 0.141s
im_proposals: 92/506 0.141s
im_proposals: 93/506 0.141s
im_proposals: 94/506 0.141s
im_proposals: 95/506 0.141s
im_proposals: 96/506 0.141s
im_proposals: 97/506 0.141s
im_proposals: 98/506 0.141s
im_proposals: 99/506 0.141s
im_proposals: 100/506 0.141s
im_proposals: 101/506 0.141s
im_proposals: 102/506 0.141s
im_proposals: 103/506 0.141s
im_proposals: 104/506 0.141s
im_proposals: 105/506 0.141s
im_proposals: 106/506 0.141s
im_proposals: 107/506 0.141s
im_proposals: 108/506 0.141s
im_proposals: 109/506 0.141s
im_proposals: 110/506 0.141s
im_proposals: 111/506 0.141s
im_proposals: 112/506 0.141s
im_proposals: 113/506 0.141s
im_proposals: 114/506 0.141s
im_proposals: 115/506 0.141s
im_proposals: 116/506 0.141s
im_proposals: 117/506 0.141s
im_proposals: 118/506 0.141s
im_proposals: 119/506 0.141s
im_proposals: 120/506 0.141s
im_proposals: 121/506 0.141s
im_proposals: 122/506 0.141s
im_proposals: 123/506 0.141s
im_proposals: 124/506 0.141s
im_proposals: 125/506 0.141s
im_proposals: 126/506 0.141s
im_proposals: 127/506 0.141s
im_proposals: 128/506 0.141s
im_proposals: 129/506 0.141s
im_proposals: 130/506 0.141s
im_proposals: 131/506 0.141s
im_proposals: 132/506 0.141s
im_proposals: 133/506 0.141s
im_proposals: 134/506 0.141s
im_proposals: 135/506 0.141s
im_proposals: 136/506 0.141s
im_proposals: 137/506 0.141s
im_proposals: 138/506 0.141s
im_proposals: 139/506 0.141s
im_proposals: 140/506 0.141s
im_proposals: 141/506 0.141s
im_proposals: 142/506 0.141s
im_proposals: 143/506 0.141s
im_proposals: 144/506 0.141s
im_proposals: 145/506 0.141s
im_proposals: 146/506 0.141s
im_proposals: 147/506 0.141s
im_proposals: 148/506 0.142s
im_proposals: 149/506 0.142s
im_proposals: 150/506 0.142s
im_proposals: 151/506 0.142s
im_proposals: 152/506 0.142s
im_proposals: 153/506 0.142s
im_proposals: 154/506 0.142s
im_proposals: 155/506 0.142s
im_proposals: 156/506 0.142s
im_proposals: 157/506 0.142s
im_proposals: 158/506 0.142s
im_proposals: 159/506 0.142s
im_proposals: 160/506 0.142s
im_proposals: 161/506 0.142s
im_proposals: 162/506 0.142s
im_proposals: 163/506 0.142s
im_proposals: 164/506 0.142s
im_proposals: 165/506 0.142s
im_proposals: 166/506 0.142s
im_proposals: 167/506 0.142s
im_proposals: 168/506 0.142s
im_proposals: 169/506 0.142s
im_proposals: 170/506 0.142s
im_proposals: 171/506 0.142s
im_proposals: 172/506 0.142s
im_proposals: 173/506 0.142s
im_proposals: 174/506 0.142s
im_proposals: 175/506 0.142s
im_proposals: 176/506 0.142s
im_proposals: 177/506 0.142s
im_proposals: 178/506 0.142s
im_proposals: 179/506 0.142s
im_proposals: 180/506 0.142s
im_proposals: 181/506 0.142s
im_proposals: 182/506 0.142s
im_proposals: 183/506 0.142s
im_proposals: 184/506 0.142s
im_proposals: 185/506 0.142s
im_proposals: 186/506 0.142s
im_proposals: 187/506 0.142s
im_proposals: 188/506 0.142s
im_proposals: 189/506 0.142s
im_proposals: 190/506 0.142s
im_proposals: 191/506 0.142s
im_proposals: 192/506 0.142s
im_proposals: 193/506 0.142s
im_proposals: 194/506 0.142s
im_proposals: 195/506 0.142s
im_proposals: 196/506 0.142s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.141s
im_proposals: 455/506 0.141s
im_proposals: 456/506 0.141s
im_proposals: 457/506 0.141s
im_proposals: 458/506 0.141s
im_proposals: 459/506 0.141s
im_proposals: 460/506 0.141s
im_proposals: 461/506 0.141s
im_proposals: 462/506 0.141s
im_proposals: 463/506 0.141s
im_proposals: 464/506 0.141s
im_proposals: 465/506 0.141s
im_proposals: 466/506 0.141s
im_proposals: 467/506 0.141s
im_proposals: 468/506 0.141s
im_proposals: 469/506 0.141s
im_proposals: 470/506 0.141s
im_proposals: 471/506 0.141s
im_proposals: 472/506 0.141s
im_proposals: 473/506 0.141s
im_proposals: 474/506 0.141s
im_proposals: 475/506 0.141s
im_proposals: 476/506 0.141s
im_proposals: 477/506 0.141s
im_proposals: 478/506 0.141s
im_proposals: 479/506 0.141s
im_proposals: 480/506 0.141s
im_proposals: 481/506 0.141s
im_proposals: 482/506 0.141s
im_proposals: 483/506 0.141s
im_proposals: 484/506 0.141s
im_proposals: 485/506 0.141s
im_proposals: 486/506 0.141s
im_proposals: 487/506 0.141s
im_proposals: 488/506 0.141s
im_proposals: 489/506 0.141s
im_proposals: 490/506 0.141s
im_proposals: 491/506 0.141s
im_proposals: 492/506 0.141s
im_proposals: 493/506 0.141s
im_proposals: 494/506 0.141s
im_proposals: 495/506 0.141s
im_proposals: 496/506 0.141s
im_proposals: 497/506 0.141s
im_proposals: 498/506 0.141s
im_proposals: 499/506 0.141s
im_proposals: 500/506 0.141s
im_proposals: 501/506 0.141s
im_proposals: 502/506 0.141s
im_proposals: 503/506 0.141s
im_proposals: 504/506 0.141s
im_proposals: 505/506 0.141s
im_proposals: 506/506 0.141s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 15:59:48.096175  3559 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 15:59:48.096235  3559 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 15:59:48.097075  3559 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 15:59:48.097267  3559 layer_factory.hpp:77] Creating layer data
I0419 15:59:48.098019  3559 net.cpp:106] Creating Layer data
I0419 15:59:48.098042  3559 net.cpp:411] data -> data
I0419 15:59:48.098067  3559 net.cpp:411] data -> rois
I0419 15:59:48.098080  3559 net.cpp:411] data -> labels
I0419 15:59:48.098095  3559 net.cpp:411] data -> bbox_targets
I0419 15:59:48.098107  3559 net.cpp:411] data -> bbox_inside_weights
I0419 15:59:48.098116  3559 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 15:59:48.113740  3559 net.cpp:150] Setting up data
I0419 15:59:48.113768  3559 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 15:59:48.113776  3559 net.cpp:157] Top shape: 1 5 (5)
I0419 15:59:48.113786  3559 net.cpp:157] Top shape: 1 (1)
I0419 15:59:48.113792  3559 net.cpp:157] Top shape: 1 176 (176)
I0419 15:59:48.113803  3559 net.cpp:157] Top shape: 1 176 (176)
I0419 15:59:48.113808  3559 net.cpp:157] Top shape: 1 176 (176)
I0419 15:59:48.113812  3559 net.cpp:165] Memory required for data: 14402136
I0419 15:59:48.113822  3559 layer_factory.hpp:77] Creating layer conv1
I0419 15:59:48.113843  3559 net.cpp:106] Creating Layer conv1
I0419 15:59:48.113853  3559 net.cpp:454] conv1 <- data
I0419 15:59:48.113867  3559 net.cpp:411] conv1 -> conv1
I0419 15:59:48.115227  3559 net.cpp:150] Setting up conv1
I0419 15:59:48.115248  3559 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:59:48.115253  3559 net.cpp:165] Memory required for data: 129602136
I0419 15:59:48.115276  3559 layer_factory.hpp:77] Creating layer relu1
I0419 15:59:48.115294  3559 net.cpp:106] Creating Layer relu1
I0419 15:59:48.115303  3559 net.cpp:454] relu1 <- conv1
I0419 15:59:48.115314  3559 net.cpp:397] relu1 -> conv1 (in-place)
I0419 15:59:48.115327  3559 net.cpp:150] Setting up relu1
I0419 15:59:48.115334  3559 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:59:48.115340  3559 net.cpp:165] Memory required for data: 244802136
I0419 15:59:48.115345  3559 layer_factory.hpp:77] Creating layer norm1
I0419 15:59:48.115353  3559 net.cpp:106] Creating Layer norm1
I0419 15:59:48.115363  3559 net.cpp:454] norm1 <- conv1
I0419 15:59:48.115370  3559 net.cpp:411] norm1 -> norm1
I0419 15:59:48.115484  3559 net.cpp:150] Setting up norm1
I0419 15:59:48.115497  3559 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 15:59:48.115502  3559 net.cpp:165] Memory required for data: 360002136
I0419 15:59:48.115506  3559 layer_factory.hpp:77] Creating layer pool1
I0419 15:59:48.115517  3559 net.cpp:106] Creating Layer pool1
I0419 15:59:48.115525  3559 net.cpp:454] pool1 <- norm1
I0419 15:59:48.115531  3559 net.cpp:411] pool1 -> pool1
I0419 15:59:48.115578  3559 net.cpp:150] Setting up pool1
I0419 15:59:48.115591  3559 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 15:59:48.115595  3559 net.cpp:165] Memory required for data: 389110104
I0419 15:59:48.115599  3559 layer_factory.hpp:77] Creating layer conv2
I0419 15:59:48.115609  3559 net.cpp:106] Creating Layer conv2
I0419 15:59:48.115615  3559 net.cpp:454] conv2 <- pool1
I0419 15:59:48.115623  3559 net.cpp:411] conv2 -> conv2
I0419 15:59:48.117300  3559 net.cpp:150] Setting up conv2
I0419 15:59:48.117321  3559 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:59:48.117326  3559 net.cpp:165] Memory required for data: 408721752
I0419 15:59:48.117337  3559 layer_factory.hpp:77] Creating layer relu2
I0419 15:59:48.117350  3559 net.cpp:106] Creating Layer relu2
I0419 15:59:48.117358  3559 net.cpp:454] relu2 <- conv2
I0419 15:59:48.117365  3559 net.cpp:397] relu2 -> conv2 (in-place)
I0419 15:59:48.117375  3559 net.cpp:150] Setting up relu2
I0419 15:59:48.117383  3559 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:59:48.117388  3559 net.cpp:165] Memory required for data: 428333400
I0419 15:59:48.117391  3559 layer_factory.hpp:77] Creating layer norm2
I0419 15:59:48.117399  3559 net.cpp:106] Creating Layer norm2
I0419 15:59:48.117408  3559 net.cpp:454] norm2 <- conv2
I0419 15:59:48.117413  3559 net.cpp:411] norm2 -> norm2
I0419 15:59:48.117503  3559 net.cpp:150] Setting up norm2
I0419 15:59:48.117517  3559 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 15:59:48.117522  3559 net.cpp:165] Memory required for data: 447945048
I0419 15:59:48.117525  3559 layer_factory.hpp:77] Creating layer pool2
I0419 15:59:48.117534  3559 net.cpp:106] Creating Layer pool2
I0419 15:59:48.117539  3559 net.cpp:454] pool2 <- norm2
I0419 15:59:48.117548  3559 net.cpp:411] pool2 -> pool2
I0419 15:59:48.117588  3559 net.cpp:150] Setting up pool2
I0419 15:59:48.117602  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.117606  3559 net.cpp:165] Memory required for data: 453056856
I0419 15:59:48.117611  3559 layer_factory.hpp:77] Creating layer conv3
I0419 15:59:48.117624  3559 net.cpp:106] Creating Layer conv3
I0419 15:59:48.117633  3559 net.cpp:454] conv3 <- pool2
I0419 15:59:48.117641  3559 net.cpp:411] conv3 -> conv3
I0419 15:59:48.120928  3559 net.cpp:150] Setting up conv3
I0419 15:59:48.120947  3559 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:59:48.120951  3559 net.cpp:165] Memory required for data: 460724568
I0419 15:59:48.120965  3559 layer_factory.hpp:77] Creating layer relu3
I0419 15:59:48.120976  3559 net.cpp:106] Creating Layer relu3
I0419 15:59:48.120986  3559 net.cpp:454] relu3 <- conv3
I0419 15:59:48.120995  3559 net.cpp:397] relu3 -> conv3 (in-place)
I0419 15:59:48.121004  3559 net.cpp:150] Setting up relu3
I0419 15:59:48.121012  3559 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:59:48.121017  3559 net.cpp:165] Memory required for data: 468392280
I0419 15:59:48.121022  3559 layer_factory.hpp:77] Creating layer conv4
I0419 15:59:48.121033  3559 net.cpp:106] Creating Layer conv4
I0419 15:59:48.121038  3559 net.cpp:454] conv4 <- conv3
I0419 15:59:48.121045  3559 net.cpp:411] conv4 -> conv4
I0419 15:59:48.124394  3559 net.cpp:150] Setting up conv4
I0419 15:59:48.124413  3559 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:59:48.124418  3559 net.cpp:165] Memory required for data: 476059992
I0419 15:59:48.124428  3559 layer_factory.hpp:77] Creating layer relu4
I0419 15:59:48.124435  3559 net.cpp:106] Creating Layer relu4
I0419 15:59:48.124441  3559 net.cpp:454] relu4 <- conv4
I0419 15:59:48.124450  3559 net.cpp:397] relu4 -> conv4 (in-place)
I0419 15:59:48.124462  3559 net.cpp:150] Setting up relu4
I0419 15:59:48.124469  3559 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 15:59:48.124477  3559 net.cpp:165] Memory required for data: 483727704
I0419 15:59:48.124482  3559 layer_factory.hpp:77] Creating layer conv5
I0419 15:59:48.124495  3559 net.cpp:106] Creating Layer conv5
I0419 15:59:48.124501  3559 net.cpp:454] conv5 <- conv4
I0419 15:59:48.124511  3559 net.cpp:411] conv5 -> conv5
I0419 15:59:48.126806  3559 net.cpp:150] Setting up conv5
I0419 15:59:48.126823  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.126828  3559 net.cpp:165] Memory required for data: 488839512
I0419 15:59:48.126844  3559 layer_factory.hpp:77] Creating layer relu5
I0419 15:59:48.126853  3559 net.cpp:106] Creating Layer relu5
I0419 15:59:48.126863  3559 net.cpp:454] relu5 <- conv5
I0419 15:59:48.126874  3559 net.cpp:397] relu5 -> conv5 (in-place)
I0419 15:59:48.126884  3559 net.cpp:150] Setting up relu5
I0419 15:59:48.126893  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.126898  3559 net.cpp:165] Memory required for data: 493951320
I0419 15:59:48.126902  3559 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 15:59:48.126914  3559 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 15:59:48.126922  3559 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 15:59:48.126929  3559 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 15:59:48.126938  3559 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 15:59:48.126984  3559 net.cpp:150] Setting up conv5_relu5_0_split
I0419 15:59:48.126996  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.127003  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.127007  3559 net.cpp:165] Memory required for data: 504174936
I0419 15:59:48.127012  3559 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 15:59:48.127028  3559 net.cpp:106] Creating Layer roi_pool_conv5
I0419 15:59:48.127035  3559 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 15:59:48.127041  3559 net.cpp:454] roi_pool_conv5 <- rois
I0419 15:59:48.127048  3559 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 15:59:48.127068  3559 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 15:59:48.127128  3559 net.cpp:150] Setting up roi_pool_conv5
I0419 15:59:48.127140  3559 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 15:59:48.127146  3559 net.cpp:165] Memory required for data: 504211800
I0419 15:59:48.127149  3559 layer_factory.hpp:77] Creating layer fc6
I0419 15:59:48.127162  3559 net.cpp:106] Creating Layer fc6
I0419 15:59:48.127172  3559 net.cpp:454] fc6 <- roi_pool_conv5
I0419 15:59:48.127180  3559 net.cpp:411] fc6 -> fc6
I0419 15:59:48.226056  3559 net.cpp:150] Setting up fc6
I0419 15:59:48.226099  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.226104  3559 net.cpp:165] Memory required for data: 504228184
I0419 15:59:48.226117  3559 layer_factory.hpp:77] Creating layer relu6
I0419 15:59:48.226135  3559 net.cpp:106] Creating Layer relu6
I0419 15:59:48.226141  3559 net.cpp:454] relu6 <- fc6
I0419 15:59:48.226150  3559 net.cpp:397] relu6 -> fc6 (in-place)
I0419 15:59:48.226172  3559 net.cpp:150] Setting up relu6
I0419 15:59:48.226179  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.226186  3559 net.cpp:165] Memory required for data: 504244568
I0419 15:59:48.226191  3559 layer_factory.hpp:77] Creating layer drop6
I0419 15:59:48.226208  3559 net.cpp:106] Creating Layer drop6
I0419 15:59:48.226212  3559 net.cpp:454] drop6 <- fc6
I0419 15:59:48.226219  3559 net.cpp:397] drop6 -> fc6 (in-place)
I0419 15:59:48.226254  3559 net.cpp:150] Setting up drop6
I0419 15:59:48.226266  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.226271  3559 net.cpp:165] Memory required for data: 504260952
I0419 15:59:48.226276  3559 layer_factory.hpp:77] Creating layer fc7
I0419 15:59:48.226291  3559 net.cpp:106] Creating Layer fc7
I0419 15:59:48.226302  3559 net.cpp:454] fc7 <- fc6
I0419 15:59:48.226310  3559 net.cpp:411] fc7 -> fc7
I0419 15:59:48.270385  3559 net.cpp:150] Setting up fc7
I0419 15:59:48.270426  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.270431  3559 net.cpp:165] Memory required for data: 504277336
I0419 15:59:48.270444  3559 layer_factory.hpp:77] Creating layer relu7
I0419 15:59:48.270457  3559 net.cpp:106] Creating Layer relu7
I0419 15:59:48.270464  3559 net.cpp:454] relu7 <- fc7
I0419 15:59:48.270473  3559 net.cpp:397] relu7 -> fc7 (in-place)
I0419 15:59:48.270493  3559 net.cpp:150] Setting up relu7
I0419 15:59:48.270503  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.270509  3559 net.cpp:165] Memory required for data: 504293720
I0419 15:59:48.270512  3559 layer_factory.hpp:77] Creating layer drop7
I0419 15:59:48.270525  3559 net.cpp:106] Creating Layer drop7
I0419 15:59:48.270535  3559 net.cpp:454] drop7 <- fc7
I0419 15:59:48.270542  3559 net.cpp:397] drop7 -> fc7 (in-place)
I0419 15:59:48.270573  3559 net.cpp:150] Setting up drop7
I0419 15:59:48.270586  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.270589  3559 net.cpp:165] Memory required for data: 504310104
I0419 15:59:48.270594  3559 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 15:59:48.270602  3559 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 15:59:48.270606  3559 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 15:59:48.270614  3559 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 15:59:48.270627  3559 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 15:59:48.270669  3559 net.cpp:150] Setting up fc7_drop7_0_split
I0419 15:59:48.270680  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.270686  3559 net.cpp:157] Top shape: 1 4096 (4096)
I0419 15:59:48.270690  3559 net.cpp:165] Memory required for data: 504342872
I0419 15:59:48.270695  3559 layer_factory.hpp:77] Creating layer cls_score
I0419 15:59:48.270709  3559 net.cpp:106] Creating Layer cls_score
I0419 15:59:48.270720  3559 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 15:59:48.270730  3559 net.cpp:411] cls_score -> cls_score
I0419 15:59:48.276314  3559 net.cpp:150] Setting up cls_score
I0419 15:59:48.276332  3559 net.cpp:157] Top shape: 1 44 (44)
I0419 15:59:48.276337  3559 net.cpp:165] Memory required for data: 504343048
I0419 15:59:48.276347  3559 layer_factory.hpp:77] Creating layer bbox_pred
I0419 15:59:48.276362  3559 net.cpp:106] Creating Layer bbox_pred
I0419 15:59:48.276371  3559 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 15:59:48.276379  3559 net.cpp:411] bbox_pred -> bbox_pred
I0419 15:59:48.297005  3559 net.cpp:150] Setting up bbox_pred
I0419 15:59:48.297024  3559 net.cpp:157] Top shape: 1 176 (176)
I0419 15:59:48.297029  3559 net.cpp:165] Memory required for data: 504343752
I0419 15:59:48.297045  3559 layer_factory.hpp:77] Creating layer loss_cls
I0419 15:59:48.297065  3559 net.cpp:106] Creating Layer loss_cls
I0419 15:59:48.297075  3559 net.cpp:454] loss_cls <- cls_score
I0419 15:59:48.297083  3559 net.cpp:454] loss_cls <- labels
I0419 15:59:48.297091  3559 net.cpp:411] loss_cls -> cls_loss
I0419 15:59:48.297111  3559 layer_factory.hpp:77] Creating layer loss_cls
I0419 15:59:48.297207  3559 net.cpp:150] Setting up loss_cls
I0419 15:59:48.297220  3559 net.cpp:157] Top shape: (1)
I0419 15:59:48.297224  3559 net.cpp:160]     with loss weight 1
I0419 15:59:48.297242  3559 net.cpp:165] Memory required for data: 504343756
I0419 15:59:48.297247  3559 layer_factory.hpp:77] Creating layer loss_bbox
I0419 15:59:48.297262  3559 net.cpp:106] Creating Layer loss_bbox
I0419 15:59:48.297271  3559 net.cpp:454] loss_bbox <- bbox_pred
I0419 15:59:48.297276  3559 net.cpp:454] loss_bbox <- bbox_targets
I0419 15:59:48.297281  3559 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 15:59:48.297286  3559 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 15:59:48.297293  3559 net.cpp:411] loss_bbox -> bbox_loss
I0419 15:59:48.297370  3559 net.cpp:150] Setting up loss_bbox
I0419 15:59:48.297384  3559 net.cpp:157] Top shape: (1)
I0419 15:59:48.297389  3559 net.cpp:160]     with loss weight 1
I0419 15:59:48.297394  3559 net.cpp:165] Memory required for data: 504343760
I0419 15:59:48.297399  3559 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 15:59:48.297416  3559 net.cpp:106] Creating Layer rpn_conv1
I0419 15:59:48.297425  3559 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 15:59:48.297435  3559 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 15:59:48.314540  3559 net.cpp:150] Setting up rpn_conv1
I0419 15:59:48.314560  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.314565  3559 net.cpp:165] Memory required for data: 509455568
I0419 15:59:48.314574  3559 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 15:59:48.314584  3559 net.cpp:106] Creating Layer rpn_relu1
I0419 15:59:48.314589  3559 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 15:59:48.314599  3559 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 15:59:48.314610  3559 net.cpp:150] Setting up rpn_relu1
I0419 15:59:48.314617  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.314623  3559 net.cpp:165] Memory required for data: 514567376
I0419 15:59:48.314628  3559 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 15:59:48.314638  3559 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 15:59:48.314643  3559 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 15:59:48.314651  3559 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 15:59:48.314659  3559 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 15:59:48.314700  3559 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 15:59:48.314713  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.314719  3559 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 15:59:48.314723  3559 net.cpp:165] Memory required for data: 524790992
I0419 15:59:48.314728  3559 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 15:59:48.314743  3559 net.cpp:106] Creating Layer rpn_cls_score
I0419 15:59:48.314754  3559 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 15:59:48.314765  3559 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 15:59:48.315099  3559 net.cpp:150] Setting up rpn_cls_score
I0419 15:59:48.315114  3559 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 15:59:48.315117  3559 net.cpp:165] Memory required for data: 525150416
I0419 15:59:48.315126  3559 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 15:59:48.315146  3559 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 15:59:48.315155  3559 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 15:59:48.315167  3559 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 15:59:48.315621  3559 net.cpp:150] Setting up rpn_bbox_pred
I0419 15:59:48.315635  3559 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 15:59:48.315640  3559 net.cpp:165] Memory required for data: 525869264
I0419 15:59:48.315649  3559 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 15:59:48.315662  3559 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 15:59:48.315672  3559 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 15:59:48.315680  3559 net.cpp:150] Setting up silence_rpn_cls_score
I0419 15:59:48.315686  3559 net.cpp:165] Memory required for data: 525869264
I0419 15:59:48.315691  3559 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 15:59:48.315697  3559 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 15:59:48.315702  3559 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 15:59:48.315707  3559 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 15:59:48.315711  3559 net.cpp:165] Memory required for data: 525869264
I0419 15:59:48.315716  3559 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 15:59:48.315721  3559 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 15:59:48.315726  3559 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 15:59:48.315729  3559 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 15:59:48.315735  3559 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 15:59:48.315740  3559 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 15:59:48.315744  3559 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 15:59:48.315750  3559 net.cpp:226] loss_bbox needs backward computation.
I0419 15:59:48.315757  3559 net.cpp:226] loss_cls needs backward computation.
I0419 15:59:48.315767  3559 net.cpp:226] bbox_pred needs backward computation.
I0419 15:59:48.315773  3559 net.cpp:226] cls_score needs backward computation.
I0419 15:59:48.315778  3559 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 15:59:48.315783  3559 net.cpp:226] drop7 needs backward computation.
I0419 15:59:48.315789  3559 net.cpp:226] relu7 needs backward computation.
I0419 15:59:48.315793  3559 net.cpp:226] fc7 needs backward computation.
I0419 15:59:48.315798  3559 net.cpp:226] drop6 needs backward computation.
I0419 15:59:48.315804  3559 net.cpp:226] relu6 needs backward computation.
I0419 15:59:48.315807  3559 net.cpp:226] fc6 needs backward computation.
I0419 15:59:48.315814  3559 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 15:59:48.315820  3559 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 15:59:48.315826  3559 net.cpp:226] relu5 needs backward computation.
I0419 15:59:48.315831  3559 net.cpp:226] conv5 needs backward computation.
I0419 15:59:48.315836  3559 net.cpp:226] relu4 needs backward computation.
I0419 15:59:48.315841  3559 net.cpp:226] conv4 needs backward computation.
I0419 15:59:48.315846  3559 net.cpp:226] relu3 needs backward computation.
I0419 15:59:48.315850  3559 net.cpp:226] conv3 needs backward computation.
I0419 15:59:48.315855  3559 net.cpp:226] pool2 needs backward computation.
I0419 15:59:48.315861  3559 net.cpp:226] norm2 needs backward computation.
I0419 15:59:48.315866  3559 net.cpp:226] relu2 needs backward computation.
I0419 15:59:48.315871  3559 net.cpp:226] conv2 needs backward computation.
I0419 15:59:48.315876  3559 net.cpp:226] pool1 needs backward computation.
I0419 15:59:48.315881  3559 net.cpp:226] norm1 needs backward computation.
I0419 15:59:48.315886  3559 net.cpp:226] relu1 needs backward computation.
I0419 15:59:48.315892  3559 net.cpp:226] conv1 needs backward computation.
I0419 15:59:48.315899  3559 net.cpp:228] data does not need backward computation.
I0419 15:59:48.315906  3559 net.cpp:270] This network produces output bbox_loss
I0419 15:59:48.315909  3559 net.cpp:270] This network produces output cls_loss
I0419 15:59:48.315943  3559 net.cpp:283] Network initialization done.
I0419 15:59:48.316095  3559 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 15:59:48.766044  3559 net.cpp:816] Ignoring source layer pool5_spm6
I0419 15:59:48.766077  3559 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 15:59:48.810251  3559 net.cpp:816] Ignoring source layer fc8
I0419 15:59:48.810284  3559 net.cpp:816] Ignoring source layer prob
Solving...
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "./tools/train_faster_rcnn_alt_opt.py", line 196, in train_fast_rcnn
    max_iters=max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 161, in train_net
    model_paths = sw.train_model(max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 102, in train_model
    self.solver.step(1)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 144, in forward
    blobs = self._get_next_minibatch()
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 63, in _get_next_minibatch
    return get_minibatch(minibatch_db, self._num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 55, in get_minibatch
    num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 120, in _sample_rois
    labels[fg_rois_per_this_image:] = 0
TypeError: slice indices must be integers or None or have an __index__ method
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=
+ NET=
+ NET_lc=
+ DATASET=
+ array=($@)
+ len=0
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ echo 'No dataset given'
No dataset given
+ exit
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-02-30
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-02-30
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-02-30
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-02-30
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:02:34.047127  3595 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:02:34.047183  3595 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 16:02:34.047924  3595 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:02:34.048080  3595 layer_factory.hpp:77] Creating layer input-data
I0419 16:02:34.050185  3595 net.cpp:106] Creating Layer input-data
I0419 16:02:34.050209  3595 net.cpp:411] input-data -> data
I0419 16:02:34.050226  3595 net.cpp:411] input-data -> im_info
I0419 16:02:34.050237  3595 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:02:34.066011  3595 net.cpp:150] Setting up input-data
I0419 16:02:34.066033  3595 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:02:34.066041  3595 net.cpp:157] Top shape: 1 3 (3)
I0419 16:02:34.066045  3595 net.cpp:157] Top shape: 1 4 (4)
I0419 16:02:34.066047  3595 net.cpp:165] Memory required for data: 7200028
I0419 16:02:34.066056  3595 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:02:34.066066  3595 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:02:34.066072  3595 net.cpp:454] data_input-data_0_split <- data
I0419 16:02:34.066082  3595 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:02:34.066094  3595 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:02:34.066129  3595 net.cpp:150] Setting up data_input-data_0_split
I0419 16:02:34.066138  3595 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:02:34.066143  3595 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:02:34.066148  3595 net.cpp:165] Memory required for data: 21600028
I0419 16:02:34.066150  3595 layer_factory.hpp:77] Creating layer conv1
I0419 16:02:34.066165  3595 net.cpp:106] Creating Layer conv1
I0419 16:02:34.066172  3595 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:02:34.066177  3595 net.cpp:411] conv1 -> conv1
I0419 16:02:34.067529  3595 net.cpp:150] Setting up conv1
I0419 16:02:34.067548  3595 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:02:34.067550  3595 net.cpp:165] Memory required for data: 79200028
I0419 16:02:34.067564  3595 layer_factory.hpp:77] Creating layer relu1
I0419 16:02:34.067579  3595 net.cpp:106] Creating Layer relu1
I0419 16:02:34.067587  3595 net.cpp:454] relu1 <- conv1
I0419 16:02:34.067592  3595 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:02:34.067602  3595 net.cpp:150] Setting up relu1
I0419 16:02:34.067610  3595 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:02:34.067613  3595 net.cpp:165] Memory required for data: 136800028
I0419 16:02:34.067615  3595 layer_factory.hpp:77] Creating layer norm1
I0419 16:02:34.067623  3595 net.cpp:106] Creating Layer norm1
I0419 16:02:34.067629  3595 net.cpp:454] norm1 <- conv1
I0419 16:02:34.067634  3595 net.cpp:411] norm1 -> norm1
I0419 16:02:34.067734  3595 net.cpp:150] Setting up norm1
I0419 16:02:34.067744  3595 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:02:34.067746  3595 net.cpp:165] Memory required for data: 194400028
I0419 16:02:34.067749  3595 layer_factory.hpp:77] Creating layer pool1
I0419 16:02:34.067754  3595 net.cpp:106] Creating Layer pool1
I0419 16:02:34.067761  3595 net.cpp:454] pool1 <- norm1
I0419 16:02:34.067767  3595 net.cpp:411] pool1 -> pool1
I0419 16:02:34.067798  3595 net.cpp:150] Setting up pool1
I0419 16:02:34.067809  3595 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:02:34.067812  3595 net.cpp:165] Memory required for data: 208954012
I0419 16:02:34.067816  3595 layer_factory.hpp:77] Creating layer conv2
I0419 16:02:34.067821  3595 net.cpp:106] Creating Layer conv2
I0419 16:02:34.067828  3595 net.cpp:454] conv2 <- pool1
I0419 16:02:34.067837  3595 net.cpp:411] conv2 -> conv2
I0419 16:02:34.069517  3595 net.cpp:150] Setting up conv2
I0419 16:02:34.069535  3595 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:02:34.069537  3595 net.cpp:165] Memory required for data: 218759836
I0419 16:02:34.069548  3595 layer_factory.hpp:77] Creating layer relu2
I0419 16:02:34.069558  3595 net.cpp:106] Creating Layer relu2
I0419 16:02:34.069561  3595 net.cpp:454] relu2 <- conv2
I0419 16:02:34.069571  3595 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:02:34.069577  3595 net.cpp:150] Setting up relu2
I0419 16:02:34.069582  3595 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:02:34.069586  3595 net.cpp:165] Memory required for data: 228565660
I0419 16:02:34.069587  3595 layer_factory.hpp:77] Creating layer norm2
I0419 16:02:34.069592  3595 net.cpp:106] Creating Layer norm2
I0419 16:02:34.069599  3595 net.cpp:454] norm2 <- conv2
I0419 16:02:34.069603  3595 net.cpp:411] norm2 -> norm2
I0419 16:02:34.069681  3595 net.cpp:150] Setting up norm2
I0419 16:02:34.069691  3595 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:02:34.069694  3595 net.cpp:165] Memory required for data: 238371484
I0419 16:02:34.069696  3595 layer_factory.hpp:77] Creating layer pool2
I0419 16:02:34.069703  3595 net.cpp:106] Creating Layer pool2
I0419 16:02:34.069710  3595 net.cpp:454] pool2 <- norm2
I0419 16:02:34.069713  3595 net.cpp:411] pool2 -> pool2
I0419 16:02:34.069741  3595 net.cpp:150] Setting up pool2
I0419 16:02:34.069749  3595 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:02:34.069752  3595 net.cpp:165] Memory required for data: 240927388
I0419 16:02:34.069754  3595 layer_factory.hpp:77] Creating layer conv3
I0419 16:02:34.069761  3595 net.cpp:106] Creating Layer conv3
I0419 16:02:34.069763  3595 net.cpp:454] conv3 <- pool2
I0419 16:02:34.069769  3595 net.cpp:411] conv3 -> conv3
I0419 16:02:34.073065  3595 net.cpp:150] Setting up conv3
I0419 16:02:34.073083  3595 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:02:34.073086  3595 net.cpp:165] Memory required for data: 244761244
I0419 16:02:34.073094  3595 layer_factory.hpp:77] Creating layer relu3
I0419 16:02:34.073104  3595 net.cpp:106] Creating Layer relu3
I0419 16:02:34.073107  3595 net.cpp:454] relu3 <- conv3
I0419 16:02:34.073114  3595 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:02:34.073120  3595 net.cpp:150] Setting up relu3
I0419 16:02:34.073127  3595 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:02:34.073130  3595 net.cpp:165] Memory required for data: 248595100
I0419 16:02:34.073132  3595 layer_factory.hpp:77] Creating layer conv4
I0419 16:02:34.073140  3595 net.cpp:106] Creating Layer conv4
I0419 16:02:34.073148  3595 net.cpp:454] conv4 <- conv3
I0419 16:02:34.073153  3595 net.cpp:411] conv4 -> conv4
I0419 16:02:34.076481  3595 net.cpp:150] Setting up conv4
I0419 16:02:34.076500  3595 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:02:34.076503  3595 net.cpp:165] Memory required for data: 252428956
I0419 16:02:34.076509  3595 layer_factory.hpp:77] Creating layer relu4
I0419 16:02:34.076520  3595 net.cpp:106] Creating Layer relu4
I0419 16:02:34.076524  3595 net.cpp:454] relu4 <- conv4
I0419 16:02:34.076531  3595 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:02:34.076537  3595 net.cpp:150] Setting up relu4
I0419 16:02:34.076540  3595 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:02:34.076545  3595 net.cpp:165] Memory required for data: 256262812
I0419 16:02:34.076547  3595 layer_factory.hpp:77] Creating layer conv5
I0419 16:02:34.076555  3595 net.cpp:106] Creating Layer conv5
I0419 16:02:34.076562  3595 net.cpp:454] conv5 <- conv4
I0419 16:02:34.076568  3595 net.cpp:411] conv5 -> conv5
I0419 16:02:34.078873  3595 net.cpp:150] Setting up conv5
I0419 16:02:34.078891  3595 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:02:34.078893  3595 net.cpp:165] Memory required for data: 258818716
I0419 16:02:34.078903  3595 layer_factory.hpp:77] Creating layer relu5
I0419 16:02:34.078913  3595 net.cpp:106] Creating Layer relu5
I0419 16:02:34.078917  3595 net.cpp:454] relu5 <- conv5
I0419 16:02:34.078924  3595 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:02:34.078929  3595 net.cpp:150] Setting up relu5
I0419 16:02:34.078938  3595 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:02:34.078940  3595 net.cpp:165] Memory required for data: 261374620
I0419 16:02:34.078943  3595 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:02:34.078955  3595 net.cpp:106] Creating Layer rpn_conv1
I0419 16:02:34.078963  3595 net.cpp:454] rpn_conv1 <- conv5
I0419 16:02:34.078969  3595 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:02:34.096004  3595 net.cpp:150] Setting up rpn_conv1
I0419 16:02:34.096019  3595 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:02:34.096022  3595 net.cpp:165] Memory required for data: 263930524
I0419 16:02:34.096029  3595 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:02:34.096040  3595 net.cpp:106] Creating Layer rpn_relu1
I0419 16:02:34.096043  3595 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:02:34.096051  3595 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:02:34.096057  3595 net.cpp:150] Setting up rpn_relu1
I0419 16:02:34.096065  3595 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:02:34.096068  3595 net.cpp:165] Memory required for data: 266486428
I0419 16:02:34.096071  3595 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:02:34.096076  3595 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:02:34.096079  3595 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:02:34.096084  3595 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:02:34.096091  3595 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:02:34.096127  3595 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:02:34.096137  3595 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:02:34.096140  3595 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:02:34.096143  3595 net.cpp:165] Memory required for data: 271598236
I0419 16:02:34.096148  3595 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:02:34.096158  3595 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:02:34.096165  3595 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:02:34.096171  3595 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:02:34.096483  3595 net.cpp:150] Setting up rpn_cls_score
I0419 16:02:34.096498  3595 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:02:34.096500  3595 net.cpp:165] Memory required for data: 271777948
I0419 16:02:34.096505  3595 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:02:34.096514  3595 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:02:34.096518  3595 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:02:34.096523  3595 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:02:34.096532  3595 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:02:34.096562  3595 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:02:34.096571  3595 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:02:34.096575  3595 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:02:34.096577  3595 net.cpp:165] Memory required for data: 272137372
I0419 16:02:34.096580  3595 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:02:34.096588  3595 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:02:34.096596  3595 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:02:34.096602  3595 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:02:34.097036  3595 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:02:34.097048  3595 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:02:34.097051  3595 net.cpp:165] Memory required for data: 272496796
I0419 16:02:34.097056  3595 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:02:34.097069  3595 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:02:34.097074  3595 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:02:34.097079  3595 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:02:34.097111  3595 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:02:34.097121  3595 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:02:34.097122  3595 net.cpp:165] Memory required for data: 272676508
I0419 16:02:34.097126  3595 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:02:34.097647  3595 net.cpp:106] Creating Layer rpn-data
I0419 16:02:34.097666  3595 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:02:34.097671  3595 net.cpp:454] rpn-data <- gt_boxes
I0419 16:02:34.097679  3595 net.cpp:454] rpn-data <- im_info
I0419 16:02:34.097683  3595 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:02:34.097688  3595 net.cpp:411] rpn-data -> rpn_labels
I0419 16:02:34.097699  3595 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:02:34.097705  3595 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:02:34.097714  3595 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:02:34.098969  3595 net.cpp:150] Setting up rpn-data
I0419 16:02:34.098990  3595 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:02:34.098994  3595 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:02:34.098999  3595 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:02:34.099004  3595 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:02:34.099005  3595 net.cpp:165] Memory required for data: 273844636
I0419 16:02:34.099010  3595 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:02:34.099021  3595 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:02:34.099030  3595 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:02:34.099035  3595 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:02:34.099040  3595 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:02:34.099051  3595 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:02:34.099164  3595 net.cpp:150] Setting up rpn_loss_cls
I0419 16:02:34.099175  3595 net.cpp:157] Top shape: (1)
I0419 16:02:34.099179  3595 net.cpp:160]     with loss weight 1
I0419 16:02:34.099195  3595 net.cpp:165] Memory required for data: 273844640
I0419 16:02:34.099198  3595 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:02:34.099205  3595 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:02:34.099213  3595 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:02:34.099217  3595 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:02:34.099220  3595 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:02:34.099225  3595 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:02:34.099232  3595 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:02:34.099804  3595 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:02:34.099814  3595 net.cpp:157] Top shape: (1)
I0419 16:02:34.099817  3595 net.cpp:160]     with loss weight 1
I0419 16:02:34.099823  3595 net.cpp:165] Memory required for data: 273844644
I0419 16:02:34.099827  3595 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:02:34.099838  3595 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:02:34.099846  3595 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:02:34.099874  3595 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:02:34.099884  3595 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:02:34.099886  3595 net.cpp:165] Memory required for data: 273881508
I0419 16:02:34.099889  3595 layer_factory.hpp:77] Creating layer fc6
I0419 16:02:34.099896  3595 net.cpp:106] Creating Layer fc6
I0419 16:02:34.099903  3595 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:02:34.099908  3595 net.cpp:411] fc6 -> fc6
I0419 16:02:34.199076  3595 net.cpp:150] Setting up fc6
I0419 16:02:34.199116  3595 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:02:34.199120  3595 net.cpp:165] Memory required for data: 273897892
I0419 16:02:34.199136  3595 layer_factory.hpp:77] Creating layer relu6
I0419 16:02:34.199147  3595 net.cpp:106] Creating Layer relu6
I0419 16:02:34.199157  3595 net.cpp:454] relu6 <- fc6
I0419 16:02:34.199163  3595 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:02:34.199174  3595 net.cpp:150] Setting up relu6
I0419 16:02:34.199182  3595 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:02:34.199185  3595 net.cpp:165] Memory required for data: 273914276
I0419 16:02:34.199188  3595 layer_factory.hpp:77] Creating layer fc7
I0419 16:02:34.199195  3595 net.cpp:106] Creating Layer fc7
I0419 16:02:34.199203  3595 net.cpp:454] fc7 <- fc6
I0419 16:02:34.199209  3595 net.cpp:411] fc7 -> fc7
I0419 16:02:34.243239  3595 net.cpp:150] Setting up fc7
I0419 16:02:34.243278  3595 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:02:34.243283  3595 net.cpp:165] Memory required for data: 273930660
I0419 16:02:34.243294  3595 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:02:34.243309  3595 net.cpp:106] Creating Layer silence_fc7
I0419 16:02:34.243319  3595 net.cpp:454] silence_fc7 <- fc7
I0419 16:02:34.243327  3595 net.cpp:150] Setting up silence_fc7
I0419 16:02:34.243333  3595 net.cpp:165] Memory required for data: 273930660
I0419 16:02:34.243336  3595 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:02:34.243340  3595 net.cpp:228] fc7 does not need backward computation.
I0419 16:02:34.243345  3595 net.cpp:228] relu6 does not need backward computation.
I0419 16:02:34.243348  3595 net.cpp:228] fc6 does not need backward computation.
I0419 16:02:34.243351  3595 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:02:34.243356  3595 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:02:34.243360  3595 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:02:34.243367  3595 net.cpp:226] rpn-data needs backward computation.
I0419 16:02:34.243372  3595 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:02:34.243376  3595 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:02:34.243378  3595 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:02:34.243381  3595 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:02:34.243386  3595 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:02:34.243391  3595 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:02:34.243393  3595 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:02:34.243399  3595 net.cpp:226] relu5 needs backward computation.
I0419 16:02:34.243402  3595 net.cpp:226] conv5 needs backward computation.
I0419 16:02:34.243407  3595 net.cpp:226] relu4 needs backward computation.
I0419 16:02:34.243409  3595 net.cpp:226] conv4 needs backward computation.
I0419 16:02:34.243414  3595 net.cpp:226] relu3 needs backward computation.
I0419 16:02:34.243417  3595 net.cpp:226] conv3 needs backward computation.
I0419 16:02:34.243422  3595 net.cpp:226] pool2 needs backward computation.
I0419 16:02:34.243425  3595 net.cpp:226] norm2 needs backward computation.
I0419 16:02:34.243429  3595 net.cpp:226] relu2 needs backward computation.
I0419 16:02:34.243432  3595 net.cpp:226] conv2 needs backward computation.
I0419 16:02:34.243435  3595 net.cpp:226] pool1 needs backward computation.
I0419 16:02:34.243439  3595 net.cpp:226] norm1 needs backward computation.
I0419 16:02:34.243443  3595 net.cpp:226] relu1 needs backward computation.
I0419 16:02:34.243445  3595 net.cpp:226] conv1 needs backward computation.
I0419 16:02:34.243449  3595 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:02:34.243453  3595 net.cpp:228] input-data does not need backward computation.
I0419 16:02:34.243460  3595 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:02:34.243464  3595 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:02:34.243491  3595 net.cpp:283] Network initialization done.
I0419 16:02:34.243599  3595 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:02:34.690501  3595 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:02:34.690528  3595 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:02:34.720799  3595 net.cpp:816] Ignoring source layer drop6
I0419 16:02:34.734280  3595 net.cpp:816] Ignoring source layer relu7
I0419 16:02:34.734303  3595 net.cpp:816] Ignoring source layer drop7
I0419 16:02:34.734307  3595 net.cpp:816] Ignoring source layer fc8
I0419 16:02:34.734309  3595 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:02:34.915895  3595 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 16:02:34.915938  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 16:02:34.915947  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 16:02:34.915964  3595 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:02:37.829258  3595 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 16:02:37.829300  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 16:02:37.829308  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 16:02:37.829313  3595 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:02:40.676282  3595 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 16:02:40.676322  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 16:02:40.676329  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 16:02:40.676334  3595 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:02:43.526381  3595 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 16:02:43.526422  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 16:02:43.526428  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 16:02:43.526434  3595 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:02:46.386739  3595 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 16:02:46.386780  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 16:02:46.386786  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 16:02:46.386791  3595 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:02:49.253304  3595 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 16:02:49.253347  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 16:02:49.253355  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 16:02:49.253360  3595 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:02:52.118238  3595 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 16:02:52.118280  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 16:02:52.118288  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 16:02:52.118293  3595 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:02:54.986629  3595 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 16:02:54.986670  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 16:02:54.986676  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 16:02:54.986681  3595 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:02:57.855046  3595 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 16:02:57.855094  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 16:02:57.855101  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 16:02:57.855108  3595 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:03:00.720439  3595 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 16:03:00.720481  3595 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 16:03:00.720489  3595 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 16:03:00.720494  3595 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.144s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:03:07.352607  3610 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:03:07.352746  3610 net.cpp:413] Input 0 -> data
I0419 16:03:07.367947  3610 net.cpp:413] Input 1 -> im_info
I0419 16:03:07.368008  3610 layer_factory.hpp:77] Creating layer conv1
I0419 16:03:07.368038  3610 net.cpp:106] Creating Layer conv1
I0419 16:03:07.368044  3610 net.cpp:454] conv1 <- data
I0419 16:03:07.368058  3610 net.cpp:411] conv1 -> conv1
I0419 16:03:07.368826  3610 net.cpp:150] Setting up conv1
I0419 16:03:07.368851  3610 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:03:07.368856  3610 net.cpp:165] Memory required for data: 4816896
I0419 16:03:07.368880  3610 layer_factory.hpp:77] Creating layer relu1
I0419 16:03:07.368896  3610 net.cpp:106] Creating Layer relu1
I0419 16:03:07.368904  3610 net.cpp:454] relu1 <- conv1
I0419 16:03:07.368912  3610 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:03:07.368924  3610 net.cpp:150] Setting up relu1
I0419 16:03:07.368937  3610 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:03:07.368942  3610 net.cpp:165] Memory required for data: 9633792
I0419 16:03:07.368947  3610 layer_factory.hpp:77] Creating layer norm1
I0419 16:03:07.368957  3610 net.cpp:106] Creating Layer norm1
I0419 16:03:07.368962  3610 net.cpp:454] norm1 <- conv1
I0419 16:03:07.368968  3610 net.cpp:411] norm1 -> norm1
I0419 16:03:07.369079  3610 net.cpp:150] Setting up norm1
I0419 16:03:07.369093  3610 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:03:07.369098  3610 net.cpp:165] Memory required for data: 14450688
I0419 16:03:07.369103  3610 layer_factory.hpp:77] Creating layer pool1
I0419 16:03:07.369113  3610 net.cpp:106] Creating Layer pool1
I0419 16:03:07.369119  3610 net.cpp:454] pool1 <- norm1
I0419 16:03:07.369128  3610 net.cpp:411] pool1 -> pool1
I0419 16:03:07.369173  3610 net.cpp:150] Setting up pool1
I0419 16:03:07.369184  3610 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:03:07.369189  3610 net.cpp:165] Memory required for data: 15698304
I0419 16:03:07.369194  3610 layer_factory.hpp:77] Creating layer conv2
I0419 16:03:07.369204  3610 net.cpp:106] Creating Layer conv2
I0419 16:03:07.369210  3610 net.cpp:454] conv2 <- pool1
I0419 16:03:07.369223  3610 net.cpp:411] conv2 -> conv2
I0419 16:03:07.371424  3610 net.cpp:150] Setting up conv2
I0419 16:03:07.371443  3610 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:03:07.371448  3610 net.cpp:165] Memory required for data: 16559488
I0419 16:03:07.371461  3610 layer_factory.hpp:77] Creating layer relu2
I0419 16:03:07.371470  3610 net.cpp:106] Creating Layer relu2
I0419 16:03:07.371476  3610 net.cpp:454] relu2 <- conv2
I0419 16:03:07.371490  3610 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:03:07.371500  3610 net.cpp:150] Setting up relu2
I0419 16:03:07.371507  3610 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:03:07.371512  3610 net.cpp:165] Memory required for data: 17420672
I0419 16:03:07.371516  3610 layer_factory.hpp:77] Creating layer norm2
I0419 16:03:07.371527  3610 net.cpp:106] Creating Layer norm2
I0419 16:03:07.371533  3610 net.cpp:454] norm2 <- conv2
I0419 16:03:07.371541  3610 net.cpp:411] norm2 -> norm2
I0419 16:03:07.371634  3610 net.cpp:150] Setting up norm2
I0419 16:03:07.371647  3610 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:03:07.371651  3610 net.cpp:165] Memory required for data: 18281856
I0419 16:03:07.371656  3610 layer_factory.hpp:77] Creating layer pool2
I0419 16:03:07.371666  3610 net.cpp:106] Creating Layer pool2
I0419 16:03:07.371671  3610 net.cpp:454] pool2 <- norm2
I0419 16:03:07.371677  3610 net.cpp:411] pool2 -> pool2
I0419 16:03:07.371721  3610 net.cpp:150] Setting up pool2
I0419 16:03:07.371732  3610 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:03:07.371737  3610 net.cpp:165] Memory required for data: 18512256
I0419 16:03:07.371740  3610 layer_factory.hpp:77] Creating layer conv3
I0419 16:03:07.371754  3610 net.cpp:106] Creating Layer conv3
I0419 16:03:07.371759  3610 net.cpp:454] conv3 <- pool2
I0419 16:03:07.371767  3610 net.cpp:411] conv3 -> conv3
I0419 16:03:07.374074  3610 net.cpp:150] Setting up conv3
I0419 16:03:07.374094  3610 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:03:07.374099  3610 net.cpp:165] Memory required for data: 18857856
I0419 16:03:07.374110  3610 layer_factory.hpp:77] Creating layer relu3
I0419 16:03:07.374122  3610 net.cpp:106] Creating Layer relu3
I0419 16:03:07.374128  3610 net.cpp:454] relu3 <- conv3
I0419 16:03:07.374136  3610 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:03:07.374145  3610 net.cpp:150] Setting up relu3
I0419 16:03:07.374153  3610 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:03:07.374157  3610 net.cpp:165] Memory required for data: 19203456
I0419 16:03:07.374161  3610 layer_factory.hpp:77] Creating layer conv4
I0419 16:03:07.374173  3610 net.cpp:106] Creating Layer conv4
I0419 16:03:07.374183  3610 net.cpp:454] conv4 <- conv3
I0419 16:03:07.374191  3610 net.cpp:411] conv4 -> conv4
I0419 16:03:07.377557  3610 net.cpp:150] Setting up conv4
I0419 16:03:07.377578  3610 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:03:07.377581  3610 net.cpp:165] Memory required for data: 19549056
I0419 16:03:07.377591  3610 layer_factory.hpp:77] Creating layer relu4
I0419 16:03:07.377602  3610 net.cpp:106] Creating Layer relu4
I0419 16:03:07.377607  3610 net.cpp:454] relu4 <- conv4
I0419 16:03:07.377614  3610 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:03:07.377624  3610 net.cpp:150] Setting up relu4
I0419 16:03:07.377632  3610 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:03:07.377636  3610 net.cpp:165] Memory required for data: 19894656
I0419 16:03:07.377641  3610 layer_factory.hpp:77] Creating layer conv5
I0419 16:03:07.377653  3610 net.cpp:106] Creating Layer conv5
I0419 16:03:07.377663  3610 net.cpp:454] conv5 <- conv4
I0419 16:03:07.377671  3610 net.cpp:411] conv5 -> conv5
I0419 16:03:07.379979  3610 net.cpp:150] Setting up conv5
I0419 16:03:07.379998  3610 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:03:07.380003  3610 net.cpp:165] Memory required for data: 20125056
I0419 16:03:07.380017  3610 layer_factory.hpp:77] Creating layer relu5
I0419 16:03:07.380028  3610 net.cpp:106] Creating Layer relu5
I0419 16:03:07.380039  3610 net.cpp:454] relu5 <- conv5
I0419 16:03:07.380046  3610 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:03:07.380055  3610 net.cpp:150] Setting up relu5
I0419 16:03:07.380065  3610 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:03:07.380069  3610 net.cpp:165] Memory required for data: 20355456
I0419 16:03:07.380074  3610 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:03:07.380087  3610 net.cpp:106] Creating Layer rpn_conv1
I0419 16:03:07.380094  3610 net.cpp:454] rpn_conv1 <- conv5
I0419 16:03:07.380100  3610 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:03:07.381721  3610 net.cpp:150] Setting up rpn_conv1
I0419 16:03:07.381741  3610 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:03:07.381745  3610 net.cpp:165] Memory required for data: 20585856
I0419 16:03:07.381754  3610 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:03:07.381762  3610 net.cpp:106] Creating Layer rpn_relu1
I0419 16:03:07.381767  3610 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:03:07.381774  3610 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:03:07.381788  3610 net.cpp:150] Setting up rpn_relu1
I0419 16:03:07.381794  3610 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:03:07.381803  3610 net.cpp:165] Memory required for data: 20816256
I0419 16:03:07.381808  3610 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:03:07.381824  3610 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:03:07.381832  3610 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:03:07.381839  3610 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:03:07.381847  3610 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:03:07.381893  3610 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:03:07.381906  3610 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:03:07.381912  3610 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:03:07.381916  3610 net.cpp:165] Memory required for data: 21277056
I0419 16:03:07.381922  3610 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:03:07.381933  3610 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:03:07.381943  3610 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:03:07.381952  3610 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:03:07.382141  3610 net.cpp:150] Setting up rpn_cls_score
I0419 16:03:07.382154  3610 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:03:07.382159  3610 net.cpp:165] Memory required for data: 21293256
I0419 16:03:07.382167  3610 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:03:07.382181  3610 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:03:07.382189  3610 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:03:07.382197  3610 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:03:07.382410  3610 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:03:07.382423  3610 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:03:07.382428  3610 net.cpp:165] Memory required for data: 21325656
I0419 16:03:07.382436  3610 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:03:07.382447  3610 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:03:07.382452  3610 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:03:07.382459  3610 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:03:07.382498  3610 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:03:07.382513  3610 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:03:07.382517  3610 net.cpp:165] Memory required for data: 21341856
I0419 16:03:07.382522  3610 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:03:07.382530  3610 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:03:07.382537  3610 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:03:07.382544  3610 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:03:07.382604  3610 net.cpp:150] Setting up rpn_cls_prob
I0419 16:03:07.382616  3610 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:03:07.382621  3610 net.cpp:165] Memory required for data: 21358056
I0419 16:03:07.382625  3610 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:03:07.382632  3610 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:03:07.382638  3610 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:03:07.382644  3610 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:03:07.382678  3610 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:03:07.382688  3610 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:03:07.382694  3610 net.cpp:165] Memory required for data: 21374256
I0419 16:03:07.382697  3610 layer_factory.hpp:77] Creating layer proposal
I0419 16:03:07.384265  3610 net.cpp:106] Creating Layer proposal
I0419 16:03:07.384286  3610 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:03:07.384295  3610 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:03:07.384301  3610 net.cpp:454] proposal <- im_info
I0419 16:03:07.384311  3610 net.cpp:411] proposal -> rois
I0419 16:03:07.384322  3610 net.cpp:411] proposal -> scores
I0419 16:03:07.385625  3610 net.cpp:150] Setting up proposal
I0419 16:03:07.385649  3610 net.cpp:157] Top shape: 1 5 (5)
I0419 16:03:07.385656  3610 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:03:07.385661  3610 net.cpp:165] Memory required for data: 21374280
I0419 16:03:07.385666  3610 net.cpp:228] proposal does not need backward computation.
I0419 16:03:07.385673  3610 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:03:07.385679  3610 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:03:07.385684  3610 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:03:07.385687  3610 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:03:07.385692  3610 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:03:07.385699  3610 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:03:07.385702  3610 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:03:07.385710  3610 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:03:07.385715  3610 net.cpp:228] relu5 does not need backward computation.
I0419 16:03:07.385720  3610 net.cpp:228] conv5 does not need backward computation.
I0419 16:03:07.385725  3610 net.cpp:228] relu4 does not need backward computation.
I0419 16:03:07.385730  3610 net.cpp:228] conv4 does not need backward computation.
I0419 16:03:07.385735  3610 net.cpp:228] relu3 does not need backward computation.
I0419 16:03:07.385740  3610 net.cpp:228] conv3 does not need backward computation.
I0419 16:03:07.385746  3610 net.cpp:228] pool2 does not need backward computation.
I0419 16:03:07.385751  3610 net.cpp:228] norm2 does not need backward computation.
I0419 16:03:07.385756  3610 net.cpp:228] relu2 does not need backward computation.
I0419 16:03:07.385761  3610 net.cpp:228] conv2 does not need backward computation.
I0419 16:03:07.385766  3610 net.cpp:228] pool1 does not need backward computation.
I0419 16:03:07.385771  3610 net.cpp:228] norm1 does not need backward computation.
I0419 16:03:07.385776  3610 net.cpp:228] relu1 does not need backward computation.
I0419 16:03:07.385779  3610 net.cpp:228] conv1 does not need backward computation.
I0419 16:03:07.385784  3610 net.cpp:270] This network produces output rois
I0419 16:03:07.385790  3610 net.cpp:270] This network produces output scores
I0419 16:03:07.385821  3610 net.cpp:283] Network initialization done.
I0419 16:03:07.819036  3610 net.cpp:816] Ignoring source layer input-data
I0419 16:03:07.819075  3610 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:03:07.822656  3610 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:03:07.822685  3610 net.cpp:816] Ignoring source layer rpn-data
I0419 16:03:07.822690  3610 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:03:07.822695  3610 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:03:07.822698  3610 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:03:07.822702  3610 net.cpp:816] Ignoring source layer fc6
I0419 16:03:07.822706  3610 net.cpp:816] Ignoring source layer relu6
I0419 16:03:07.822710  3610 net.cpp:816] Ignoring source layer fc7
I0419 16:03:07.822713  3610 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.172s
im_proposals: 2/506 0.161s
im_proposals: 3/506 0.155s
im_proposals: 4/506 0.152s
im_proposals: 5/506 0.150s
im_proposals: 6/506 0.149s
im_proposals: 7/506 0.149s
im_proposals: 8/506 0.148s
im_proposals: 9/506 0.147s
im_proposals: 10/506 0.147s
im_proposals: 11/506 0.146s
im_proposals: 12/506 0.146s
im_proposals: 13/506 0.145s
im_proposals: 14/506 0.145s
im_proposals: 15/506 0.145s
im_proposals: 16/506 0.145s
im_proposals: 17/506 0.145s
im_proposals: 18/506 0.145s
im_proposals: 19/506 0.145s
im_proposals: 20/506 0.144s
im_proposals: 21/506 0.144s
im_proposals: 22/506 0.144s
im_proposals: 23/506 0.144s
im_proposals: 24/506 0.144s
im_proposals: 25/506 0.144s
im_proposals: 26/506 0.144s
im_proposals: 27/506 0.144s
im_proposals: 28/506 0.144s
im_proposals: 29/506 0.144s
im_proposals: 30/506 0.144s
im_proposals: 31/506 0.144s
im_proposals: 32/506 0.144s
im_proposals: 33/506 0.144s
im_proposals: 34/506 0.144s
im_proposals: 35/506 0.144s
im_proposals: 36/506 0.144s
im_proposals: 37/506 0.144s
im_proposals: 38/506 0.144s
im_proposals: 39/506 0.144s
im_proposals: 40/506 0.144s
im_proposals: 41/506 0.143s
im_proposals: 42/506 0.143s
im_proposals: 43/506 0.143s
im_proposals: 44/506 0.143s
im_proposals: 45/506 0.143s
im_proposals: 46/506 0.143s
im_proposals: 47/506 0.143s
im_proposals: 48/506 0.143s
im_proposals: 49/506 0.143s
im_proposals: 50/506 0.143s
im_proposals: 51/506 0.143s
im_proposals: 52/506 0.143s
im_proposals: 53/506 0.143s
im_proposals: 54/506 0.143s
im_proposals: 55/506 0.143s
im_proposals: 56/506 0.143s
im_proposals: 57/506 0.143s
im_proposals: 58/506 0.143s
im_proposals: 59/506 0.143s
im_proposals: 60/506 0.143s
im_proposals: 61/506 0.143s
im_proposals: 62/506 0.143s
im_proposals: 63/506 0.143s
im_proposals: 64/506 0.143s
im_proposals: 65/506 0.143s
im_proposals: 66/506 0.143s
im_proposals: 67/506 0.143s
im_proposals: 68/506 0.143s
im_proposals: 69/506 0.142s
im_proposals: 70/506 0.143s
im_proposals: 71/506 0.142s
im_proposals: 72/506 0.142s
im_proposals: 73/506 0.142s
im_proposals: 74/506 0.142s
im_proposals: 75/506 0.142s
im_proposals: 76/506 0.142s
im_proposals: 77/506 0.142s
im_proposals: 78/506 0.142s
im_proposals: 79/506 0.142s
im_proposals: 80/506 0.142s
im_proposals: 81/506 0.142s
im_proposals: 82/506 0.142s
im_proposals: 83/506 0.142s
im_proposals: 84/506 0.142s
im_proposals: 85/506 0.142s
im_proposals: 86/506 0.142s
im_proposals: 87/506 0.142s
im_proposals: 88/506 0.142s
im_proposals: 89/506 0.142s
im_proposals: 90/506 0.142s
im_proposals: 91/506 0.142s
im_proposals: 92/506 0.142s
im_proposals: 93/506 0.142s
im_proposals: 94/506 0.142s
im_proposals: 95/506 0.142s
im_proposals: 96/506 0.142s
im_proposals: 97/506 0.142s
im_proposals: 98/506 0.142s
im_proposals: 99/506 0.142s
im_proposals: 100/506 0.142s
im_proposals: 101/506 0.142s
im_proposals: 102/506 0.142s
im_proposals: 103/506 0.142s
im_proposals: 104/506 0.142s
im_proposals: 105/506 0.142s
im_proposals: 106/506 0.142s
im_proposals: 107/506 0.142s
im_proposals: 108/506 0.142s
im_proposals: 109/506 0.142s
im_proposals: 110/506 0.142s
im_proposals: 111/506 0.142s
im_proposals: 112/506 0.142s
im_proposals: 113/506 0.142s
im_proposals: 114/506 0.142s
im_proposals: 115/506 0.142s
im_proposals: 116/506 0.142s
im_proposals: 117/506 0.142s
im_proposals: 118/506 0.142s
im_proposals: 119/506 0.142s
im_proposals: 120/506 0.142s
im_proposals: 121/506 0.142s
im_proposals: 122/506 0.142s
im_proposals: 123/506 0.142s
im_proposals: 124/506 0.142s
im_proposals: 125/506 0.142s
im_proposals: 126/506 0.142s
im_proposals: 127/506 0.142s
im_proposals: 128/506 0.142s
im_proposals: 129/506 0.142s
im_proposals: 130/506 0.142s
im_proposals: 131/506 0.142s
im_proposals: 132/506 0.142s
im_proposals: 133/506 0.142s
im_proposals: 134/506 0.142s
im_proposals: 135/506 0.142s
im_proposals: 136/506 0.142s
im_proposals: 137/506 0.142s
im_proposals: 138/506 0.142s
im_proposals: 139/506 0.142s
im_proposals: 140/506 0.142s
im_proposals: 141/506 0.142s
im_proposals: 142/506 0.142s
im_proposals: 143/506 0.142s
im_proposals: 144/506 0.142s
im_proposals: 145/506 0.142s
im_proposals: 146/506 0.142s
im_proposals: 147/506 0.142s
im_proposals: 148/506 0.142s
im_proposals: 149/506 0.142s
im_proposals: 150/506 0.142s
im_proposals: 151/506 0.142s
im_proposals: 152/506 0.142s
im_proposals: 153/506 0.142s
im_proposals: 154/506 0.142s
im_proposals: 155/506 0.142s
im_proposals: 156/506 0.142s
im_proposals: 157/506 0.142s
im_proposals: 158/506 0.142s
im_proposals: 159/506 0.142s
im_proposals: 160/506 0.142s
im_proposals: 161/506 0.142s
im_proposals: 162/506 0.142s
im_proposals: 163/506 0.142s
im_proposals: 164/506 0.142s
im_proposals: 165/506 0.142s
im_proposals: 166/506 0.142s
im_proposals: 167/506 0.142s
im_proposals: 168/506 0.142s
im_proposals: 169/506 0.142s
im_proposals: 170/506 0.142s
im_proposals: 171/506 0.142s
im_proposals: 172/506 0.142s
im_proposals: 173/506 0.142s
im_proposals: 174/506 0.142s
im_proposals: 175/506 0.142s
im_proposals: 176/506 0.142s
im_proposals: 177/506 0.142s
im_proposals: 178/506 0.142s
im_proposals: 179/506 0.142s
im_proposals: 180/506 0.142s
im_proposals: 181/506 0.142s
im_proposals: 182/506 0.142s
im_proposals: 183/506 0.142s
im_proposals: 184/506 0.142s
im_proposals: 185/506 0.142s
im_proposals: 186/506 0.142s
im_proposals: 187/506 0.142s
im_proposals: 188/506 0.142s
im_proposals: 189/506 0.142s
im_proposals: 190/506 0.142s
im_proposals: 191/506 0.142s
im_proposals: 192/506 0.142s
im_proposals: 193/506 0.142s
im_proposals: 194/506 0.142s
im_proposals: 195/506 0.142s
im_proposals: 196/506 0.142s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.141s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.141s
im_proposals: 423/506 0.141s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.141s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.141s
im_proposals: 438/506 0.141s
im_proposals: 439/506 0.141s
im_proposals: 440/506 0.141s
im_proposals: 441/506 0.141s
im_proposals: 442/506 0.141s
im_proposals: 443/506 0.141s
im_proposals: 444/506 0.141s
im_proposals: 445/506 0.141s
im_proposals: 446/506 0.141s
im_proposals: 447/506 0.141s
im_proposals: 448/506 0.141s
im_proposals: 449/506 0.141s
im_proposals: 450/506 0.141s
im_proposals: 451/506 0.141s
im_proposals: 452/506 0.141s
im_proposals: 453/506 0.141s
im_proposals: 454/506 0.141s
im_proposals: 455/506 0.141s
im_proposals: 456/506 0.141s
im_proposals: 457/506 0.141s
im_proposals: 458/506 0.141s
im_proposals: 459/506 0.141s
im_proposals: 460/506 0.141s
im_proposals: 461/506 0.141s
im_proposals: 462/506 0.141s
im_proposals: 463/506 0.141s
im_proposals: 464/506 0.141s
im_proposals: 465/506 0.141s
im_proposals: 466/506 0.141s
im_proposals: 467/506 0.141s
im_proposals: 468/506 0.141s
im_proposals: 469/506 0.141s
im_proposals: 470/506 0.141s
im_proposals: 471/506 0.141s
im_proposals: 472/506 0.141s
im_proposals: 473/506 0.141s
im_proposals: 474/506 0.141s
im_proposals: 475/506 0.141s
im_proposals: 476/506 0.141s
im_proposals: 477/506 0.141s
im_proposals: 478/506 0.141s
im_proposals: 479/506 0.141s
im_proposals: 480/506 0.141s
im_proposals: 481/506 0.141s
im_proposals: 482/506 0.141s
im_proposals: 483/506 0.141s
im_proposals: 484/506 0.141s
im_proposals: 485/506 0.141s
im_proposals: 486/506 0.141s
im_proposals: 487/506 0.141s
im_proposals: 488/506 0.141s
im_proposals: 489/506 0.141s
im_proposals: 490/506 0.141s
im_proposals: 491/506 0.141s
im_proposals: 492/506 0.141s
im_proposals: 493/506 0.141s
im_proposals: 494/506 0.141s
im_proposals: 495/506 0.141s
im_proposals: 496/506 0.141s
im_proposals: 497/506 0.141s
im_proposals: 498/506 0.141s
im_proposals: 499/506 0.141s
im_proposals: 500/506 0.141s
im_proposals: 501/506 0.141s
im_proposals: 502/506 0.141s
im_proposals: 503/506 0.141s
im_proposals: 504/506 0.141s
im_proposals: 505/506 0.141s
im_proposals: 506/506 0.141s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:04:43.793119  3623 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:04:43.793179  3623 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 16:04:43.794008  3623 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:04:43.794204  3623 layer_factory.hpp:77] Creating layer data
I0419 16:04:43.794960  3623 net.cpp:106] Creating Layer data
I0419 16:04:43.794986  3623 net.cpp:411] data -> data
I0419 16:04:43.795009  3623 net.cpp:411] data -> rois
I0419 16:04:43.795023  3623 net.cpp:411] data -> labels
I0419 16:04:43.795033  3623 net.cpp:411] data -> bbox_targets
I0419 16:04:43.795044  3623 net.cpp:411] data -> bbox_inside_weights
I0419 16:04:43.795054  3623 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:04:43.810513  3623 net.cpp:150] Setting up data
I0419 16:04:43.810545  3623 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:04:43.810557  3623 net.cpp:157] Top shape: 1 5 (5)
I0419 16:04:43.810564  3623 net.cpp:157] Top shape: 1 (1)
I0419 16:04:43.810570  3623 net.cpp:157] Top shape: 1 176 (176)
I0419 16:04:43.810576  3623 net.cpp:157] Top shape: 1 176 (176)
I0419 16:04:43.810585  3623 net.cpp:157] Top shape: 1 176 (176)
I0419 16:04:43.810590  3623 net.cpp:165] Memory required for data: 14402136
I0419 16:04:43.810596  3623 layer_factory.hpp:77] Creating layer conv1
I0419 16:04:43.810618  3623 net.cpp:106] Creating Layer conv1
I0419 16:04:43.810626  3623 net.cpp:454] conv1 <- data
I0419 16:04:43.810641  3623 net.cpp:411] conv1 -> conv1
I0419 16:04:43.811990  3623 net.cpp:150] Setting up conv1
I0419 16:04:43.812011  3623 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:04:43.812016  3623 net.cpp:165] Memory required for data: 129602136
I0419 16:04:43.812038  3623 layer_factory.hpp:77] Creating layer relu1
I0419 16:04:43.812054  3623 net.cpp:106] Creating Layer relu1
I0419 16:04:43.812059  3623 net.cpp:454] relu1 <- conv1
I0419 16:04:43.812069  3623 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:04:43.812084  3623 net.cpp:150] Setting up relu1
I0419 16:04:43.812093  3623 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:04:43.812098  3623 net.cpp:165] Memory required for data: 244802136
I0419 16:04:43.812103  3623 layer_factory.hpp:77] Creating layer norm1
I0419 16:04:43.812110  3623 net.cpp:106] Creating Layer norm1
I0419 16:04:43.812116  3623 net.cpp:454] norm1 <- conv1
I0419 16:04:43.812124  3623 net.cpp:411] norm1 -> norm1
I0419 16:04:43.812244  3623 net.cpp:150] Setting up norm1
I0419 16:04:43.812258  3623 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:04:43.812263  3623 net.cpp:165] Memory required for data: 360002136
I0419 16:04:43.812268  3623 layer_factory.hpp:77] Creating layer pool1
I0419 16:04:43.812279  3623 net.cpp:106] Creating Layer pool1
I0419 16:04:43.812284  3623 net.cpp:454] pool1 <- norm1
I0419 16:04:43.812294  3623 net.cpp:411] pool1 -> pool1
I0419 16:04:43.812345  3623 net.cpp:150] Setting up pool1
I0419 16:04:43.812357  3623 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:04:43.812362  3623 net.cpp:165] Memory required for data: 389110104
I0419 16:04:43.812367  3623 layer_factory.hpp:77] Creating layer conv2
I0419 16:04:43.812376  3623 net.cpp:106] Creating Layer conv2
I0419 16:04:43.812381  3623 net.cpp:454] conv2 <- pool1
I0419 16:04:43.812391  3623 net.cpp:411] conv2 -> conv2
I0419 16:04:43.814098  3623 net.cpp:150] Setting up conv2
I0419 16:04:43.814117  3623 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:04:43.814121  3623 net.cpp:165] Memory required for data: 408721752
I0419 16:04:43.814134  3623 layer_factory.hpp:77] Creating layer relu2
I0419 16:04:43.814147  3623 net.cpp:106] Creating Layer relu2
I0419 16:04:43.814154  3623 net.cpp:454] relu2 <- conv2
I0419 16:04:43.814162  3623 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:04:43.814172  3623 net.cpp:150] Setting up relu2
I0419 16:04:43.814179  3623 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:04:43.814183  3623 net.cpp:165] Memory required for data: 428333400
I0419 16:04:43.814188  3623 layer_factory.hpp:77] Creating layer norm2
I0419 16:04:43.814198  3623 net.cpp:106] Creating Layer norm2
I0419 16:04:43.814203  3623 net.cpp:454] norm2 <- conv2
I0419 16:04:43.814209  3623 net.cpp:411] norm2 -> norm2
I0419 16:04:43.814302  3623 net.cpp:150] Setting up norm2
I0419 16:04:43.814316  3623 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:04:43.814321  3623 net.cpp:165] Memory required for data: 447945048
I0419 16:04:43.814324  3623 layer_factory.hpp:77] Creating layer pool2
I0419 16:04:43.814347  3623 net.cpp:106] Creating Layer pool2
I0419 16:04:43.814352  3623 net.cpp:454] pool2 <- norm2
I0419 16:04:43.814362  3623 net.cpp:411] pool2 -> pool2
I0419 16:04:43.814402  3623 net.cpp:150] Setting up pool2
I0419 16:04:43.814414  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:43.814419  3623 net.cpp:165] Memory required for data: 453056856
I0419 16:04:43.814422  3623 layer_factory.hpp:77] Creating layer conv3
I0419 16:04:43.814435  3623 net.cpp:106] Creating Layer conv3
I0419 16:04:43.814441  3623 net.cpp:454] conv3 <- pool2
I0419 16:04:43.814450  3623 net.cpp:411] conv3 -> conv3
I0419 16:04:43.817752  3623 net.cpp:150] Setting up conv3
I0419 16:04:43.817771  3623 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:04:43.817776  3623 net.cpp:165] Memory required for data: 460724568
I0419 16:04:43.817790  3623 layer_factory.hpp:77] Creating layer relu3
I0419 16:04:43.817801  3623 net.cpp:106] Creating Layer relu3
I0419 16:04:43.817812  3623 net.cpp:454] relu3 <- conv3
I0419 16:04:43.817821  3623 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:04:43.817829  3623 net.cpp:150] Setting up relu3
I0419 16:04:43.817837  3623 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:04:43.817842  3623 net.cpp:165] Memory required for data: 468392280
I0419 16:04:43.817845  3623 layer_factory.hpp:77] Creating layer conv4
I0419 16:04:43.817858  3623 net.cpp:106] Creating Layer conv4
I0419 16:04:43.817868  3623 net.cpp:454] conv4 <- conv3
I0419 16:04:43.817875  3623 net.cpp:411] conv4 -> conv4
I0419 16:04:43.821234  3623 net.cpp:150] Setting up conv4
I0419 16:04:43.821254  3623 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:04:43.821259  3623 net.cpp:165] Memory required for data: 476059992
I0419 16:04:43.821269  3623 layer_factory.hpp:77] Creating layer relu4
I0419 16:04:43.821276  3623 net.cpp:106] Creating Layer relu4
I0419 16:04:43.821282  3623 net.cpp:454] relu4 <- conv4
I0419 16:04:43.821300  3623 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:04:43.821310  3623 net.cpp:150] Setting up relu4
I0419 16:04:43.821317  3623 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:04:43.821321  3623 net.cpp:165] Memory required for data: 483727704
I0419 16:04:43.821326  3623 layer_factory.hpp:77] Creating layer conv5
I0419 16:04:43.821336  3623 net.cpp:106] Creating Layer conv5
I0419 16:04:43.821341  3623 net.cpp:454] conv5 <- conv4
I0419 16:04:43.821352  3623 net.cpp:411] conv5 -> conv5
I0419 16:04:43.823669  3623 net.cpp:150] Setting up conv5
I0419 16:04:43.823689  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:43.823694  3623 net.cpp:165] Memory required for data: 488839512
I0419 16:04:43.823707  3623 layer_factory.hpp:77] Creating layer relu5
I0419 16:04:43.823716  3623 net.cpp:106] Creating Layer relu5
I0419 16:04:43.823721  3623 net.cpp:454] relu5 <- conv5
I0419 16:04:43.823740  3623 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:04:43.823748  3623 net.cpp:150] Setting up relu5
I0419 16:04:43.823757  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:43.823762  3623 net.cpp:165] Memory required for data: 493951320
I0419 16:04:43.823766  3623 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:04:43.823777  3623 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:04:43.823783  3623 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:04:43.823791  3623 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:04:43.823798  3623 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:04:43.823845  3623 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:04:43.823858  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:43.823864  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:43.823868  3623 net.cpp:165] Memory required for data: 504174936
I0419 16:04:43.823873  3623 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:04:43.823889  3623 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:04:43.823895  3623 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:04:43.823902  3623 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:04:43.823909  3623 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:04:43.823923  3623 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:04:43.823987  3623 net.cpp:150] Setting up roi_pool_conv5
I0419 16:04:43.823998  3623 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:04:43.824003  3623 net.cpp:165] Memory required for data: 504211800
I0419 16:04:43.824007  3623 layer_factory.hpp:77] Creating layer fc6
I0419 16:04:43.824025  3623 net.cpp:106] Creating Layer fc6
I0419 16:04:43.824035  3623 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:04:43.824043  3623 net.cpp:411] fc6 -> fc6
I0419 16:04:43.922963  3623 net.cpp:150] Setting up fc6
I0419 16:04:43.923007  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.923012  3623 net.cpp:165] Memory required for data: 504228184
I0419 16:04:43.923027  3623 layer_factory.hpp:77] Creating layer relu6
I0419 16:04:43.923043  3623 net.cpp:106] Creating Layer relu6
I0419 16:04:43.923051  3623 net.cpp:454] relu6 <- fc6
I0419 16:04:43.923059  3623 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:04:43.923082  3623 net.cpp:150] Setting up relu6
I0419 16:04:43.923089  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.923097  3623 net.cpp:165] Memory required for data: 504244568
I0419 16:04:43.923102  3623 layer_factory.hpp:77] Creating layer drop6
I0419 16:04:43.923120  3623 net.cpp:106] Creating Layer drop6
I0419 16:04:43.923130  3623 net.cpp:454] drop6 <- fc6
I0419 16:04:43.923137  3623 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:04:43.923172  3623 net.cpp:150] Setting up drop6
I0419 16:04:43.923183  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.923188  3623 net.cpp:165] Memory required for data: 504260952
I0419 16:04:43.923193  3623 layer_factory.hpp:77] Creating layer fc7
I0419 16:04:43.923208  3623 net.cpp:106] Creating Layer fc7
I0419 16:04:43.923215  3623 net.cpp:454] fc7 <- fc6
I0419 16:04:43.923223  3623 net.cpp:411] fc7 -> fc7
I0419 16:04:43.967242  3623 net.cpp:150] Setting up fc7
I0419 16:04:43.967283  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.967288  3623 net.cpp:165] Memory required for data: 504277336
I0419 16:04:43.967303  3623 layer_factory.hpp:77] Creating layer relu7
I0419 16:04:43.967315  3623 net.cpp:106] Creating Layer relu7
I0419 16:04:43.967321  3623 net.cpp:454] relu7 <- fc7
I0419 16:04:43.967331  3623 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:04:43.967344  3623 net.cpp:150] Setting up relu7
I0419 16:04:43.967350  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.967353  3623 net.cpp:165] Memory required for data: 504293720
I0419 16:04:43.967357  3623 layer_factory.hpp:77] Creating layer drop7
I0419 16:04:43.967370  3623 net.cpp:106] Creating Layer drop7
I0419 16:04:43.967377  3623 net.cpp:454] drop7 <- fc7
I0419 16:04:43.967383  3623 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:04:43.967417  3623 net.cpp:150] Setting up drop7
I0419 16:04:43.967428  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.967432  3623 net.cpp:165] Memory required for data: 504310104
I0419 16:04:43.967437  3623 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:04:43.967445  3623 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:04:43.967453  3623 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:04:43.967464  3623 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:04:43.967478  3623 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:04:43.967519  3623 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:04:43.967530  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.967535  3623 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:04:43.967540  3623 net.cpp:165] Memory required for data: 504342872
I0419 16:04:43.967545  3623 layer_factory.hpp:77] Creating layer cls_score
I0419 16:04:43.967558  3623 net.cpp:106] Creating Layer cls_score
I0419 16:04:43.967566  3623 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:04:43.967574  3623 net.cpp:411] cls_score -> cls_score
I0419 16:04:43.973147  3623 net.cpp:150] Setting up cls_score
I0419 16:04:43.973166  3623 net.cpp:157] Top shape: 1 44 (44)
I0419 16:04:43.973171  3623 net.cpp:165] Memory required for data: 504343048
I0419 16:04:43.973181  3623 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:04:43.973194  3623 net.cpp:106] Creating Layer bbox_pred
I0419 16:04:43.973206  3623 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:04:43.973215  3623 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:04:43.993952  3623 net.cpp:150] Setting up bbox_pred
I0419 16:04:43.993971  3623 net.cpp:157] Top shape: 1 176 (176)
I0419 16:04:43.993976  3623 net.cpp:165] Memory required for data: 504343752
I0419 16:04:43.993993  3623 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:04:43.994011  3623 net.cpp:106] Creating Layer loss_cls
I0419 16:04:43.994024  3623 net.cpp:454] loss_cls <- cls_score
I0419 16:04:43.994031  3623 net.cpp:454] loss_cls <- labels
I0419 16:04:43.994038  3623 net.cpp:411] loss_cls -> cls_loss
I0419 16:04:43.994058  3623 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:04:43.994156  3623 net.cpp:150] Setting up loss_cls
I0419 16:04:43.994169  3623 net.cpp:157] Top shape: (1)
I0419 16:04:43.994174  3623 net.cpp:160]     with loss weight 1
I0419 16:04:43.994194  3623 net.cpp:165] Memory required for data: 504343756
I0419 16:04:43.994199  3623 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:04:43.994210  3623 net.cpp:106] Creating Layer loss_bbox
I0419 16:04:43.994216  3623 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:04:43.994223  3623 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:04:43.994232  3623 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:04:43.994238  3623 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:04:43.994244  3623 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:04:43.994323  3623 net.cpp:150] Setting up loss_bbox
I0419 16:04:43.994352  3623 net.cpp:157] Top shape: (1)
I0419 16:04:43.994357  3623 net.cpp:160]     with loss weight 1
I0419 16:04:43.994366  3623 net.cpp:165] Memory required for data: 504343760
I0419 16:04:43.994371  3623 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:04:43.994388  3623 net.cpp:106] Creating Layer rpn_conv1
I0419 16:04:43.994398  3623 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:04:43.994408  3623 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:04:44.011514  3623 net.cpp:150] Setting up rpn_conv1
I0419 16:04:44.011536  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:44.011541  3623 net.cpp:165] Memory required for data: 509455568
I0419 16:04:44.011551  3623 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:04:44.011560  3623 net.cpp:106] Creating Layer rpn_relu1
I0419 16:04:44.011565  3623 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:04:44.011575  3623 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:04:44.011585  3623 net.cpp:150] Setting up rpn_relu1
I0419 16:04:44.011595  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:44.011600  3623 net.cpp:165] Memory required for data: 514567376
I0419 16:04:44.011605  3623 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:04:44.011612  3623 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:04:44.011617  3623 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:04:44.011626  3623 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:04:44.011633  3623 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:04:44.011680  3623 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:04:44.011693  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:44.011699  3623 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:04:44.011703  3623 net.cpp:165] Memory required for data: 524790992
I0419 16:04:44.011708  3623 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:04:44.011723  3623 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:04:44.011734  3623 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:04:44.011744  3623 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:04:44.012081  3623 net.cpp:150] Setting up rpn_cls_score
I0419 16:04:44.012095  3623 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:04:44.012100  3623 net.cpp:165] Memory required for data: 525150416
I0419 16:04:44.012109  3623 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:04:44.012130  3623 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:04:44.012140  3623 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:04:44.012152  3623 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:04:44.012609  3623 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:04:44.012624  3623 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:04:44.012629  3623 net.cpp:165] Memory required for data: 525869264
I0419 16:04:44.012636  3623 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:04:44.012650  3623 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:04:44.012656  3623 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:04:44.012665  3623 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:04:44.012670  3623 net.cpp:165] Memory required for data: 525869264
I0419 16:04:44.012675  3623 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:04:44.012681  3623 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:04:44.012686  3623 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:04:44.012691  3623 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:04:44.012696  3623 net.cpp:165] Memory required for data: 525869264
I0419 16:04:44.012701  3623 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:04:44.012706  3623 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:04:44.012712  3623 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:04:44.012717  3623 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:04:44.012722  3623 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:04:44.012725  3623 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:04:44.012729  3623 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:04:44.012734  3623 net.cpp:226] loss_bbox needs backward computation.
I0419 16:04:44.012744  3623 net.cpp:226] loss_cls needs backward computation.
I0419 16:04:44.012750  3623 net.cpp:226] bbox_pred needs backward computation.
I0419 16:04:44.012755  3623 net.cpp:226] cls_score needs backward computation.
I0419 16:04:44.012759  3623 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:04:44.012764  3623 net.cpp:226] drop7 needs backward computation.
I0419 16:04:44.012768  3623 net.cpp:226] relu7 needs backward computation.
I0419 16:04:44.012775  3623 net.cpp:226] fc7 needs backward computation.
I0419 16:04:44.012779  3623 net.cpp:226] drop6 needs backward computation.
I0419 16:04:44.012784  3623 net.cpp:226] relu6 needs backward computation.
I0419 16:04:44.012789  3623 net.cpp:226] fc6 needs backward computation.
I0419 16:04:44.012794  3623 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 16:04:44.012800  3623 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 16:04:44.012806  3623 net.cpp:226] relu5 needs backward computation.
I0419 16:04:44.012810  3623 net.cpp:226] conv5 needs backward computation.
I0419 16:04:44.012815  3623 net.cpp:226] relu4 needs backward computation.
I0419 16:04:44.012821  3623 net.cpp:226] conv4 needs backward computation.
I0419 16:04:44.012826  3623 net.cpp:226] relu3 needs backward computation.
I0419 16:04:44.012830  3623 net.cpp:226] conv3 needs backward computation.
I0419 16:04:44.012837  3623 net.cpp:226] pool2 needs backward computation.
I0419 16:04:44.012841  3623 net.cpp:226] norm2 needs backward computation.
I0419 16:04:44.012846  3623 net.cpp:226] relu2 needs backward computation.
I0419 16:04:44.012851  3623 net.cpp:226] conv2 needs backward computation.
I0419 16:04:44.012857  3623 net.cpp:226] pool1 needs backward computation.
I0419 16:04:44.012862  3623 net.cpp:226] norm1 needs backward computation.
I0419 16:04:44.012866  3623 net.cpp:226] relu1 needs backward computation.
I0419 16:04:44.012871  3623 net.cpp:226] conv1 needs backward computation.
I0419 16:04:44.012878  3623 net.cpp:228] data does not need backward computation.
I0419 16:04:44.012883  3623 net.cpp:270] This network produces output bbox_loss
I0419 16:04:44.012889  3623 net.cpp:270] This network produces output cls_loss
I0419 16:04:44.012926  3623 net.cpp:283] Network initialization done.
I0419 16:04:44.013082  3623 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:04:44.462988  3623 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:04:44.463019  3623 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:04:44.507092  3623 net.cpp:816] Ignoring source layer fc8
I0419 16:04:44.507123  3623 net.cpp:816] Ignoring source layer prob
Solving...
Process Process-3:
Traceback (most recent call last):
  File "/usr/lib/python2.7/multiprocessing/process.py", line 258, in _bootstrap
    self.run()
  File "/usr/lib/python2.7/multiprocessing/process.py", line 114, in run
    self._target(*self._args, **self._kwargs)
  File "./tools/train_faster_rcnn_alt_opt.py", line 196, in train_fast_rcnn
    max_iters=max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 161, in train_net
    model_paths = sw.train_model(max_iters)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 102, in train_model
    self.solver.step(1)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 144, in forward
    blobs = self._get_next_minibatch()
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/layer.py", line 63, in _get_next_minibatch
    return get_minibatch(minibatch_db, self._num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 55, in get_minibatch
    num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 125, in _sample_rois
    roidb['bbox_targets'][keep_inds, :], num_classes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/minibatch.py", line 176, in _get_bbox_regression_labels
    bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]
TypeError: slice indices must be integers or None or have an __index__ method
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-06-07
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-06-07
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-06-07
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-06-07
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:06:10.839715  3651 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:06:10.839769  3651 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 16:06:10.840507  3651 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:06:10.840662  3651 layer_factory.hpp:77] Creating layer input-data
I0419 16:06:10.842844  3651 net.cpp:106] Creating Layer input-data
I0419 16:06:10.842869  3651 net.cpp:411] input-data -> data
I0419 16:06:10.842885  3651 net.cpp:411] input-data -> im_info
I0419 16:06:10.842895  3651 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:06:10.858701  3651 net.cpp:150] Setting up input-data
I0419 16:06:10.858721  3651 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:06:10.858728  3651 net.cpp:157] Top shape: 1 3 (3)
I0419 16:06:10.858731  3651 net.cpp:157] Top shape: 1 4 (4)
I0419 16:06:10.858736  3651 net.cpp:165] Memory required for data: 7200028
I0419 16:06:10.858741  3651 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:06:10.858750  3651 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:06:10.858757  3651 net.cpp:454] data_input-data_0_split <- data
I0419 16:06:10.858768  3651 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:06:10.858779  3651 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:06:10.858814  3651 net.cpp:150] Setting up data_input-data_0_split
I0419 16:06:10.858824  3651 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:06:10.858830  3651 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:06:10.858834  3651 net.cpp:165] Memory required for data: 21600028
I0419 16:06:10.858837  3651 layer_factory.hpp:77] Creating layer conv1
I0419 16:06:10.858847  3651 net.cpp:106] Creating Layer conv1
I0419 16:06:10.858855  3651 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:06:10.858861  3651 net.cpp:411] conv1 -> conv1
I0419 16:06:10.860206  3651 net.cpp:150] Setting up conv1
I0419 16:06:10.860226  3651 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:06:10.860231  3651 net.cpp:165] Memory required for data: 79200028
I0419 16:06:10.860245  3651 layer_factory.hpp:77] Creating layer relu1
I0419 16:06:10.860258  3651 net.cpp:106] Creating Layer relu1
I0419 16:06:10.860261  3651 net.cpp:454] relu1 <- conv1
I0419 16:06:10.860266  3651 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:06:10.860275  3651 net.cpp:150] Setting up relu1
I0419 16:06:10.860283  3651 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:06:10.860286  3651 net.cpp:165] Memory required for data: 136800028
I0419 16:06:10.860288  3651 layer_factory.hpp:77] Creating layer norm1
I0419 16:06:10.860298  3651 net.cpp:106] Creating Layer norm1
I0419 16:06:10.860306  3651 net.cpp:454] norm1 <- conv1
I0419 16:06:10.860311  3651 net.cpp:411] norm1 -> norm1
I0419 16:06:10.860411  3651 net.cpp:150] Setting up norm1
I0419 16:06:10.860422  3651 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:06:10.860424  3651 net.cpp:165] Memory required for data: 194400028
I0419 16:06:10.860429  3651 layer_factory.hpp:77] Creating layer pool1
I0419 16:06:10.860435  3651 net.cpp:106] Creating Layer pool1
I0419 16:06:10.860442  3651 net.cpp:454] pool1 <- norm1
I0419 16:06:10.860445  3651 net.cpp:411] pool1 -> pool1
I0419 16:06:10.860477  3651 net.cpp:150] Setting up pool1
I0419 16:06:10.860486  3651 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:06:10.860489  3651 net.cpp:165] Memory required for data: 208954012
I0419 16:06:10.860491  3651 layer_factory.hpp:77] Creating layer conv2
I0419 16:06:10.860499  3651 net.cpp:106] Creating Layer conv2
I0419 16:06:10.860507  3651 net.cpp:454] conv2 <- pool1
I0419 16:06:10.860512  3651 net.cpp:411] conv2 -> conv2
I0419 16:06:10.862174  3651 net.cpp:150] Setting up conv2
I0419 16:06:10.862192  3651 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:06:10.862195  3651 net.cpp:165] Memory required for data: 218759836
I0419 16:06:10.862203  3651 layer_factory.hpp:77] Creating layer relu2
I0419 16:06:10.862213  3651 net.cpp:106] Creating Layer relu2
I0419 16:06:10.862227  3651 net.cpp:454] relu2 <- conv2
I0419 16:06:10.862232  3651 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:06:10.862237  3651 net.cpp:150] Setting up relu2
I0419 16:06:10.862242  3651 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:06:10.862246  3651 net.cpp:165] Memory required for data: 228565660
I0419 16:06:10.862251  3651 layer_factory.hpp:77] Creating layer norm2
I0419 16:06:10.862256  3651 net.cpp:106] Creating Layer norm2
I0419 16:06:10.862258  3651 net.cpp:454] norm2 <- conv2
I0419 16:06:10.862265  3651 net.cpp:411] norm2 -> norm2
I0419 16:06:10.862360  3651 net.cpp:150] Setting up norm2
I0419 16:06:10.862371  3651 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:06:10.862375  3651 net.cpp:165] Memory required for data: 238371484
I0419 16:06:10.862377  3651 layer_factory.hpp:77] Creating layer pool2
I0419 16:06:10.862383  3651 net.cpp:106] Creating Layer pool2
I0419 16:06:10.862391  3651 net.cpp:454] pool2 <- norm2
I0419 16:06:10.862397  3651 net.cpp:411] pool2 -> pool2
I0419 16:06:10.862423  3651 net.cpp:150] Setting up pool2
I0419 16:06:10.862432  3651 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:06:10.862435  3651 net.cpp:165] Memory required for data: 240927388
I0419 16:06:10.862437  3651 layer_factory.hpp:77] Creating layer conv3
I0419 16:06:10.862445  3651 net.cpp:106] Creating Layer conv3
I0419 16:06:10.862452  3651 net.cpp:454] conv3 <- pool2
I0419 16:06:10.862458  3651 net.cpp:411] conv3 -> conv3
I0419 16:06:10.865736  3651 net.cpp:150] Setting up conv3
I0419 16:06:10.865754  3651 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:06:10.865757  3651 net.cpp:165] Memory required for data: 244761244
I0419 16:06:10.865767  3651 layer_factory.hpp:77] Creating layer relu3
I0419 16:06:10.865777  3651 net.cpp:106] Creating Layer relu3
I0419 16:06:10.865780  3651 net.cpp:454] relu3 <- conv3
I0419 16:06:10.865787  3651 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:06:10.865797  3651 net.cpp:150] Setting up relu3
I0419 16:06:10.865800  3651 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:06:10.865805  3651 net.cpp:165] Memory required for data: 248595100
I0419 16:06:10.865808  3651 layer_factory.hpp:77] Creating layer conv4
I0419 16:06:10.865815  3651 net.cpp:106] Creating Layer conv4
I0419 16:06:10.865823  3651 net.cpp:454] conv4 <- conv3
I0419 16:06:10.865826  3651 net.cpp:411] conv4 -> conv4
I0419 16:06:10.869144  3651 net.cpp:150] Setting up conv4
I0419 16:06:10.869163  3651 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:06:10.869165  3651 net.cpp:165] Memory required for data: 252428956
I0419 16:06:10.869171  3651 layer_factory.hpp:77] Creating layer relu4
I0419 16:06:10.869177  3651 net.cpp:106] Creating Layer relu4
I0419 16:06:10.869180  3651 net.cpp:454] relu4 <- conv4
I0419 16:06:10.869185  3651 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:06:10.869190  3651 net.cpp:150] Setting up relu4
I0419 16:06:10.869196  3651 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:06:10.869199  3651 net.cpp:165] Memory required for data: 256262812
I0419 16:06:10.869201  3651 layer_factory.hpp:77] Creating layer conv5
I0419 16:06:10.869212  3651 net.cpp:106] Creating Layer conv5
I0419 16:06:10.869220  3651 net.cpp:454] conv5 <- conv4
I0419 16:06:10.869226  3651 net.cpp:411] conv5 -> conv5
I0419 16:06:10.871557  3651 net.cpp:150] Setting up conv5
I0419 16:06:10.871578  3651 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:06:10.871582  3651 net.cpp:165] Memory required for data: 258818716
I0419 16:06:10.871590  3651 layer_factory.hpp:77] Creating layer relu5
I0419 16:06:10.871600  3651 net.cpp:106] Creating Layer relu5
I0419 16:06:10.871603  3651 net.cpp:454] relu5 <- conv5
I0419 16:06:10.871608  3651 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:06:10.871615  3651 net.cpp:150] Setting up relu5
I0419 16:06:10.871619  3651 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:06:10.871623  3651 net.cpp:165] Memory required for data: 261374620
I0419 16:06:10.871628  3651 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:06:10.871641  3651 net.cpp:106] Creating Layer rpn_conv1
I0419 16:06:10.871649  3651 net.cpp:454] rpn_conv1 <- conv5
I0419 16:06:10.871654  3651 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:06:10.888680  3651 net.cpp:150] Setting up rpn_conv1
I0419 16:06:10.888702  3651 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:06:10.888707  3651 net.cpp:165] Memory required for data: 263930524
I0419 16:06:10.888713  3651 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:06:10.888720  3651 net.cpp:106] Creating Layer rpn_relu1
I0419 16:06:10.888725  3651 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:06:10.888731  3651 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:06:10.888736  3651 net.cpp:150] Setting up rpn_relu1
I0419 16:06:10.888741  3651 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:06:10.888743  3651 net.cpp:165] Memory required for data: 266486428
I0419 16:06:10.888746  3651 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:06:10.888751  3651 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:06:10.888756  3651 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:06:10.888761  3651 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:06:10.888768  3651 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:06:10.888802  3651 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:06:10.888811  3651 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:06:10.888818  3651 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:06:10.888820  3651 net.cpp:165] Memory required for data: 271598236
I0419 16:06:10.888823  3651 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:06:10.888833  3651 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:06:10.888839  3651 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:06:10.888844  3651 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:06:10.889154  3651 net.cpp:150] Setting up rpn_cls_score
I0419 16:06:10.889166  3651 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:06:10.889169  3651 net.cpp:165] Memory required for data: 271777948
I0419 16:06:10.889175  3651 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:06:10.889181  3651 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:06:10.889184  3651 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:06:10.889189  3651 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:06:10.889194  3651 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:06:10.889225  3651 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:06:10.889235  3651 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:06:10.889238  3651 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:06:10.889241  3651 net.cpp:165] Memory required for data: 272137372
I0419 16:06:10.889245  3651 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:06:10.889253  3651 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:06:10.889261  3651 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:06:10.889266  3651 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:06:10.889698  3651 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:06:10.889709  3651 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:06:10.889713  3651 net.cpp:165] Memory required for data: 272496796
I0419 16:06:10.889717  3651 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:06:10.889726  3651 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:06:10.889731  3651 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:06:10.889737  3651 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:06:10.889768  3651 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:06:10.889778  3651 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:06:10.889781  3651 net.cpp:165] Memory required for data: 272676508
I0419 16:06:10.889783  3651 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:06:10.890300  3651 net.cpp:106] Creating Layer rpn-data
I0419 16:06:10.890317  3651 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:06:10.890322  3651 net.cpp:454] rpn-data <- gt_boxes
I0419 16:06:10.890347  3651 net.cpp:454] rpn-data <- im_info
I0419 16:06:10.890354  3651 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:06:10.890359  3651 net.cpp:411] rpn-data -> rpn_labels
I0419 16:06:10.890367  3651 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:06:10.890383  3651 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:06:10.890389  3651 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:06:10.891605  3651 net.cpp:150] Setting up rpn-data
I0419 16:06:10.891628  3651 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:06:10.891633  3651 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:06:10.891638  3651 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:06:10.891640  3651 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:06:10.891643  3651 net.cpp:165] Memory required for data: 273844636
I0419 16:06:10.891647  3651 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:06:10.891659  3651 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:06:10.891667  3651 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:06:10.891672  3651 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:06:10.891680  3651 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:06:10.891697  3651 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:06:10.891805  3651 net.cpp:150] Setting up rpn_loss_cls
I0419 16:06:10.891816  3651 net.cpp:157] Top shape: (1)
I0419 16:06:10.891819  3651 net.cpp:160]     with loss weight 1
I0419 16:06:10.891836  3651 net.cpp:165] Memory required for data: 273844640
I0419 16:06:10.891839  3651 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:06:10.891849  3651 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:06:10.891856  3651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:06:10.891860  3651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:06:10.891863  3651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:06:10.891868  3651 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:06:10.891872  3651 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:06:10.892442  3651 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:06:10.892453  3651 net.cpp:157] Top shape: (1)
I0419 16:06:10.892457  3651 net.cpp:160]     with loss weight 1
I0419 16:06:10.892460  3651 net.cpp:165] Memory required for data: 273844644
I0419 16:06:10.892464  3651 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:06:10.892475  3651 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:06:10.892480  3651 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:06:10.892508  3651 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:06:10.892518  3651 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:06:10.892520  3651 net.cpp:165] Memory required for data: 273881508
I0419 16:06:10.892524  3651 layer_factory.hpp:77] Creating layer fc6
I0419 16:06:10.892530  3651 net.cpp:106] Creating Layer fc6
I0419 16:06:10.892537  3651 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:06:10.892541  3651 net.cpp:411] fc6 -> fc6
I0419 16:06:10.991844  3651 net.cpp:150] Setting up fc6
I0419 16:06:10.991886  3651 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:06:10.991890  3651 net.cpp:165] Memory required for data: 273897892
I0419 16:06:10.991905  3651 layer_factory.hpp:77] Creating layer relu6
I0419 16:06:10.991917  3651 net.cpp:106] Creating Layer relu6
I0419 16:06:10.991924  3651 net.cpp:454] relu6 <- fc6
I0419 16:06:10.991930  3651 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:06:10.991945  3651 net.cpp:150] Setting up relu6
I0419 16:06:10.991948  3651 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:06:10.991955  3651 net.cpp:165] Memory required for data: 273914276
I0419 16:06:10.991957  3651 layer_factory.hpp:77] Creating layer fc7
I0419 16:06:10.991964  3651 net.cpp:106] Creating Layer fc7
I0419 16:06:10.991972  3651 net.cpp:454] fc7 <- fc6
I0419 16:06:10.991979  3651 net.cpp:411] fc7 -> fc7
I0419 16:06:11.036023  3651 net.cpp:150] Setting up fc7
I0419 16:06:11.036062  3651 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:06:11.036067  3651 net.cpp:165] Memory required for data: 273930660
I0419 16:06:11.036077  3651 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:06:11.036101  3651 net.cpp:106] Creating Layer silence_fc7
I0419 16:06:11.036111  3651 net.cpp:454] silence_fc7 <- fc7
I0419 16:06:11.036118  3651 net.cpp:150] Setting up silence_fc7
I0419 16:06:11.036123  3651 net.cpp:165] Memory required for data: 273930660
I0419 16:06:11.036125  3651 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:06:11.036129  3651 net.cpp:228] fc7 does not need backward computation.
I0419 16:06:11.036131  3651 net.cpp:228] relu6 does not need backward computation.
I0419 16:06:11.036134  3651 net.cpp:228] fc6 does not need backward computation.
I0419 16:06:11.036140  3651 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:06:11.036144  3651 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:06:11.036147  3651 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:06:11.036151  3651 net.cpp:226] rpn-data needs backward computation.
I0419 16:06:11.036157  3651 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:06:11.036161  3651 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:06:11.036164  3651 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:06:11.036170  3651 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:06:11.036173  3651 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:06:11.036176  3651 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:06:11.036181  3651 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:06:11.036185  3651 net.cpp:226] relu5 needs backward computation.
I0419 16:06:11.036188  3651 net.cpp:226] conv5 needs backward computation.
I0419 16:06:11.036190  3651 net.cpp:226] relu4 needs backward computation.
I0419 16:06:11.036195  3651 net.cpp:226] conv4 needs backward computation.
I0419 16:06:11.036198  3651 net.cpp:226] relu3 needs backward computation.
I0419 16:06:11.036201  3651 net.cpp:226] conv3 needs backward computation.
I0419 16:06:11.036204  3651 net.cpp:226] pool2 needs backward computation.
I0419 16:06:11.036207  3651 net.cpp:226] norm2 needs backward computation.
I0419 16:06:11.036211  3651 net.cpp:226] relu2 needs backward computation.
I0419 16:06:11.036213  3651 net.cpp:226] conv2 needs backward computation.
I0419 16:06:11.036216  3651 net.cpp:226] pool1 needs backward computation.
I0419 16:06:11.036219  3651 net.cpp:226] norm1 needs backward computation.
I0419 16:06:11.036223  3651 net.cpp:226] relu1 needs backward computation.
I0419 16:06:11.036226  3651 net.cpp:226] conv1 needs backward computation.
I0419 16:06:11.036231  3651 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:06:11.036236  3651 net.cpp:228] input-data does not need backward computation.
I0419 16:06:11.036240  3651 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:06:11.036243  3651 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:06:11.036269  3651 net.cpp:283] Network initialization done.
I0419 16:06:11.036381  3651 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:06:11.484839  3651 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:06:11.484869  3651 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:06:11.515247  3651 net.cpp:816] Ignoring source layer drop6
I0419 16:06:11.528865  3651 net.cpp:816] Ignoring source layer relu7
I0419 16:06:11.528890  3651 net.cpp:816] Ignoring source layer drop7
I0419 16:06:11.528893  3651 net.cpp:816] Ignoring source layer fc8
I0419 16:06:11.528895  3651 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:06:11.693774  3651 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 16:06:11.693819  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 16:06:11.693827  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 16:06:11.693840  3651 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:06:14.541277  3651 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 16:06:14.541321  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 16:06:14.541327  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 16:06:14.541332  3651 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:06:17.406462  3651 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 16:06:17.406507  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 16:06:17.406513  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 16:06:17.406519  3651 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:06:20.268095  3651 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 16:06:20.268141  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 16:06:20.268148  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 16:06:20.268154  3651 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:06:23.135210  3651 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 16:06:23.135252  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 16:06:23.135259  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 16:06:23.135265  3651 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:06:25.999414  3651 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 16:06:25.999457  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 16:06:25.999464  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 16:06:25.999469  3651 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:06:28.864311  3651 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 16:06:28.864356  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 16:06:28.864362  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 16:06:28.864368  3651 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:06:31.721879  3651 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 16:06:31.721925  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 16:06:31.721932  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 16:06:31.721937  3651 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:06:34.591125  3651 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 16:06:34.591171  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 16:06:34.591179  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 16:06:34.591184  3651 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:06:37.459729  3651 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 16:06:37.459774  3651 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 16:06:37.459781  3651 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 16:06:37.459787  3651 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:06:44.085333  3667 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:06:44.085474  3667 net.cpp:413] Input 0 -> data
I0419 16:06:44.100615  3667 net.cpp:413] Input 1 -> im_info
I0419 16:06:44.100675  3667 layer_factory.hpp:77] Creating layer conv1
I0419 16:06:44.100705  3667 net.cpp:106] Creating Layer conv1
I0419 16:06:44.100715  3667 net.cpp:454] conv1 <- data
I0419 16:06:44.100736  3667 net.cpp:411] conv1 -> conv1
I0419 16:06:44.101502  3667 net.cpp:150] Setting up conv1
I0419 16:06:44.101529  3667 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:06:44.101536  3667 net.cpp:165] Memory required for data: 4816896
I0419 16:06:44.101554  3667 layer_factory.hpp:77] Creating layer relu1
I0419 16:06:44.101567  3667 net.cpp:106] Creating Layer relu1
I0419 16:06:44.101578  3667 net.cpp:454] relu1 <- conv1
I0419 16:06:44.101586  3667 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:06:44.101598  3667 net.cpp:150] Setting up relu1
I0419 16:06:44.101608  3667 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:06:44.101613  3667 net.cpp:165] Memory required for data: 9633792
I0419 16:06:44.101618  3667 layer_factory.hpp:77] Creating layer norm1
I0419 16:06:44.101629  3667 net.cpp:106] Creating Layer norm1
I0419 16:06:44.101634  3667 net.cpp:454] norm1 <- conv1
I0419 16:06:44.101642  3667 net.cpp:411] norm1 -> norm1
I0419 16:06:44.101757  3667 net.cpp:150] Setting up norm1
I0419 16:06:44.101770  3667 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:06:44.101775  3667 net.cpp:165] Memory required for data: 14450688
I0419 16:06:44.101779  3667 layer_factory.hpp:77] Creating layer pool1
I0419 16:06:44.101789  3667 net.cpp:106] Creating Layer pool1
I0419 16:06:44.101796  3667 net.cpp:454] pool1 <- norm1
I0419 16:06:44.101802  3667 net.cpp:411] pool1 -> pool1
I0419 16:06:44.101847  3667 net.cpp:150] Setting up pool1
I0419 16:06:44.101860  3667 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:06:44.101863  3667 net.cpp:165] Memory required for data: 15698304
I0419 16:06:44.101868  3667 layer_factory.hpp:77] Creating layer conv2
I0419 16:06:44.101881  3667 net.cpp:106] Creating Layer conv2
I0419 16:06:44.101891  3667 net.cpp:454] conv2 <- pool1
I0419 16:06:44.101898  3667 net.cpp:411] conv2 -> conv2
I0419 16:06:44.104117  3667 net.cpp:150] Setting up conv2
I0419 16:06:44.104136  3667 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:06:44.104142  3667 net.cpp:165] Memory required for data: 16559488
I0419 16:06:44.104154  3667 layer_factory.hpp:77] Creating layer relu2
I0419 16:06:44.104163  3667 net.cpp:106] Creating Layer relu2
I0419 16:06:44.104171  3667 net.cpp:454] relu2 <- conv2
I0419 16:06:44.104182  3667 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:06:44.104197  3667 net.cpp:150] Setting up relu2
I0419 16:06:44.104205  3667 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:06:44.104209  3667 net.cpp:165] Memory required for data: 17420672
I0419 16:06:44.104213  3667 layer_factory.hpp:77] Creating layer norm2
I0419 16:06:44.104221  3667 net.cpp:106] Creating Layer norm2
I0419 16:06:44.104226  3667 net.cpp:454] norm2 <- conv2
I0419 16:06:44.104236  3667 net.cpp:411] norm2 -> norm2
I0419 16:06:44.104326  3667 net.cpp:150] Setting up norm2
I0419 16:06:44.104341  3667 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:06:44.104346  3667 net.cpp:165] Memory required for data: 18281856
I0419 16:06:44.104351  3667 layer_factory.hpp:77] Creating layer pool2
I0419 16:06:44.104357  3667 net.cpp:106] Creating Layer pool2
I0419 16:06:44.104364  3667 net.cpp:454] pool2 <- norm2
I0419 16:06:44.104372  3667 net.cpp:411] pool2 -> pool2
I0419 16:06:44.104413  3667 net.cpp:150] Setting up pool2
I0419 16:06:44.104424  3667 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:06:44.104429  3667 net.cpp:165] Memory required for data: 18512256
I0419 16:06:44.104432  3667 layer_factory.hpp:77] Creating layer conv3
I0419 16:06:44.104445  3667 net.cpp:106] Creating Layer conv3
I0419 16:06:44.104456  3667 net.cpp:454] conv3 <- pool2
I0419 16:06:44.104463  3667 net.cpp:411] conv3 -> conv3
I0419 16:06:44.106766  3667 net.cpp:150] Setting up conv3
I0419 16:06:44.106787  3667 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:06:44.106792  3667 net.cpp:165] Memory required for data: 18857856
I0419 16:06:44.106804  3667 layer_factory.hpp:77] Creating layer relu3
I0419 16:06:44.106813  3667 net.cpp:106] Creating Layer relu3
I0419 16:06:44.106822  3667 net.cpp:454] relu3 <- conv3
I0419 16:06:44.106828  3667 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:06:44.106839  3667 net.cpp:150] Setting up relu3
I0419 16:06:44.106847  3667 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:06:44.106856  3667 net.cpp:165] Memory required for data: 19203456
I0419 16:06:44.106861  3667 layer_factory.hpp:77] Creating layer conv4
I0419 16:06:44.106873  3667 net.cpp:106] Creating Layer conv4
I0419 16:06:44.106878  3667 net.cpp:454] conv4 <- conv3
I0419 16:06:44.106885  3667 net.cpp:411] conv4 -> conv4
I0419 16:06:44.110196  3667 net.cpp:150] Setting up conv4
I0419 16:06:44.110215  3667 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:06:44.110220  3667 net.cpp:165] Memory required for data: 19549056
I0419 16:06:44.110230  3667 layer_factory.hpp:77] Creating layer relu4
I0419 16:06:44.110237  3667 net.cpp:106] Creating Layer relu4
I0419 16:06:44.110242  3667 net.cpp:454] relu4 <- conv4
I0419 16:06:44.110252  3667 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:06:44.110261  3667 net.cpp:150] Setting up relu4
I0419 16:06:44.110271  3667 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:06:44.110276  3667 net.cpp:165] Memory required for data: 19894656
I0419 16:06:44.110280  3667 layer_factory.hpp:77] Creating layer conv5
I0419 16:06:44.110293  3667 net.cpp:106] Creating Layer conv5
I0419 16:06:44.110298  3667 net.cpp:454] conv5 <- conv4
I0419 16:06:44.110308  3667 net.cpp:411] conv5 -> conv5
I0419 16:06:44.112612  3667 net.cpp:150] Setting up conv5
I0419 16:06:44.112632  3667 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:06:44.112637  3667 net.cpp:165] Memory required for data: 20125056
I0419 16:06:44.112653  3667 layer_factory.hpp:77] Creating layer relu5
I0419 16:06:44.112661  3667 net.cpp:106] Creating Layer relu5
I0419 16:06:44.112673  3667 net.cpp:454] relu5 <- conv5
I0419 16:06:44.112680  3667 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:06:44.112694  3667 net.cpp:150] Setting up relu5
I0419 16:06:44.112700  3667 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:06:44.112706  3667 net.cpp:165] Memory required for data: 20355456
I0419 16:06:44.112711  3667 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:06:44.112722  3667 net.cpp:106] Creating Layer rpn_conv1
I0419 16:06:44.112733  3667 net.cpp:454] rpn_conv1 <- conv5
I0419 16:06:44.112740  3667 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:06:44.114380  3667 net.cpp:150] Setting up rpn_conv1
I0419 16:06:44.114398  3667 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:06:44.114403  3667 net.cpp:165] Memory required for data: 20585856
I0419 16:06:44.114413  3667 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:06:44.114420  3667 net.cpp:106] Creating Layer rpn_relu1
I0419 16:06:44.114425  3667 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:06:44.114434  3667 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:06:44.114446  3667 net.cpp:150] Setting up rpn_relu1
I0419 16:06:44.114454  3667 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:06:44.114459  3667 net.cpp:165] Memory required for data: 20816256
I0419 16:06:44.114464  3667 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:06:44.114478  3667 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:06:44.114488  3667 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:06:44.114498  3667 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:06:44.114507  3667 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:06:44.114547  3667 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:06:44.114559  3667 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:06:44.114567  3667 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:06:44.114570  3667 net.cpp:165] Memory required for data: 21277056
I0419 16:06:44.114574  3667 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:06:44.114586  3667 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:06:44.114596  3667 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:06:44.114606  3667 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:06:44.114791  3667 net.cpp:150] Setting up rpn_cls_score
I0419 16:06:44.114805  3667 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:06:44.114809  3667 net.cpp:165] Memory required for data: 21293256
I0419 16:06:44.114819  3667 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:06:44.114827  3667 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:06:44.114832  3667 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:06:44.114841  3667 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:06:44.115036  3667 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:06:44.115051  3667 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:06:44.115056  3667 net.cpp:165] Memory required for data: 21325656
I0419 16:06:44.115064  3667 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:06:44.115073  3667 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:06:44.115078  3667 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:06:44.115087  3667 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:06:44.115128  3667 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:06:44.115139  3667 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:06:44.115144  3667 net.cpp:165] Memory required for data: 21341856
I0419 16:06:44.115149  3667 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:06:44.115156  3667 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:06:44.115164  3667 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:06:44.115170  3667 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:06:44.115228  3667 net.cpp:150] Setting up rpn_cls_prob
I0419 16:06:44.115241  3667 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:06:44.115245  3667 net.cpp:165] Memory required for data: 21358056
I0419 16:06:44.115250  3667 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:06:44.115257  3667 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:06:44.115264  3667 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:06:44.115274  3667 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:06:44.115308  3667 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:06:44.115322  3667 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:06:44.115326  3667 net.cpp:165] Memory required for data: 21374256
I0419 16:06:44.115330  3667 layer_factory.hpp:77] Creating layer proposal
I0419 16:06:44.116880  3667 net.cpp:106] Creating Layer proposal
I0419 16:06:44.116900  3667 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:06:44.116909  3667 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:06:44.116914  3667 net.cpp:454] proposal <- im_info
I0419 16:06:44.116925  3667 net.cpp:411] proposal -> rois
I0419 16:06:44.116935  3667 net.cpp:411] proposal -> scores
I0419 16:06:44.118229  3667 net.cpp:150] Setting up proposal
I0419 16:06:44.118253  3667 net.cpp:157] Top shape: 1 5 (5)
I0419 16:06:44.118261  3667 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:06:44.118265  3667 net.cpp:165] Memory required for data: 21374280
I0419 16:06:44.118270  3667 net.cpp:228] proposal does not need backward computation.
I0419 16:06:44.118278  3667 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:06:44.118283  3667 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:06:44.118288  3667 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:06:44.118294  3667 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:06:44.118302  3667 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:06:44.118307  3667 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:06:44.118312  3667 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:06:44.118317  3667 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:06:44.118324  3667 net.cpp:228] relu5 does not need backward computation.
I0419 16:06:44.118346  3667 net.cpp:228] conv5 does not need backward computation.
I0419 16:06:44.118355  3667 net.cpp:228] relu4 does not need backward computation.
I0419 16:06:44.118360  3667 net.cpp:228] conv4 does not need backward computation.
I0419 16:06:44.118363  3667 net.cpp:228] relu3 does not need backward computation.
I0419 16:06:44.118367  3667 net.cpp:228] conv3 does not need backward computation.
I0419 16:06:44.118372  3667 net.cpp:228] pool2 does not need backward computation.
I0419 16:06:44.118376  3667 net.cpp:228] norm2 does not need backward computation.
I0419 16:06:44.118381  3667 net.cpp:228] relu2 does not need backward computation.
I0419 16:06:44.118384  3667 net.cpp:228] conv2 does not need backward computation.
I0419 16:06:44.118389  3667 net.cpp:228] pool1 does not need backward computation.
I0419 16:06:44.118393  3667 net.cpp:228] norm1 does not need backward computation.
I0419 16:06:44.118398  3667 net.cpp:228] relu1 does not need backward computation.
I0419 16:06:44.118402  3667 net.cpp:228] conv1 does not need backward computation.
I0419 16:06:44.118407  3667 net.cpp:270] This network produces output rois
I0419 16:06:44.118412  3667 net.cpp:270] This network produces output scores
I0419 16:06:44.118440  3667 net.cpp:283] Network initialization done.
I0419 16:06:44.559826  3667 net.cpp:816] Ignoring source layer input-data
I0419 16:06:44.559865  3667 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:06:44.563531  3667 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:06:44.563563  3667 net.cpp:816] Ignoring source layer rpn-data
I0419 16:06:44.563568  3667 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:06:44.563572  3667 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:06:44.563576  3667 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:06:44.563580  3667 net.cpp:816] Ignoring source layer fc6
I0419 16:06:44.563583  3667 net.cpp:816] Ignoring source layer relu6
I0419 16:06:44.563587  3667 net.cpp:816] Ignoring source layer fc7
I0419 16:06:44.563591  3667 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.163s
im_proposals: 2/506 0.152s
im_proposals: 3/506 0.148s
im_proposals: 4/506 0.147s
im_proposals: 5/506 0.146s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.144s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.144s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.143s
im_proposals: 13/506 0.143s
im_proposals: 14/506 0.143s
im_proposals: 15/506 0.143s
im_proposals: 16/506 0.143s
im_proposals: 17/506 0.143s
im_proposals: 18/506 0.143s
im_proposals: 19/506 0.143s
im_proposals: 20/506 0.143s
im_proposals: 21/506 0.143s
im_proposals: 22/506 0.143s
im_proposals: 23/506 0.143s
im_proposals: 24/506 0.143s
im_proposals: 25/506 0.143s
im_proposals: 26/506 0.143s
im_proposals: 27/506 0.143s
im_proposals: 28/506 0.143s
im_proposals: 29/506 0.143s
im_proposals: 30/506 0.143s
im_proposals: 31/506 0.143s
im_proposals: 32/506 0.143s
im_proposals: 33/506 0.143s
im_proposals: 34/506 0.143s
im_proposals: 35/506 0.143s
im_proposals: 36/506 0.142s
im_proposals: 37/506 0.142s
im_proposals: 38/506 0.142s
im_proposals: 39/506 0.142s
im_proposals: 40/506 0.142s
im_proposals: 41/506 0.142s
im_proposals: 42/506 0.142s
im_proposals: 43/506 0.142s
im_proposals: 44/506 0.142s
im_proposals: 45/506 0.142s
im_proposals: 46/506 0.142s
im_proposals: 47/506 0.142s
im_proposals: 48/506 0.142s
im_proposals: 49/506 0.142s
im_proposals: 50/506 0.142s
im_proposals: 51/506 0.142s
im_proposals: 52/506 0.142s
im_proposals: 53/506 0.142s
im_proposals: 54/506 0.142s
im_proposals: 55/506 0.142s
im_proposals: 56/506 0.142s
im_proposals: 57/506 0.142s
im_proposals: 58/506 0.142s
im_proposals: 59/506 0.142s
im_proposals: 60/506 0.142s
im_proposals: 61/506 0.142s
im_proposals: 62/506 0.142s
im_proposals: 63/506 0.142s
im_proposals: 64/506 0.142s
im_proposals: 65/506 0.142s
im_proposals: 66/506 0.142s
im_proposals: 67/506 0.142s
im_proposals: 68/506 0.142s
im_proposals: 69/506 0.142s
im_proposals: 70/506 0.142s
im_proposals: 71/506 0.142s
im_proposals: 72/506 0.142s
im_proposals: 73/506 0.142s
im_proposals: 74/506 0.142s
im_proposals: 75/506 0.142s
im_proposals: 76/506 0.142s
im_proposals: 77/506 0.142s
im_proposals: 78/506 0.142s
im_proposals: 79/506 0.142s
im_proposals: 80/506 0.142s
im_proposals: 81/506 0.142s
im_proposals: 82/506 0.142s
im_proposals: 83/506 0.142s
im_proposals: 84/506 0.142s
im_proposals: 85/506 0.142s
im_proposals: 86/506 0.142s
im_proposals: 87/506 0.142s
im_proposals: 88/506 0.142s
im_proposals: 89/506 0.142s
im_proposals: 90/506 0.142s
im_proposals: 91/506 0.142s
im_proposals: 92/506 0.142s
im_proposals: 93/506 0.142s
im_proposals: 94/506 0.142s
im_proposals: 95/506 0.142s
im_proposals: 96/506 0.142s
im_proposals: 97/506 0.142s
im_proposals: 98/506 0.142s
im_proposals: 99/506 0.142s
im_proposals: 100/506 0.142s
im_proposals: 101/506 0.142s
im_proposals: 102/506 0.142s
im_proposals: 103/506 0.142s
im_proposals: 104/506 0.142s
im_proposals: 105/506 0.142s
im_proposals: 106/506 0.142s
im_proposals: 107/506 0.142s
im_proposals: 108/506 0.142s
im_proposals: 109/506 0.142s
im_proposals: 110/506 0.142s
im_proposals: 111/506 0.142s
im_proposals: 112/506 0.142s
im_proposals: 113/506 0.142s
im_proposals: 114/506 0.142s
im_proposals: 115/506 0.142s
im_proposals: 116/506 0.142s
im_proposals: 117/506 0.142s
im_proposals: 118/506 0.142s
im_proposals: 119/506 0.142s
im_proposals: 120/506 0.142s
im_proposals: 121/506 0.142s
im_proposals: 122/506 0.142s
im_proposals: 123/506 0.142s
im_proposals: 124/506 0.142s
im_proposals: 125/506 0.142s
im_proposals: 126/506 0.142s
im_proposals: 127/506 0.142s
im_proposals: 128/506 0.142s
im_proposals: 129/506 0.142s
im_proposals: 130/506 0.142s
im_proposals: 131/506 0.142s
im_proposals: 132/506 0.142s
im_proposals: 133/506 0.142s
im_proposals: 134/506 0.142s
im_proposals: 135/506 0.142s
im_proposals: 136/506 0.142s
im_proposals: 137/506 0.142s
im_proposals: 138/506 0.142s
im_proposals: 139/506 0.142s
im_proposals: 140/506 0.142s
im_proposals: 141/506 0.142s
im_proposals: 142/506 0.142s
im_proposals: 143/506 0.142s
im_proposals: 144/506 0.142s
im_proposals: 145/506 0.142s
im_proposals: 146/506 0.142s
im_proposals: 147/506 0.142s
im_proposals: 148/506 0.142s
im_proposals: 149/506 0.142s
im_proposals: 150/506 0.142s
im_proposals: 151/506 0.142s
im_proposals: 152/506 0.142s
im_proposals: 153/506 0.142s
im_proposals: 154/506 0.142s
im_proposals: 155/506 0.142s
im_proposals: 156/506 0.142s
im_proposals: 157/506 0.142s
im_proposals: 158/506 0.142s
im_proposals: 159/506 0.142s
im_proposals: 160/506 0.142s
im_proposals: 161/506 0.142s
im_proposals: 162/506 0.142s
im_proposals: 163/506 0.142s
im_proposals: 164/506 0.142s
im_proposals: 165/506 0.142s
im_proposals: 166/506 0.142s
im_proposals: 167/506 0.142s
im_proposals: 168/506 0.142s
im_proposals: 169/506 0.142s
im_proposals: 170/506 0.141s
im_proposals: 171/506 0.141s
im_proposals: 172/506 0.141s
im_proposals: 173/506 0.141s
im_proposals: 174/506 0.141s
im_proposals: 175/506 0.141s
im_proposals: 176/506 0.141s
im_proposals: 177/506 0.141s
im_proposals: 178/506 0.141s
im_proposals: 179/506 0.141s
im_proposals: 180/506 0.141s
im_proposals: 181/506 0.141s
im_proposals: 182/506 0.141s
im_proposals: 183/506 0.141s
im_proposals: 184/506 0.141s
im_proposals: 185/506 0.141s
im_proposals: 186/506 0.141s
im_proposals: 187/506 0.141s
im_proposals: 188/506 0.141s
im_proposals: 189/506 0.142s
im_proposals: 190/506 0.142s
im_proposals: 191/506 0.142s
im_proposals: 192/506 0.142s
im_proposals: 193/506 0.142s
im_proposals: 194/506 0.142s
im_proposals: 195/506 0.142s
im_proposals: 196/506 0.142s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.141s
im_proposals: 413/506 0.141s
im_proposals: 414/506 0.141s
im_proposals: 415/506 0.141s
im_proposals: 416/506 0.141s
im_proposals: 417/506 0.141s
im_proposals: 418/506 0.141s
im_proposals: 419/506 0.141s
im_proposals: 420/506 0.141s
im_proposals: 421/506 0.141s
im_proposals: 422/506 0.141s
im_proposals: 423/506 0.141s
im_proposals: 424/506 0.141s
im_proposals: 425/506 0.141s
im_proposals: 426/506 0.141s
im_proposals: 427/506 0.141s
im_proposals: 428/506 0.141s
im_proposals: 429/506 0.141s
im_proposals: 430/506 0.141s
im_proposals: 431/506 0.141s
im_proposals: 432/506 0.141s
im_proposals: 433/506 0.141s
im_proposals: 434/506 0.141s
im_proposals: 435/506 0.141s
im_proposals: 436/506 0.141s
im_proposals: 437/506 0.141s
im_proposals: 438/506 0.141s
im_proposals: 439/506 0.141s
im_proposals: 440/506 0.141s
im_proposals: 441/506 0.141s
im_proposals: 442/506 0.141s
im_proposals: 443/506 0.141s
im_proposals: 444/506 0.141s
im_proposals: 445/506 0.141s
im_proposals: 446/506 0.141s
im_proposals: 447/506 0.141s
im_proposals: 448/506 0.141s
im_proposals: 449/506 0.141s
im_proposals: 450/506 0.141s
im_proposals: 451/506 0.141s
im_proposals: 452/506 0.141s
im_proposals: 453/506 0.141s
im_proposals: 454/506 0.141s
im_proposals: 455/506 0.141s
im_proposals: 456/506 0.141s
im_proposals: 457/506 0.141s
im_proposals: 458/506 0.141s
im_proposals: 459/506 0.141s
im_proposals: 460/506 0.141s
im_proposals: 461/506 0.141s
im_proposals: 462/506 0.141s
im_proposals: 463/506 0.141s
im_proposals: 464/506 0.141s
im_proposals: 465/506 0.141s
im_proposals: 466/506 0.141s
im_proposals: 467/506 0.141s
im_proposals: 468/506 0.141s
im_proposals: 469/506 0.141s
im_proposals: 470/506 0.141s
im_proposals: 471/506 0.141s
im_proposals: 472/506 0.141s
im_proposals: 473/506 0.141s
im_proposals: 474/506 0.141s
im_proposals: 475/506 0.141s
im_proposals: 476/506 0.141s
im_proposals: 477/506 0.141s
im_proposals: 478/506 0.141s
im_proposals: 479/506 0.141s
im_proposals: 480/506 0.141s
im_proposals: 481/506 0.141s
im_proposals: 482/506 0.141s
im_proposals: 483/506 0.141s
im_proposals: 484/506 0.141s
im_proposals: 485/506 0.141s
im_proposals: 486/506 0.141s
im_proposals: 487/506 0.141s
im_proposals: 488/506 0.141s
im_proposals: 489/506 0.141s
im_proposals: 490/506 0.141s
im_proposals: 491/506 0.141s
im_proposals: 492/506 0.141s
im_proposals: 493/506 0.141s
im_proposals: 494/506 0.141s
im_proposals: 495/506 0.141s
im_proposals: 496/506 0.141s
im_proposals: 497/506 0.141s
im_proposals: 498/506 0.141s
im_proposals: 499/506 0.141s
im_proposals: 500/506 0.141s
im_proposals: 501/506 0.141s
im_proposals: 502/506 0.141s
im_proposals: 503/506 0.141s
im_proposals: 504/506 0.141s
im_proposals: 505/506 0.141s
im_proposals: 506/506 0.141s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:08:20.565121  3678 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:08:20.565179  3678 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 16:08:20.566007  3678 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:08:20.566169  3678 layer_factory.hpp:77] Creating layer data
I0419 16:08:20.566939  3678 net.cpp:106] Creating Layer data
I0419 16:08:20.566962  3678 net.cpp:411] data -> data
I0419 16:08:20.566978  3678 net.cpp:411] data -> rois
I0419 16:08:20.566985  3678 net.cpp:411] data -> labels
I0419 16:08:20.566990  3678 net.cpp:411] data -> bbox_targets
I0419 16:08:20.566995  3678 net.cpp:411] data -> bbox_inside_weights
I0419 16:08:20.567000  3678 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:08:20.582499  3678 net.cpp:150] Setting up data
I0419 16:08:20.582520  3678 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:08:20.582525  3678 net.cpp:157] Top shape: 1 5 (5)
I0419 16:08:20.582528  3678 net.cpp:157] Top shape: 1 (1)
I0419 16:08:20.582531  3678 net.cpp:157] Top shape: 1 176 (176)
I0419 16:08:20.582535  3678 net.cpp:157] Top shape: 1 176 (176)
I0419 16:08:20.582538  3678 net.cpp:157] Top shape: 1 176 (176)
I0419 16:08:20.582540  3678 net.cpp:165] Memory required for data: 14402136
I0419 16:08:20.582545  3678 layer_factory.hpp:77] Creating layer conv1
I0419 16:08:20.582563  3678 net.cpp:106] Creating Layer conv1
I0419 16:08:20.582571  3678 net.cpp:454] conv1 <- data
I0419 16:08:20.582581  3678 net.cpp:411] conv1 -> conv1
I0419 16:08:20.583926  3678 net.cpp:150] Setting up conv1
I0419 16:08:20.583945  3678 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:08:20.583948  3678 net.cpp:165] Memory required for data: 129602136
I0419 16:08:20.583963  3678 layer_factory.hpp:77] Creating layer relu1
I0419 16:08:20.583978  3678 net.cpp:106] Creating Layer relu1
I0419 16:08:20.583982  3678 net.cpp:454] relu1 <- conv1
I0419 16:08:20.583987  3678 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:08:20.583998  3678 net.cpp:150] Setting up relu1
I0419 16:08:20.584004  3678 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:08:20.584007  3678 net.cpp:165] Memory required for data: 244802136
I0419 16:08:20.584009  3678 layer_factory.hpp:77] Creating layer norm1
I0419 16:08:20.584014  3678 net.cpp:106] Creating Layer norm1
I0419 16:08:20.584017  3678 net.cpp:454] norm1 <- conv1
I0419 16:08:20.584022  3678 net.cpp:411] norm1 -> norm1
I0419 16:08:20.584126  3678 net.cpp:150] Setting up norm1
I0419 16:08:20.584137  3678 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:08:20.584139  3678 net.cpp:165] Memory required for data: 360002136
I0419 16:08:20.584142  3678 layer_factory.hpp:77] Creating layer pool1
I0419 16:08:20.584149  3678 net.cpp:106] Creating Layer pool1
I0419 16:08:20.584152  3678 net.cpp:454] pool1 <- norm1
I0419 16:08:20.584156  3678 net.cpp:411] pool1 -> pool1
I0419 16:08:20.584189  3678 net.cpp:150] Setting up pool1
I0419 16:08:20.584199  3678 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:08:20.584202  3678 net.cpp:165] Memory required for data: 389110104
I0419 16:08:20.584204  3678 layer_factory.hpp:77] Creating layer conv2
I0419 16:08:20.584210  3678 net.cpp:106] Creating Layer conv2
I0419 16:08:20.584213  3678 net.cpp:454] conv2 <- pool1
I0419 16:08:20.584218  3678 net.cpp:411] conv2 -> conv2
I0419 16:08:20.585906  3678 net.cpp:150] Setting up conv2
I0419 16:08:20.585922  3678 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:08:20.585925  3678 net.cpp:165] Memory required for data: 408721752
I0419 16:08:20.585933  3678 layer_factory.hpp:77] Creating layer relu2
I0419 16:08:20.585939  3678 net.cpp:106] Creating Layer relu2
I0419 16:08:20.585944  3678 net.cpp:454] relu2 <- conv2
I0419 16:08:20.585952  3678 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:08:20.585958  3678 net.cpp:150] Setting up relu2
I0419 16:08:20.585963  3678 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:08:20.585965  3678 net.cpp:165] Memory required for data: 428333400
I0419 16:08:20.585968  3678 layer_factory.hpp:77] Creating layer norm2
I0419 16:08:20.585973  3678 net.cpp:106] Creating Layer norm2
I0419 16:08:20.585974  3678 net.cpp:454] norm2 <- conv2
I0419 16:08:20.585980  3678 net.cpp:411] norm2 -> norm2
I0419 16:08:20.586060  3678 net.cpp:150] Setting up norm2
I0419 16:08:20.586069  3678 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:08:20.586072  3678 net.cpp:165] Memory required for data: 447945048
I0419 16:08:20.586076  3678 layer_factory.hpp:77] Creating layer pool2
I0419 16:08:20.586081  3678 net.cpp:106] Creating Layer pool2
I0419 16:08:20.586084  3678 net.cpp:454] pool2 <- norm2
I0419 16:08:20.586087  3678 net.cpp:411] pool2 -> pool2
I0419 16:08:20.586114  3678 net.cpp:150] Setting up pool2
I0419 16:08:20.586127  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.586132  3678 net.cpp:165] Memory required for data: 453056856
I0419 16:08:20.586135  3678 layer_factory.hpp:77] Creating layer conv3
I0419 16:08:20.586146  3678 net.cpp:106] Creating Layer conv3
I0419 16:08:20.586151  3678 net.cpp:454] conv3 <- pool2
I0419 16:08:20.586158  3678 net.cpp:411] conv3 -> conv3
I0419 16:08:20.589467  3678 net.cpp:150] Setting up conv3
I0419 16:08:20.589488  3678 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:08:20.589493  3678 net.cpp:165] Memory required for data: 460724568
I0419 16:08:20.589505  3678 layer_factory.hpp:77] Creating layer relu3
I0419 16:08:20.589517  3678 net.cpp:106] Creating Layer relu3
I0419 16:08:20.589529  3678 net.cpp:454] relu3 <- conv3
I0419 16:08:20.589537  3678 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:08:20.589546  3678 net.cpp:150] Setting up relu3
I0419 16:08:20.589555  3678 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:08:20.589562  3678 net.cpp:165] Memory required for data: 468392280
I0419 16:08:20.589567  3678 layer_factory.hpp:77] Creating layer conv4
I0419 16:08:20.589578  3678 net.cpp:106] Creating Layer conv4
I0419 16:08:20.589583  3678 net.cpp:454] conv4 <- conv3
I0419 16:08:20.589596  3678 net.cpp:411] conv4 -> conv4
I0419 16:08:20.592912  3678 net.cpp:150] Setting up conv4
I0419 16:08:20.592932  3678 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:08:20.592937  3678 net.cpp:165] Memory required for data: 476059992
I0419 16:08:20.592947  3678 layer_factory.hpp:77] Creating layer relu4
I0419 16:08:20.592955  3678 net.cpp:106] Creating Layer relu4
I0419 16:08:20.592960  3678 net.cpp:454] relu4 <- conv4
I0419 16:08:20.592969  3678 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:08:20.592980  3678 net.cpp:150] Setting up relu4
I0419 16:08:20.592988  3678 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:08:20.592991  3678 net.cpp:165] Memory required for data: 483727704
I0419 16:08:20.592996  3678 layer_factory.hpp:77] Creating layer conv5
I0419 16:08:20.593005  3678 net.cpp:106] Creating Layer conv5
I0419 16:08:20.593010  3678 net.cpp:454] conv5 <- conv4
I0419 16:08:20.593020  3678 net.cpp:411] conv5 -> conv5
I0419 16:08:20.595324  3678 net.cpp:150] Setting up conv5
I0419 16:08:20.595343  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.595348  3678 net.cpp:165] Memory required for data: 488839512
I0419 16:08:20.595365  3678 layer_factory.hpp:77] Creating layer relu5
I0419 16:08:20.595373  3678 net.cpp:106] Creating Layer relu5
I0419 16:08:20.595386  3678 net.cpp:454] relu5 <- conv5
I0419 16:08:20.595396  3678 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:08:20.595404  3678 net.cpp:150] Setting up relu5
I0419 16:08:20.595412  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.595418  3678 net.cpp:165] Memory required for data: 493951320
I0419 16:08:20.595422  3678 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:08:20.595432  3678 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:08:20.595438  3678 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:08:20.595444  3678 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:08:20.595454  3678 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:08:20.595510  3678 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:08:20.595522  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.595530  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.595533  3678 net.cpp:165] Memory required for data: 504174936
I0419 16:08:20.595537  3678 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:08:20.595554  3678 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:08:20.595561  3678 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:08:20.595566  3678 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:08:20.595573  3678 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:08:20.595587  3678 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:08:20.595649  3678 net.cpp:150] Setting up roi_pool_conv5
I0419 16:08:20.595661  3678 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:08:20.595666  3678 net.cpp:165] Memory required for data: 504211800
I0419 16:08:20.595670  3678 layer_factory.hpp:77] Creating layer fc6
I0419 16:08:20.595681  3678 net.cpp:106] Creating Layer fc6
I0419 16:08:20.595687  3678 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:08:20.595697  3678 net.cpp:411] fc6 -> fc6
I0419 16:08:20.694633  3678 net.cpp:150] Setting up fc6
I0419 16:08:20.694679  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.694684  3678 net.cpp:165] Memory required for data: 504228184
I0419 16:08:20.694697  3678 layer_factory.hpp:77] Creating layer relu6
I0419 16:08:20.694715  3678 net.cpp:106] Creating Layer relu6
I0419 16:08:20.694721  3678 net.cpp:454] relu6 <- fc6
I0419 16:08:20.694730  3678 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:08:20.694751  3678 net.cpp:150] Setting up relu6
I0419 16:08:20.694756  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.694766  3678 net.cpp:165] Memory required for data: 504244568
I0419 16:08:20.694771  3678 layer_factory.hpp:77] Creating layer drop6
I0419 16:08:20.694787  3678 net.cpp:106] Creating Layer drop6
I0419 16:08:20.694797  3678 net.cpp:454] drop6 <- fc6
I0419 16:08:20.694804  3678 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:08:20.694839  3678 net.cpp:150] Setting up drop6
I0419 16:08:20.694850  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.694854  3678 net.cpp:165] Memory required for data: 504260952
I0419 16:08:20.694859  3678 layer_factory.hpp:77] Creating layer fc7
I0419 16:08:20.694875  3678 net.cpp:106] Creating Layer fc7
I0419 16:08:20.694880  3678 net.cpp:454] fc7 <- fc6
I0419 16:08:20.694888  3678 net.cpp:411] fc7 -> fc7
I0419 16:08:20.739181  3678 net.cpp:150] Setting up fc7
I0419 16:08:20.739226  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.739231  3678 net.cpp:165] Memory required for data: 504277336
I0419 16:08:20.739244  3678 layer_factory.hpp:77] Creating layer relu7
I0419 16:08:20.739258  3678 net.cpp:106] Creating Layer relu7
I0419 16:08:20.739264  3678 net.cpp:454] relu7 <- fc7
I0419 16:08:20.739272  3678 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:08:20.739284  3678 net.cpp:150] Setting up relu7
I0419 16:08:20.739293  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.739298  3678 net.cpp:165] Memory required for data: 504293720
I0419 16:08:20.739303  3678 layer_factory.hpp:77] Creating layer drop7
I0419 16:08:20.739315  3678 net.cpp:106] Creating Layer drop7
I0419 16:08:20.739322  3678 net.cpp:454] drop7 <- fc7
I0419 16:08:20.739329  3678 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:08:20.739367  3678 net.cpp:150] Setting up drop7
I0419 16:08:20.739379  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.739383  3678 net.cpp:165] Memory required for data: 504310104
I0419 16:08:20.739388  3678 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:08:20.739397  3678 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:08:20.739401  3678 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:08:20.739411  3678 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:08:20.739423  3678 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:08:20.739470  3678 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:08:20.739480  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.739486  3678 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:20.739490  3678 net.cpp:165] Memory required for data: 504342872
I0419 16:08:20.739496  3678 layer_factory.hpp:77] Creating layer cls_score
I0419 16:08:20.739511  3678 net.cpp:106] Creating Layer cls_score
I0419 16:08:20.739518  3678 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:08:20.739527  3678 net.cpp:411] cls_score -> cls_score
I0419 16:08:20.745085  3678 net.cpp:150] Setting up cls_score
I0419 16:08:20.745105  3678 net.cpp:157] Top shape: 1 44 (44)
I0419 16:08:20.745110  3678 net.cpp:165] Memory required for data: 504343048
I0419 16:08:20.745118  3678 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:08:20.745129  3678 net.cpp:106] Creating Layer bbox_pred
I0419 16:08:20.745134  3678 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:08:20.745146  3678 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:08:20.767313  3678 net.cpp:150] Setting up bbox_pred
I0419 16:08:20.767334  3678 net.cpp:157] Top shape: 1 176 (176)
I0419 16:08:20.767340  3678 net.cpp:165] Memory required for data: 504343752
I0419 16:08:20.767357  3678 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:08:20.767376  3678 net.cpp:106] Creating Layer loss_cls
I0419 16:08:20.767385  3678 net.cpp:454] loss_cls <- cls_score
I0419 16:08:20.767391  3678 net.cpp:454] loss_cls <- labels
I0419 16:08:20.767405  3678 net.cpp:411] loss_cls -> cls_loss
I0419 16:08:20.767423  3678 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:08:20.767526  3678 net.cpp:150] Setting up loss_cls
I0419 16:08:20.767539  3678 net.cpp:157] Top shape: (1)
I0419 16:08:20.767544  3678 net.cpp:160]     with loss weight 1
I0419 16:08:20.767562  3678 net.cpp:165] Memory required for data: 504343756
I0419 16:08:20.767567  3678 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:08:20.767580  3678 net.cpp:106] Creating Layer loss_bbox
I0419 16:08:20.767585  3678 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:08:20.767592  3678 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:08:20.767601  3678 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:08:20.767606  3678 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:08:20.767612  3678 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:08:20.767689  3678 net.cpp:150] Setting up loss_bbox
I0419 16:08:20.767702  3678 net.cpp:157] Top shape: (1)
I0419 16:08:20.767706  3678 net.cpp:160]     with loss weight 1
I0419 16:08:20.767714  3678 net.cpp:165] Memory required for data: 504343760
I0419 16:08:20.767719  3678 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:08:20.767736  3678 net.cpp:106] Creating Layer rpn_conv1
I0419 16:08:20.767745  3678 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:08:20.767755  3678 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:08:20.784857  3678 net.cpp:150] Setting up rpn_conv1
I0419 16:08:20.784878  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.784883  3678 net.cpp:165] Memory required for data: 509455568
I0419 16:08:20.784891  3678 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:08:20.784900  3678 net.cpp:106] Creating Layer rpn_relu1
I0419 16:08:20.784905  3678 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:08:20.784912  3678 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:08:20.784924  3678 net.cpp:150] Setting up rpn_relu1
I0419 16:08:20.784931  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.784936  3678 net.cpp:165] Memory required for data: 514567376
I0419 16:08:20.784945  3678 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:08:20.784955  3678 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:08:20.784961  3678 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:08:20.784968  3678 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:08:20.784977  3678 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:08:20.785029  3678 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:08:20.785043  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.785050  3678 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:08:20.785054  3678 net.cpp:165] Memory required for data: 524790992
I0419 16:08:20.785058  3678 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:08:20.785074  3678 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:08:20.785085  3678 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:08:20.785096  3678 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:08:20.785429  3678 net.cpp:150] Setting up rpn_cls_score
I0419 16:08:20.785444  3678 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:08:20.785449  3678 net.cpp:165] Memory required for data: 525150416
I0419 16:08:20.785457  3678 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:08:20.785481  3678 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:08:20.785490  3678 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:08:20.785502  3678 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:08:20.785959  3678 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:08:20.785974  3678 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:08:20.785979  3678 net.cpp:165] Memory required for data: 525869264
I0419 16:08:20.785987  3678 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:08:20.786000  3678 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:08:20.786010  3678 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:08:20.786018  3678 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:08:20.786021  3678 net.cpp:165] Memory required for data: 525869264
I0419 16:08:20.786026  3678 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:08:20.786034  3678 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:08:20.786039  3678 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:08:20.786044  3678 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:08:20.786048  3678 net.cpp:165] Memory required for data: 525869264
I0419 16:08:20.786052  3678 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:08:20.786058  3678 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:08:20.786062  3678 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:08:20.786067  3678 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:08:20.786073  3678 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:08:20.786078  3678 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:08:20.786082  3678 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:08:20.786087  3678 net.cpp:226] loss_bbox needs backward computation.
I0419 16:08:20.786093  3678 net.cpp:226] loss_cls needs backward computation.
I0419 16:08:20.786100  3678 net.cpp:226] bbox_pred needs backward computation.
I0419 16:08:20.786104  3678 net.cpp:226] cls_score needs backward computation.
I0419 16:08:20.786113  3678 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:08:20.786119  3678 net.cpp:226] drop7 needs backward computation.
I0419 16:08:20.786123  3678 net.cpp:226] relu7 needs backward computation.
I0419 16:08:20.786128  3678 net.cpp:226] fc7 needs backward computation.
I0419 16:08:20.786133  3678 net.cpp:226] drop6 needs backward computation.
I0419 16:08:20.786139  3678 net.cpp:226] relu6 needs backward computation.
I0419 16:08:20.786142  3678 net.cpp:226] fc6 needs backward computation.
I0419 16:08:20.786147  3678 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 16:08:20.786154  3678 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 16:08:20.786160  3678 net.cpp:226] relu5 needs backward computation.
I0419 16:08:20.786165  3678 net.cpp:226] conv5 needs backward computation.
I0419 16:08:20.786170  3678 net.cpp:226] relu4 needs backward computation.
I0419 16:08:20.786175  3678 net.cpp:226] conv4 needs backward computation.
I0419 16:08:20.786180  3678 net.cpp:226] relu3 needs backward computation.
I0419 16:08:20.786183  3678 net.cpp:226] conv3 needs backward computation.
I0419 16:08:20.786188  3678 net.cpp:226] pool2 needs backward computation.
I0419 16:08:20.786193  3678 net.cpp:226] norm2 needs backward computation.
I0419 16:08:20.786200  3678 net.cpp:226] relu2 needs backward computation.
I0419 16:08:20.786203  3678 net.cpp:226] conv2 needs backward computation.
I0419 16:08:20.786208  3678 net.cpp:226] pool1 needs backward computation.
I0419 16:08:20.786213  3678 net.cpp:226] norm1 needs backward computation.
I0419 16:08:20.786218  3678 net.cpp:226] relu1 needs backward computation.
I0419 16:08:20.786224  3678 net.cpp:226] conv1 needs backward computation.
I0419 16:08:20.786231  3678 net.cpp:228] data does not need backward computation.
I0419 16:08:20.786237  3678 net.cpp:270] This network produces output bbox_loss
I0419 16:08:20.786242  3678 net.cpp:270] This network produces output cls_loss
I0419 16:08:20.786278  3678 net.cpp:283] Network initialization done.
I0419 16:08:20.786439  3678 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:08:21.235010  3678 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:08:21.235043  3678 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:08:21.278949  3678 net.cpp:816] Ignoring source layer fc8
I0419 16:08:21.278978  3678 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:08:21.623838  3678 solver.cpp:229] Iteration 0, loss = 3.96455
I0419 16:08:21.623893  3678 solver.cpp:245]     Train net output #0: bbox_loss = 0.00179342 (* 1 = 0.00179342 loss)
I0419 16:08:21.623905  3678 solver.cpp:245]     Train net output #1: cls_loss = 3.96275 (* 1 = 3.96275 loss)
I0419 16:08:21.623926  3678 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:08:27.670404  3678 solver.cpp:229] Iteration 20, loss = 0.158989
I0419 16:08:27.670449  3678 solver.cpp:245]     Train net output #0: bbox_loss = 0.00206027 (* 1 = 0.00206027 loss)
I0419 16:08:27.670456  3678 solver.cpp:245]     Train net output #1: cls_loss = 0.156929 (* 1 = 0.156929 loss)
I0419 16:08:27.670464  3678 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:08:33.653338  3678 solver.cpp:229] Iteration 40, loss = 0.256255
I0419 16:08:33.653383  3678 solver.cpp:245]     Train net output #0: bbox_loss = 0.0311435 (* 1 = 0.0311435 loss)
I0419 16:08:33.653390  3678 solver.cpp:245]     Train net output #1: cls_loss = 0.225112 (* 1 = 0.225112 loss)
I0419 16:08:33.653396  3678 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:08:39.658561  3678 solver.cpp:229] Iteration 60, loss = 0.387985
I0419 16:08:39.658605  3678 solver.cpp:245]     Train net output #0: bbox_loss = 0.0650192 (* 1 = 0.0650192 loss)
I0419 16:08:39.658612  3678 solver.cpp:245]     Train net output #1: cls_loss = 0.322966 (* 1 = 0.322966 loss)
I0419 16:08:39.658619  3678 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:08:45.687484  3678 solver.cpp:229] Iteration 80, loss = 0.2817
I0419 16:08:45.687532  3678 solver.cpp:245]     Train net output #0: bbox_loss = 0.0782601 (* 1 = 0.0782601 loss)
I0419 16:08:45.687539  3678 solver.cpp:245]     Train net output #1: cls_loss = 0.20344 (* 1 = 0.20344 loss)
I0419 16:08:45.687546  3678 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, init from stage 1 Fast R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:08:55.671849  3691 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:08:55.671907  3691 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt
I0419 16:08:55.672677  3691 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:08:55.672861  3691 layer_factory.hpp:77] Creating layer input-data
I0419 16:08:55.673523  3691 net.cpp:106] Creating Layer input-data
I0419 16:08:55.673548  3691 net.cpp:411] input-data -> data
I0419 16:08:55.673571  3691 net.cpp:411] input-data -> im_info
I0419 16:08:55.673588  3691 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:08:55.689532  3691 net.cpp:150] Setting up input-data
I0419 16:08:55.689558  3691 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:08:55.689565  3691 net.cpp:157] Top shape: 1 3 (3)
I0419 16:08:55.689571  3691 net.cpp:157] Top shape: 1 4 (4)
I0419 16:08:55.689576  3691 net.cpp:165] Memory required for data: 7200028
I0419 16:08:55.689582  3691 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:08:55.689599  3691 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:08:55.689609  3691 net.cpp:454] data_input-data_0_split <- data
I0419 16:08:55.689621  3691 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:08:55.689633  3691 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:08:55.689677  3691 net.cpp:150] Setting up data_input-data_0_split
I0419 16:08:55.689689  3691 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:08:55.689698  3691 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:08:55.689702  3691 net.cpp:165] Memory required for data: 21600028
I0419 16:08:55.689707  3691 layer_factory.hpp:77] Creating layer conv1
I0419 16:08:55.689723  3691 net.cpp:106] Creating Layer conv1
I0419 16:08:55.689733  3691 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:08:55.689744  3691 net.cpp:411] conv1 -> conv1
I0419 16:08:55.691119  3691 net.cpp:150] Setting up conv1
I0419 16:08:55.691140  3691 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:08:55.691145  3691 net.cpp:165] Memory required for data: 79200028
I0419 16:08:55.691165  3691 layer_factory.hpp:77] Creating layer relu1
I0419 16:08:55.691182  3691 net.cpp:106] Creating Layer relu1
I0419 16:08:55.691187  3691 net.cpp:454] relu1 <- conv1
I0419 16:08:55.691195  3691 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:08:55.691212  3691 net.cpp:150] Setting up relu1
I0419 16:08:55.691220  3691 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:08:55.691226  3691 net.cpp:165] Memory required for data: 136800028
I0419 16:08:55.691231  3691 layer_factory.hpp:77] Creating layer norm1
I0419 16:08:55.691244  3691 net.cpp:106] Creating Layer norm1
I0419 16:08:55.691254  3691 net.cpp:454] norm1 <- conv1
I0419 16:08:55.691264  3691 net.cpp:411] norm1 -> norm1
I0419 16:08:55.691376  3691 net.cpp:150] Setting up norm1
I0419 16:08:55.691391  3691 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:08:55.691396  3691 net.cpp:165] Memory required for data: 194400028
I0419 16:08:55.691401  3691 layer_factory.hpp:77] Creating layer pool1
I0419 16:08:55.691408  3691 net.cpp:106] Creating Layer pool1
I0419 16:08:55.691413  3691 net.cpp:454] pool1 <- norm1
I0419 16:08:55.691419  3691 net.cpp:411] pool1 -> pool1
I0419 16:08:55.691465  3691 net.cpp:150] Setting up pool1
I0419 16:08:55.691478  3691 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:08:55.691481  3691 net.cpp:165] Memory required for data: 208954012
I0419 16:08:55.691486  3691 layer_factory.hpp:77] Creating layer conv2
I0419 16:08:55.691498  3691 net.cpp:106] Creating Layer conv2
I0419 16:08:55.691504  3691 net.cpp:454] conv2 <- pool1
I0419 16:08:55.691514  3691 net.cpp:411] conv2 -> conv2
I0419 16:08:55.693207  3691 net.cpp:150] Setting up conv2
I0419 16:08:55.693226  3691 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:08:55.693231  3691 net.cpp:165] Memory required for data: 218759836
I0419 16:08:55.693243  3691 layer_factory.hpp:77] Creating layer relu2
I0419 16:08:55.693256  3691 net.cpp:106] Creating Layer relu2
I0419 16:08:55.693264  3691 net.cpp:454] relu2 <- conv2
I0419 16:08:55.693271  3691 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:08:55.693279  3691 net.cpp:150] Setting up relu2
I0419 16:08:55.693286  3691 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:08:55.693294  3691 net.cpp:165] Memory required for data: 228565660
I0419 16:08:55.693298  3691 layer_factory.hpp:77] Creating layer norm2
I0419 16:08:55.693306  3691 net.cpp:106] Creating Layer norm2
I0419 16:08:55.693312  3691 net.cpp:454] norm2 <- conv2
I0419 16:08:55.693322  3691 net.cpp:411] norm2 -> norm2
I0419 16:08:55.693413  3691 net.cpp:150] Setting up norm2
I0419 16:08:55.693428  3691 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:08:55.693431  3691 net.cpp:165] Memory required for data: 238371484
I0419 16:08:55.693436  3691 layer_factory.hpp:77] Creating layer pool2
I0419 16:08:55.693442  3691 net.cpp:106] Creating Layer pool2
I0419 16:08:55.693447  3691 net.cpp:454] pool2 <- norm2
I0419 16:08:55.693459  3691 net.cpp:411] pool2 -> pool2
I0419 16:08:55.693496  3691 net.cpp:150] Setting up pool2
I0419 16:08:55.693511  3691 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:08:55.693514  3691 net.cpp:165] Memory required for data: 240927388
I0419 16:08:55.693518  3691 layer_factory.hpp:77] Creating layer conv3
I0419 16:08:55.693528  3691 net.cpp:106] Creating Layer conv3
I0419 16:08:55.693534  3691 net.cpp:454] conv3 <- pool2
I0419 16:08:55.693543  3691 net.cpp:411] conv3 -> conv3
I0419 16:08:55.696846  3691 net.cpp:150] Setting up conv3
I0419 16:08:55.696866  3691 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:08:55.696871  3691 net.cpp:165] Memory required for data: 244761244
I0419 16:08:55.696883  3691 layer_factory.hpp:77] Creating layer relu3
I0419 16:08:55.696895  3691 net.cpp:106] Creating Layer relu3
I0419 16:08:55.696907  3691 net.cpp:454] relu3 <- conv3
I0419 16:08:55.696915  3691 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:08:55.696923  3691 net.cpp:150] Setting up relu3
I0419 16:08:55.696933  3691 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:08:55.696936  3691 net.cpp:165] Memory required for data: 248595100
I0419 16:08:55.696940  3691 layer_factory.hpp:77] Creating layer conv4
I0419 16:08:55.696952  3691 net.cpp:106] Creating Layer conv4
I0419 16:08:55.696959  3691 net.cpp:454] conv4 <- conv3
I0419 16:08:55.696966  3691 net.cpp:411] conv4 -> conv4
I0419 16:08:55.700300  3691 net.cpp:150] Setting up conv4
I0419 16:08:55.700320  3691 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:08:55.700325  3691 net.cpp:165] Memory required for data: 252428956
I0419 16:08:55.700333  3691 layer_factory.hpp:77] Creating layer relu4
I0419 16:08:55.700342  3691 net.cpp:106] Creating Layer relu4
I0419 16:08:55.700347  3691 net.cpp:454] relu4 <- conv4
I0419 16:08:55.700357  3691 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:08:55.700368  3691 net.cpp:150] Setting up relu4
I0419 16:08:55.700376  3691 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:08:55.700381  3691 net.cpp:165] Memory required for data: 256262812
I0419 16:08:55.700388  3691 layer_factory.hpp:77] Creating layer conv5
I0419 16:08:55.700398  3691 net.cpp:106] Creating Layer conv5
I0419 16:08:55.700407  3691 net.cpp:454] conv5 <- conv4
I0419 16:08:55.700415  3691 net.cpp:411] conv5 -> conv5
I0419 16:08:55.702738  3691 net.cpp:150] Setting up conv5
I0419 16:08:55.702756  3691 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:08:55.702760  3691 net.cpp:165] Memory required for data: 258818716
I0419 16:08:55.702774  3691 layer_factory.hpp:77] Creating layer relu5
I0419 16:08:55.702781  3691 net.cpp:106] Creating Layer relu5
I0419 16:08:55.702786  3691 net.cpp:454] relu5 <- conv5
I0419 16:08:55.702796  3691 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:08:55.702805  3691 net.cpp:150] Setting up relu5
I0419 16:08:55.702812  3691 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:08:55.702821  3691 net.cpp:165] Memory required for data: 261374620
I0419 16:08:55.702834  3691 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:08:55.702852  3691 net.cpp:106] Creating Layer rpn_conv1
I0419 16:08:55.702862  3691 net.cpp:454] rpn_conv1 <- conv5
I0419 16:08:55.702869  3691 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:08:55.724328  3691 net.cpp:150] Setting up rpn_conv1
I0419 16:08:55.724349  3691 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:08:55.724354  3691 net.cpp:165] Memory required for data: 263930524
I0419 16:08:55.724364  3691 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:08:55.724372  3691 net.cpp:106] Creating Layer rpn_relu1
I0419 16:08:55.724377  3691 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:08:55.724391  3691 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:08:55.724400  3691 net.cpp:150] Setting up rpn_relu1
I0419 16:08:55.724411  3691 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:08:55.724416  3691 net.cpp:165] Memory required for data: 266486428
I0419 16:08:55.724421  3691 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:08:55.724436  3691 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:08:55.724442  3691 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:08:55.724449  3691 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:08:55.724462  3691 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:08:55.724504  3691 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:08:55.724516  3691 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:08:55.724524  3691 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:08:55.724527  3691 net.cpp:165] Memory required for data: 271598236
I0419 16:08:55.724532  3691 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:08:55.724547  3691 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:08:55.724557  3691 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:08:55.724570  3691 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:08:55.724896  3691 net.cpp:150] Setting up rpn_cls_score
I0419 16:08:55.724911  3691 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:08:55.724916  3691 net.cpp:165] Memory required for data: 271777948
I0419 16:08:55.724925  3691 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:08:55.724932  3691 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:08:55.724938  3691 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:08:55.724946  3691 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:08:55.724958  3691 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:08:55.725004  3691 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:08:55.725016  3691 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:08:55.725023  3691 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:08:55.725026  3691 net.cpp:165] Memory required for data: 272137372
I0419 16:08:55.725031  3691 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:08:55.725047  3691 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:08:55.725057  3691 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:08:55.725066  3691 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:08:55.725513  3691 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:08:55.725529  3691 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:08:55.725534  3691 net.cpp:165] Memory required for data: 272496796
I0419 16:08:55.725543  3691 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:08:55.725553  3691 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:08:55.725558  3691 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:08:55.725567  3691 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:08:55.725602  3691 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:08:55.725615  3691 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:08:55.725620  3691 net.cpp:165] Memory required for data: 272676508
I0419 16:08:55.725625  3691 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:08:55.726207  3691 net.cpp:106] Creating Layer rpn-data
I0419 16:08:55.726225  3691 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:08:55.726233  3691 net.cpp:454] rpn-data <- gt_boxes
I0419 16:08:55.726239  3691 net.cpp:454] rpn-data <- im_info
I0419 16:08:55.726244  3691 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:08:55.726253  3691 net.cpp:411] rpn-data -> rpn_labels
I0419 16:08:55.726266  3691 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:08:55.726276  3691 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:08:55.726356  3691 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:08:55.728078  3691 net.cpp:150] Setting up rpn-data
I0419 16:08:55.728101  3691 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:08:55.728107  3691 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:08:55.728112  3691 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:08:55.728118  3691 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:08:55.728122  3691 net.cpp:165] Memory required for data: 273844636
I0419 16:08:55.728127  3691 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:08:55.728147  3691 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:08:55.728159  3691 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:08:55.728168  3691 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:08:55.728175  3691 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:08:55.728196  3691 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:08:55.728317  3691 net.cpp:150] Setting up rpn_loss_cls
I0419 16:08:55.728330  3691 net.cpp:157] Top shape: (1)
I0419 16:08:55.728335  3691 net.cpp:160]     with loss weight 1
I0419 16:08:55.728359  3691 net.cpp:165] Memory required for data: 273844640
I0419 16:08:55.728364  3691 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:08:55.728422  3691 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:08:55.728432  3691 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:08:55.728438  3691 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:08:55.728444  3691 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:08:55.728449  3691 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:08:55.728456  3691 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:08:55.729296  3691 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:08:55.729311  3691 net.cpp:157] Top shape: (1)
I0419 16:08:55.729316  3691 net.cpp:160]     with loss weight 1
I0419 16:08:55.729324  3691 net.cpp:165] Memory required for data: 273844644
I0419 16:08:55.729404  3691 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:08:55.729419  3691 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:08:55.729430  3691 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:08:55.729465  3691 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:08:55.729477  3691 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:08:55.729482  3691 net.cpp:165] Memory required for data: 273881508
I0419 16:08:55.729486  3691 layer_factory.hpp:77] Creating layer fc6
I0419 16:08:55.729497  3691 net.cpp:106] Creating Layer fc6
I0419 16:08:55.729503  3691 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:08:55.729511  3691 net.cpp:411] fc6 -> fc6
I0419 16:08:55.841200  3691 net.cpp:150] Setting up fc6
I0419 16:08:55.841248  3691 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:55.841253  3691 net.cpp:165] Memory required for data: 273897892
I0419 16:08:55.841274  3691 layer_factory.hpp:77] Creating layer relu6
I0419 16:08:55.841289  3691 net.cpp:106] Creating Layer relu6
I0419 16:08:55.841295  3691 net.cpp:454] relu6 <- fc6
I0419 16:08:55.841305  3691 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:08:55.841316  3691 net.cpp:150] Setting up relu6
I0419 16:08:55.841322  3691 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:55.841326  3691 net.cpp:165] Memory required for data: 273914276
I0419 16:08:55.841331  3691 layer_factory.hpp:77] Creating layer fc7
I0419 16:08:55.841343  3691 net.cpp:106] Creating Layer fc7
I0419 16:08:55.841379  3691 net.cpp:454] fc7 <- fc6
I0419 16:08:55.841392  3691 net.cpp:411] fc7 -> fc7
I0419 16:08:55.885684  3691 net.cpp:150] Setting up fc7
I0419 16:08:55.885725  3691 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:08:55.885728  3691 net.cpp:165] Memory required for data: 273930660
I0419 16:08:55.885738  3691 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:08:55.885756  3691 net.cpp:106] Creating Layer silence_fc7
I0419 16:08:55.885764  3691 net.cpp:454] silence_fc7 <- fc7
I0419 16:08:55.885772  3691 net.cpp:150] Setting up silence_fc7
I0419 16:08:55.885778  3691 net.cpp:165] Memory required for data: 273930660
I0419 16:08:55.885782  3691 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:08:55.885785  3691 net.cpp:228] fc7 does not need backward computation.
I0419 16:08:55.885787  3691 net.cpp:228] relu6 does not need backward computation.
I0419 16:08:55.885790  3691 net.cpp:228] fc6 does not need backward computation.
I0419 16:08:55.885793  3691 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:08:55.885797  3691 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:08:55.885800  3691 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:08:55.885804  3691 net.cpp:226] rpn-data needs backward computation.
I0419 16:08:55.885809  3691 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:08:55.885813  3691 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:08:55.885817  3691 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:08:55.885819  3691 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:08:55.885823  3691 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:08:55.885826  3691 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:08:55.885829  3691 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:08:55.885833  3691 net.cpp:228] relu5 does not need backward computation.
I0419 16:08:55.885835  3691 net.cpp:228] conv5 does not need backward computation.
I0419 16:08:55.885838  3691 net.cpp:228] relu4 does not need backward computation.
I0419 16:08:55.885841  3691 net.cpp:228] conv4 does not need backward computation.
I0419 16:08:55.885844  3691 net.cpp:228] relu3 does not need backward computation.
I0419 16:08:55.885848  3691 net.cpp:228] conv3 does not need backward computation.
I0419 16:08:55.885850  3691 net.cpp:228] pool2 does not need backward computation.
I0419 16:08:55.885854  3691 net.cpp:228] norm2 does not need backward computation.
I0419 16:08:55.885857  3691 net.cpp:228] relu2 does not need backward computation.
I0419 16:08:55.885859  3691 net.cpp:228] conv2 does not need backward computation.
I0419 16:08:55.885864  3691 net.cpp:228] pool1 does not need backward computation.
I0419 16:08:55.885866  3691 net.cpp:228] norm1 does not need backward computation.
I0419 16:08:55.885871  3691 net.cpp:228] relu1 does not need backward computation.
I0419 16:08:55.885874  3691 net.cpp:228] conv1 does not need backward computation.
I0419 16:08:55.885877  3691 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:08:55.885881  3691 net.cpp:228] input-data does not need backward computation.
I0419 16:08:55.885885  3691 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:08:55.885887  3691 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:08:55.885913  3691 net.cpp:283] Network initialization done.
I0419 16:08:55.886018  3691 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
I0419 16:08:56.328660  3691 net.cpp:816] Ignoring source layer data
I0419 16:08:56.331758  3691 net.cpp:816] Ignoring source layer conv5_relu5_0_split
I0419 16:08:56.331770  3691 net.cpp:816] Ignoring source layer roi_pool_conv5
I0419 16:08:56.362879  3691 net.cpp:816] Ignoring source layer drop6
I0419 16:08:56.376723  3691 net.cpp:816] Ignoring source layer relu7
I0419 16:08:56.376744  3691 net.cpp:816] Ignoring source layer drop7
I0419 16:08:56.376747  3691 net.cpp:816] Ignoring source layer fc7_drop7_0_split
I0419 16:08:56.376749  3691 net.cpp:816] Ignoring source layer cls_score
I0419 16:08:56.376752  3691 net.cpp:816] Ignoring source layer bbox_pred
I0419 16:08:56.376755  3691 net.cpp:816] Ignoring source layer loss_cls
I0419 16:08:56.376760  3691 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:08:56.377264  3691 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:08:56.377272  3691 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Solving...
I0419 16:08:56.557986  3691 solver.cpp:229] Iteration 0, loss = 1.1888
I0419 16:08:56.558035  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.70785 (* 1 = 0.70785 loss)
I0419 16:08:56.558043  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.480947 (* 1 = 0.480947 loss)
I0419 16:08:56.558055  3691 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:08:58.878420  3691 solver.cpp:229] Iteration 20, loss = 0.532486
I0419 16:08:58.878463  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.246661 (* 1 = 0.246661 loss)
I0419 16:08:58.878470  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.285825 (* 1 = 0.285825 loss)
I0419 16:08:58.878475  3691 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:09:01.146378  3691 solver.cpp:229] Iteration 40, loss = 0.387418
I0419 16:09:01.146422  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.208893 (* 1 = 0.208893 loss)
I0419 16:09:01.146430  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.178525 (* 1 = 0.178525 loss)
I0419 16:09:01.146435  3691 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:09:03.411808  3691 solver.cpp:229] Iteration 60, loss = 0.931276
I0419 16:09:03.411856  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.460186 (* 1 = 0.460186 loss)
I0419 16:09:03.411864  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.471089 (* 1 = 0.471089 loss)
I0419 16:09:03.411870  3691 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:09:05.729190  3691 solver.cpp:229] Iteration 80, loss = 0.649747
I0419 16:09:05.729236  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.433855 (* 1 = 0.433855 loss)
I0419 16:09:05.729243  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.215892 (* 1 = 0.215892 loss)
I0419 16:09:05.729249  3691 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:09:08.009522  3691 solver.cpp:229] Iteration 100, loss = 0.288423
I0419 16:09:08.009567  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.249034 (* 1 = 0.249034 loss)
I0419 16:09:08.009573  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0393885 (* 1 = 0.0393885 loss)
I0419 16:09:08.009578  3691 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:09:10.249198  3691 solver.cpp:229] Iteration 120, loss = 0.764852
I0419 16:09:10.249241  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.285139 (* 1 = 0.285139 loss)
I0419 16:09:10.249248  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.479713 (* 1 = 0.479713 loss)
I0419 16:09:10.249253  3691 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:09:12.497187  3691 solver.cpp:229] Iteration 140, loss = 0.244432
I0419 16:09:12.497231  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.110122 (* 1 = 0.110122 loss)
I0419 16:09:12.497238  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.134311 (* 1 = 0.134311 loss)
I0419 16:09:12.497243  3691 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:09:14.658371  3691 solver.cpp:229] Iteration 160, loss = 0.350078
I0419 16:09:14.658413  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.185072 (* 1 = 0.185072 loss)
I0419 16:09:14.658421  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165006 (* 1 = 0.165006 loss)
I0419 16:09:14.658427  3691 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:09:16.865535  3691 solver.cpp:229] Iteration 180, loss = 0.268064
I0419 16:09:16.865579  3691 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.187254 (* 1 = 0.187254 loss)
I0419 16:09:16.865586  3691 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0808104 (* 1 = 0.0808104 loss)
I0419 16:09:16.865592  3691 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.113s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:09:22.740661  3702 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:09:22.740819  3702 net.cpp:413] Input 0 -> data
I0419 16:09:22.756295  3702 net.cpp:413] Input 1 -> im_info
I0419 16:09:22.756350  3702 layer_factory.hpp:77] Creating layer conv1
I0419 16:09:22.756378  3702 net.cpp:106] Creating Layer conv1
I0419 16:09:22.756392  3702 net.cpp:454] conv1 <- data
I0419 16:09:22.756407  3702 net.cpp:411] conv1 -> conv1
I0419 16:09:22.757180  3702 net.cpp:150] Setting up conv1
I0419 16:09:22.757202  3702 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:09:22.757206  3702 net.cpp:165] Memory required for data: 4816896
I0419 16:09:22.757222  3702 layer_factory.hpp:77] Creating layer relu1
I0419 16:09:22.757241  3702 net.cpp:106] Creating Layer relu1
I0419 16:09:22.757246  3702 net.cpp:454] relu1 <- conv1
I0419 16:09:22.757253  3702 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:09:22.757267  3702 net.cpp:150] Setting up relu1
I0419 16:09:22.757278  3702 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:09:22.757282  3702 net.cpp:165] Memory required for data: 9633792
I0419 16:09:22.757287  3702 layer_factory.hpp:77] Creating layer norm1
I0419 16:09:22.757298  3702 net.cpp:106] Creating Layer norm1
I0419 16:09:22.757309  3702 net.cpp:454] norm1 <- conv1
I0419 16:09:22.757316  3702 net.cpp:411] norm1 -> norm1
I0419 16:09:22.757444  3702 net.cpp:150] Setting up norm1
I0419 16:09:22.757458  3702 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:09:22.757460  3702 net.cpp:165] Memory required for data: 14450688
I0419 16:09:22.757464  3702 layer_factory.hpp:77] Creating layer pool1
I0419 16:09:22.757472  3702 net.cpp:106] Creating Layer pool1
I0419 16:09:22.757474  3702 net.cpp:454] pool1 <- norm1
I0419 16:09:22.757478  3702 net.cpp:411] pool1 -> pool1
I0419 16:09:22.757524  3702 net.cpp:150] Setting up pool1
I0419 16:09:22.757539  3702 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:09:22.757542  3702 net.cpp:165] Memory required for data: 15698304
I0419 16:09:22.757545  3702 layer_factory.hpp:77] Creating layer conv2
I0419 16:09:22.757552  3702 net.cpp:106] Creating Layer conv2
I0419 16:09:22.757556  3702 net.cpp:454] conv2 <- pool1
I0419 16:09:22.757563  3702 net.cpp:411] conv2 -> conv2
I0419 16:09:22.759766  3702 net.cpp:150] Setting up conv2
I0419 16:09:22.759784  3702 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:09:22.759788  3702 net.cpp:165] Memory required for data: 16559488
I0419 16:09:22.759796  3702 layer_factory.hpp:77] Creating layer relu2
I0419 16:09:22.759806  3702 net.cpp:106] Creating Layer relu2
I0419 16:09:22.759810  3702 net.cpp:454] relu2 <- conv2
I0419 16:09:22.759817  3702 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:09:22.759827  3702 net.cpp:150] Setting up relu2
I0419 16:09:22.759835  3702 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:09:22.759840  3702 net.cpp:165] Memory required for data: 17420672
I0419 16:09:22.759845  3702 layer_factory.hpp:77] Creating layer norm2
I0419 16:09:22.759855  3702 net.cpp:106] Creating Layer norm2
I0419 16:09:22.759861  3702 net.cpp:454] norm2 <- conv2
I0419 16:09:22.759868  3702 net.cpp:411] norm2 -> norm2
I0419 16:09:22.759969  3702 net.cpp:150] Setting up norm2
I0419 16:09:22.759982  3702 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:09:22.759984  3702 net.cpp:165] Memory required for data: 18281856
I0419 16:09:22.759987  3702 layer_factory.hpp:77] Creating layer pool2
I0419 16:09:22.759994  3702 net.cpp:106] Creating Layer pool2
I0419 16:09:22.759996  3702 net.cpp:454] pool2 <- norm2
I0419 16:09:22.760000  3702 net.cpp:411] pool2 -> pool2
I0419 16:09:22.760046  3702 net.cpp:150] Setting up pool2
I0419 16:09:22.760061  3702 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:09:22.760063  3702 net.cpp:165] Memory required for data: 18512256
I0419 16:09:22.760066  3702 layer_factory.hpp:77] Creating layer conv3
I0419 16:09:22.760076  3702 net.cpp:106] Creating Layer conv3
I0419 16:09:22.760084  3702 net.cpp:454] conv3 <- pool2
I0419 16:09:22.760092  3702 net.cpp:411] conv3 -> conv3
I0419 16:09:22.762432  3702 net.cpp:150] Setting up conv3
I0419 16:09:22.762449  3702 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:09:22.762451  3702 net.cpp:165] Memory required for data: 18857856
I0419 16:09:22.762461  3702 layer_factory.hpp:77] Creating layer relu3
I0419 16:09:22.762470  3702 net.cpp:106] Creating Layer relu3
I0419 16:09:22.762473  3702 net.cpp:454] relu3 <- conv3
I0419 16:09:22.762480  3702 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:09:22.762490  3702 net.cpp:150] Setting up relu3
I0419 16:09:22.762495  3702 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:09:22.762501  3702 net.cpp:165] Memory required for data: 19203456
I0419 16:09:22.762506  3702 layer_factory.hpp:77] Creating layer conv4
I0419 16:09:22.762517  3702 net.cpp:106] Creating Layer conv4
I0419 16:09:22.762529  3702 net.cpp:454] conv4 <- conv3
I0419 16:09:22.762537  3702 net.cpp:411] conv4 -> conv4
I0419 16:09:22.765875  3702 net.cpp:150] Setting up conv4
I0419 16:09:22.765893  3702 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:09:22.765897  3702 net.cpp:165] Memory required for data: 19549056
I0419 16:09:22.765902  3702 layer_factory.hpp:77] Creating layer relu4
I0419 16:09:22.765910  3702 net.cpp:106] Creating Layer relu4
I0419 16:09:22.765915  3702 net.cpp:454] relu4 <- conv4
I0419 16:09:22.765921  3702 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:09:22.765930  3702 net.cpp:150] Setting up relu4
I0419 16:09:22.765936  3702 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:09:22.765944  3702 net.cpp:165] Memory required for data: 19894656
I0419 16:09:22.765949  3702 layer_factory.hpp:77] Creating layer conv5
I0419 16:09:22.765960  3702 net.cpp:106] Creating Layer conv5
I0419 16:09:22.765972  3702 net.cpp:454] conv5 <- conv4
I0419 16:09:22.765980  3702 net.cpp:411] conv5 -> conv5
I0419 16:09:22.768326  3702 net.cpp:150] Setting up conv5
I0419 16:09:22.768345  3702 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:09:22.768348  3702 net.cpp:165] Memory required for data: 20125056
I0419 16:09:22.768357  3702 layer_factory.hpp:77] Creating layer relu5
I0419 16:09:22.768364  3702 net.cpp:106] Creating Layer relu5
I0419 16:09:22.768368  3702 net.cpp:454] relu5 <- conv5
I0419 16:09:22.768375  3702 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:09:22.768383  3702 net.cpp:150] Setting up relu5
I0419 16:09:22.768394  3702 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:09:22.768399  3702 net.cpp:165] Memory required for data: 20355456
I0419 16:09:22.768402  3702 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:09:22.768415  3702 net.cpp:106] Creating Layer rpn_conv1
I0419 16:09:22.768429  3702 net.cpp:454] rpn_conv1 <- conv5
I0419 16:09:22.768436  3702 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:09:22.770087  3702 net.cpp:150] Setting up rpn_conv1
I0419 16:09:22.770103  3702 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:09:22.770107  3702 net.cpp:165] Memory required for data: 20585856
I0419 16:09:22.770112  3702 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:09:22.770118  3702 net.cpp:106] Creating Layer rpn_relu1
I0419 16:09:22.770125  3702 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:09:22.770131  3702 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:09:22.770139  3702 net.cpp:150] Setting up rpn_relu1
I0419 16:09:22.770149  3702 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:09:22.770153  3702 net.cpp:165] Memory required for data: 20816256
I0419 16:09:22.770159  3702 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:09:22.770174  3702 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:09:22.770185  3702 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:09:22.770193  3702 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:09:22.770201  3702 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:09:22.770248  3702 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:09:22.770262  3702 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:09:22.770267  3702 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:09:22.770268  3702 net.cpp:165] Memory required for data: 21277056
I0419 16:09:22.770272  3702 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:09:22.770279  3702 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:09:22.770283  3702 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:09:22.770289  3702 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:09:22.770496  3702 net.cpp:150] Setting up rpn_cls_score
I0419 16:09:22.770511  3702 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:09:22.770514  3702 net.cpp:165] Memory required for data: 21293256
I0419 16:09:22.770520  3702 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:09:22.770525  3702 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:09:22.770530  3702 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:09:22.770539  3702 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:09:22.770748  3702 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:09:22.770761  3702 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:09:22.770764  3702 net.cpp:165] Memory required for data: 21325656
I0419 16:09:22.770769  3702 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:09:22.770776  3702 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:09:22.770779  3702 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:09:22.770783  3702 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:09:22.770823  3702 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:09:22.770841  3702 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:09:22.770845  3702 net.cpp:165] Memory required for data: 21341856
I0419 16:09:22.770849  3702 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:09:22.770854  3702 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:09:22.770858  3702 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:09:22.770862  3702 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:09:22.770933  3702 net.cpp:150] Setting up rpn_cls_prob
I0419 16:09:22.770944  3702 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:09:22.770947  3702 net.cpp:165] Memory required for data: 21358056
I0419 16:09:22.770951  3702 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:09:22.770956  3702 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:09:22.770959  3702 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:09:22.770963  3702 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:09:22.770992  3702 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:09:22.771008  3702 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:09:22.771013  3702 net.cpp:165] Memory required for data: 21374256
I0419 16:09:22.771018  3702 layer_factory.hpp:77] Creating layer proposal
I0419 16:09:22.772572  3702 net.cpp:106] Creating Layer proposal
I0419 16:09:22.772593  3702 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:09:22.772598  3702 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:09:22.772601  3702 net.cpp:454] proposal <- im_info
I0419 16:09:22.772608  3702 net.cpp:411] proposal -> rois
I0419 16:09:22.772616  3702 net.cpp:411] proposal -> scores
I0419 16:09:22.773911  3702 net.cpp:150] Setting up proposal
I0419 16:09:22.773933  3702 net.cpp:157] Top shape: 1 5 (5)
I0419 16:09:22.773938  3702 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:09:22.773941  3702 net.cpp:165] Memory required for data: 21374280
I0419 16:09:22.773946  3702 net.cpp:228] proposal does not need backward computation.
I0419 16:09:22.773949  3702 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:09:22.773952  3702 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:09:22.773957  3702 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:09:22.773964  3702 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:09:22.773969  3702 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:09:22.773974  3702 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:09:22.773982  3702 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:09:22.773985  3702 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:09:22.773990  3702 net.cpp:228] relu5 does not need backward computation.
I0419 16:09:22.773994  3702 net.cpp:228] conv5 does not need backward computation.
I0419 16:09:22.773999  3702 net.cpp:228] relu4 does not need backward computation.
I0419 16:09:22.774003  3702 net.cpp:228] conv4 does not need backward computation.
I0419 16:09:22.774009  3702 net.cpp:228] relu3 does not need backward computation.
I0419 16:09:22.774014  3702 net.cpp:228] conv3 does not need backward computation.
I0419 16:09:22.774019  3702 net.cpp:228] pool2 does not need backward computation.
I0419 16:09:22.774025  3702 net.cpp:228] norm2 does not need backward computation.
I0419 16:09:22.774030  3702 net.cpp:228] relu2 does not need backward computation.
I0419 16:09:22.774034  3702 net.cpp:228] conv2 does not need backward computation.
I0419 16:09:22.774039  3702 net.cpp:228] pool1 does not need backward computation.
I0419 16:09:22.774046  3702 net.cpp:228] norm1 does not need backward computation.
I0419 16:09:22.774051  3702 net.cpp:228] relu1 does not need backward computation.
I0419 16:09:22.774055  3702 net.cpp:228] conv1 does not need backward computation.
I0419 16:09:22.774060  3702 net.cpp:270] This network produces output rois
I0419 16:09:22.774065  3702 net.cpp:270] This network produces output scores
I0419 16:09:22.774093  3702 net.cpp:283] Network initialization done.
I0419 16:09:23.205399  3702 net.cpp:816] Ignoring source layer input-data
I0419 16:09:23.205435  3702 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:09:23.208999  3702 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:09:23.209026  3702 net.cpp:816] Ignoring source layer rpn-data
I0419 16:09:23.209029  3702 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:09:23.209031  3702 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:09:23.209035  3702 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:09:23.209038  3702 net.cpp:816] Ignoring source layer fc6
I0419 16:09:23.209040  3702 net.cpp:816] Ignoring source layer relu6
I0419 16:09:23.209043  3702 net.cpp:816] Ignoring source layer fc7
I0419 16:09:23.209045  3702 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.164s
im_proposals: 2/506 0.154s
im_proposals: 3/506 0.149s
im_proposals: 4/506 0.147s
im_proposals: 5/506 0.146s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.144s
im_proposals: 8/506 0.144s
im_proposals: 9/506 0.143s
im_proposals: 10/506 0.143s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.142s
im_proposals: 13/506 0.142s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.142s
im_proposals: 16/506 0.142s
im_proposals: 17/506 0.142s
im_proposals: 18/506 0.142s
im_proposals: 19/506 0.142s
im_proposals: 20/506 0.142s
im_proposals: 21/506 0.142s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.142s
im_proposals: 33/506 0.142s
im_proposals: 34/506 0.142s
im_proposals: 35/506 0.142s
im_proposals: 36/506 0.142s
im_proposals: 37/506 0.142s
im_proposals: 38/506 0.142s
im_proposals: 39/506 0.142s
im_proposals: 40/506 0.142s
im_proposals: 41/506 0.141s
im_proposals: 42/506 0.141s
im_proposals: 43/506 0.141s
im_proposals: 44/506 0.142s
im_proposals: 45/506 0.141s
im_proposals: 46/506 0.142s
im_proposals: 47/506 0.141s
im_proposals: 48/506 0.141s
im_proposals: 49/506 0.141s
im_proposals: 50/506 0.141s
im_proposals: 51/506 0.141s
im_proposals: 52/506 0.141s
im_proposals: 53/506 0.141s
im_proposals: 54/506 0.141s
im_proposals: 55/506 0.141s
im_proposals: 56/506 0.141s
im_proposals: 57/506 0.141s
im_proposals: 58/506 0.141s
im_proposals: 59/506 0.141s
im_proposals: 60/506 0.141s
im_proposals: 61/506 0.141s
im_proposals: 62/506 0.142s
im_proposals: 63/506 0.142s
im_proposals: 64/506 0.141s
im_proposals: 65/506 0.141s
im_proposals: 66/506 0.141s
im_proposals: 67/506 0.141s
im_proposals: 68/506 0.141s
im_proposals: 69/506 0.141s
im_proposals: 70/506 0.141s
im_proposals: 71/506 0.141s
im_proposals: 72/506 0.141s
im_proposals: 73/506 0.141s
im_proposals: 74/506 0.141s
im_proposals: 75/506 0.141s
im_proposals: 76/506 0.141s
im_proposals: 77/506 0.141s
im_proposals: 78/506 0.141s
im_proposals: 79/506 0.141s
im_proposals: 80/506 0.141s
im_proposals: 81/506 0.141s
im_proposals: 82/506 0.142s
im_proposals: 83/506 0.141s
im_proposals: 84/506 0.141s
im_proposals: 85/506 0.141s
im_proposals: 86/506 0.141s
im_proposals: 87/506 0.141s
im_proposals: 88/506 0.141s
im_proposals: 89/506 0.142s
im_proposals: 90/506 0.142s
im_proposals: 91/506 0.141s
im_proposals: 92/506 0.141s
im_proposals: 93/506 0.142s
im_proposals: 94/506 0.142s
im_proposals: 95/506 0.142s
im_proposals: 96/506 0.142s
im_proposals: 97/506 0.142s
im_proposals: 98/506 0.142s
im_proposals: 99/506 0.142s
im_proposals: 100/506 0.142s
im_proposals: 101/506 0.142s
im_proposals: 102/506 0.142s
im_proposals: 103/506 0.142s
im_proposals: 104/506 0.142s
im_proposals: 105/506 0.142s
im_proposals: 106/506 0.142s
im_proposals: 107/506 0.142s
im_proposals: 108/506 0.142s
im_proposals: 109/506 0.142s
im_proposals: 110/506 0.142s
im_proposals: 111/506 0.142s
im_proposals: 112/506 0.142s
im_proposals: 113/506 0.142s
im_proposals: 114/506 0.142s
im_proposals: 115/506 0.142s
im_proposals: 116/506 0.142s
im_proposals: 117/506 0.142s
im_proposals: 118/506 0.142s
im_proposals: 119/506 0.142s
im_proposals: 120/506 0.142s
im_proposals: 121/506 0.142s
im_proposals: 122/506 0.142s
im_proposals: 123/506 0.142s
im_proposals: 124/506 0.142s
im_proposals: 125/506 0.142s
im_proposals: 126/506 0.142s
im_proposals: 127/506 0.142s
im_proposals: 128/506 0.142s
im_proposals: 129/506 0.142s
im_proposals: 130/506 0.142s
im_proposals: 131/506 0.142s
im_proposals: 132/506 0.142s
im_proposals: 133/506 0.142s
im_proposals: 134/506 0.142s
im_proposals: 135/506 0.142s
im_proposals: 136/506 0.142s
im_proposals: 137/506 0.142s
im_proposals: 138/506 0.142s
im_proposals: 139/506 0.142s
im_proposals: 140/506 0.142s
im_proposals: 141/506 0.142s
im_proposals: 142/506 0.142s
im_proposals: 143/506 0.142s
im_proposals: 144/506 0.142s
im_proposals: 145/506 0.142s
im_proposals: 146/506 0.142s
im_proposals: 147/506 0.142s
im_proposals: 148/506 0.142s
im_proposals: 149/506 0.142s
im_proposals: 150/506 0.142s
im_proposals: 151/506 0.142s
im_proposals: 152/506 0.142s
im_proposals: 153/506 0.142s
im_proposals: 154/506 0.142s
im_proposals: 155/506 0.142s
im_proposals: 156/506 0.142s
im_proposals: 157/506 0.142s
im_proposals: 158/506 0.142s
im_proposals: 159/506 0.142s
im_proposals: 160/506 0.142s
im_proposals: 161/506 0.142s
im_proposals: 162/506 0.142s
im_proposals: 163/506 0.142s
im_proposals: 164/506 0.142s
im_proposals: 165/506 0.142s
im_proposals: 166/506 0.142s
im_proposals: 167/506 0.142s
im_proposals: 168/506 0.142s
im_proposals: 169/506 0.142s
im_proposals: 170/506 0.142s
im_proposals: 171/506 0.142s
im_proposals: 172/506 0.142s
im_proposals: 173/506 0.142s
im_proposals: 174/506 0.142s
im_proposals: 175/506 0.142s
im_proposals: 176/506 0.142s
im_proposals: 177/506 0.142s
im_proposals: 178/506 0.142s
im_proposals: 179/506 0.142s
im_proposals: 180/506 0.142s
im_proposals: 181/506 0.142s
im_proposals: 182/506 0.142s
im_proposals: 183/506 0.142s
im_proposals: 184/506 0.142s
im_proposals: 185/506 0.142s
im_proposals: 186/506 0.142s
im_proposals: 187/506 0.142s
im_proposals: 188/506 0.142s
im_proposals: 189/506 0.142s
im_proposals: 190/506 0.142s
im_proposals: 191/506 0.142s
im_proposals: 192/506 0.142s
im_proposals: 193/506 0.142s
im_proposals: 194/506 0.142s
im_proposals: 195/506 0.142s
im_proposals: 196/506 0.142s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.142s
im_proposals: 455/506 0.142s
im_proposals: 456/506 0.142s
im_proposals: 457/506 0.142s
im_proposals: 458/506 0.142s
im_proposals: 459/506 0.142s
im_proposals: 460/506 0.142s
im_proposals: 461/506 0.142s
im_proposals: 462/506 0.142s
im_proposals: 463/506 0.142s
im_proposals: 464/506 0.142s
im_proposals: 465/506 0.142s
im_proposals: 466/506 0.142s
im_proposals: 467/506 0.142s
im_proposals: 468/506 0.142s
im_proposals: 469/506 0.142s
im_proposals: 470/506 0.142s
im_proposals: 471/506 0.142s
im_proposals: 472/506 0.142s
im_proposals: 473/506 0.142s
im_proposals: 474/506 0.142s
im_proposals: 475/506 0.142s
im_proposals: 476/506 0.142s
im_proposals: 477/506 0.142s
im_proposals: 478/506 0.142s
im_proposals: 479/506 0.142s
im_proposals: 480/506 0.142s
im_proposals: 481/506 0.142s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 Fast R-CNN, init from stage 2 RPN R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.15217907e-07  -5.22005132e-03  -4.10793339e-02  -7.08718981e-02]
 [  8.92164694e-09   1.57054396e-02   2.19984295e-02  -2.78301045e-02]
 [ -1.94225821e-08  -8.61593031e-03   2.96989892e-02   6.69870494e-03]
 [ -7.33882189e-08   5.15535573e-02  -1.74732055e-02  -1.51888100e-02]
 [ -3.10440858e-09   3.40905333e-03   4.68776354e-02   1.95911229e-02]
 [  4.61332605e-08   5.50199124e-03   1.79429869e-03  -1.13158196e-02]
 [  6.25020928e-08   6.30476822e-03   4.30800884e-02  -2.43445225e-02]
 [ -6.09688356e-08   5.95824371e-03   3.37530213e-02   8.76786686e-05]
 [  1.42873350e-08  -3.70246134e-03   9.61448828e-03  -4.24198652e-02]
 [ -2.70083547e-08   1.58831410e-02   2.96526237e-02  -6.28295529e-04]
 [ -2.62309697e-08  -3.76861907e-03   3.92433991e-02  -1.64119690e-02]
 [  0.00000000e+00   8.80879668e-03   2.87056245e-02  -2.28243431e-02]
 [ -1.35863529e-09  -9.36826113e-03   3.53036770e-02   6.68836523e-03]
 [  1.29442049e-08  -9.80455974e-03   3.10986247e-02  -2.54646419e-02]
 [ -5.93788696e-08   1.30135879e-03   5.14335681e-02   1.49192686e-02]
 [  7.97444955e-08   3.25487806e-03  -1.91324592e-02  -4.42155972e-02]
 [  9.22009349e-08  -2.18390419e-02   1.16236154e-02  -1.29788245e-02]
 [ -2.68220901e-08  -1.63504751e-02  -3.63551257e-02  -7.34175252e-03]
 [ -3.47987421e-09  -1.28009905e-02   8.80987278e-02   3.39212810e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.62374266e-08   1.18576192e-02   2.12963320e-02  -3.55426945e-02]
 [  0.00000000e+00  -2.73562421e-02   3.71764302e-02   3.08031489e-02]
 [  3.29954284e-08   1.68099446e-02   9.91061250e-03  -6.47755188e-02]
 [  2.33865447e-08  -1.50194568e-02   3.35465732e-02  -5.10053122e-02]
 [  0.00000000e+00  -3.37360675e-02  -1.29876547e-02  -4.63749021e-02]
 [ -1.02445483e-08  -1.05859681e-02   3.63236621e-02  -3.95815330e-02]
 [  0.00000000e+00  -3.08435158e-02   2.72995049e-02  -3.17263682e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  9.77888703e-09  -3.37978094e-02   6.62351726e-03  -8.73072081e-02]
 [  2.13583310e-07   2.10562771e-02   1.04123890e-01   4.05486003e-02]
 [ -3.28065888e-08  -1.67200157e-02   9.78282262e-02  -1.73913034e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.20222791e-08   2.34385286e-02  -1.33259988e-02  -7.88555294e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.62520358e-08   7.97461874e-04   5.48839222e-02   5.03097506e-03]
 [  0.00000000e+00   4.31492925e-04  -5.06124686e-02  -1.98517618e-02]
 [ -3.17891439e-07  -6.48143639e-02   3.39208096e-02   1.15097900e-01]
 [ -2.70295211e-08  -9.81775733e-03   3.64169462e-02  -1.26073294e-02]
 [ -5.43892384e-08   1.18854707e-03   8.86017084e-03   9.47771966e-03]
 [  0.00000000e+00  -6.53625764e-03  -2.74993025e-02  -3.78074154e-02]
 [  5.06639481e-08   1.53237820e-02  -2.71972924e-02  -7.01517552e-02]
 [  0.00000000e+00  -1.49319681e-02  -3.88354932e-02  -2.72935242e-02]]
[ -2.54797916e-09  -3.41964957e-03   1.68764901e-02  -1.36807874e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.03118599  0.07820029  0.1879694   0.14515669]
 [ 0.10536447  0.0797608   0.11253537  0.15070204]
 [ 0.08942478  0.07682879  0.13667433  0.12012078]
 [ 0.07049701  0.08686918  0.10685716  0.16090195]
 [ 0.0689664   0.05151737  0.12282298  0.11078129]
 [ 0.10360388  0.08304575  0.15080414  0.14082425]
 [ 0.11339058  0.09352458  0.12649984  0.13832591]
 [ 0.09553999  0.0839336   0.11087185  0.10994704]
 [ 0.08797301  0.09229198  0.11841849  0.1628425 ]
 [ 0.06877713  0.08209774  0.10731047  0.11249492]
 [ 0.09604479  0.08389204  0.13290211  0.14286387]
 [ 0.08018352  0.0476292   0.06521492  0.08339381]
 [ 0.09109489  0.07227066  0.13383813  0.11657726]
 [ 0.08248341  0.06775028  0.13091794  0.11488883]
 [ 0.08776188  0.06086896  0.11978036  0.13528876]
 [ 0.06678698  0.09860393  0.10633958  0.14652086]
 [ 0.07079301  0.04207947  0.11737497  0.14684446]
 [ 0.0580357   0.06989958  0.10342338  0.11984149]
 [ 0.09966203  0.06932348  0.15290589  0.07684153]
 [ 0.          0.          0.          0.        ]
 [ 0.08639607  0.08594219  0.08092752  0.13541661]
 [ 0.03014494  0.06117042  0.08312902  0.06887794]
 [ 0.0929154   0.06259105  0.06433442  0.1096136 ]
 [ 0.04194884  0.04463624  0.07054561  0.1400867 ]
 [ 0.09694613  0.04771     0.01836732  0.06558402]
 [ 0.09028725  0.07122774  0.09998849  0.12037752]
 [ 0.0663192   0.08220008  0.11306004  0.0989453 ]
 [ 0.          0.          0.          0.        ]
 [ 0.06314527  0.07380807  0.11801258  0.12682124]
 [ 0.13168107  0.08334689  0.14726568  0.06057606]
 [ 0.10438679  0.08478485  0.16519981  0.15300941]
 [ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.07618705  0.09091894  0.11355521  0.12738066]
 [ 0.          0.          0.          0.        ]
 [ 0.09182852  0.05424865  0.09980124  0.098256  ]
 [ 0.09025062  0.06356327  0.11134718  0.0849115 ]
 [ 0.18744507  0.09413033  0.02669303  0.09491941]
 [ 0.09314606  0.07054383  0.10796287  0.10054283]
 [ 0.04503347  0.00237709  0.01772034  0.01895544]
 [ 0.08338253  0.05074086  0.08206391  0.09212766]
 [ 0.082225    0.07509092  0.05039421  0.13436018]
 [ 0.08375372  0.04804325  0.084512    0.08427064]]
[ 0.07453471  0.06203401  0.09298469  0.10116723]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:10:59.296068  3713 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:10:59.296128  3713 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt
I0419 16:10:59.296977  3713 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:10:59.297173  3713 layer_factory.hpp:77] Creating layer data
I0419 16:10:59.297911  3713 net.cpp:106] Creating Layer data
I0419 16:10:59.297936  3713 net.cpp:411] data -> data
I0419 16:10:59.297961  3713 net.cpp:411] data -> rois
I0419 16:10:59.297978  3713 net.cpp:411] data -> labels
I0419 16:10:59.297988  3713 net.cpp:411] data -> bbox_targets
I0419 16:10:59.297999  3713 net.cpp:411] data -> bbox_inside_weights
I0419 16:10:59.298008  3713 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:10:59.313562  3713 net.cpp:150] Setting up data
I0419 16:10:59.313586  3713 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:10:59.313594  3713 net.cpp:157] Top shape: 1 5 (5)
I0419 16:10:59.313602  3713 net.cpp:157] Top shape: 1 (1)
I0419 16:10:59.313608  3713 net.cpp:157] Top shape: 1 176 (176)
I0419 16:10:59.313613  3713 net.cpp:157] Top shape: 1 176 (176)
I0419 16:10:59.313619  3713 net.cpp:157] Top shape: 1 176 (176)
I0419 16:10:59.313623  3713 net.cpp:165] Memory required for data: 14402136
I0419 16:10:59.313632  3713 layer_factory.hpp:77] Creating layer conv1
I0419 16:10:59.313650  3713 net.cpp:106] Creating Layer conv1
I0419 16:10:59.313663  3713 net.cpp:454] conv1 <- data
I0419 16:10:59.313676  3713 net.cpp:411] conv1 -> conv1
I0419 16:10:59.315049  3713 net.cpp:150] Setting up conv1
I0419 16:10:59.315069  3713 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:10:59.315074  3713 net.cpp:165] Memory required for data: 129602136
I0419 16:10:59.315094  3713 layer_factory.hpp:77] Creating layer relu1
I0419 16:10:59.315115  3713 net.cpp:106] Creating Layer relu1
I0419 16:10:59.315121  3713 net.cpp:454] relu1 <- conv1
I0419 16:10:59.315134  3713 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:10:59.315146  3713 net.cpp:150] Setting up relu1
I0419 16:10:59.315155  3713 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:10:59.315160  3713 net.cpp:165] Memory required for data: 244802136
I0419 16:10:59.315165  3713 layer_factory.hpp:77] Creating layer norm1
I0419 16:10:59.315177  3713 net.cpp:106] Creating Layer norm1
I0419 16:10:59.315188  3713 net.cpp:454] norm1 <- conv1
I0419 16:10:59.315196  3713 net.cpp:411] norm1 -> norm1
I0419 16:10:59.315312  3713 net.cpp:150] Setting up norm1
I0419 16:10:59.315326  3713 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:10:59.315331  3713 net.cpp:165] Memory required for data: 360002136
I0419 16:10:59.315335  3713 layer_factory.hpp:77] Creating layer pool1
I0419 16:10:59.315345  3713 net.cpp:106] Creating Layer pool1
I0419 16:10:59.315353  3713 net.cpp:454] pool1 <- norm1
I0419 16:10:59.315361  3713 net.cpp:411] pool1 -> pool1
I0419 16:10:59.315403  3713 net.cpp:150] Setting up pool1
I0419 16:10:59.315415  3713 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:10:59.315420  3713 net.cpp:165] Memory required for data: 389110104
I0419 16:10:59.315424  3713 layer_factory.hpp:77] Creating layer conv2
I0419 16:10:59.315434  3713 net.cpp:106] Creating Layer conv2
I0419 16:10:59.315441  3713 net.cpp:454] conv2 <- pool1
I0419 16:10:59.315451  3713 net.cpp:411] conv2 -> conv2
I0419 16:10:59.317127  3713 net.cpp:150] Setting up conv2
I0419 16:10:59.317147  3713 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:10:59.317152  3713 net.cpp:165] Memory required for data: 408721752
I0419 16:10:59.317164  3713 layer_factory.hpp:77] Creating layer relu2
I0419 16:10:59.317173  3713 net.cpp:106] Creating Layer relu2
I0419 16:10:59.317178  3713 net.cpp:454] relu2 <- conv2
I0419 16:10:59.317191  3713 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:10:59.317200  3713 net.cpp:150] Setting up relu2
I0419 16:10:59.317209  3713 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:10:59.317214  3713 net.cpp:165] Memory required for data: 428333400
I0419 16:10:59.317217  3713 layer_factory.hpp:77] Creating layer norm2
I0419 16:10:59.317224  3713 net.cpp:106] Creating Layer norm2
I0419 16:10:59.317230  3713 net.cpp:454] norm2 <- conv2
I0419 16:10:59.317236  3713 net.cpp:411] norm2 -> norm2
I0419 16:10:59.317335  3713 net.cpp:150] Setting up norm2
I0419 16:10:59.317350  3713 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:10:59.317354  3713 net.cpp:165] Memory required for data: 447945048
I0419 16:10:59.317358  3713 layer_factory.hpp:77] Creating layer pool2
I0419 16:10:59.317370  3713 net.cpp:106] Creating Layer pool2
I0419 16:10:59.317375  3713 net.cpp:454] pool2 <- norm2
I0419 16:10:59.317384  3713 net.cpp:411] pool2 -> pool2
I0419 16:10:59.317422  3713 net.cpp:150] Setting up pool2
I0419 16:10:59.317435  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.317438  3713 net.cpp:165] Memory required for data: 453056856
I0419 16:10:59.317442  3713 layer_factory.hpp:77] Creating layer conv3
I0419 16:10:59.317451  3713 net.cpp:106] Creating Layer conv3
I0419 16:10:59.317456  3713 net.cpp:454] conv3 <- pool2
I0419 16:10:59.317463  3713 net.cpp:411] conv3 -> conv3
I0419 16:10:59.320772  3713 net.cpp:150] Setting up conv3
I0419 16:10:59.320791  3713 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:10:59.320796  3713 net.cpp:165] Memory required for data: 460724568
I0419 16:10:59.320809  3713 layer_factory.hpp:77] Creating layer relu3
I0419 16:10:59.320818  3713 net.cpp:106] Creating Layer relu3
I0419 16:10:59.320823  3713 net.cpp:454] relu3 <- conv3
I0419 16:10:59.320833  3713 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:10:59.320844  3713 net.cpp:150] Setting up relu3
I0419 16:10:59.320852  3713 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:10:59.320855  3713 net.cpp:165] Memory required for data: 468392280
I0419 16:10:59.320861  3713 layer_factory.hpp:77] Creating layer conv4
I0419 16:10:59.320871  3713 net.cpp:106] Creating Layer conv4
I0419 16:10:59.320878  3713 net.cpp:454] conv4 <- conv3
I0419 16:10:59.320888  3713 net.cpp:411] conv4 -> conv4
I0419 16:10:59.324193  3713 net.cpp:150] Setting up conv4
I0419 16:10:59.324211  3713 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:10:59.324216  3713 net.cpp:165] Memory required for data: 476059992
I0419 16:10:59.324225  3713 layer_factory.hpp:77] Creating layer relu4
I0419 16:10:59.324234  3713 net.cpp:106] Creating Layer relu4
I0419 16:10:59.324239  3713 net.cpp:454] relu4 <- conv4
I0419 16:10:59.324245  3713 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:10:59.324259  3713 net.cpp:150] Setting up relu4
I0419 16:10:59.324266  3713 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:10:59.324275  3713 net.cpp:165] Memory required for data: 483727704
I0419 16:10:59.324278  3713 layer_factory.hpp:77] Creating layer conv5
I0419 16:10:59.324291  3713 net.cpp:106] Creating Layer conv5
I0419 16:10:59.324297  3713 net.cpp:454] conv5 <- conv4
I0419 16:10:59.324307  3713 net.cpp:411] conv5 -> conv5
I0419 16:10:59.326619  3713 net.cpp:150] Setting up conv5
I0419 16:10:59.326638  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.326643  3713 net.cpp:165] Memory required for data: 488839512
I0419 16:10:59.326658  3713 layer_factory.hpp:77] Creating layer relu5
I0419 16:10:59.326668  3713 net.cpp:106] Creating Layer relu5
I0419 16:10:59.326673  3713 net.cpp:454] relu5 <- conv5
I0419 16:10:59.326688  3713 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:10:59.326696  3713 net.cpp:150] Setting up relu5
I0419 16:10:59.326704  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.326709  3713 net.cpp:165] Memory required for data: 493951320
I0419 16:10:59.326714  3713 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:10:59.326725  3713 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:10:59.326730  3713 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:10:59.326741  3713 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:10:59.326750  3713 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:10:59.326797  3713 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:10:59.326809  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.326817  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.326819  3713 net.cpp:165] Memory required for data: 504174936
I0419 16:10:59.326824  3713 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:10:59.326839  3713 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:10:59.326844  3713 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:10:59.326851  3713 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:10:59.326859  3713 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:10:59.326872  3713 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:10:59.326934  3713 net.cpp:150] Setting up roi_pool_conv5
I0419 16:10:59.326946  3713 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:10:59.326951  3713 net.cpp:165] Memory required for data: 504211800
I0419 16:10:59.326956  3713 layer_factory.hpp:77] Creating layer fc6
I0419 16:10:59.326966  3713 net.cpp:106] Creating Layer fc6
I0419 16:10:59.326972  3713 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:10:59.326980  3713 net.cpp:411] fc6 -> fc6
I0419 16:10:59.425573  3713 net.cpp:150] Setting up fc6
I0419 16:10:59.425614  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.425621  3713 net.cpp:165] Memory required for data: 504228184
I0419 16:10:59.425634  3713 layer_factory.hpp:77] Creating layer relu6
I0419 16:10:59.425647  3713 net.cpp:106] Creating Layer relu6
I0419 16:10:59.425653  3713 net.cpp:454] relu6 <- fc6
I0419 16:10:59.425663  3713 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:10:59.425674  3713 net.cpp:150] Setting up relu6
I0419 16:10:59.425683  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.425688  3713 net.cpp:165] Memory required for data: 504244568
I0419 16:10:59.425691  3713 layer_factory.hpp:77] Creating layer drop6
I0419 16:10:59.425707  3713 net.cpp:106] Creating Layer drop6
I0419 16:10:59.425719  3713 net.cpp:454] drop6 <- fc6
I0419 16:10:59.425726  3713 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:10:59.425762  3713 net.cpp:150] Setting up drop6
I0419 16:10:59.425776  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.425781  3713 net.cpp:165] Memory required for data: 504260952
I0419 16:10:59.425786  3713 layer_factory.hpp:77] Creating layer fc7
I0419 16:10:59.425794  3713 net.cpp:106] Creating Layer fc7
I0419 16:10:59.425804  3713 net.cpp:454] fc7 <- fc6
I0419 16:10:59.425812  3713 net.cpp:411] fc7 -> fc7
I0419 16:10:59.469607  3713 net.cpp:150] Setting up fc7
I0419 16:10:59.469652  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.469658  3713 net.cpp:165] Memory required for data: 504277336
I0419 16:10:59.469672  3713 layer_factory.hpp:77] Creating layer relu7
I0419 16:10:59.469688  3713 net.cpp:106] Creating Layer relu7
I0419 16:10:59.469694  3713 net.cpp:454] relu7 <- fc7
I0419 16:10:59.469704  3713 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:10:59.469715  3713 net.cpp:150] Setting up relu7
I0419 16:10:59.469727  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.469730  3713 net.cpp:165] Memory required for data: 504293720
I0419 16:10:59.469735  3713 layer_factory.hpp:77] Creating layer drop7
I0419 16:10:59.469744  3713 net.cpp:106] Creating Layer drop7
I0419 16:10:59.469753  3713 net.cpp:454] drop7 <- fc7
I0419 16:10:59.469760  3713 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:10:59.469790  3713 net.cpp:150] Setting up drop7
I0419 16:10:59.469802  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.469807  3713 net.cpp:165] Memory required for data: 504310104
I0419 16:10:59.469811  3713 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:10:59.469822  3713 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:10:59.469827  3713 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:10:59.469835  3713 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:10:59.469847  3713 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:10:59.469892  3713 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:10:59.469903  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.469908  3713 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:10:59.469913  3713 net.cpp:165] Memory required for data: 504342872
I0419 16:10:59.469918  3713 layer_factory.hpp:77] Creating layer cls_score
I0419 16:10:59.469928  3713 net.cpp:106] Creating Layer cls_score
I0419 16:10:59.469933  3713 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:10:59.469941  3713 net.cpp:411] cls_score -> cls_score
I0419 16:10:59.475522  3713 net.cpp:150] Setting up cls_score
I0419 16:10:59.475540  3713 net.cpp:157] Top shape: 1 44 (44)
I0419 16:10:59.475545  3713 net.cpp:165] Memory required for data: 504343048
I0419 16:10:59.475554  3713 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:10:59.475565  3713 net.cpp:106] Creating Layer bbox_pred
I0419 16:10:59.475570  3713 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:10:59.475579  3713 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:10:59.497799  3713 net.cpp:150] Setting up bbox_pred
I0419 16:10:59.497820  3713 net.cpp:157] Top shape: 1 176 (176)
I0419 16:10:59.497826  3713 net.cpp:165] Memory required for data: 504343752
I0419 16:10:59.497846  3713 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:10:59.497864  3713 net.cpp:106] Creating Layer loss_cls
I0419 16:10:59.497872  3713 net.cpp:454] loss_cls <- cls_score
I0419 16:10:59.497879  3713 net.cpp:454] loss_cls <- labels
I0419 16:10:59.497890  3713 net.cpp:411] loss_cls -> cls_loss
I0419 16:10:59.497910  3713 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:10:59.498015  3713 net.cpp:150] Setting up loss_cls
I0419 16:10:59.498028  3713 net.cpp:157] Top shape: (1)
I0419 16:10:59.498034  3713 net.cpp:160]     with loss weight 1
I0419 16:10:59.498052  3713 net.cpp:165] Memory required for data: 504343756
I0419 16:10:59.498059  3713 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:10:59.498070  3713 net.cpp:106] Creating Layer loss_bbox
I0419 16:10:59.498076  3713 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:10:59.498082  3713 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:10:59.498090  3713 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:10:59.498096  3713 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:10:59.498102  3713 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:10:59.498180  3713 net.cpp:150] Setting up loss_bbox
I0419 16:10:59.498193  3713 net.cpp:157] Top shape: (1)
I0419 16:10:59.498198  3713 net.cpp:160]     with loss weight 1
I0419 16:10:59.498204  3713 net.cpp:165] Memory required for data: 504343760
I0419 16:10:59.498209  3713 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:10:59.498225  3713 net.cpp:106] Creating Layer rpn_conv1
I0419 16:10:59.498236  3713 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:10:59.498245  3713 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:10:59.515377  3713 net.cpp:150] Setting up rpn_conv1
I0419 16:10:59.515400  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.515405  3713 net.cpp:165] Memory required for data: 509455568
I0419 16:10:59.515414  3713 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:10:59.515424  3713 net.cpp:106] Creating Layer rpn_relu1
I0419 16:10:59.515429  3713 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:10:59.515436  3713 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:10:59.515450  3713 net.cpp:150] Setting up rpn_relu1
I0419 16:10:59.515457  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.515466  3713 net.cpp:165] Memory required for data: 514567376
I0419 16:10:59.515471  3713 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:10:59.515478  3713 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:10:59.515483  3713 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:10:59.515493  3713 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:10:59.515506  3713 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:10:59.515547  3713 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:10:59.515558  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.515564  3713 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:10:59.515568  3713 net.cpp:165] Memory required for data: 524790992
I0419 16:10:59.515573  3713 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:10:59.515589  3713 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:10:59.515595  3713 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:10:59.515604  3713 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:10:59.515941  3713 net.cpp:150] Setting up rpn_cls_score
I0419 16:10:59.515960  3713 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:10:59.515965  3713 net.cpp:165] Memory required for data: 525150416
I0419 16:10:59.515974  3713 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:10:59.516000  3713 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:10:59.516011  3713 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:10:59.516021  3713 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:10:59.516480  3713 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:10:59.516494  3713 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:10:59.516499  3713 net.cpp:165] Memory required for data: 525869264
I0419 16:10:59.516507  3713 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:10:59.516520  3713 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:10:59.516527  3713 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:10:59.516535  3713 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:10:59.516541  3713 net.cpp:165] Memory required for data: 525869264
I0419 16:10:59.516546  3713 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:10:59.516554  3713 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:10:59.516561  3713 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:10:59.516566  3713 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:10:59.516569  3713 net.cpp:165] Memory required for data: 525869264
I0419 16:10:59.516573  3713 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:10:59.516578  3713 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:10:59.516582  3713 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:10:59.516589  3713 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:10:59.516593  3713 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:10:59.516598  3713 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:10:59.516602  3713 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:10:59.516607  3713 net.cpp:226] loss_bbox needs backward computation.
I0419 16:10:59.516616  3713 net.cpp:226] loss_cls needs backward computation.
I0419 16:10:59.516621  3713 net.cpp:226] bbox_pred needs backward computation.
I0419 16:10:59.516626  3713 net.cpp:226] cls_score needs backward computation.
I0419 16:10:59.516631  3713 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:10:59.516636  3713 net.cpp:226] drop7 needs backward computation.
I0419 16:10:59.516641  3713 net.cpp:226] relu7 needs backward computation.
I0419 16:10:59.516645  3713 net.cpp:226] fc7 needs backward computation.
I0419 16:10:59.516650  3713 net.cpp:226] drop6 needs backward computation.
I0419 16:10:59.516655  3713 net.cpp:226] relu6 needs backward computation.
I0419 16:10:59.516659  3713 net.cpp:226] fc6 needs backward computation.
I0419 16:10:59.516665  3713 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:10:59.516674  3713 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:10:59.516680  3713 net.cpp:228] relu5 does not need backward computation.
I0419 16:10:59.516685  3713 net.cpp:228] conv5 does not need backward computation.
I0419 16:10:59.516691  3713 net.cpp:228] relu4 does not need backward computation.
I0419 16:10:59.516696  3713 net.cpp:228] conv4 does not need backward computation.
I0419 16:10:59.516701  3713 net.cpp:228] relu3 does not need backward computation.
I0419 16:10:59.516707  3713 net.cpp:228] conv3 does not need backward computation.
I0419 16:10:59.516712  3713 net.cpp:228] pool2 does not need backward computation.
I0419 16:10:59.516718  3713 net.cpp:228] norm2 does not need backward computation.
I0419 16:10:59.516724  3713 net.cpp:228] relu2 does not need backward computation.
I0419 16:10:59.516728  3713 net.cpp:228] conv2 does not need backward computation.
I0419 16:10:59.516733  3713 net.cpp:228] pool1 does not need backward computation.
I0419 16:10:59.516738  3713 net.cpp:228] norm1 does not need backward computation.
I0419 16:10:59.516743  3713 net.cpp:228] relu1 does not need backward computation.
I0419 16:10:59.516749  3713 net.cpp:228] conv1 does not need backward computation.
I0419 16:10:59.516757  3713 net.cpp:228] data does not need backward computation.
I0419 16:10:59.516759  3713 net.cpp:270] This network produces output bbox_loss
I0419 16:10:59.516764  3713 net.cpp:270] This network produces output cls_loss
I0419 16:10:59.516800  3713 net.cpp:283] Network initialization done.
I0419 16:10:59.516950  3713 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
I0419 16:10:59.946239  3713 net.cpp:816] Ignoring source layer input-data
I0419 16:10:59.946277  3713 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:10:59.949817  3713 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:10:59.949846  3713 net.cpp:816] Ignoring source layer rpn_cls_score_reshape
I0419 16:10:59.949851  3713 net.cpp:816] Ignoring source layer rpn-data
I0419 16:10:59.949854  3713 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:10:59.949858  3713 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:10:59.949862  3713 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:10:59.993759  3713 net.cpp:816] Ignoring source layer silence_fc7
Solving...
I0419 16:11:00.326238  3713 solver.cpp:229] Iteration 0, loss = 1.21757
I0419 16:11:00.326287  3713 solver.cpp:245]     Train net output #0: bbox_loss = 0.0242392 (* 1 = 0.0242392 loss)
I0419 16:11:00.326297  3713 solver.cpp:245]     Train net output #1: cls_loss = 1.19333 (* 1 = 1.19333 loss)
I0419 16:11:00.326313  3713 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:11:04.894641  3713 solver.cpp:229] Iteration 20, loss = 0.241161
I0419 16:11:04.894688  3713 solver.cpp:245]     Train net output #0: bbox_loss = 0.0410683 (* 1 = 0.0410683 loss)
I0419 16:11:04.894695  3713 solver.cpp:245]     Train net output #1: cls_loss = 0.200093 (* 1 = 0.200093 loss)
I0419 16:11:04.894701  3713 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:11:09.459067  3713 solver.cpp:229] Iteration 40, loss = 0.222941
I0419 16:11:09.459115  3713 solver.cpp:245]     Train net output #0: bbox_loss = 0.00227355 (* 1 = 0.00227355 loss)
I0419 16:11:09.459121  3713 solver.cpp:245]     Train net output #1: cls_loss = 0.220667 (* 1 = 0.220667 loss)
I0419 16:11:09.459128  3713 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:11:13.960988  3713 solver.cpp:229] Iteration 60, loss = nan
I0419 16:11:13.961032  3713 solver.cpp:245]     Train net output #0: bbox_loss = nan (* 1 = nan loss)
I0419 16:11:13.961040  3713 solver.cpp:245]     Train net output #1: cls_loss = 0.176247 (* 1 = 0.176247 loss)
I0419 16:11:13.961046  3713 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:11:18.456809  3713 solver.cpp:229] Iteration 80, loss = 0.143793
I0419 16:11:18.456854  3713 solver.cpp:245]     Train net output #0: bbox_loss = 0.0193062 (* 1 = 0.0193062 loss)
I0419 16:11:18.456861  3713 solver.cpp:245]     Train net output #1: cls_loss = 0.124486 (* 1 = 0.124486 loss)
I0419 16:11:18.456868  3713 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel
done solving
cp /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel -> /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel
Final model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel

real	5m16.305s
user	4m24.971s
sys	0m51.273s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt --net /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(caffemodel='/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', comp_mode=False, gpu_id=0, imdb_name='voc_2007_test', max_per_image=100, prototxt='models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:11:27.246947  3727 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 1360
  dim: 800
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 44
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 176
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0419 16:11:27.247102  3727 net.cpp:413] Input 0 -> data
I0419 16:11:27.262117  3727 net.cpp:413] Input 1 -> im_info
I0419 16:11:27.262167  3727 layer_factory.hpp:77] Creating layer conv1
I0419 16:11:27.262197  3727 net.cpp:106] Creating Layer conv1
I0419 16:11:27.262203  3727 net.cpp:454] conv1 <- data
I0419 16:11:27.262218  3727 net.cpp:411] conv1 -> conv1
I0419 16:11:27.263662  3727 net.cpp:150] Setting up conv1
I0419 16:11:27.263684  3727 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:11:27.263690  3727 net.cpp:165] Memory required for data: 104448000
I0419 16:11:27.263710  3727 layer_factory.hpp:77] Creating layer relu1
I0419 16:11:27.263725  3727 net.cpp:106] Creating Layer relu1
I0419 16:11:27.263737  3727 net.cpp:454] relu1 <- conv1
I0419 16:11:27.263748  3727 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:11:27.263764  3727 net.cpp:150] Setting up relu1
I0419 16:11:27.263772  3727 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:11:27.263777  3727 net.cpp:165] Memory required for data: 208896000
I0419 16:11:27.263782  3727 layer_factory.hpp:77] Creating layer norm1
I0419 16:11:27.263792  3727 net.cpp:106] Creating Layer norm1
I0419 16:11:27.263797  3727 net.cpp:454] norm1 <- conv1
I0419 16:11:27.263810  3727 net.cpp:411] norm1 -> norm1
I0419 16:11:27.263924  3727 net.cpp:150] Setting up norm1
I0419 16:11:27.263939  3727 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:11:27.263944  3727 net.cpp:165] Memory required for data: 313344000
I0419 16:11:27.263948  3727 layer_factory.hpp:77] Creating layer pool1
I0419 16:11:27.263962  3727 net.cpp:106] Creating Layer pool1
I0419 16:11:27.263969  3727 net.cpp:454] pool1 <- norm1
I0419 16:11:27.263979  3727 net.cpp:411] pool1 -> pool1
I0419 16:11:27.264019  3727 net.cpp:150] Setting up pool1
I0419 16:11:27.264032  3727 net.cpp:157] Top shape: 1 96 341 201 (6579936)
I0419 16:11:27.264036  3727 net.cpp:165] Memory required for data: 339663744
I0419 16:11:27.264040  3727 layer_factory.hpp:77] Creating layer conv2
I0419 16:11:27.264050  3727 net.cpp:106] Creating Layer conv2
I0419 16:11:27.264056  3727 net.cpp:454] conv2 <- pool1
I0419 16:11:27.264066  3727 net.cpp:411] conv2 -> conv2
I0419 16:11:27.266232  3727 net.cpp:150] Setting up conv2
I0419 16:11:27.266252  3727 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:11:27.266257  3727 net.cpp:165] Memory required for data: 357349248
I0419 16:11:27.266269  3727 layer_factory.hpp:77] Creating layer relu2
I0419 16:11:27.266281  3727 net.cpp:106] Creating Layer relu2
I0419 16:11:27.266288  3727 net.cpp:454] relu2 <- conv2
I0419 16:11:27.266296  3727 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:11:27.266305  3727 net.cpp:150] Setting up relu2
I0419 16:11:27.266317  3727 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:11:27.266321  3727 net.cpp:165] Memory required for data: 375034752
I0419 16:11:27.266340  3727 layer_factory.hpp:77] Creating layer norm2
I0419 16:11:27.266353  3727 net.cpp:106] Creating Layer norm2
I0419 16:11:27.266358  3727 net.cpp:454] norm2 <- conv2
I0419 16:11:27.266368  3727 net.cpp:411] norm2 -> norm2
I0419 16:11:27.266461  3727 net.cpp:150] Setting up norm2
I0419 16:11:27.266475  3727 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:11:27.266479  3727 net.cpp:165] Memory required for data: 392720256
I0419 16:11:27.266484  3727 layer_factory.hpp:77] Creating layer pool2
I0419 16:11:27.266491  3727 net.cpp:106] Creating Layer pool2
I0419 16:11:27.266496  3727 net.cpp:454] pool2 <- norm2
I0419 16:11:27.266505  3727 net.cpp:411] pool2 -> pool2
I0419 16:11:27.266544  3727 net.cpp:150] Setting up pool2
I0419 16:11:27.266558  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.266562  3727 net.cpp:165] Memory required for data: 397211520
I0419 16:11:27.266566  3727 layer_factory.hpp:77] Creating layer conv3
I0419 16:11:27.266577  3727 net.cpp:106] Creating Layer conv3
I0419 16:11:27.266583  3727 net.cpp:454] conv3 <- pool2
I0419 16:11:27.266593  3727 net.cpp:411] conv3 -> conv3
I0419 16:11:27.269361  3727 net.cpp:150] Setting up conv3
I0419 16:11:27.269379  3727 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:11:27.269384  3727 net.cpp:165] Memory required for data: 403948416
I0419 16:11:27.269400  3727 layer_factory.hpp:77] Creating layer relu3
I0419 16:11:27.269409  3727 net.cpp:106] Creating Layer relu3
I0419 16:11:27.269415  3727 net.cpp:454] relu3 <- conv3
I0419 16:11:27.269423  3727 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:11:27.269433  3727 net.cpp:150] Setting up relu3
I0419 16:11:27.269439  3727 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:11:27.269443  3727 net.cpp:165] Memory required for data: 410685312
I0419 16:11:27.269448  3727 layer_factory.hpp:77] Creating layer conv4
I0419 16:11:27.269459  3727 net.cpp:106] Creating Layer conv4
I0419 16:11:27.269466  3727 net.cpp:454] conv4 <- conv3
I0419 16:11:27.269474  3727 net.cpp:411] conv4 -> conv4
I0419 16:11:27.272761  3727 net.cpp:150] Setting up conv4
I0419 16:11:27.272780  3727 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:11:27.272785  3727 net.cpp:165] Memory required for data: 417422208
I0419 16:11:27.272795  3727 layer_factory.hpp:77] Creating layer relu4
I0419 16:11:27.272804  3727 net.cpp:106] Creating Layer relu4
I0419 16:11:27.272809  3727 net.cpp:454] relu4 <- conv4
I0419 16:11:27.272819  3727 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:11:27.272832  3727 net.cpp:150] Setting up relu4
I0419 16:11:27.272840  3727 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:11:27.272848  3727 net.cpp:165] Memory required for data: 424159104
I0419 16:11:27.272853  3727 layer_factory.hpp:77] Creating layer conv5
I0419 16:11:27.272863  3727 net.cpp:106] Creating Layer conv5
I0419 16:11:27.272868  3727 net.cpp:454] conv5 <- conv4
I0419 16:11:27.272879  3727 net.cpp:411] conv5 -> conv5
I0419 16:11:27.275172  3727 net.cpp:150] Setting up conv5
I0419 16:11:27.275192  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.275197  3727 net.cpp:165] Memory required for data: 428650368
I0419 16:11:27.275213  3727 layer_factory.hpp:77] Creating layer relu5
I0419 16:11:27.275221  3727 net.cpp:106] Creating Layer relu5
I0419 16:11:27.275233  3727 net.cpp:454] relu5 <- conv5
I0419 16:11:27.275244  3727 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:11:27.275255  3727 net.cpp:150] Setting up relu5
I0419 16:11:27.275264  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.275267  3727 net.cpp:165] Memory required for data: 433141632
I0419 16:11:27.275272  3727 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:11:27.275282  3727 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:11:27.275292  3727 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:11:27.275300  3727 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:11:27.275307  3727 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:11:27.275352  3727 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:11:27.275365  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.275372  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.275375  3727 net.cpp:165] Memory required for data: 442124160
I0419 16:11:27.275379  3727 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:11:27.275391  3727 net.cpp:106] Creating Layer rpn_conv1
I0419 16:11:27.275401  3727 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_0
I0419 16:11:27.275409  3727 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:11:27.277029  3727 net.cpp:150] Setting up rpn_conv1
I0419 16:11:27.277047  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.277051  3727 net.cpp:165] Memory required for data: 446615424
I0419 16:11:27.277061  3727 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:11:27.277071  3727 net.cpp:106] Creating Layer rpn_relu1
I0419 16:11:27.277078  3727 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:11:27.277089  3727 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:11:27.277099  3727 net.cpp:150] Setting up rpn_relu1
I0419 16:11:27.277107  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.277112  3727 net.cpp:165] Memory required for data: 451106688
I0419 16:11:27.277117  3727 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:11:27.277125  3727 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:11:27.277129  3727 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:11:27.277137  3727 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:11:27.277145  3727 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:11:27.277191  3727 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:11:27.277204  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.277210  3727 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:11:27.277215  3727 net.cpp:165] Memory required for data: 460089216
I0419 16:11:27.277218  3727 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:11:27.277230  3727 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:11:27.277237  3727 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:11:27.277246  3727 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:11:27.277441  3727 net.cpp:150] Setting up rpn_cls_score
I0419 16:11:27.277454  3727 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:11:27.277458  3727 net.cpp:165] Memory required for data: 460405008
I0419 16:11:27.277467  3727 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:11:27.277482  3727 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:11:27.277495  3727 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:11:27.277503  3727 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:11:27.277709  3727 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:11:27.277722  3727 net.cpp:157] Top shape: 1 36 86 51 (157896)
I0419 16:11:27.277727  3727 net.cpp:165] Memory required for data: 461036592
I0419 16:11:27.277735  3727 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:11:27.277745  3727 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:11:27.277751  3727 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:11:27.277761  3727 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:11:27.277796  3727 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:11:27.277808  3727 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:11:27.277812  3727 net.cpp:165] Memory required for data: 461352384
I0419 16:11:27.277817  3727 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:11:27.277827  3727 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:11:27.277834  3727 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:11:27.277842  3727 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:11:27.277904  3727 net.cpp:150] Setting up rpn_cls_prob
I0419 16:11:27.277915  3727 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:11:27.277920  3727 net.cpp:165] Memory required for data: 461668176
I0419 16:11:27.277923  3727 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:11:27.277933  3727 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:11:27.277940  3727 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:11:27.277951  3727 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:11:27.277983  3727 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:11:27.277995  3727 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:11:27.277999  3727 net.cpp:165] Memory required for data: 461983968
I0419 16:11:27.278004  3727 layer_factory.hpp:77] Creating layer proposal
I0419 16:11:27.278501  3727 net.cpp:106] Creating Layer proposal
I0419 16:11:27.278517  3727 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:11:27.278524  3727 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:11:27.278530  3727 net.cpp:454] proposal <- im_info
I0419 16:11:27.278538  3727 net.cpp:411] proposal -> rois
I0419 16:11:27.279211  3727 net.cpp:150] Setting up proposal
I0419 16:11:27.279232  3727 net.cpp:157] Top shape: 1 5 (5)
I0419 16:11:27.279237  3727 net.cpp:165] Memory required for data: 461983988
I0419 16:11:27.279243  3727 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:11:27.279255  3727 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:11:27.279264  3727 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0419 16:11:27.279273  3727 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:11:27.279289  3727 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:11:27.279304  3727 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:11:27.279364  3727 net.cpp:150] Setting up roi_pool_conv5
I0419 16:11:27.279377  3727 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:11:27.279382  3727 net.cpp:165] Memory required for data: 462020852
I0419 16:11:27.279387  3727 layer_factory.hpp:77] Creating layer fc6
I0419 16:11:27.279399  3727 net.cpp:106] Creating Layer fc6
I0419 16:11:27.279408  3727 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:11:27.279417  3727 net.cpp:411] fc6 -> fc6
I0419 16:11:27.377741  3727 net.cpp:150] Setting up fc6
I0419 16:11:27.377785  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.377790  3727 net.cpp:165] Memory required for data: 462037236
I0419 16:11:27.377813  3727 layer_factory.hpp:77] Creating layer relu6
I0419 16:11:27.377831  3727 net.cpp:106] Creating Layer relu6
I0419 16:11:27.377838  3727 net.cpp:454] relu6 <- fc6
I0419 16:11:27.377846  3727 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:11:27.377858  3727 net.cpp:150] Setting up relu6
I0419 16:11:27.377866  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.377877  3727 net.cpp:165] Memory required for data: 462053620
I0419 16:11:27.377882  3727 layer_factory.hpp:77] Creating layer drop6
I0419 16:11:27.377900  3727 net.cpp:106] Creating Layer drop6
I0419 16:11:27.377912  3727 net.cpp:454] drop6 <- fc6
I0419 16:11:27.377918  3727 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:11:27.377952  3727 net.cpp:150] Setting up drop6
I0419 16:11:27.377965  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.377969  3727 net.cpp:165] Memory required for data: 462070004
I0419 16:11:27.377974  3727 layer_factory.hpp:77] Creating layer fc7
I0419 16:11:27.377986  3727 net.cpp:106] Creating Layer fc7
I0419 16:11:27.377993  3727 net.cpp:454] fc7 <- fc6
I0419 16:11:27.378000  3727 net.cpp:411] fc7 -> fc7
I0419 16:11:27.421516  3727 net.cpp:150] Setting up fc7
I0419 16:11:27.421561  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.421566  3727 net.cpp:165] Memory required for data: 462086388
I0419 16:11:27.421581  3727 layer_factory.hpp:77] Creating layer relu7
I0419 16:11:27.421593  3727 net.cpp:106] Creating Layer relu7
I0419 16:11:27.421598  3727 net.cpp:454] relu7 <- fc7
I0419 16:11:27.421609  3727 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:11:27.421622  3727 net.cpp:150] Setting up relu7
I0419 16:11:27.421633  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.421638  3727 net.cpp:165] Memory required for data: 462102772
I0419 16:11:27.421643  3727 layer_factory.hpp:77] Creating layer drop7
I0419 16:11:27.421650  3727 net.cpp:106] Creating Layer drop7
I0419 16:11:27.421658  3727 net.cpp:454] drop7 <- fc7
I0419 16:11:27.421664  3727 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:11:27.421700  3727 net.cpp:150] Setting up drop7
I0419 16:11:27.421711  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.421716  3727 net.cpp:165] Memory required for data: 462119156
I0419 16:11:27.421720  3727 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:11:27.421730  3727 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:11:27.421735  3727 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:11:27.421744  3727 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:11:27.421756  3727 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:11:27.421797  3727 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:11:27.421809  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.421815  3727 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:11:27.421818  3727 net.cpp:165] Memory required for data: 462151924
I0419 16:11:27.421823  3727 layer_factory.hpp:77] Creating layer cls_score
I0419 16:11:27.421842  3727 net.cpp:106] Creating Layer cls_score
I0419 16:11:27.421851  3727 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:11:27.421860  3727 net.cpp:411] cls_score -> cls_score
I0419 16:11:27.422715  3727 net.cpp:150] Setting up cls_score
I0419 16:11:27.422734  3727 net.cpp:157] Top shape: 1 44 (44)
I0419 16:11:27.422739  3727 net.cpp:165] Memory required for data: 462152100
I0419 16:11:27.422749  3727 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:11:27.422760  3727 net.cpp:106] Creating Layer bbox_pred
I0419 16:11:27.422765  3727 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:11:27.422771  3727 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:11:27.424587  3727 net.cpp:150] Setting up bbox_pred
I0419 16:11:27.424605  3727 net.cpp:157] Top shape: 1 176 (176)
I0419 16:11:27.424610  3727 net.cpp:165] Memory required for data: 462152804
I0419 16:11:27.424619  3727 layer_factory.hpp:77] Creating layer cls_prob
I0419 16:11:27.424630  3727 net.cpp:106] Creating Layer cls_prob
I0419 16:11:27.424635  3727 net.cpp:454] cls_prob <- cls_score
I0419 16:11:27.424645  3727 net.cpp:411] cls_prob -> cls_prob
I0419 16:11:27.424720  3727 net.cpp:150] Setting up cls_prob
I0419 16:11:27.424732  3727 net.cpp:157] Top shape: 1 44 (44)
I0419 16:11:27.424736  3727 net.cpp:165] Memory required for data: 462152980
I0419 16:11:27.424741  3727 net.cpp:228] cls_prob does not need backward computation.
I0419 16:11:27.424746  3727 net.cpp:228] bbox_pred does not need backward computation.
I0419 16:11:27.424751  3727 net.cpp:228] cls_score does not need backward computation.
I0419 16:11:27.424756  3727 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0419 16:11:27.424759  3727 net.cpp:228] drop7 does not need backward computation.
I0419 16:11:27.424767  3727 net.cpp:228] relu7 does not need backward computation.
I0419 16:11:27.424770  3727 net.cpp:228] fc7 does not need backward computation.
I0419 16:11:27.424774  3727 net.cpp:228] drop6 does not need backward computation.
I0419 16:11:27.424782  3727 net.cpp:228] relu6 does not need backward computation.
I0419 16:11:27.424785  3727 net.cpp:228] fc6 does not need backward computation.
I0419 16:11:27.424790  3727 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:11:27.424798  3727 net.cpp:228] proposal does not need backward computation.
I0419 16:11:27.424803  3727 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:11:27.424809  3727 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:11:27.424815  3727 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:11:27.424820  3727 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:11:27.424826  3727 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:11:27.424831  3727 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:11:27.424837  3727 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:11:27.424842  3727 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:11:27.424849  3727 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:11:27.424854  3727 net.cpp:228] relu5 does not need backward computation.
I0419 16:11:27.424859  3727 net.cpp:228] conv5 does not need backward computation.
I0419 16:11:27.424866  3727 net.cpp:228] relu4 does not need backward computation.
I0419 16:11:27.424871  3727 net.cpp:228] conv4 does not need backward computation.
I0419 16:11:27.424876  3727 net.cpp:228] relu3 does not need backward computation.
I0419 16:11:27.424881  3727 net.cpp:228] conv3 does not need backward computation.
I0419 16:11:27.424887  3727 net.cpp:228] pool2 does not need backward computation.
I0419 16:11:27.424892  3727 net.cpp:228] norm2 does not need backward computation.
I0419 16:11:27.424898  3727 net.cpp:228] relu2 does not need backward computation.
I0419 16:11:27.424902  3727 net.cpp:228] conv2 does not need backward computation.
I0419 16:11:27.424908  3727 net.cpp:228] pool1 does not need backward computation.
I0419 16:11:27.424913  3727 net.cpp:228] norm1 does not need backward computation.
I0419 16:11:27.424918  3727 net.cpp:228] relu1 does not need backward computation.
I0419 16:11:27.424926  3727 net.cpp:228] conv1 does not need backward computation.
I0419 16:11:27.424929  3727 net.cpp:270] This network produces output bbox_pred
I0419 16:11:27.424934  3727 net.cpp:270] This network produces output cls_prob
I0419 16:11:27.424973  3727 net.cpp:283] Network initialization done.
I0419 16:11:27.862149  3727 net.cpp:816] Ignoring source layer data
I0419 16:11:27.909829  3727 net.cpp:816] Ignoring source layer loss_cls
I0419 16:11:27.909859  3727 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:11:27.910404  3727 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:11:27.910415  3727 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Traceback (most recent call last):
  File "./tools/test_net.py", line 85, in <module>
    imdb = get_imdb(args.imdb_name)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/factory.py", line 38, in get_imdb
    return __sets[name]()
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/factory.py", line 20, in <lambda>
    __sets[name] = (lambda split=split, year=year: pascal_voc(split, year))
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 42, in __init__
    self._image_index = self._load_image_set_index()
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 86, in _load_image_set_index
    'Path does not exist: {}'.format(image_set_file)
AssertionError: Path does not exist: /mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/VOC2007/ImageSets/Main/test.txt
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-12-51
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-12-51
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-12-51
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-12-51
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:12:55.235705  3767 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:12:55.235766  3767 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 16:12:55.236521  3767 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:12:55.236703  3767 layer_factory.hpp:77] Creating layer input-data
I0419 16:12:55.237272  3767 net.cpp:106] Creating Layer input-data
I0419 16:12:55.237296  3767 net.cpp:411] input-data -> data
I0419 16:12:55.237319  3767 net.cpp:411] input-data -> im_info
I0419 16:12:55.237334  3767 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:12:55.253342  3767 net.cpp:150] Setting up input-data
I0419 16:12:55.253368  3767 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:12:55.253377  3767 net.cpp:157] Top shape: 1 3 (3)
I0419 16:12:55.253383  3767 net.cpp:157] Top shape: 1 4 (4)
I0419 16:12:55.253391  3767 net.cpp:165] Memory required for data: 7200028
I0419 16:12:55.253397  3767 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:12:55.253412  3767 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:12:55.253420  3767 net.cpp:454] data_input-data_0_split <- data
I0419 16:12:55.253435  3767 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:12:55.253451  3767 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:12:55.253494  3767 net.cpp:150] Setting up data_input-data_0_split
I0419 16:12:55.253505  3767 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:12:55.253515  3767 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:12:55.253518  3767 net.cpp:165] Memory required for data: 21600028
I0419 16:12:55.253525  3767 layer_factory.hpp:77] Creating layer conv1
I0419 16:12:55.253541  3767 net.cpp:106] Creating Layer conv1
I0419 16:12:55.253551  3767 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:12:55.253561  3767 net.cpp:411] conv1 -> conv1
I0419 16:12:55.254920  3767 net.cpp:150] Setting up conv1
I0419 16:12:55.254940  3767 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:12:55.254945  3767 net.cpp:165] Memory required for data: 79200028
I0419 16:12:55.254964  3767 layer_factory.hpp:77] Creating layer relu1
I0419 16:12:55.254983  3767 net.cpp:106] Creating Layer relu1
I0419 16:12:55.254988  3767 net.cpp:454] relu1 <- conv1
I0419 16:12:55.254997  3767 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:12:55.255009  3767 net.cpp:150] Setting up relu1
I0419 16:12:55.255020  3767 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:12:55.255025  3767 net.cpp:165] Memory required for data: 136800028
I0419 16:12:55.255029  3767 layer_factory.hpp:77] Creating layer norm1
I0419 16:12:55.255043  3767 net.cpp:106] Creating Layer norm1
I0419 16:12:55.255051  3767 net.cpp:454] norm1 <- conv1
I0419 16:12:55.255061  3767 net.cpp:411] norm1 -> norm1
I0419 16:12:55.255174  3767 net.cpp:150] Setting up norm1
I0419 16:12:55.255187  3767 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:12:55.255192  3767 net.cpp:165] Memory required for data: 194400028
I0419 16:12:55.255197  3767 layer_factory.hpp:77] Creating layer pool1
I0419 16:12:55.255206  3767 net.cpp:106] Creating Layer pool1
I0419 16:12:55.255216  3767 net.cpp:454] pool1 <- norm1
I0419 16:12:55.255223  3767 net.cpp:411] pool1 -> pool1
I0419 16:12:55.255265  3767 net.cpp:150] Setting up pool1
I0419 16:12:55.255276  3767 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:12:55.255280  3767 net.cpp:165] Memory required for data: 208954012
I0419 16:12:55.255285  3767 layer_factory.hpp:77] Creating layer conv2
I0419 16:12:55.255297  3767 net.cpp:106] Creating Layer conv2
I0419 16:12:55.255306  3767 net.cpp:454] conv2 <- pool1
I0419 16:12:55.255313  3767 net.cpp:411] conv2 -> conv2
I0419 16:12:55.257010  3767 net.cpp:150] Setting up conv2
I0419 16:12:55.257030  3767 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:12:55.257035  3767 net.cpp:165] Memory required for data: 218759836
I0419 16:12:55.257047  3767 layer_factory.hpp:77] Creating layer relu2
I0419 16:12:55.257061  3767 net.cpp:106] Creating Layer relu2
I0419 16:12:55.257067  3767 net.cpp:454] relu2 <- conv2
I0419 16:12:55.257076  3767 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:12:55.257086  3767 net.cpp:150] Setting up relu2
I0419 16:12:55.257092  3767 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:12:55.257097  3767 net.cpp:165] Memory required for data: 228565660
I0419 16:12:55.257102  3767 layer_factory.hpp:77] Creating layer norm2
I0419 16:12:55.257110  3767 net.cpp:106] Creating Layer norm2
I0419 16:12:55.257115  3767 net.cpp:454] norm2 <- conv2
I0419 16:12:55.257125  3767 net.cpp:411] norm2 -> norm2
I0419 16:12:55.257217  3767 net.cpp:150] Setting up norm2
I0419 16:12:55.257230  3767 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:12:55.257235  3767 net.cpp:165] Memory required for data: 238371484
I0419 16:12:55.257238  3767 layer_factory.hpp:77] Creating layer pool2
I0419 16:12:55.257246  3767 net.cpp:106] Creating Layer pool2
I0419 16:12:55.257251  3767 net.cpp:454] pool2 <- norm2
I0419 16:12:55.257261  3767 net.cpp:411] pool2 -> pool2
I0419 16:12:55.257303  3767 net.cpp:150] Setting up pool2
I0419 16:12:55.257315  3767 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:12:55.257319  3767 net.cpp:165] Memory required for data: 240927388
I0419 16:12:55.257323  3767 layer_factory.hpp:77] Creating layer conv3
I0419 16:12:55.257335  3767 net.cpp:106] Creating Layer conv3
I0419 16:12:55.257344  3767 net.cpp:454] conv3 <- pool2
I0419 16:12:55.257354  3767 net.cpp:411] conv3 -> conv3
I0419 16:12:55.260668  3767 net.cpp:150] Setting up conv3
I0419 16:12:55.260687  3767 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:12:55.260691  3767 net.cpp:165] Memory required for data: 244761244
I0419 16:12:55.260704  3767 layer_factory.hpp:77] Creating layer relu3
I0419 16:12:55.260718  3767 net.cpp:106] Creating Layer relu3
I0419 16:12:55.260725  3767 net.cpp:454] relu3 <- conv3
I0419 16:12:55.260733  3767 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:12:55.260742  3767 net.cpp:150] Setting up relu3
I0419 16:12:55.260751  3767 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:12:55.260754  3767 net.cpp:165] Memory required for data: 248595100
I0419 16:12:55.260758  3767 layer_factory.hpp:77] Creating layer conv4
I0419 16:12:55.260772  3767 net.cpp:106] Creating Layer conv4
I0419 16:12:55.260777  3767 net.cpp:454] conv4 <- conv3
I0419 16:12:55.260785  3767 net.cpp:411] conv4 -> conv4
I0419 16:12:55.264101  3767 net.cpp:150] Setting up conv4
I0419 16:12:55.264120  3767 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:12:55.264125  3767 net.cpp:165] Memory required for data: 252428956
I0419 16:12:55.264134  3767 layer_factory.hpp:77] Creating layer relu4
I0419 16:12:55.264142  3767 net.cpp:106] Creating Layer relu4
I0419 16:12:55.264150  3767 net.cpp:454] relu4 <- conv4
I0419 16:12:55.264158  3767 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:12:55.264165  3767 net.cpp:150] Setting up relu4
I0419 16:12:55.264173  3767 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:12:55.264180  3767 net.cpp:165] Memory required for data: 256262812
I0419 16:12:55.264185  3767 layer_factory.hpp:77] Creating layer conv5
I0419 16:12:55.264197  3767 net.cpp:106] Creating Layer conv5
I0419 16:12:55.264209  3767 net.cpp:454] conv5 <- conv4
I0419 16:12:55.264219  3767 net.cpp:411] conv5 -> conv5
I0419 16:12:55.266506  3767 net.cpp:150] Setting up conv5
I0419 16:12:55.266525  3767 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:12:55.266530  3767 net.cpp:165] Memory required for data: 258818716
I0419 16:12:55.266542  3767 layer_factory.hpp:77] Creating layer relu5
I0419 16:12:55.266556  3767 net.cpp:106] Creating Layer relu5
I0419 16:12:55.266564  3767 net.cpp:454] relu5 <- conv5
I0419 16:12:55.266572  3767 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:12:55.266585  3767 net.cpp:150] Setting up relu5
I0419 16:12:55.266597  3767 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:12:55.266602  3767 net.cpp:165] Memory required for data: 261374620
I0419 16:12:55.266610  3767 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:12:55.266629  3767 net.cpp:106] Creating Layer rpn_conv1
I0419 16:12:55.266636  3767 net.cpp:454] rpn_conv1 <- conv5
I0419 16:12:55.266645  3767 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:12:55.283700  3767 net.cpp:150] Setting up rpn_conv1
I0419 16:12:55.283718  3767 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:12:55.283725  3767 net.cpp:165] Memory required for data: 263930524
I0419 16:12:55.283732  3767 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:12:55.283741  3767 net.cpp:106] Creating Layer rpn_relu1
I0419 16:12:55.283747  3767 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:12:55.283754  3767 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:12:55.283763  3767 net.cpp:150] Setting up rpn_relu1
I0419 16:12:55.283771  3767 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:12:55.283776  3767 net.cpp:165] Memory required for data: 266486428
I0419 16:12:55.283782  3767 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:12:55.283790  3767 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:12:55.283797  3767 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:12:55.283807  3767 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:12:55.283814  3767 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:12:55.283859  3767 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:12:55.283871  3767 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:12:55.283879  3767 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:12:55.283882  3767 net.cpp:165] Memory required for data: 271598236
I0419 16:12:55.283887  3767 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:12:55.283906  3767 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:12:55.283912  3767 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:12:55.283921  3767 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:12:55.284257  3767 net.cpp:150] Setting up rpn_cls_score
I0419 16:12:55.284271  3767 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:12:55.284276  3767 net.cpp:165] Memory required for data: 271777948
I0419 16:12:55.284284  3767 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:12:55.284293  3767 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:12:55.284298  3767 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:12:55.284307  3767 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:12:55.284314  3767 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:12:55.284356  3767 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:12:55.284368  3767 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:12:55.284373  3767 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:12:55.284377  3767 net.cpp:165] Memory required for data: 272137372
I0419 16:12:55.284382  3767 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:12:55.284396  3767 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:12:55.284406  3767 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:12:55.284417  3767 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:12:55.284868  3767 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:12:55.284881  3767 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:12:55.284886  3767 net.cpp:165] Memory required for data: 272496796
I0419 16:12:55.284894  3767 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:12:55.284905  3767 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:12:55.284910  3767 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:12:55.284921  3767 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:12:55.284955  3767 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:12:55.284966  3767 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:12:55.284970  3767 net.cpp:165] Memory required for data: 272676508
I0419 16:12:55.284976  3767 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:12:55.285437  3767 net.cpp:106] Creating Layer rpn-data
I0419 16:12:55.285456  3767 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:12:55.285465  3767 net.cpp:454] rpn-data <- gt_boxes
I0419 16:12:55.285470  3767 net.cpp:454] rpn-data <- im_info
I0419 16:12:55.285475  3767 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:12:55.285485  3767 net.cpp:411] rpn-data -> rpn_labels
I0419 16:12:55.285496  3767 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:12:55.285511  3767 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:12:55.285521  3767 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:12:55.286801  3767 net.cpp:150] Setting up rpn-data
I0419 16:12:55.286823  3767 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:12:55.286830  3767 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:12:55.286836  3767 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:12:55.286841  3767 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:12:55.286845  3767 net.cpp:165] Memory required for data: 273844636
I0419 16:12:55.286851  3767 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:12:55.286864  3767 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:12:55.286872  3767 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:12:55.286880  3767 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:12:55.286892  3767 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:12:55.286911  3767 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:12:55.287032  3767 net.cpp:150] Setting up rpn_loss_cls
I0419 16:12:55.287045  3767 net.cpp:157] Top shape: (1)
I0419 16:12:55.287050  3767 net.cpp:160]     with loss weight 1
I0419 16:12:55.287071  3767 net.cpp:165] Memory required for data: 273844640
I0419 16:12:55.287077  3767 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:12:55.287091  3767 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:12:55.287101  3767 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:12:55.287106  3767 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:12:55.287112  3767 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:12:55.287119  3767 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:12:55.287127  3767 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:12:55.287703  3767 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:12:55.287717  3767 net.cpp:157] Top shape: (1)
I0419 16:12:55.287722  3767 net.cpp:160]     with loss weight 1
I0419 16:12:55.287729  3767 net.cpp:165] Memory required for data: 273844644
I0419 16:12:55.287736  3767 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:12:55.287750  3767 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:12:55.287760  3767 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:12:55.287796  3767 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:12:55.287808  3767 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:12:55.287812  3767 net.cpp:165] Memory required for data: 273881508
I0419 16:12:55.287817  3767 layer_factory.hpp:77] Creating layer fc6
I0419 16:12:55.287828  3767 net.cpp:106] Creating Layer fc6
I0419 16:12:55.287837  3767 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:12:55.287844  3767 net.cpp:411] fc6 -> fc6
I0419 16:12:55.385717  3767 net.cpp:150] Setting up fc6
I0419 16:12:55.385761  3767 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:12:55.385766  3767 net.cpp:165] Memory required for data: 273897892
I0419 16:12:55.385787  3767 layer_factory.hpp:77] Creating layer relu6
I0419 16:12:55.385802  3767 net.cpp:106] Creating Layer relu6
I0419 16:12:55.385813  3767 net.cpp:454] relu6 <- fc6
I0419 16:12:55.385823  3767 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:12:55.385836  3767 net.cpp:150] Setting up relu6
I0419 16:12:55.385845  3767 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:12:55.385849  3767 net.cpp:165] Memory required for data: 273914276
I0419 16:12:55.385854  3767 layer_factory.hpp:77] Creating layer fc7
I0419 16:12:55.385871  3767 net.cpp:106] Creating Layer fc7
I0419 16:12:55.385877  3767 net.cpp:454] fc7 <- fc6
I0419 16:12:55.385886  3767 net.cpp:411] fc7 -> fc7
I0419 16:12:55.429466  3767 net.cpp:150] Setting up fc7
I0419 16:12:55.429508  3767 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:12:55.429513  3767 net.cpp:165] Memory required for data: 273930660
I0419 16:12:55.429527  3767 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:12:55.429549  3767 net.cpp:106] Creating Layer silence_fc7
I0419 16:12:55.429566  3767 net.cpp:454] silence_fc7 <- fc7
I0419 16:12:55.429577  3767 net.cpp:150] Setting up silence_fc7
I0419 16:12:55.429584  3767 net.cpp:165] Memory required for data: 273930660
I0419 16:12:55.429587  3767 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:12:55.429594  3767 net.cpp:228] fc7 does not need backward computation.
I0419 16:12:55.429601  3767 net.cpp:228] relu6 does not need backward computation.
I0419 16:12:55.429605  3767 net.cpp:228] fc6 does not need backward computation.
I0419 16:12:55.429611  3767 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:12:55.429615  3767 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:12:55.429620  3767 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:12:55.429625  3767 net.cpp:226] rpn-data needs backward computation.
I0419 16:12:55.429632  3767 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:12:55.429637  3767 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:12:55.429644  3767 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:12:55.429649  3767 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:12:55.429654  3767 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:12:55.429661  3767 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:12:55.429666  3767 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:12:55.429672  3767 net.cpp:226] relu5 needs backward computation.
I0419 16:12:55.429675  3767 net.cpp:226] conv5 needs backward computation.
I0419 16:12:55.429682  3767 net.cpp:226] relu4 needs backward computation.
I0419 16:12:55.429687  3767 net.cpp:226] conv4 needs backward computation.
I0419 16:12:55.429692  3767 net.cpp:226] relu3 needs backward computation.
I0419 16:12:55.429697  3767 net.cpp:226] conv3 needs backward computation.
I0419 16:12:55.429702  3767 net.cpp:226] pool2 needs backward computation.
I0419 16:12:55.429708  3767 net.cpp:226] norm2 needs backward computation.
I0419 16:12:55.429713  3767 net.cpp:226] relu2 needs backward computation.
I0419 16:12:55.429716  3767 net.cpp:226] conv2 needs backward computation.
I0419 16:12:55.429723  3767 net.cpp:226] pool1 needs backward computation.
I0419 16:12:55.429728  3767 net.cpp:226] norm1 needs backward computation.
I0419 16:12:55.429731  3767 net.cpp:226] relu1 needs backward computation.
I0419 16:12:55.429736  3767 net.cpp:226] conv1 needs backward computation.
I0419 16:12:55.429741  3767 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:12:55.429749  3767 net.cpp:228] input-data does not need backward computation.
I0419 16:12:55.429752  3767 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:12:55.429757  3767 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:12:55.429791  3767 net.cpp:283] Network initialization done.
I0419 16:12:55.429909  3767 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:12:55.882843  3767 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:12:55.882874  3767 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:12:55.913086  3767 net.cpp:816] Ignoring source layer drop6
I0419 16:12:55.926596  3767 net.cpp:816] Ignoring source layer relu7
I0419 16:12:55.926621  3767 net.cpp:816] Ignoring source layer drop7
I0419 16:12:55.926625  3767 net.cpp:816] Ignoring source layer fc8
I0419 16:12:55.926628  3767 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:12:56.109391  3767 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 16:12:56.109441  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 16:12:56.109455  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 16:12:56.109472  3767 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:12:59.033061  3767 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 16:12:59.033108  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 16:12:59.033118  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 16:12:59.033126  3767 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:13:01.887081  3767 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 16:13:01.887128  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 16:13:01.887140  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 16:13:01.887146  3767 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:13:04.738661  3767 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 16:13:04.738705  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 16:13:04.738715  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 16:13:04.738723  3767 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:13:07.601483  3767 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 16:13:07.601531  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 16:13:07.601541  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 16:13:07.601549  3767 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:13:10.458811  3767 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 16:13:10.458855  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 16:13:10.458868  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 16:13:10.458875  3767 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:13:13.313174  3767 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 16:13:13.313218  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 16:13:13.313230  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 16:13:13.313236  3767 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:13:16.170142  3767 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 16:13:16.170183  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 16:13:16.170194  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 16:13:16.170203  3767 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:13:19.030617  3767 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 16:13:19.030660  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 16:13:19.030673  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 16:13:19.030680  3767 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:13:21.897670  3767 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 16:13:21.897716  3767 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 16:13:21.897727  3767 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 16:13:21.897734  3767 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:13:28.538679  3867 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:13:28.538842  3867 net.cpp:413] Input 0 -> data
I0419 16:13:28.554038  3867 net.cpp:413] Input 1 -> im_info
I0419 16:13:28.554100  3867 layer_factory.hpp:77] Creating layer conv1
I0419 16:13:28.554129  3867 net.cpp:106] Creating Layer conv1
I0419 16:13:28.554136  3867 net.cpp:454] conv1 <- data
I0419 16:13:28.554157  3867 net.cpp:411] conv1 -> conv1
I0419 16:13:28.554936  3867 net.cpp:150] Setting up conv1
I0419 16:13:28.554962  3867 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:13:28.554966  3867 net.cpp:165] Memory required for data: 4816896
I0419 16:13:28.554987  3867 layer_factory.hpp:77] Creating layer relu1
I0419 16:13:28.555002  3867 net.cpp:106] Creating Layer relu1
I0419 16:13:28.555007  3867 net.cpp:454] relu1 <- conv1
I0419 16:13:28.555014  3867 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:13:28.555032  3867 net.cpp:150] Setting up relu1
I0419 16:13:28.555039  3867 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:13:28.555043  3867 net.cpp:165] Memory required for data: 9633792
I0419 16:13:28.555048  3867 layer_factory.hpp:77] Creating layer norm1
I0419 16:13:28.555059  3867 net.cpp:106] Creating Layer norm1
I0419 16:13:28.555064  3867 net.cpp:454] norm1 <- conv1
I0419 16:13:28.555073  3867 net.cpp:411] norm1 -> norm1
I0419 16:13:28.555184  3867 net.cpp:150] Setting up norm1
I0419 16:13:28.555198  3867 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:13:28.555203  3867 net.cpp:165] Memory required for data: 14450688
I0419 16:13:28.555207  3867 layer_factory.hpp:77] Creating layer pool1
I0419 16:13:28.555217  3867 net.cpp:106] Creating Layer pool1
I0419 16:13:28.555222  3867 net.cpp:454] pool1 <- norm1
I0419 16:13:28.555229  3867 net.cpp:411] pool1 -> pool1
I0419 16:13:28.555279  3867 net.cpp:150] Setting up pool1
I0419 16:13:28.555290  3867 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:13:28.555295  3867 net.cpp:165] Memory required for data: 15698304
I0419 16:13:28.555299  3867 layer_factory.hpp:77] Creating layer conv2
I0419 16:13:28.555312  3867 net.cpp:106] Creating Layer conv2
I0419 16:13:28.555318  3867 net.cpp:454] conv2 <- pool1
I0419 16:13:28.555325  3867 net.cpp:411] conv2 -> conv2
I0419 16:13:28.557493  3867 net.cpp:150] Setting up conv2
I0419 16:13:28.557512  3867 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:13:28.557516  3867 net.cpp:165] Memory required for data: 16559488
I0419 16:13:28.557529  3867 layer_factory.hpp:77] Creating layer relu2
I0419 16:13:28.557538  3867 net.cpp:106] Creating Layer relu2
I0419 16:13:28.557543  3867 net.cpp:454] relu2 <- conv2
I0419 16:13:28.557559  3867 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:13:28.557567  3867 net.cpp:150] Setting up relu2
I0419 16:13:28.557574  3867 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:13:28.557579  3867 net.cpp:165] Memory required for data: 17420672
I0419 16:13:28.557587  3867 layer_factory.hpp:77] Creating layer norm2
I0419 16:13:28.557595  3867 net.cpp:106] Creating Layer norm2
I0419 16:13:28.557598  3867 net.cpp:454] norm2 <- conv2
I0419 16:13:28.557608  3867 net.cpp:411] norm2 -> norm2
I0419 16:13:28.557695  3867 net.cpp:150] Setting up norm2
I0419 16:13:28.557711  3867 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:13:28.557716  3867 net.cpp:165] Memory required for data: 18281856
I0419 16:13:28.557720  3867 layer_factory.hpp:77] Creating layer pool2
I0419 16:13:28.557727  3867 net.cpp:106] Creating Layer pool2
I0419 16:13:28.557731  3867 net.cpp:454] pool2 <- norm2
I0419 16:13:28.557739  3867 net.cpp:411] pool2 -> pool2
I0419 16:13:28.557780  3867 net.cpp:150] Setting up pool2
I0419 16:13:28.557792  3867 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:13:28.557796  3867 net.cpp:165] Memory required for data: 18512256
I0419 16:13:28.557801  3867 layer_factory.hpp:77] Creating layer conv3
I0419 16:13:28.557813  3867 net.cpp:106] Creating Layer conv3
I0419 16:13:28.557819  3867 net.cpp:454] conv3 <- pool2
I0419 16:13:28.557827  3867 net.cpp:411] conv3 -> conv3
I0419 16:13:28.560098  3867 net.cpp:150] Setting up conv3
I0419 16:13:28.560119  3867 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:13:28.560124  3867 net.cpp:165] Memory required for data: 18857856
I0419 16:13:28.560137  3867 layer_factory.hpp:77] Creating layer relu3
I0419 16:13:28.560144  3867 net.cpp:106] Creating Layer relu3
I0419 16:13:28.560149  3867 net.cpp:454] relu3 <- conv3
I0419 16:13:28.560156  3867 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:13:28.560168  3867 net.cpp:150] Setting up relu3
I0419 16:13:28.560174  3867 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:13:28.560178  3867 net.cpp:165] Memory required for data: 19203456
I0419 16:13:28.560183  3867 layer_factory.hpp:77] Creating layer conv4
I0419 16:13:28.560194  3867 net.cpp:106] Creating Layer conv4
I0419 16:13:28.560200  3867 net.cpp:454] conv4 <- conv3
I0419 16:13:28.560210  3867 net.cpp:411] conv4 -> conv4
I0419 16:13:28.563501  3867 net.cpp:150] Setting up conv4
I0419 16:13:28.563520  3867 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:13:28.563525  3867 net.cpp:165] Memory required for data: 19549056
I0419 16:13:28.563534  3867 layer_factory.hpp:77] Creating layer relu4
I0419 16:13:28.563542  3867 net.cpp:106] Creating Layer relu4
I0419 16:13:28.563546  3867 net.cpp:454] relu4 <- conv4
I0419 16:13:28.563556  3867 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:13:28.563565  3867 net.cpp:150] Setting up relu4
I0419 16:13:28.563571  3867 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:13:28.563580  3867 net.cpp:165] Memory required for data: 19894656
I0419 16:13:28.563585  3867 layer_factory.hpp:77] Creating layer conv5
I0419 16:13:28.563594  3867 net.cpp:106] Creating Layer conv5
I0419 16:13:28.563598  3867 net.cpp:454] conv5 <- conv4
I0419 16:13:28.563608  3867 net.cpp:411] conv5 -> conv5
I0419 16:13:28.565939  3867 net.cpp:150] Setting up conv5
I0419 16:13:28.565959  3867 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:13:28.565964  3867 net.cpp:165] Memory required for data: 20125056
I0419 16:13:28.565980  3867 layer_factory.hpp:77] Creating layer relu5
I0419 16:13:28.565989  3867 net.cpp:106] Creating Layer relu5
I0419 16:13:28.565995  3867 net.cpp:454] relu5 <- conv5
I0419 16:13:28.566005  3867 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:13:28.566015  3867 net.cpp:150] Setting up relu5
I0419 16:13:28.566022  3867 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:13:28.566027  3867 net.cpp:165] Memory required for data: 20355456
I0419 16:13:28.566032  3867 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:13:28.566041  3867 net.cpp:106] Creating Layer rpn_conv1
I0419 16:13:28.566046  3867 net.cpp:454] rpn_conv1 <- conv5
I0419 16:13:28.566058  3867 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:13:28.567746  3867 net.cpp:150] Setting up rpn_conv1
I0419 16:13:28.567767  3867 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:13:28.567772  3867 net.cpp:165] Memory required for data: 20585856
I0419 16:13:28.567781  3867 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:13:28.567790  3867 net.cpp:106] Creating Layer rpn_relu1
I0419 16:13:28.567795  3867 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:13:28.567804  3867 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:13:28.567814  3867 net.cpp:150] Setting up rpn_relu1
I0419 16:13:28.567821  3867 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:13:28.567826  3867 net.cpp:165] Memory required for data: 20816256
I0419 16:13:28.567831  3867 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:13:28.567843  3867 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:13:28.567847  3867 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:13:28.567857  3867 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:13:28.567867  3867 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:13:28.567908  3867 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:13:28.567919  3867 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:13:28.567925  3867 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:13:28.567929  3867 net.cpp:165] Memory required for data: 21277056
I0419 16:13:28.567934  3867 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:13:28.567945  3867 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:13:28.567955  3867 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:13:28.567965  3867 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:13:28.568151  3867 net.cpp:150] Setting up rpn_cls_score
I0419 16:13:28.568164  3867 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:13:28.568168  3867 net.cpp:165] Memory required for data: 21293256
I0419 16:13:28.568177  3867 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:13:28.568186  3867 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:13:28.568192  3867 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:13:28.568203  3867 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:13:28.568403  3867 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:13:28.568418  3867 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:13:28.568421  3867 net.cpp:165] Memory required for data: 21325656
I0419 16:13:28.568430  3867 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:13:28.568439  3867 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:13:28.568444  3867 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:13:28.568454  3867 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:13:28.568495  3867 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:13:28.568506  3867 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:13:28.568511  3867 net.cpp:165] Memory required for data: 21341856
I0419 16:13:28.568516  3867 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:13:28.568522  3867 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:13:28.568527  3867 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:13:28.568534  3867 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:13:28.568601  3867 net.cpp:150] Setting up rpn_cls_prob
I0419 16:13:28.568614  3867 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:13:28.568617  3867 net.cpp:165] Memory required for data: 21358056
I0419 16:13:28.568622  3867 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:13:28.568629  3867 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:13:28.568634  3867 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:13:28.568644  3867 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:13:28.568673  3867 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:13:28.568689  3867 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:13:28.568693  3867 net.cpp:165] Memory required for data: 21374256
I0419 16:13:28.568698  3867 layer_factory.hpp:77] Creating layer proposal
I0419 16:13:28.570083  3867 net.cpp:106] Creating Layer proposal
I0419 16:13:28.570103  3867 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:13:28.570111  3867 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:13:28.570117  3867 net.cpp:454] proposal <- im_info
I0419 16:13:28.570127  3867 net.cpp:411] proposal -> rois
I0419 16:13:28.570137  3867 net.cpp:411] proposal -> scores
I0419 16:13:28.571462  3867 net.cpp:150] Setting up proposal
I0419 16:13:28.571485  3867 net.cpp:157] Top shape: 1 5 (5)
I0419 16:13:28.571493  3867 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:13:28.571497  3867 net.cpp:165] Memory required for data: 21374280
I0419 16:13:28.571503  3867 net.cpp:228] proposal does not need backward computation.
I0419 16:13:28.571509  3867 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:13:28.571514  3867 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:13:28.571518  3867 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:13:28.571523  3867 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:13:28.571528  3867 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:13:28.571533  3867 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:13:28.571537  3867 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:13:28.571542  3867 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:13:28.571547  3867 net.cpp:228] relu5 does not need backward computation.
I0419 16:13:28.571552  3867 net.cpp:228] conv5 does not need backward computation.
I0419 16:13:28.571555  3867 net.cpp:228] relu4 does not need backward computation.
I0419 16:13:28.571559  3867 net.cpp:228] conv4 does not need backward computation.
I0419 16:13:28.571564  3867 net.cpp:228] relu3 does not need backward computation.
I0419 16:13:28.571571  3867 net.cpp:228] conv3 does not need backward computation.
I0419 16:13:28.571576  3867 net.cpp:228] pool2 does not need backward computation.
I0419 16:13:28.571580  3867 net.cpp:228] norm2 does not need backward computation.
I0419 16:13:28.571585  3867 net.cpp:228] relu2 does not need backward computation.
I0419 16:13:28.571589  3867 net.cpp:228] conv2 does not need backward computation.
I0419 16:13:28.571594  3867 net.cpp:228] pool1 does not need backward computation.
I0419 16:13:28.571599  3867 net.cpp:228] norm1 does not need backward computation.
I0419 16:13:28.571604  3867 net.cpp:228] relu1 does not need backward computation.
I0419 16:13:28.571609  3867 net.cpp:228] conv1 does not need backward computation.
I0419 16:13:28.571614  3867 net.cpp:270] This network produces output rois
I0419 16:13:28.571619  3867 net.cpp:270] This network produces output scores
I0419 16:13:28.571647  3867 net.cpp:283] Network initialization done.
I0419 16:13:29.002496  3867 net.cpp:816] Ignoring source layer input-data
I0419 16:13:29.002537  3867 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:13:29.006078  3867 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:13:29.006105  3867 net.cpp:816] Ignoring source layer rpn-data
I0419 16:13:29.006108  3867 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:13:29.006111  3867 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:13:29.006114  3867 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:13:29.006116  3867 net.cpp:816] Ignoring source layer fc6
I0419 16:13:29.006119  3867 net.cpp:816] Ignoring source layer relu6
I0419 16:13:29.006121  3867 net.cpp:816] Ignoring source layer fc7
I0419 16:13:29.006124  3867 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.162s
im_proposals: 2/506 0.152s
im_proposals: 3/506 0.148s
im_proposals: 4/506 0.147s
im_proposals: 5/506 0.146s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.144s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.144s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.143s
im_proposals: 13/506 0.143s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.142s
im_proposals: 16/506 0.142s
im_proposals: 17/506 0.142s
im_proposals: 18/506 0.142s
im_proposals: 19/506 0.142s
im_proposals: 20/506 0.142s
im_proposals: 21/506 0.142s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.142s
im_proposals: 33/506 0.142s
im_proposals: 34/506 0.142s
im_proposals: 35/506 0.142s
im_proposals: 36/506 0.142s
im_proposals: 37/506 0.142s
im_proposals: 38/506 0.142s
im_proposals: 39/506 0.142s
im_proposals: 40/506 0.142s
im_proposals: 41/506 0.142s
im_proposals: 42/506 0.142s
im_proposals: 43/506 0.142s
im_proposals: 44/506 0.142s
im_proposals: 45/506 0.142s
im_proposals: 46/506 0.142s
im_proposals: 47/506 0.142s
im_proposals: 48/506 0.142s
im_proposals: 49/506 0.142s
im_proposals: 50/506 0.142s
im_proposals: 51/506 0.141s
im_proposals: 52/506 0.141s
im_proposals: 53/506 0.142s
im_proposals: 54/506 0.141s
im_proposals: 55/506 0.141s
im_proposals: 56/506 0.141s
im_proposals: 57/506 0.141s
im_proposals: 58/506 0.141s
im_proposals: 59/506 0.141s
im_proposals: 60/506 0.141s
im_proposals: 61/506 0.141s
im_proposals: 62/506 0.141s
im_proposals: 63/506 0.141s
im_proposals: 64/506 0.141s
im_proposals: 65/506 0.141s
im_proposals: 66/506 0.141s
im_proposals: 67/506 0.141s
im_proposals: 68/506 0.141s
im_proposals: 69/506 0.141s
im_proposals: 70/506 0.141s
im_proposals: 71/506 0.141s
im_proposals: 72/506 0.141s
im_proposals: 73/506 0.141s
im_proposals: 74/506 0.141s
im_proposals: 75/506 0.141s
im_proposals: 76/506 0.141s
im_proposals: 77/506 0.141s
im_proposals: 78/506 0.141s
im_proposals: 79/506 0.141s
im_proposals: 80/506 0.141s
im_proposals: 81/506 0.141s
im_proposals: 82/506 0.141s
im_proposals: 83/506 0.141s
im_proposals: 84/506 0.141s
im_proposals: 85/506 0.141s
im_proposals: 86/506 0.141s
im_proposals: 87/506 0.141s
im_proposals: 88/506 0.141s
im_proposals: 89/506 0.141s
im_proposals: 90/506 0.141s
im_proposals: 91/506 0.141s
im_proposals: 92/506 0.141s
im_proposals: 93/506 0.141s
im_proposals: 94/506 0.141s
im_proposals: 95/506 0.141s
im_proposals: 96/506 0.141s
im_proposals: 97/506 0.141s
im_proposals: 98/506 0.141s
im_proposals: 99/506 0.141s
im_proposals: 100/506 0.141s
im_proposals: 101/506 0.141s
im_proposals: 102/506 0.141s
im_proposals: 103/506 0.141s
im_proposals: 104/506 0.141s
im_proposals: 105/506 0.141s
im_proposals: 106/506 0.141s
im_proposals: 107/506 0.141s
im_proposals: 108/506 0.141s
im_proposals: 109/506 0.141s
im_proposals: 110/506 0.141s
im_proposals: 111/506 0.141s
im_proposals: 112/506 0.141s
im_proposals: 113/506 0.141s
im_proposals: 114/506 0.141s
im_proposals: 115/506 0.141s
im_proposals: 116/506 0.141s
im_proposals: 117/506 0.141s
im_proposals: 118/506 0.141s
im_proposals: 119/506 0.141s
im_proposals: 120/506 0.141s
im_proposals: 121/506 0.141s
im_proposals: 122/506 0.141s
im_proposals: 123/506 0.141s
im_proposals: 124/506 0.141s
im_proposals: 125/506 0.141s
im_proposals: 126/506 0.141s
im_proposals: 127/506 0.141s
im_proposals: 128/506 0.141s
im_proposals: 129/506 0.141s
im_proposals: 130/506 0.141s
im_proposals: 131/506 0.141s
im_proposals: 132/506 0.141s
im_proposals: 133/506 0.141s
im_proposals: 134/506 0.141s
im_proposals: 135/506 0.141s
im_proposals: 136/506 0.141s
im_proposals: 137/506 0.141s
im_proposals: 138/506 0.141s
im_proposals: 139/506 0.141s
im_proposals: 140/506 0.141s
im_proposals: 141/506 0.141s
im_proposals: 142/506 0.141s
im_proposals: 143/506 0.141s
im_proposals: 144/506 0.141s
im_proposals: 145/506 0.141s
im_proposals: 146/506 0.141s
im_proposals: 147/506 0.141s
im_proposals: 148/506 0.141s
im_proposals: 149/506 0.141s
im_proposals: 150/506 0.141s
im_proposals: 151/506 0.141s
im_proposals: 152/506 0.141s
im_proposals: 153/506 0.141s
im_proposals: 154/506 0.141s
im_proposals: 155/506 0.141s
im_proposals: 156/506 0.141s
im_proposals: 157/506 0.141s
im_proposals: 158/506 0.141s
im_proposals: 159/506 0.141s
im_proposals: 160/506 0.141s
im_proposals: 161/506 0.141s
im_proposals: 162/506 0.141s
im_proposals: 163/506 0.141s
im_proposals: 164/506 0.141s
im_proposals: 165/506 0.141s
im_proposals: 166/506 0.141s
im_proposals: 167/506 0.141s
im_proposals: 168/506 0.141s
im_proposals: 169/506 0.141s
im_proposals: 170/506 0.141s
im_proposals: 171/506 0.141s
im_proposals: 172/506 0.141s
im_proposals: 173/506 0.141s
im_proposals: 174/506 0.141s
im_proposals: 175/506 0.141s
im_proposals: 176/506 0.141s
im_proposals: 177/506 0.141s
im_proposals: 178/506 0.141s
im_proposals: 179/506 0.141s
im_proposals: 180/506 0.141s
im_proposals: 181/506 0.141s
im_proposals: 182/506 0.141s
im_proposals: 183/506 0.141s
im_proposals: 184/506 0.141s
im_proposals: 185/506 0.141s
im_proposals: 186/506 0.141s
im_proposals: 187/506 0.141s
im_proposals: 188/506 0.141s
im_proposals: 189/506 0.141s
im_proposals: 190/506 0.141s
im_proposals: 191/506 0.141s
im_proposals: 192/506 0.141s
im_proposals: 193/506 0.141s
im_proposals: 194/506 0.141s
im_proposals: 195/506 0.141s
im_proposals: 196/506 0.141s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.141s
im_proposals: 455/506 0.141s
im_proposals: 456/506 0.141s
im_proposals: 457/506 0.141s
im_proposals: 458/506 0.141s
im_proposals: 459/506 0.141s
im_proposals: 460/506 0.141s
im_proposals: 461/506 0.141s
im_proposals: 462/506 0.141s
im_proposals: 463/506 0.141s
im_proposals: 464/506 0.142s
im_proposals: 465/506 0.142s
im_proposals: 466/506 0.142s
im_proposals: 467/506 0.142s
im_proposals: 468/506 0.142s
im_proposals: 469/506 0.142s
im_proposals: 470/506 0.142s
im_proposals: 471/506 0.142s
im_proposals: 472/506 0.142s
im_proposals: 473/506 0.142s
im_proposals: 474/506 0.142s
im_proposals: 475/506 0.142s
im_proposals: 476/506 0.142s
im_proposals: 477/506 0.142s
im_proposals: 478/506 0.142s
im_proposals: 479/506 0.142s
im_proposals: 480/506 0.142s
im_proposals: 481/506 0.142s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:15:05.121526  4019 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:15:05.121582  4019 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 16:15:05.122491  4019 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:15:05.122710  4019 layer_factory.hpp:77] Creating layer data
I0419 16:15:05.123489  4019 net.cpp:106] Creating Layer data
I0419 16:15:05.123517  4019 net.cpp:411] data -> data
I0419 16:15:05.123543  4019 net.cpp:411] data -> rois
I0419 16:15:05.123560  4019 net.cpp:411] data -> labels
I0419 16:15:05.123570  4019 net.cpp:411] data -> bbox_targets
I0419 16:15:05.123579  4019 net.cpp:411] data -> bbox_inside_weights
I0419 16:15:05.123591  4019 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:15:05.139058  4019 net.cpp:150] Setting up data
I0419 16:15:05.139084  4019 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:15:05.139091  4019 net.cpp:157] Top shape: 1 5 (5)
I0419 16:15:05.139096  4019 net.cpp:157] Top shape: 1 (1)
I0419 16:15:05.139098  4019 net.cpp:157] Top shape: 1 176 (176)
I0419 16:15:05.139102  4019 net.cpp:157] Top shape: 1 176 (176)
I0419 16:15:05.139113  4019 net.cpp:157] Top shape: 1 176 (176)
I0419 16:15:05.139117  4019 net.cpp:165] Memory required for data: 14402136
I0419 16:15:05.139123  4019 layer_factory.hpp:77] Creating layer conv1
I0419 16:15:05.139143  4019 net.cpp:106] Creating Layer conv1
I0419 16:15:05.139159  4019 net.cpp:454] conv1 <- data
I0419 16:15:05.139173  4019 net.cpp:411] conv1 -> conv1
I0419 16:15:05.140516  4019 net.cpp:150] Setting up conv1
I0419 16:15:05.140534  4019 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:15:05.140537  4019 net.cpp:165] Memory required for data: 129602136
I0419 16:15:05.140553  4019 layer_factory.hpp:77] Creating layer relu1
I0419 16:15:05.140571  4019 net.cpp:106] Creating Layer relu1
I0419 16:15:05.140579  4019 net.cpp:454] relu1 <- conv1
I0419 16:15:05.140590  4019 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:15:05.140610  4019 net.cpp:150] Setting up relu1
I0419 16:15:05.140619  4019 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:15:05.140630  4019 net.cpp:165] Memory required for data: 244802136
I0419 16:15:05.140632  4019 layer_factory.hpp:77] Creating layer norm1
I0419 16:15:05.140641  4019 net.cpp:106] Creating Layer norm1
I0419 16:15:05.140652  4019 net.cpp:454] norm1 <- conv1
I0419 16:15:05.140661  4019 net.cpp:411] norm1 -> norm1
I0419 16:15:05.140784  4019 net.cpp:150] Setting up norm1
I0419 16:15:05.140796  4019 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:15:05.140799  4019 net.cpp:165] Memory required for data: 360002136
I0419 16:15:05.140801  4019 layer_factory.hpp:77] Creating layer pool1
I0419 16:15:05.140810  4019 net.cpp:106] Creating Layer pool1
I0419 16:15:05.140812  4019 net.cpp:454] pool1 <- norm1
I0419 16:15:05.140816  4019 net.cpp:411] pool1 -> pool1
I0419 16:15:05.140862  4019 net.cpp:150] Setting up pool1
I0419 16:15:05.140877  4019 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:15:05.140879  4019 net.cpp:165] Memory required for data: 389110104
I0419 16:15:05.140882  4019 layer_factory.hpp:77] Creating layer conv2
I0419 16:15:05.140889  4019 net.cpp:106] Creating Layer conv2
I0419 16:15:05.140893  4019 net.cpp:454] conv2 <- pool1
I0419 16:15:05.140898  4019 net.cpp:411] conv2 -> conv2
I0419 16:15:05.142585  4019 net.cpp:150] Setting up conv2
I0419 16:15:05.142603  4019 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:15:05.142606  4019 net.cpp:165] Memory required for data: 408721752
I0419 16:15:05.142614  4019 layer_factory.hpp:77] Creating layer relu2
I0419 16:15:05.142624  4019 net.cpp:106] Creating Layer relu2
I0419 16:15:05.142632  4019 net.cpp:454] relu2 <- conv2
I0419 16:15:05.142638  4019 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:15:05.142654  4019 net.cpp:150] Setting up relu2
I0419 16:15:05.142662  4019 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:15:05.142665  4019 net.cpp:165] Memory required for data: 428333400
I0419 16:15:05.142670  4019 layer_factory.hpp:77] Creating layer norm2
I0419 16:15:05.142683  4019 net.cpp:106] Creating Layer norm2
I0419 16:15:05.142694  4019 net.cpp:454] norm2 <- conv2
I0419 16:15:05.142702  4019 net.cpp:411] norm2 -> norm2
I0419 16:15:05.142799  4019 net.cpp:150] Setting up norm2
I0419 16:15:05.142810  4019 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:15:05.142813  4019 net.cpp:165] Memory required for data: 447945048
I0419 16:15:05.142817  4019 layer_factory.hpp:77] Creating layer pool2
I0419 16:15:05.142822  4019 net.cpp:106] Creating Layer pool2
I0419 16:15:05.142825  4019 net.cpp:454] pool2 <- norm2
I0419 16:15:05.142832  4019 net.cpp:411] pool2 -> pool2
I0419 16:15:05.142869  4019 net.cpp:150] Setting up pool2
I0419 16:15:05.142885  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.142889  4019 net.cpp:165] Memory required for data: 453056856
I0419 16:15:05.142892  4019 layer_factory.hpp:77] Creating layer conv3
I0419 16:15:05.142900  4019 net.cpp:106] Creating Layer conv3
I0419 16:15:05.142904  4019 net.cpp:454] conv3 <- pool2
I0419 16:15:05.142911  4019 net.cpp:411] conv3 -> conv3
I0419 16:15:05.146198  4019 net.cpp:150] Setting up conv3
I0419 16:15:05.146215  4019 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:15:05.146219  4019 net.cpp:165] Memory required for data: 460724568
I0419 16:15:05.146227  4019 layer_factory.hpp:77] Creating layer relu3
I0419 16:15:05.146237  4019 net.cpp:106] Creating Layer relu3
I0419 16:15:05.146242  4019 net.cpp:454] relu3 <- conv3
I0419 16:15:05.146251  4019 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:15:05.146260  4019 net.cpp:150] Setting up relu3
I0419 16:15:05.146275  4019 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:15:05.146278  4019 net.cpp:165] Memory required for data: 468392280
I0419 16:15:05.146283  4019 layer_factory.hpp:77] Creating layer conv4
I0419 16:15:05.146296  4019 net.cpp:106] Creating Layer conv4
I0419 16:15:05.146307  4019 net.cpp:454] conv4 <- conv3
I0419 16:15:05.146316  4019 net.cpp:411] conv4 -> conv4
I0419 16:15:05.149597  4019 net.cpp:150] Setting up conv4
I0419 16:15:05.149616  4019 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:15:05.149618  4019 net.cpp:165] Memory required for data: 476059992
I0419 16:15:05.149624  4019 layer_factory.hpp:77] Creating layer relu4
I0419 16:15:05.149634  4019 net.cpp:106] Creating Layer relu4
I0419 16:15:05.149638  4019 net.cpp:454] relu4 <- conv4
I0419 16:15:05.149652  4019 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:15:05.149665  4019 net.cpp:150] Setting up relu4
I0419 16:15:05.149674  4019 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:15:05.149679  4019 net.cpp:165] Memory required for data: 483727704
I0419 16:15:05.149683  4019 layer_factory.hpp:77] Creating layer conv5
I0419 16:15:05.149693  4019 net.cpp:106] Creating Layer conv5
I0419 16:15:05.149698  4019 net.cpp:454] conv5 <- conv4
I0419 16:15:05.149704  4019 net.cpp:411] conv5 -> conv5
I0419 16:15:05.151998  4019 net.cpp:150] Setting up conv5
I0419 16:15:05.152016  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.152019  4019 net.cpp:165] Memory required for data: 488839512
I0419 16:15:05.152030  4019 layer_factory.hpp:77] Creating layer relu5
I0419 16:15:05.152037  4019 net.cpp:106] Creating Layer relu5
I0419 16:15:05.152041  4019 net.cpp:454] relu5 <- conv5
I0419 16:15:05.152051  4019 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:15:05.152068  4019 net.cpp:150] Setting up relu5
I0419 16:15:05.152076  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.152079  4019 net.cpp:165] Memory required for data: 493951320
I0419 16:15:05.152084  4019 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:15:05.152097  4019 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:15:05.152106  4019 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:15:05.152112  4019 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:15:05.152122  4019 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:15:05.152176  4019 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:15:05.152190  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.152194  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.152197  4019 net.cpp:165] Memory required for data: 504174936
I0419 16:15:05.152200  4019 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:15:05.152212  4019 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:15:05.152217  4019 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:15:05.152223  4019 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:15:05.152230  4019 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:15:05.152245  4019 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:15:05.152305  4019 net.cpp:150] Setting up roi_pool_conv5
I0419 16:15:05.152320  4019 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:15:05.152325  4019 net.cpp:165] Memory required for data: 504211800
I0419 16:15:05.152330  4019 layer_factory.hpp:77] Creating layer fc6
I0419 16:15:05.152341  4019 net.cpp:106] Creating Layer fc6
I0419 16:15:05.152350  4019 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:15:05.152359  4019 net.cpp:411] fc6 -> fc6
I0419 16:15:05.249979  4019 net.cpp:150] Setting up fc6
I0419 16:15:05.250020  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.250025  4019 net.cpp:165] Memory required for data: 504228184
I0419 16:15:05.250036  4019 layer_factory.hpp:77] Creating layer relu6
I0419 16:15:05.250046  4019 net.cpp:106] Creating Layer relu6
I0419 16:15:05.250051  4019 net.cpp:454] relu6 <- fc6
I0419 16:15:05.250057  4019 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:15:05.250066  4019 net.cpp:150] Setting up relu6
I0419 16:15:05.250075  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.250077  4019 net.cpp:165] Memory required for data: 504244568
I0419 16:15:05.250080  4019 layer_factory.hpp:77] Creating layer drop6
I0419 16:15:05.250093  4019 net.cpp:106] Creating Layer drop6
I0419 16:15:05.250097  4019 net.cpp:454] drop6 <- fc6
I0419 16:15:05.250100  4019 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:15:05.250124  4019 net.cpp:150] Setting up drop6
I0419 16:15:05.250129  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.250133  4019 net.cpp:165] Memory required for data: 504260952
I0419 16:15:05.250134  4019 layer_factory.hpp:77] Creating layer fc7
I0419 16:15:05.250146  4019 net.cpp:106] Creating Layer fc7
I0419 16:15:05.250151  4019 net.cpp:454] fc7 <- fc6
I0419 16:15:05.250156  4019 net.cpp:411] fc7 -> fc7
I0419 16:15:05.293736  4019 net.cpp:150] Setting up fc7
I0419 16:15:05.293777  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.293781  4019 net.cpp:165] Memory required for data: 504277336
I0419 16:15:05.293792  4019 layer_factory.hpp:77] Creating layer relu7
I0419 16:15:05.293802  4019 net.cpp:106] Creating Layer relu7
I0419 16:15:05.293807  4019 net.cpp:454] relu7 <- fc7
I0419 16:15:05.293812  4019 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:15:05.293820  4019 net.cpp:150] Setting up relu7
I0419 16:15:05.293823  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.293826  4019 net.cpp:165] Memory required for data: 504293720
I0419 16:15:05.293829  4019 layer_factory.hpp:77] Creating layer drop7
I0419 16:15:05.293836  4019 net.cpp:106] Creating Layer drop7
I0419 16:15:05.293844  4019 net.cpp:454] drop7 <- fc7
I0419 16:15:05.293848  4019 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:15:05.293872  4019 net.cpp:150] Setting up drop7
I0419 16:15:05.293885  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.293889  4019 net.cpp:165] Memory required for data: 504310104
I0419 16:15:05.293895  4019 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:15:05.293901  4019 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:15:05.293905  4019 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:15:05.293915  4019 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:15:05.293923  4019 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:15:05.293974  4019 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:15:05.293987  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.293992  4019 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:05.293997  4019 net.cpp:165] Memory required for data: 504342872
I0419 16:15:05.294000  4019 layer_factory.hpp:77] Creating layer cls_score
I0419 16:15:05.294016  4019 net.cpp:106] Creating Layer cls_score
I0419 16:15:05.294026  4019 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:15:05.294035  4019 net.cpp:411] cls_score -> cls_score
I0419 16:15:05.299604  4019 net.cpp:150] Setting up cls_score
I0419 16:15:05.299623  4019 net.cpp:157] Top shape: 1 44 (44)
I0419 16:15:05.299628  4019 net.cpp:165] Memory required for data: 504343048
I0419 16:15:05.299638  4019 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:15:05.299651  4019 net.cpp:106] Creating Layer bbox_pred
I0419 16:15:05.299662  4019 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:15:05.299671  4019 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:15:05.320358  4019 net.cpp:150] Setting up bbox_pred
I0419 16:15:05.320377  4019 net.cpp:157] Top shape: 1 176 (176)
I0419 16:15:05.320381  4019 net.cpp:165] Memory required for data: 504343752
I0419 16:15:05.320399  4019 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:15:05.320417  4019 net.cpp:106] Creating Layer loss_cls
I0419 16:15:05.320430  4019 net.cpp:454] loss_cls <- cls_score
I0419 16:15:05.320436  4019 net.cpp:454] loss_cls <- labels
I0419 16:15:05.320444  4019 net.cpp:411] loss_cls -> cls_loss
I0419 16:15:05.320467  4019 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:15:05.320570  4019 net.cpp:150] Setting up loss_cls
I0419 16:15:05.320583  4019 net.cpp:157] Top shape: (1)
I0419 16:15:05.320588  4019 net.cpp:160]     with loss weight 1
I0419 16:15:05.320606  4019 net.cpp:165] Memory required for data: 504343756
I0419 16:15:05.320611  4019 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:15:05.320624  4019 net.cpp:106] Creating Layer loss_bbox
I0419 16:15:05.320634  4019 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:15:05.320641  4019 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:15:05.320647  4019 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:15:05.320652  4019 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:15:05.320659  4019 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:15:05.320739  4019 net.cpp:150] Setting up loss_bbox
I0419 16:15:05.320750  4019 net.cpp:157] Top shape: (1)
I0419 16:15:05.320755  4019 net.cpp:160]     with loss weight 1
I0419 16:15:05.320762  4019 net.cpp:165] Memory required for data: 504343760
I0419 16:15:05.320767  4019 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:15:05.320785  4019 net.cpp:106] Creating Layer rpn_conv1
I0419 16:15:05.320793  4019 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:15:05.320802  4019 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:15:05.339318  4019 net.cpp:150] Setting up rpn_conv1
I0419 16:15:05.339341  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.339346  4019 net.cpp:165] Memory required for data: 509455568
I0419 16:15:05.339356  4019 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:15:05.339366  4019 net.cpp:106] Creating Layer rpn_relu1
I0419 16:15:05.339371  4019 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:15:05.339390  4019 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:15:05.339401  4019 net.cpp:150] Setting up rpn_relu1
I0419 16:15:05.339408  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.339412  4019 net.cpp:165] Memory required for data: 514567376
I0419 16:15:05.339417  4019 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:15:05.339426  4019 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:15:05.339432  4019 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:15:05.339438  4019 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:15:05.339447  4019 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:15:05.339493  4019 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:15:05.339505  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.339511  4019 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:15:05.339515  4019 net.cpp:165] Memory required for data: 524790992
I0419 16:15:05.339520  4019 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:15:05.339535  4019 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:15:05.339546  4019 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:15:05.339558  4019 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:15:05.339895  4019 net.cpp:150] Setting up rpn_cls_score
I0419 16:15:05.339910  4019 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:15:05.339913  4019 net.cpp:165] Memory required for data: 525150416
I0419 16:15:05.339922  4019 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:15:05.339943  4019 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:15:05.339952  4019 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:15:05.339964  4019 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:15:05.340420  4019 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:15:05.340435  4019 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:15:05.340438  4019 net.cpp:165] Memory required for data: 525869264
I0419 16:15:05.340446  4019 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:15:05.340459  4019 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:15:05.340471  4019 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:15:05.340478  4019 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:15:05.340482  4019 net.cpp:165] Memory required for data: 525869264
I0419 16:15:05.340488  4019 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:15:05.340495  4019 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:15:05.340502  4019 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:15:05.340507  4019 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:15:05.340512  4019 net.cpp:165] Memory required for data: 525869264
I0419 16:15:05.340517  4019 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:15:05.340520  4019 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:15:05.340528  4019 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:15:05.340531  4019 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:15:05.340536  4019 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:15:05.340543  4019 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:15:05.340546  4019 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:15:05.340551  4019 net.cpp:226] loss_bbox needs backward computation.
I0419 16:15:05.340560  4019 net.cpp:226] loss_cls needs backward computation.
I0419 16:15:05.340566  4019 net.cpp:226] bbox_pred needs backward computation.
I0419 16:15:05.340572  4019 net.cpp:226] cls_score needs backward computation.
I0419 16:15:05.340577  4019 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:15:05.340582  4019 net.cpp:226] drop7 needs backward computation.
I0419 16:15:05.340589  4019 net.cpp:226] relu7 needs backward computation.
I0419 16:15:05.340592  4019 net.cpp:226] fc7 needs backward computation.
I0419 16:15:05.340597  4019 net.cpp:226] drop6 needs backward computation.
I0419 16:15:05.340603  4019 net.cpp:226] relu6 needs backward computation.
I0419 16:15:05.340607  4019 net.cpp:226] fc6 needs backward computation.
I0419 16:15:05.340612  4019 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 16:15:05.340620  4019 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 16:15:05.340625  4019 net.cpp:226] relu5 needs backward computation.
I0419 16:15:05.340629  4019 net.cpp:226] conv5 needs backward computation.
I0419 16:15:05.340636  4019 net.cpp:226] relu4 needs backward computation.
I0419 16:15:05.340639  4019 net.cpp:226] conv4 needs backward computation.
I0419 16:15:05.340646  4019 net.cpp:226] relu3 needs backward computation.
I0419 16:15:05.340651  4019 net.cpp:226] conv3 needs backward computation.
I0419 16:15:05.340656  4019 net.cpp:226] pool2 needs backward computation.
I0419 16:15:05.340661  4019 net.cpp:226] norm2 needs backward computation.
I0419 16:15:05.340665  4019 net.cpp:226] relu2 needs backward computation.
I0419 16:15:05.340672  4019 net.cpp:226] conv2 needs backward computation.
I0419 16:15:05.340677  4019 net.cpp:226] pool1 needs backward computation.
I0419 16:15:05.340682  4019 net.cpp:226] norm1 needs backward computation.
I0419 16:15:05.340687  4019 net.cpp:226] relu1 needs backward computation.
I0419 16:15:05.340690  4019 net.cpp:226] conv1 needs backward computation.
I0419 16:15:05.340698  4019 net.cpp:228] data does not need backward computation.
I0419 16:15:05.340703  4019 net.cpp:270] This network produces output bbox_loss
I0419 16:15:05.340708  4019 net.cpp:270] This network produces output cls_loss
I0419 16:15:05.340744  4019 net.cpp:283] Network initialization done.
I0419 16:15:05.340890  4019 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:15:05.790585  4019 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:15:05.790613  4019 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:15:05.834903  4019 net.cpp:816] Ignoring source layer fc8
I0419 16:15:05.834934  4019 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:15:06.172317  4019 solver.cpp:229] Iteration 0, loss = 3.96455
I0419 16:15:06.172363  4019 solver.cpp:245]     Train net output #0: bbox_loss = 0.00179342 (* 1 = 0.00179342 loss)
I0419 16:15:06.172372  4019 solver.cpp:245]     Train net output #1: cls_loss = 3.96275 (* 1 = 3.96275 loss)
I0419 16:15:06.172390  4019 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:15:12.188637  4019 solver.cpp:229] Iteration 20, loss = 0.158989
I0419 16:15:12.188683  4019 solver.cpp:245]     Train net output #0: bbox_loss = 0.00206027 (* 1 = 0.00206027 loss)
I0419 16:15:12.188690  4019 solver.cpp:245]     Train net output #1: cls_loss = 0.156929 (* 1 = 0.156929 loss)
I0419 16:15:12.188697  4019 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:15:18.201896  4019 solver.cpp:229] Iteration 40, loss = 0.256255
I0419 16:15:18.201941  4019 solver.cpp:245]     Train net output #0: bbox_loss = 0.0311435 (* 1 = 0.0311435 loss)
I0419 16:15:18.201948  4019 solver.cpp:245]     Train net output #1: cls_loss = 0.225112 (* 1 = 0.225112 loss)
I0419 16:15:18.201956  4019 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:15:24.207993  4019 solver.cpp:229] Iteration 60, loss = 0.387985
I0419 16:15:24.208034  4019 solver.cpp:245]     Train net output #0: bbox_loss = 0.0650192 (* 1 = 0.0650192 loss)
I0419 16:15:24.208041  4019 solver.cpp:245]     Train net output #1: cls_loss = 0.322966 (* 1 = 0.322966 loss)
I0419 16:15:24.208047  4019 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:15:30.195382  4019 solver.cpp:229] Iteration 80, loss = 0.2817
I0419 16:15:30.195425  4019 solver.cpp:245]     Train net output #0: bbox_loss = 0.0782601 (* 1 = 0.0782601 loss)
I0419 16:15:30.195431  4019 solver.cpp:245]     Train net output #1: cls_loss = 0.20344 (* 1 = 0.20344 loss)
I0419 16:15:30.195438  4019 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, init from stage 1 Fast R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:15:40.168395  4030 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:15:40.168453  4030 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt
I0419 16:15:40.169224  4030 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:15:40.169404  4030 layer_factory.hpp:77] Creating layer input-data
I0419 16:15:40.169940  4030 net.cpp:106] Creating Layer input-data
I0419 16:15:40.169965  4030 net.cpp:411] input-data -> data
I0419 16:15:40.169989  4030 net.cpp:411] input-data -> im_info
I0419 16:15:40.170006  4030 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:15:40.185816  4030 net.cpp:150] Setting up input-data
I0419 16:15:40.185842  4030 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:15:40.185852  4030 net.cpp:157] Top shape: 1 3 (3)
I0419 16:15:40.185860  4030 net.cpp:157] Top shape: 1 4 (4)
I0419 16:15:40.185865  4030 net.cpp:165] Memory required for data: 7200028
I0419 16:15:40.185871  4030 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:15:40.185886  4030 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:15:40.185894  4030 net.cpp:454] data_input-data_0_split <- data
I0419 16:15:40.185905  4030 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:15:40.185916  4030 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:15:40.185961  4030 net.cpp:150] Setting up data_input-data_0_split
I0419 16:15:40.185976  4030 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:15:40.185983  4030 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:15:40.185987  4030 net.cpp:165] Memory required for data: 21600028
I0419 16:15:40.185992  4030 layer_factory.hpp:77] Creating layer conv1
I0419 16:15:40.186009  4030 net.cpp:106] Creating Layer conv1
I0419 16:15:40.186019  4030 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:15:40.186030  4030 net.cpp:411] conv1 -> conv1
I0419 16:15:40.187386  4030 net.cpp:150] Setting up conv1
I0419 16:15:40.187404  4030 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:15:40.187410  4030 net.cpp:165] Memory required for data: 79200028
I0419 16:15:40.187430  4030 layer_factory.hpp:77] Creating layer relu1
I0419 16:15:40.187446  4030 net.cpp:106] Creating Layer relu1
I0419 16:15:40.187453  4030 net.cpp:454] relu1 <- conv1
I0419 16:15:40.187463  4030 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:15:40.187477  4030 net.cpp:150] Setting up relu1
I0419 16:15:40.187485  4030 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:15:40.187489  4030 net.cpp:165] Memory required for data: 136800028
I0419 16:15:40.187496  4030 layer_factory.hpp:77] Creating layer norm1
I0419 16:15:40.187506  4030 net.cpp:106] Creating Layer norm1
I0419 16:15:40.187512  4030 net.cpp:454] norm1 <- conv1
I0419 16:15:40.187522  4030 net.cpp:411] norm1 -> norm1
I0419 16:15:40.187631  4030 net.cpp:150] Setting up norm1
I0419 16:15:40.187646  4030 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:15:40.187651  4030 net.cpp:165] Memory required for data: 194400028
I0419 16:15:40.187655  4030 layer_factory.hpp:77] Creating layer pool1
I0419 16:15:40.187664  4030 net.cpp:106] Creating Layer pool1
I0419 16:15:40.187667  4030 net.cpp:454] pool1 <- norm1
I0419 16:15:40.187674  4030 net.cpp:411] pool1 -> pool1
I0419 16:15:40.187718  4030 net.cpp:150] Setting up pool1
I0419 16:15:40.187731  4030 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:15:40.187734  4030 net.cpp:165] Memory required for data: 208954012
I0419 16:15:40.187738  4030 layer_factory.hpp:77] Creating layer conv2
I0419 16:15:40.187752  4030 net.cpp:106] Creating Layer conv2
I0419 16:15:40.187757  4030 net.cpp:454] conv2 <- pool1
I0419 16:15:40.187767  4030 net.cpp:411] conv2 -> conv2
I0419 16:15:40.189429  4030 net.cpp:150] Setting up conv2
I0419 16:15:40.189450  4030 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:15:40.189455  4030 net.cpp:165] Memory required for data: 218759836
I0419 16:15:40.189466  4030 layer_factory.hpp:77] Creating layer relu2
I0419 16:15:40.189479  4030 net.cpp:106] Creating Layer relu2
I0419 16:15:40.189486  4030 net.cpp:454] relu2 <- conv2
I0419 16:15:40.189493  4030 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:15:40.189502  4030 net.cpp:150] Setting up relu2
I0419 16:15:40.189508  4030 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:15:40.189513  4030 net.cpp:165] Memory required for data: 228565660
I0419 16:15:40.189519  4030 layer_factory.hpp:77] Creating layer norm2
I0419 16:15:40.189530  4030 net.cpp:106] Creating Layer norm2
I0419 16:15:40.189537  4030 net.cpp:454] norm2 <- conv2
I0419 16:15:40.189543  4030 net.cpp:411] norm2 -> norm2
I0419 16:15:40.189635  4030 net.cpp:150] Setting up norm2
I0419 16:15:40.189648  4030 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:15:40.189652  4030 net.cpp:165] Memory required for data: 238371484
I0419 16:15:40.189656  4030 layer_factory.hpp:77] Creating layer pool2
I0419 16:15:40.189664  4030 net.cpp:106] Creating Layer pool2
I0419 16:15:40.189668  4030 net.cpp:454] pool2 <- norm2
I0419 16:15:40.189677  4030 net.cpp:411] pool2 -> pool2
I0419 16:15:40.189715  4030 net.cpp:150] Setting up pool2
I0419 16:15:40.189728  4030 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:15:40.189733  4030 net.cpp:165] Memory required for data: 240927388
I0419 16:15:40.189736  4030 layer_factory.hpp:77] Creating layer conv3
I0419 16:15:40.189746  4030 net.cpp:106] Creating Layer conv3
I0419 16:15:40.189751  4030 net.cpp:454] conv3 <- pool2
I0419 16:15:40.189762  4030 net.cpp:411] conv3 -> conv3
I0419 16:15:40.193043  4030 net.cpp:150] Setting up conv3
I0419 16:15:40.193063  4030 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:15:40.193068  4030 net.cpp:165] Memory required for data: 244761244
I0419 16:15:40.193080  4030 layer_factory.hpp:77] Creating layer relu3
I0419 16:15:40.193092  4030 net.cpp:106] Creating Layer relu3
I0419 16:15:40.193099  4030 net.cpp:454] relu3 <- conv3
I0419 16:15:40.193107  4030 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:15:40.193117  4030 net.cpp:150] Setting up relu3
I0419 16:15:40.193125  4030 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:15:40.193130  4030 net.cpp:165] Memory required for data: 248595100
I0419 16:15:40.193135  4030 layer_factory.hpp:77] Creating layer conv4
I0419 16:15:40.193146  4030 net.cpp:106] Creating Layer conv4
I0419 16:15:40.193156  4030 net.cpp:454] conv4 <- conv3
I0419 16:15:40.193164  4030 net.cpp:411] conv4 -> conv4
I0419 16:15:40.196461  4030 net.cpp:150] Setting up conv4
I0419 16:15:40.196481  4030 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:15:40.196485  4030 net.cpp:165] Memory required for data: 252428956
I0419 16:15:40.196496  4030 layer_factory.hpp:77] Creating layer relu4
I0419 16:15:40.196503  4030 net.cpp:106] Creating Layer relu4
I0419 16:15:40.196508  4030 net.cpp:454] relu4 <- conv4
I0419 16:15:40.196518  4030 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:15:40.196529  4030 net.cpp:150] Setting up relu4
I0419 16:15:40.196537  4030 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:15:40.196545  4030 net.cpp:165] Memory required for data: 256262812
I0419 16:15:40.196550  4030 layer_factory.hpp:77] Creating layer conv5
I0419 16:15:40.196563  4030 net.cpp:106] Creating Layer conv5
I0419 16:15:40.196573  4030 net.cpp:454] conv5 <- conv4
I0419 16:15:40.196581  4030 net.cpp:411] conv5 -> conv5
I0419 16:15:40.198869  4030 net.cpp:150] Setting up conv5
I0419 16:15:40.198889  4030 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:15:40.198892  4030 net.cpp:165] Memory required for data: 258818716
I0419 16:15:40.198905  4030 layer_factory.hpp:77] Creating layer relu5
I0419 16:15:40.198915  4030 net.cpp:106] Creating Layer relu5
I0419 16:15:40.198926  4030 net.cpp:454] relu5 <- conv5
I0419 16:15:40.198936  4030 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:15:40.198947  4030 net.cpp:150] Setting up relu5
I0419 16:15:40.198954  4030 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:15:40.198961  4030 net.cpp:165] Memory required for data: 261374620
I0419 16:15:40.198966  4030 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:15:40.198983  4030 net.cpp:106] Creating Layer rpn_conv1
I0419 16:15:40.198992  4030 net.cpp:454] rpn_conv1 <- conv5
I0419 16:15:40.199000  4030 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:15:40.216034  4030 net.cpp:150] Setting up rpn_conv1
I0419 16:15:40.216053  4030 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:15:40.216058  4030 net.cpp:165] Memory required for data: 263930524
I0419 16:15:40.216068  4030 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:15:40.216076  4030 net.cpp:106] Creating Layer rpn_relu1
I0419 16:15:40.216081  4030 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:15:40.216087  4030 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:15:40.216101  4030 net.cpp:150] Setting up rpn_relu1
I0419 16:15:40.216109  4030 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:15:40.216115  4030 net.cpp:165] Memory required for data: 266486428
I0419 16:15:40.216120  4030 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:15:40.216133  4030 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:15:40.216142  4030 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:15:40.216148  4030 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:15:40.216161  4030 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:15:40.216204  4030 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:15:40.216217  4030 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:15:40.216223  4030 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:15:40.216228  4030 net.cpp:165] Memory required for data: 271598236
I0419 16:15:40.216233  4030 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:15:40.216246  4030 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:15:40.216256  4030 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:15:40.216269  4030 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:15:40.216596  4030 net.cpp:150] Setting up rpn_cls_score
I0419 16:15:40.216610  4030 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:15:40.216615  4030 net.cpp:165] Memory required for data: 271777948
I0419 16:15:40.216624  4030 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:15:40.216631  4030 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:15:40.216637  4030 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:15:40.216645  4030 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:15:40.216655  4030 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:15:40.216694  4030 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:15:40.216706  4030 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:15:40.216712  4030 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:15:40.216717  4030 net.cpp:165] Memory required for data: 272137372
I0419 16:15:40.216722  4030 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:15:40.216737  4030 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:15:40.216747  4030 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:15:40.216755  4030 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:15:40.217203  4030 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:15:40.217216  4030 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:15:40.217221  4030 net.cpp:165] Memory required for data: 272496796
I0419 16:15:40.217229  4030 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:15:40.217239  4030 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:15:40.217247  4030 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:15:40.217257  4030 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:15:40.217298  4030 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:15:40.217310  4030 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:15:40.217314  4030 net.cpp:165] Memory required for data: 272676508
I0419 16:15:40.217319  4030 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:15:40.217782  4030 net.cpp:106] Creating Layer rpn-data
I0419 16:15:40.217802  4030 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:15:40.217808  4030 net.cpp:454] rpn-data <- gt_boxes
I0419 16:15:40.217814  4030 net.cpp:454] rpn-data <- im_info
I0419 16:15:40.217819  4030 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:15:40.217828  4030 net.cpp:411] rpn-data -> rpn_labels
I0419 16:15:40.217839  4030 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:15:40.217849  4030 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:15:40.217864  4030 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:15:40.219143  4030 net.cpp:150] Setting up rpn-data
I0419 16:15:40.219166  4030 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:15:40.219174  4030 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:15:40.219179  4030 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:15:40.219184  4030 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:15:40.219188  4030 net.cpp:165] Memory required for data: 273844636
I0419 16:15:40.219194  4030 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:15:40.219213  4030 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:15:40.219223  4030 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:15:40.219231  4030 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:15:40.219239  4030 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:15:40.219259  4030 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:15:40.219383  4030 net.cpp:150] Setting up rpn_loss_cls
I0419 16:15:40.219396  4030 net.cpp:157] Top shape: (1)
I0419 16:15:40.219400  4030 net.cpp:160]     with loss weight 1
I0419 16:15:40.219419  4030 net.cpp:165] Memory required for data: 273844640
I0419 16:15:40.219424  4030 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:15:40.219439  4030 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:15:40.219449  4030 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:15:40.219455  4030 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:15:40.219460  4030 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:15:40.219465  4030 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:15:40.219475  4030 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:15:40.220064  4030 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:15:40.220078  4030 net.cpp:157] Top shape: (1)
I0419 16:15:40.220083  4030 net.cpp:160]     with loss weight 1
I0419 16:15:40.220090  4030 net.cpp:165] Memory required for data: 273844644
I0419 16:15:40.220095  4030 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:15:40.220108  4030 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:15:40.220124  4030 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:15:40.220160  4030 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:15:40.220172  4030 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:15:40.220176  4030 net.cpp:165] Memory required for data: 273881508
I0419 16:15:40.220181  4030 layer_factory.hpp:77] Creating layer fc6
I0419 16:15:40.220191  4030 net.cpp:106] Creating Layer fc6
I0419 16:15:40.220198  4030 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:15:40.220209  4030 net.cpp:411] fc6 -> fc6
I0419 16:15:40.318341  4030 net.cpp:150] Setting up fc6
I0419 16:15:40.318383  4030 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:40.318388  4030 net.cpp:165] Memory required for data: 273897892
I0419 16:15:40.318410  4030 layer_factory.hpp:77] Creating layer relu6
I0419 16:15:40.318423  4030 net.cpp:106] Creating Layer relu6
I0419 16:15:40.318430  4030 net.cpp:454] relu6 <- fc6
I0419 16:15:40.318439  4030 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:15:40.318459  4030 net.cpp:150] Setting up relu6
I0419 16:15:40.318466  4030 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:40.318472  4030 net.cpp:165] Memory required for data: 273914276
I0419 16:15:40.318477  4030 layer_factory.hpp:77] Creating layer fc7
I0419 16:15:40.318491  4030 net.cpp:106] Creating Layer fc7
I0419 16:15:40.318501  4030 net.cpp:454] fc7 <- fc6
I0419 16:15:40.318511  4030 net.cpp:411] fc7 -> fc7
I0419 16:15:40.361836  4030 net.cpp:150] Setting up fc7
I0419 16:15:40.361881  4030 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:15:40.361886  4030 net.cpp:165] Memory required for data: 273930660
I0419 16:15:40.361901  4030 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:15:40.361920  4030 net.cpp:106] Creating Layer silence_fc7
I0419 16:15:40.361927  4030 net.cpp:454] silence_fc7 <- fc7
I0419 16:15:40.361937  4030 net.cpp:150] Setting up silence_fc7
I0419 16:15:40.361946  4030 net.cpp:165] Memory required for data: 273930660
I0419 16:15:40.361950  4030 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:15:40.361956  4030 net.cpp:228] fc7 does not need backward computation.
I0419 16:15:40.361960  4030 net.cpp:228] relu6 does not need backward computation.
I0419 16:15:40.361970  4030 net.cpp:228] fc6 does not need backward computation.
I0419 16:15:40.361975  4030 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:15:40.361980  4030 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:15:40.361989  4030 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:15:40.361995  4030 net.cpp:226] rpn-data needs backward computation.
I0419 16:15:40.362007  4030 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:15:40.362013  4030 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:15:40.362021  4030 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:15:40.362027  4030 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:15:40.362035  4030 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:15:40.362040  4030 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:15:40.362046  4030 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:15:40.362051  4030 net.cpp:228] relu5 does not need backward computation.
I0419 16:15:40.362058  4030 net.cpp:228] conv5 does not need backward computation.
I0419 16:15:40.362063  4030 net.cpp:228] relu4 does not need backward computation.
I0419 16:15:40.362069  4030 net.cpp:228] conv4 does not need backward computation.
I0419 16:15:40.362074  4030 net.cpp:228] relu3 does not need backward computation.
I0419 16:15:40.362081  4030 net.cpp:228] conv3 does not need backward computation.
I0419 16:15:40.362087  4030 net.cpp:228] pool2 does not need backward computation.
I0419 16:15:40.362090  4030 net.cpp:228] norm2 does not need backward computation.
I0419 16:15:40.362098  4030 net.cpp:228] relu2 does not need backward computation.
I0419 16:15:40.362102  4030 net.cpp:228] conv2 does not need backward computation.
I0419 16:15:40.362107  4030 net.cpp:228] pool1 does not need backward computation.
I0419 16:15:40.362112  4030 net.cpp:228] norm1 does not need backward computation.
I0419 16:15:40.362118  4030 net.cpp:228] relu1 does not need backward computation.
I0419 16:15:40.362124  4030 net.cpp:228] conv1 does not need backward computation.
I0419 16:15:40.362130  4030 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:15:40.362136  4030 net.cpp:228] input-data does not need backward computation.
I0419 16:15:40.362143  4030 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:15:40.362148  4030 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:15:40.362188  4030 net.cpp:283] Network initialization done.
I0419 16:15:40.362308  4030 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
I0419 16:15:40.798616  4030 net.cpp:816] Ignoring source layer data
I0419 16:15:40.801717  4030 net.cpp:816] Ignoring source layer conv5_relu5_0_split
I0419 16:15:40.801729  4030 net.cpp:816] Ignoring source layer roi_pool_conv5
I0419 16:15:40.832099  4030 net.cpp:816] Ignoring source layer drop6
I0419 16:15:40.845639  4030 net.cpp:816] Ignoring source layer relu7
I0419 16:15:40.845660  4030 net.cpp:816] Ignoring source layer drop7
I0419 16:15:40.845664  4030 net.cpp:816] Ignoring source layer fc7_drop7_0_split
I0419 16:15:40.845666  4030 net.cpp:816] Ignoring source layer cls_score
I0419 16:15:40.845669  4030 net.cpp:816] Ignoring source layer bbox_pred
I0419 16:15:40.845671  4030 net.cpp:816] Ignoring source layer loss_cls
I0419 16:15:40.845674  4030 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:15:40.846194  4030 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:15:40.846202  4030 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Solving...
I0419 16:15:41.025362  4030 solver.cpp:229] Iteration 0, loss = 1.1888
I0419 16:15:41.025401  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.70785 (* 1 = 0.70785 loss)
I0419 16:15:41.025410  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.480947 (* 1 = 0.480947 loss)
I0419 16:15:41.025423  4030 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:15:43.351078  4030 solver.cpp:229] Iteration 20, loss = 0.532486
I0419 16:15:43.351121  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.246661 (* 1 = 0.246661 loss)
I0419 16:15:43.351128  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.285825 (* 1 = 0.285825 loss)
I0419 16:15:43.351133  4030 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:15:45.629598  4030 solver.cpp:229] Iteration 40, loss = 0.387418
I0419 16:15:45.629639  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.208893 (* 1 = 0.208893 loss)
I0419 16:15:45.629647  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.178525 (* 1 = 0.178525 loss)
I0419 16:15:45.629652  4030 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:15:47.880281  4030 solver.cpp:229] Iteration 60, loss = 0.931276
I0419 16:15:47.880322  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.460186 (* 1 = 0.460186 loss)
I0419 16:15:47.880329  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.471089 (* 1 = 0.471089 loss)
I0419 16:15:47.880334  4030 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:15:50.193325  4030 solver.cpp:229] Iteration 80, loss = 0.649747
I0419 16:15:50.193367  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.433855 (* 1 = 0.433855 loss)
I0419 16:15:50.193373  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.215892 (* 1 = 0.215892 loss)
I0419 16:15:50.193378  4030 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:15:52.475641  4030 solver.cpp:229] Iteration 100, loss = 0.288423
I0419 16:15:52.475682  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.249034 (* 1 = 0.249034 loss)
I0419 16:15:52.475689  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0393885 (* 1 = 0.0393885 loss)
I0419 16:15:52.475694  4030 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:15:54.724637  4030 solver.cpp:229] Iteration 120, loss = 0.764852
I0419 16:15:54.724679  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.285139 (* 1 = 0.285139 loss)
I0419 16:15:54.724685  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.479713 (* 1 = 0.479713 loss)
I0419 16:15:54.724690  4030 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:15:56.998884  4030 solver.cpp:229] Iteration 140, loss = 0.244432
I0419 16:15:56.998929  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.110122 (* 1 = 0.110122 loss)
I0419 16:15:56.998936  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.134311 (* 1 = 0.134311 loss)
I0419 16:15:56.998942  4030 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:15:59.177346  4030 solver.cpp:229] Iteration 160, loss = 0.350078
I0419 16:15:59.177388  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.185072 (* 1 = 0.185072 loss)
I0419 16:15:59.177395  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165006 (* 1 = 0.165006 loss)
I0419 16:15:59.177400  4030 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:16:01.380512  4030 solver.cpp:229] Iteration 180, loss = 0.268064
I0419 16:16:01.380560  4030 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.187254 (* 1 = 0.187254 loss)
I0419 16:16:01.380569  4030 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0808104 (* 1 = 0.0808104 loss)
I0419 16:16:01.380575  4030 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.113s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:16:07.294524  4044 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:16:07.294682  4044 net.cpp:413] Input 0 -> data
I0419 16:16:07.310040  4044 net.cpp:413] Input 1 -> im_info
I0419 16:16:07.310091  4044 layer_factory.hpp:77] Creating layer conv1
I0419 16:16:07.310122  4044 net.cpp:106] Creating Layer conv1
I0419 16:16:07.310134  4044 net.cpp:454] conv1 <- data
I0419 16:16:07.310148  4044 net.cpp:411] conv1 -> conv1
I0419 16:16:07.310926  4044 net.cpp:150] Setting up conv1
I0419 16:16:07.310950  4044 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:16:07.310955  4044 net.cpp:165] Memory required for data: 4816896
I0419 16:16:07.310967  4044 layer_factory.hpp:77] Creating layer relu1
I0419 16:16:07.310986  4044 net.cpp:106] Creating Layer relu1
I0419 16:16:07.310992  4044 net.cpp:454] relu1 <- conv1
I0419 16:16:07.310997  4044 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:16:07.311013  4044 net.cpp:150] Setting up relu1
I0419 16:16:07.311025  4044 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:16:07.311029  4044 net.cpp:165] Memory required for data: 9633792
I0419 16:16:07.311034  4044 layer_factory.hpp:77] Creating layer norm1
I0419 16:16:07.311046  4044 net.cpp:106] Creating Layer norm1
I0419 16:16:07.311056  4044 net.cpp:454] norm1 <- conv1
I0419 16:16:07.311064  4044 net.cpp:411] norm1 -> norm1
I0419 16:16:07.311184  4044 net.cpp:150] Setting up norm1
I0419 16:16:07.311197  4044 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:16:07.311199  4044 net.cpp:165] Memory required for data: 14450688
I0419 16:16:07.311203  4044 layer_factory.hpp:77] Creating layer pool1
I0419 16:16:07.311209  4044 net.cpp:106] Creating Layer pool1
I0419 16:16:07.311215  4044 net.cpp:454] pool1 <- norm1
I0419 16:16:07.311219  4044 net.cpp:411] pool1 -> pool1
I0419 16:16:07.311266  4044 net.cpp:150] Setting up pool1
I0419 16:16:07.311280  4044 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:16:07.311282  4044 net.cpp:165] Memory required for data: 15698304
I0419 16:16:07.311285  4044 layer_factory.hpp:77] Creating layer conv2
I0419 16:16:07.311295  4044 net.cpp:106] Creating Layer conv2
I0419 16:16:07.311298  4044 net.cpp:454] conv2 <- pool1
I0419 16:16:07.311303  4044 net.cpp:411] conv2 -> conv2
I0419 16:16:07.313483  4044 net.cpp:150] Setting up conv2
I0419 16:16:07.313501  4044 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:16:07.313504  4044 net.cpp:165] Memory required for data: 16559488
I0419 16:16:07.313514  4044 layer_factory.hpp:77] Creating layer relu2
I0419 16:16:07.313521  4044 net.cpp:106] Creating Layer relu2
I0419 16:16:07.313524  4044 net.cpp:454] relu2 <- conv2
I0419 16:16:07.313531  4044 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:16:07.313541  4044 net.cpp:150] Setting up relu2
I0419 16:16:07.313547  4044 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:16:07.313551  4044 net.cpp:165] Memory required for data: 17420672
I0419 16:16:07.313558  4044 layer_factory.hpp:77] Creating layer norm2
I0419 16:16:07.313568  4044 net.cpp:106] Creating Layer norm2
I0419 16:16:07.313575  4044 net.cpp:454] norm2 <- conv2
I0419 16:16:07.313585  4044 net.cpp:411] norm2 -> norm2
I0419 16:16:07.313684  4044 net.cpp:150] Setting up norm2
I0419 16:16:07.313696  4044 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:16:07.313699  4044 net.cpp:165] Memory required for data: 18281856
I0419 16:16:07.313702  4044 layer_factory.hpp:77] Creating layer pool2
I0419 16:16:07.313709  4044 net.cpp:106] Creating Layer pool2
I0419 16:16:07.313711  4044 net.cpp:454] pool2 <- norm2
I0419 16:16:07.313715  4044 net.cpp:411] pool2 -> pool2
I0419 16:16:07.313765  4044 net.cpp:150] Setting up pool2
I0419 16:16:07.313778  4044 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:16:07.313781  4044 net.cpp:165] Memory required for data: 18512256
I0419 16:16:07.313783  4044 layer_factory.hpp:77] Creating layer conv3
I0419 16:16:07.313793  4044 net.cpp:106] Creating Layer conv3
I0419 16:16:07.313797  4044 net.cpp:454] conv3 <- pool2
I0419 16:16:07.313802  4044 net.cpp:411] conv3 -> conv3
I0419 16:16:07.316090  4044 net.cpp:150] Setting up conv3
I0419 16:16:07.316108  4044 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:16:07.316112  4044 net.cpp:165] Memory required for data: 18857856
I0419 16:16:07.316123  4044 layer_factory.hpp:77] Creating layer relu3
I0419 16:16:07.316129  4044 net.cpp:106] Creating Layer relu3
I0419 16:16:07.316133  4044 net.cpp:454] relu3 <- conv3
I0419 16:16:07.316140  4044 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:16:07.316150  4044 net.cpp:150] Setting up relu3
I0419 16:16:07.316156  4044 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:16:07.316162  4044 net.cpp:165] Memory required for data: 19203456
I0419 16:16:07.316167  4044 layer_factory.hpp:77] Creating layer conv4
I0419 16:16:07.316179  4044 net.cpp:106] Creating Layer conv4
I0419 16:16:07.316190  4044 net.cpp:454] conv4 <- conv3
I0419 16:16:07.316198  4044 net.cpp:411] conv4 -> conv4
I0419 16:16:07.319504  4044 net.cpp:150] Setting up conv4
I0419 16:16:07.319521  4044 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:16:07.319525  4044 net.cpp:165] Memory required for data: 19549056
I0419 16:16:07.319531  4044 layer_factory.hpp:77] Creating layer relu4
I0419 16:16:07.319538  4044 net.cpp:106] Creating Layer relu4
I0419 16:16:07.319545  4044 net.cpp:454] relu4 <- conv4
I0419 16:16:07.319551  4044 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:16:07.319561  4044 net.cpp:150] Setting up relu4
I0419 16:16:07.319571  4044 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:16:07.319574  4044 net.cpp:165] Memory required for data: 19894656
I0419 16:16:07.319579  4044 layer_factory.hpp:77] Creating layer conv5
I0419 16:16:07.319588  4044 net.cpp:106] Creating Layer conv5
I0419 16:16:07.319599  4044 net.cpp:454] conv5 <- conv4
I0419 16:16:07.319607  4044 net.cpp:411] conv5 -> conv5
I0419 16:16:07.321880  4044 net.cpp:150] Setting up conv5
I0419 16:16:07.321897  4044 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:16:07.321900  4044 net.cpp:165] Memory required for data: 20125056
I0419 16:16:07.321909  4044 layer_factory.hpp:77] Creating layer relu5
I0419 16:16:07.321920  4044 net.cpp:106] Creating Layer relu5
I0419 16:16:07.321925  4044 net.cpp:454] relu5 <- conv5
I0419 16:16:07.321933  4044 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:16:07.321943  4044 net.cpp:150] Setting up relu5
I0419 16:16:07.321950  4044 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:16:07.321955  4044 net.cpp:165] Memory required for data: 20355456
I0419 16:16:07.321964  4044 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:16:07.321976  4044 net.cpp:106] Creating Layer rpn_conv1
I0419 16:16:07.321983  4044 net.cpp:454] rpn_conv1 <- conv5
I0419 16:16:07.321991  4044 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:16:07.323626  4044 net.cpp:150] Setting up rpn_conv1
I0419 16:16:07.323642  4044 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:16:07.323645  4044 net.cpp:165] Memory required for data: 20585856
I0419 16:16:07.323652  4044 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:16:07.323657  4044 net.cpp:106] Creating Layer rpn_relu1
I0419 16:16:07.323660  4044 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:16:07.323665  4044 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:16:07.323676  4044 net.cpp:150] Setting up rpn_relu1
I0419 16:16:07.323683  4044 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:16:07.323689  4044 net.cpp:165] Memory required for data: 20816256
I0419 16:16:07.323693  4044 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:16:07.323710  4044 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:16:07.323722  4044 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:16:07.323729  4044 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:16:07.323740  4044 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:16:07.323791  4044 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:16:07.323807  4044 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:16:07.323813  4044 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:16:07.323817  4044 net.cpp:165] Memory required for data: 21277056
I0419 16:16:07.323819  4044 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:16:07.323827  4044 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:16:07.323830  4044 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:16:07.323835  4044 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:16:07.324031  4044 net.cpp:150] Setting up rpn_cls_score
I0419 16:16:07.324046  4044 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:16:07.324049  4044 net.cpp:165] Memory required for data: 21293256
I0419 16:16:07.324054  4044 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:16:07.324060  4044 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:16:07.324065  4044 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:16:07.324074  4044 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:16:07.324278  4044 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:16:07.324290  4044 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:16:07.324293  4044 net.cpp:165] Memory required for data: 21325656
I0419 16:16:07.324300  4044 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:16:07.324306  4044 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:16:07.324311  4044 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:16:07.324317  4044 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:16:07.324358  4044 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:16:07.324374  4044 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:16:07.324378  4044 net.cpp:165] Memory required for data: 21341856
I0419 16:16:07.324380  4044 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:16:07.324385  4044 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:16:07.324388  4044 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:16:07.324393  4044 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:16:07.324462  4044 net.cpp:150] Setting up rpn_cls_prob
I0419 16:16:07.324473  4044 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:16:07.324476  4044 net.cpp:165] Memory required for data: 21358056
I0419 16:16:07.324479  4044 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:16:07.324483  4044 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:16:07.324486  4044 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:16:07.324491  4044 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:16:07.324524  4044 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:16:07.324540  4044 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:16:07.324545  4044 net.cpp:165] Memory required for data: 21374256
I0419 16:16:07.324548  4044 layer_factory.hpp:77] Creating layer proposal
I0419 16:16:07.325974  4044 net.cpp:106] Creating Layer proposal
I0419 16:16:07.325994  4044 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:16:07.325999  4044 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:16:07.326002  4044 net.cpp:454] proposal <- im_info
I0419 16:16:07.326009  4044 net.cpp:411] proposal -> rois
I0419 16:16:07.326017  4044 net.cpp:411] proposal -> scores
I0419 16:16:07.327353  4044 net.cpp:150] Setting up proposal
I0419 16:16:07.327374  4044 net.cpp:157] Top shape: 1 5 (5)
I0419 16:16:07.327378  4044 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:16:07.327381  4044 net.cpp:165] Memory required for data: 21374280
I0419 16:16:07.327384  4044 net.cpp:228] proposal does not need backward computation.
I0419 16:16:07.327389  4044 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:16:07.327394  4044 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:16:07.327396  4044 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:16:07.327401  4044 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:16:07.327406  4044 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:16:07.327410  4044 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:16:07.327417  4044 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:16:07.327421  4044 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:16:07.327425  4044 net.cpp:228] relu5 does not need backward computation.
I0419 16:16:07.327430  4044 net.cpp:228] conv5 does not need backward computation.
I0419 16:16:07.327435  4044 net.cpp:228] relu4 does not need backward computation.
I0419 16:16:07.327438  4044 net.cpp:228] conv4 does not need backward computation.
I0419 16:16:07.327442  4044 net.cpp:228] relu3 does not need backward computation.
I0419 16:16:07.327447  4044 net.cpp:228] conv3 does not need backward computation.
I0419 16:16:07.327455  4044 net.cpp:228] pool2 does not need backward computation.
I0419 16:16:07.327460  4044 net.cpp:228] norm2 does not need backward computation.
I0419 16:16:07.327464  4044 net.cpp:228] relu2 does not need backward computation.
I0419 16:16:07.327471  4044 net.cpp:228] conv2 does not need backward computation.
I0419 16:16:07.327476  4044 net.cpp:228] pool1 does not need backward computation.
I0419 16:16:07.327481  4044 net.cpp:228] norm1 does not need backward computation.
I0419 16:16:07.327484  4044 net.cpp:228] relu1 does not need backward computation.
I0419 16:16:07.327489  4044 net.cpp:228] conv1 does not need backward computation.
I0419 16:16:07.327497  4044 net.cpp:270] This network produces output rois
I0419 16:16:07.327502  4044 net.cpp:270] This network produces output scores
I0419 16:16:07.327530  4044 net.cpp:283] Network initialization done.
I0419 16:16:07.758885  4044 net.cpp:816] Ignoring source layer input-data
I0419 16:16:07.758919  4044 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:16:07.762514  4044 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:16:07.762539  4044 net.cpp:816] Ignoring source layer rpn-data
I0419 16:16:07.762542  4044 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:16:07.762545  4044 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:16:07.762547  4044 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:16:07.762550  4044 net.cpp:816] Ignoring source layer fc6
I0419 16:16:07.762552  4044 net.cpp:816] Ignoring source layer relu6
I0419 16:16:07.762555  4044 net.cpp:816] Ignoring source layer fc7
I0419 16:16:07.762558  4044 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.163s
im_proposals: 2/506 0.156s
im_proposals: 3/506 0.151s
im_proposals: 4/506 0.148s
im_proposals: 5/506 0.147s
im_proposals: 6/506 0.146s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.145s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.144s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.143s
im_proposals: 13/506 0.142s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.142s
im_proposals: 16/506 0.142s
im_proposals: 17/506 0.142s
im_proposals: 18/506 0.142s
im_proposals: 19/506 0.142s
im_proposals: 20/506 0.142s
im_proposals: 21/506 0.142s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.141s
im_proposals: 33/506 0.141s
im_proposals: 34/506 0.141s
im_proposals: 35/506 0.141s
im_proposals: 36/506 0.141s
im_proposals: 37/506 0.141s
im_proposals: 38/506 0.141s
im_proposals: 39/506 0.141s
im_proposals: 40/506 0.141s
im_proposals: 41/506 0.141s
im_proposals: 42/506 0.141s
im_proposals: 43/506 0.141s
im_proposals: 44/506 0.141s
im_proposals: 45/506 0.141s
im_proposals: 46/506 0.141s
im_proposals: 47/506 0.141s
im_proposals: 48/506 0.141s
im_proposals: 49/506 0.141s
im_proposals: 50/506 0.141s
im_proposals: 51/506 0.141s
im_proposals: 52/506 0.141s
im_proposals: 53/506 0.141s
im_proposals: 54/506 0.141s
im_proposals: 55/506 0.141s
im_proposals: 56/506 0.141s
im_proposals: 57/506 0.141s
im_proposals: 58/506 0.141s
im_proposals: 59/506 0.141s
im_proposals: 60/506 0.141s
im_proposals: 61/506 0.141s
im_proposals: 62/506 0.141s
im_proposals: 63/506 0.141s
im_proposals: 64/506 0.141s
im_proposals: 65/506 0.141s
im_proposals: 66/506 0.141s
im_proposals: 67/506 0.141s
im_proposals: 68/506 0.141s
im_proposals: 69/506 0.141s
im_proposals: 70/506 0.141s
im_proposals: 71/506 0.141s
im_proposals: 72/506 0.141s
im_proposals: 73/506 0.141s
im_proposals: 74/506 0.141s
im_proposals: 75/506 0.141s
im_proposals: 76/506 0.141s
im_proposals: 77/506 0.141s
im_proposals: 78/506 0.141s
im_proposals: 79/506 0.141s
im_proposals: 80/506 0.141s
im_proposals: 81/506 0.141s
im_proposals: 82/506 0.141s
im_proposals: 83/506 0.141s
im_proposals: 84/506 0.141s
im_proposals: 85/506 0.141s
im_proposals: 86/506 0.141s
im_proposals: 87/506 0.141s
im_proposals: 88/506 0.141s
im_proposals: 89/506 0.141s
im_proposals: 90/506 0.141s
im_proposals: 91/506 0.141s
im_proposals: 92/506 0.141s
im_proposals: 93/506 0.141s
im_proposals: 94/506 0.141s
im_proposals: 95/506 0.141s
im_proposals: 96/506 0.141s
im_proposals: 97/506 0.141s
im_proposals: 98/506 0.141s
im_proposals: 99/506 0.141s
im_proposals: 100/506 0.141s
im_proposals: 101/506 0.141s
im_proposals: 102/506 0.141s
im_proposals: 103/506 0.141s
im_proposals: 104/506 0.141s
im_proposals: 105/506 0.141s
im_proposals: 106/506 0.141s
im_proposals: 107/506 0.141s
im_proposals: 108/506 0.141s
im_proposals: 109/506 0.141s
im_proposals: 110/506 0.141s
im_proposals: 111/506 0.141s
im_proposals: 112/506 0.141s
im_proposals: 113/506 0.141s
im_proposals: 114/506 0.141s
im_proposals: 115/506 0.141s
im_proposals: 116/506 0.141s
im_proposals: 117/506 0.141s
im_proposals: 118/506 0.141s
im_proposals: 119/506 0.141s
im_proposals: 120/506 0.141s
im_proposals: 121/506 0.141s
im_proposals: 122/506 0.141s
im_proposals: 123/506 0.141s
im_proposals: 124/506 0.141s
im_proposals: 125/506 0.141s
im_proposals: 126/506 0.141s
im_proposals: 127/506 0.141s
im_proposals: 128/506 0.141s
im_proposals: 129/506 0.141s
im_proposals: 130/506 0.141s
im_proposals: 131/506 0.141s
im_proposals: 132/506 0.141s
im_proposals: 133/506 0.141s
im_proposals: 134/506 0.141s
im_proposals: 135/506 0.141s
im_proposals: 136/506 0.141s
im_proposals: 137/506 0.141s
im_proposals: 138/506 0.141s
im_proposals: 139/506 0.141s
im_proposals: 140/506 0.141s
im_proposals: 141/506 0.141s
im_proposals: 142/506 0.141s
im_proposals: 143/506 0.141s
im_proposals: 144/506 0.141s
im_proposals: 145/506 0.141s
im_proposals: 146/506 0.141s
im_proposals: 147/506 0.141s
im_proposals: 148/506 0.141s
im_proposals: 149/506 0.141s
im_proposals: 150/506 0.141s
im_proposals: 151/506 0.141s
im_proposals: 152/506 0.141s
im_proposals: 153/506 0.141s
im_proposals: 154/506 0.141s
im_proposals: 155/506 0.141s
im_proposals: 156/506 0.141s
im_proposals: 157/506 0.141s
im_proposals: 158/506 0.141s
im_proposals: 159/506 0.141s
im_proposals: 160/506 0.141s
im_proposals: 161/506 0.141s
im_proposals: 162/506 0.141s
im_proposals: 163/506 0.141s
im_proposals: 164/506 0.141s
im_proposals: 165/506 0.141s
im_proposals: 166/506 0.141s
im_proposals: 167/506 0.141s
im_proposals: 168/506 0.141s
im_proposals: 169/506 0.141s
im_proposals: 170/506 0.141s
im_proposals: 171/506 0.141s
im_proposals: 172/506 0.141s
im_proposals: 173/506 0.141s
im_proposals: 174/506 0.141s
im_proposals: 175/506 0.141s
im_proposals: 176/506 0.141s
im_proposals: 177/506 0.141s
im_proposals: 178/506 0.141s
im_proposals: 179/506 0.141s
im_proposals: 180/506 0.141s
im_proposals: 181/506 0.141s
im_proposals: 182/506 0.141s
im_proposals: 183/506 0.141s
im_proposals: 184/506 0.141s
im_proposals: 185/506 0.141s
im_proposals: 186/506 0.141s
im_proposals: 187/506 0.141s
im_proposals: 188/506 0.141s
im_proposals: 189/506 0.141s
im_proposals: 190/506 0.141s
im_proposals: 191/506 0.141s
im_proposals: 192/506 0.141s
im_proposals: 193/506 0.141s
im_proposals: 194/506 0.141s
im_proposals: 195/506 0.141s
im_proposals: 196/506 0.141s
im_proposals: 197/506 0.141s
im_proposals: 198/506 0.141s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.142s
im_proposals: 455/506 0.142s
im_proposals: 456/506 0.142s
im_proposals: 457/506 0.142s
im_proposals: 458/506 0.142s
im_proposals: 459/506 0.142s
im_proposals: 460/506 0.142s
im_proposals: 461/506 0.142s
im_proposals: 462/506 0.142s
im_proposals: 463/506 0.142s
im_proposals: 464/506 0.142s
im_proposals: 465/506 0.142s
im_proposals: 466/506 0.142s
im_proposals: 467/506 0.142s
im_proposals: 468/506 0.142s
im_proposals: 469/506 0.142s
im_proposals: 470/506 0.142s
im_proposals: 471/506 0.142s
im_proposals: 472/506 0.142s
im_proposals: 473/506 0.142s
im_proposals: 474/506 0.142s
im_proposals: 475/506 0.142s
im_proposals: 476/506 0.142s
im_proposals: 477/506 0.142s
im_proposals: 478/506 0.142s
im_proposals: 479/506 0.142s
im_proposals: 480/506 0.142s
im_proposals: 481/506 0.142s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 Fast R-CNN, init from stage 2 RPN R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.15217907e-07  -5.22005132e-03  -4.10793339e-02  -7.08718981e-02]
 [  8.92164694e-09   1.57054396e-02   2.19984295e-02  -2.78301045e-02]
 [ -1.94225821e-08  -8.61593031e-03   2.96989892e-02   6.69870494e-03]
 [ -7.33882189e-08   5.15535573e-02  -1.74732055e-02  -1.51888100e-02]
 [ -3.10440858e-09   3.40905333e-03   4.68776354e-02   1.95911229e-02]
 [  4.61332605e-08   5.50199124e-03   1.79429869e-03  -1.13158196e-02]
 [  6.25020928e-08   6.30476822e-03   4.30800884e-02  -2.43445225e-02]
 [ -6.09688356e-08   5.95824371e-03   3.37530213e-02   8.76786686e-05]
 [  1.42873350e-08  -3.70246134e-03   9.61448828e-03  -4.24198652e-02]
 [ -2.70083547e-08   1.58831410e-02   2.96526237e-02  -6.28295529e-04]
 [ -2.62309697e-08  -3.76861907e-03   3.92433991e-02  -1.64119690e-02]
 [  0.00000000e+00   8.80879668e-03   2.87056245e-02  -2.28243431e-02]
 [ -1.35863529e-09  -9.36826113e-03   3.53036770e-02   6.68836523e-03]
 [  1.29442049e-08  -9.80455974e-03   3.10986247e-02  -2.54646419e-02]
 [ -5.93788696e-08   1.30135879e-03   5.14335681e-02   1.49192686e-02]
 [  7.97444955e-08   3.25487806e-03  -1.91324592e-02  -4.42155972e-02]
 [  9.22009349e-08  -2.18390419e-02   1.16236154e-02  -1.29788245e-02]
 [ -2.68220901e-08  -1.63504751e-02  -3.63551257e-02  -7.34175252e-03]
 [ -3.47987421e-09  -1.28009905e-02   8.80987278e-02   3.39212810e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.62374266e-08   1.18576192e-02   2.12963320e-02  -3.55426945e-02]
 [  0.00000000e+00  -2.73562421e-02   3.71764302e-02   3.08031489e-02]
 [  3.29954284e-08   1.68099446e-02   9.91061250e-03  -6.47755188e-02]
 [  2.33865447e-08  -1.50194568e-02   3.35465732e-02  -5.10053122e-02]
 [  0.00000000e+00  -3.37360675e-02  -1.29876547e-02  -4.63749021e-02]
 [ -1.02445483e-08  -1.05859681e-02   3.63236621e-02  -3.95815330e-02]
 [  0.00000000e+00  -3.08435158e-02   2.72995049e-02  -3.17263682e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  9.77888703e-09  -3.37978094e-02   6.62351726e-03  -8.73072081e-02]
 [  2.13583310e-07   2.10562771e-02   1.04123890e-01   4.05486003e-02]
 [ -3.28065888e-08  -1.67200157e-02   9.78282262e-02  -1.73913034e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.20222791e-08   2.34385286e-02  -1.33259988e-02  -7.88555294e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.62520358e-08   7.97461874e-04   5.48839222e-02   5.03097506e-03]
 [  0.00000000e+00   4.31492925e-04  -5.06124686e-02  -1.98517618e-02]
 [ -3.17891439e-07  -6.48143639e-02   3.39208096e-02   1.15097900e-01]
 [ -2.70295211e-08  -9.81775733e-03   3.64169462e-02  -1.26073294e-02]
 [ -5.43892384e-08   1.18854707e-03   8.86017084e-03   9.47771966e-03]
 [  0.00000000e+00  -6.53625764e-03  -2.74993025e-02  -3.78074154e-02]
 [  5.06639481e-08   1.53237820e-02  -2.71972924e-02  -7.01517552e-02]
 [  0.00000000e+00  -1.49319681e-02  -3.88354932e-02  -2.72935242e-02]]
[ -2.54797916e-09  -3.41964957e-03   1.68764901e-02  -1.36807874e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.03118599  0.07820029  0.1879694   0.14515669]
 [ 0.10536447  0.0797608   0.11253537  0.15070204]
 [ 0.08942478  0.07682879  0.13667433  0.12012078]
 [ 0.07049701  0.08686918  0.10685716  0.16090195]
 [ 0.0689664   0.05151737  0.12282298  0.11078129]
 [ 0.10360388  0.08304575  0.15080414  0.14082425]
 [ 0.11339058  0.09352458  0.12649984  0.13832591]
 [ 0.09553999  0.0839336   0.11087185  0.10994704]
 [ 0.08797301  0.09229198  0.11841849  0.1628425 ]
 [ 0.06877713  0.08209774  0.10731047  0.11249492]
 [ 0.09604479  0.08389204  0.13290211  0.14286387]
 [ 0.08018352  0.0476292   0.06521492  0.08339381]
 [ 0.09109489  0.07227066  0.13383813  0.11657726]
 [ 0.08248341  0.06775028  0.13091794  0.11488883]
 [ 0.08776188  0.06086896  0.11978036  0.13528876]
 [ 0.06678698  0.09860393  0.10633958  0.14652086]
 [ 0.07079301  0.04207947  0.11737497  0.14684446]
 [ 0.0580357   0.06989958  0.10342338  0.11984149]
 [ 0.09966203  0.06932348  0.15290589  0.07684153]
 [ 0.          0.          0.          0.        ]
 [ 0.08639607  0.08594219  0.08092752  0.13541661]
 [ 0.03014494  0.06117042  0.08312902  0.06887794]
 [ 0.0929154   0.06259105  0.06433442  0.1096136 ]
 [ 0.04194884  0.04463624  0.07054561  0.1400867 ]
 [ 0.09694613  0.04771     0.01836732  0.06558402]
 [ 0.09028725  0.07122774  0.09998849  0.12037752]
 [ 0.0663192   0.08220008  0.11306004  0.0989453 ]
 [ 0.          0.          0.          0.        ]
 [ 0.06314527  0.07380807  0.11801258  0.12682124]
 [ 0.13168107  0.08334689  0.14726568  0.06057606]
 [ 0.10438679  0.08478485  0.16519981  0.15300941]
 [ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.07618705  0.09091894  0.11355521  0.12738066]
 [ 0.          0.          0.          0.        ]
 [ 0.09182852  0.05424865  0.09980124  0.098256  ]
 [ 0.09025062  0.06356327  0.11134718  0.0849115 ]
 [ 0.18744507  0.09413033  0.02669303  0.09491941]
 [ 0.09314606  0.07054383  0.10796287  0.10054283]
 [ 0.04503347  0.00237709  0.01772034  0.01895544]
 [ 0.08338253  0.05074086  0.08206391  0.09212766]
 [ 0.082225    0.07509092  0.05039421  0.13436018]
 [ 0.08375372  0.04804325  0.084512    0.08427064]]
[ 0.07453471  0.06203401  0.09298469  0.10116723]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:17:43.849138  4348 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:17:43.849195  4348 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt
I0419 16:17:43.850040  4348 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:17:43.850236  4348 layer_factory.hpp:77] Creating layer data
I0419 16:17:43.850868  4348 net.cpp:106] Creating Layer data
I0419 16:17:43.850893  4348 net.cpp:411] data -> data
I0419 16:17:43.850917  4348 net.cpp:411] data -> rois
I0419 16:17:43.850934  4348 net.cpp:411] data -> labels
I0419 16:17:43.850944  4348 net.cpp:411] data -> bbox_targets
I0419 16:17:43.850956  4348 net.cpp:411] data -> bbox_inside_weights
I0419 16:17:43.850965  4348 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:17:43.866420  4348 net.cpp:150] Setting up data
I0419 16:17:43.866443  4348 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:17:43.866454  4348 net.cpp:157] Top shape: 1 5 (5)
I0419 16:17:43.866461  4348 net.cpp:157] Top shape: 1 (1)
I0419 16:17:43.866466  4348 net.cpp:157] Top shape: 1 176 (176)
I0419 16:17:43.866472  4348 net.cpp:157] Top shape: 1 176 (176)
I0419 16:17:43.866480  4348 net.cpp:157] Top shape: 1 176 (176)
I0419 16:17:43.866485  4348 net.cpp:165] Memory required for data: 14402136
I0419 16:17:43.866492  4348 layer_factory.hpp:77] Creating layer conv1
I0419 16:17:43.866508  4348 net.cpp:106] Creating Layer conv1
I0419 16:17:43.866519  4348 net.cpp:454] conv1 <- data
I0419 16:17:43.866533  4348 net.cpp:411] conv1 -> conv1
I0419 16:17:43.867869  4348 net.cpp:150] Setting up conv1
I0419 16:17:43.867889  4348 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:17:43.867894  4348 net.cpp:165] Memory required for data: 129602136
I0419 16:17:43.867913  4348 layer_factory.hpp:77] Creating layer relu1
I0419 16:17:43.867933  4348 net.cpp:106] Creating Layer relu1
I0419 16:17:43.867939  4348 net.cpp:454] relu1 <- conv1
I0419 16:17:43.867951  4348 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:17:43.867965  4348 net.cpp:150] Setting up relu1
I0419 16:17:43.867974  4348 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:17:43.867979  4348 net.cpp:165] Memory required for data: 244802136
I0419 16:17:43.867982  4348 layer_factory.hpp:77] Creating layer norm1
I0419 16:17:43.867995  4348 net.cpp:106] Creating Layer norm1
I0419 16:17:43.868005  4348 net.cpp:454] norm1 <- conv1
I0419 16:17:43.868012  4348 net.cpp:411] norm1 -> norm1
I0419 16:17:43.868130  4348 net.cpp:150] Setting up norm1
I0419 16:17:43.868144  4348 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:17:43.868149  4348 net.cpp:165] Memory required for data: 360002136
I0419 16:17:43.868152  4348 layer_factory.hpp:77] Creating layer pool1
I0419 16:17:43.868161  4348 net.cpp:106] Creating Layer pool1
I0419 16:17:43.868166  4348 net.cpp:454] pool1 <- norm1
I0419 16:17:43.868176  4348 net.cpp:411] pool1 -> pool1
I0419 16:17:43.868222  4348 net.cpp:150] Setting up pool1
I0419 16:17:43.868234  4348 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:17:43.868239  4348 net.cpp:165] Memory required for data: 389110104
I0419 16:17:43.868243  4348 layer_factory.hpp:77] Creating layer conv2
I0419 16:17:43.868253  4348 net.cpp:106] Creating Layer conv2
I0419 16:17:43.868258  4348 net.cpp:454] conv2 <- pool1
I0419 16:17:43.868268  4348 net.cpp:411] conv2 -> conv2
I0419 16:17:43.869937  4348 net.cpp:150] Setting up conv2
I0419 16:17:43.869956  4348 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:17:43.869961  4348 net.cpp:165] Memory required for data: 408721752
I0419 16:17:43.869973  4348 layer_factory.hpp:77] Creating layer relu2
I0419 16:17:43.869982  4348 net.cpp:106] Creating Layer relu2
I0419 16:17:43.869987  4348 net.cpp:454] relu2 <- conv2
I0419 16:17:43.870000  4348 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:17:43.870010  4348 net.cpp:150] Setting up relu2
I0419 16:17:43.870018  4348 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:17:43.870023  4348 net.cpp:165] Memory required for data: 428333400
I0419 16:17:43.870026  4348 layer_factory.hpp:77] Creating layer norm2
I0419 16:17:43.870034  4348 net.cpp:106] Creating Layer norm2
I0419 16:17:43.870039  4348 net.cpp:454] norm2 <- conv2
I0419 16:17:43.870046  4348 net.cpp:411] norm2 -> norm2
I0419 16:17:43.870134  4348 net.cpp:150] Setting up norm2
I0419 16:17:43.870146  4348 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:17:43.870151  4348 net.cpp:165] Memory required for data: 447945048
I0419 16:17:43.870156  4348 layer_factory.hpp:77] Creating layer pool2
I0419 16:17:43.870172  4348 net.cpp:106] Creating Layer pool2
I0419 16:17:43.870177  4348 net.cpp:454] pool2 <- norm2
I0419 16:17:43.870184  4348 net.cpp:411] pool2 -> pool2
I0419 16:17:43.870221  4348 net.cpp:150] Setting up pool2
I0419 16:17:43.870234  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:43.870237  4348 net.cpp:165] Memory required for data: 453056856
I0419 16:17:43.870241  4348 layer_factory.hpp:77] Creating layer conv3
I0419 16:17:43.870251  4348 net.cpp:106] Creating Layer conv3
I0419 16:17:43.870255  4348 net.cpp:454] conv3 <- pool2
I0419 16:17:43.870263  4348 net.cpp:411] conv3 -> conv3
I0419 16:17:43.873555  4348 net.cpp:150] Setting up conv3
I0419 16:17:43.873574  4348 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:17:43.873579  4348 net.cpp:165] Memory required for data: 460724568
I0419 16:17:43.873592  4348 layer_factory.hpp:77] Creating layer relu3
I0419 16:17:43.873601  4348 net.cpp:106] Creating Layer relu3
I0419 16:17:43.873606  4348 net.cpp:454] relu3 <- conv3
I0419 16:17:43.873616  4348 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:17:43.873627  4348 net.cpp:150] Setting up relu3
I0419 16:17:43.873634  4348 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:17:43.873638  4348 net.cpp:165] Memory required for data: 468392280
I0419 16:17:43.873646  4348 layer_factory.hpp:77] Creating layer conv4
I0419 16:17:43.873656  4348 net.cpp:106] Creating Layer conv4
I0419 16:17:43.873659  4348 net.cpp:454] conv4 <- conv3
I0419 16:17:43.873669  4348 net.cpp:411] conv4 -> conv4
I0419 16:17:43.876977  4348 net.cpp:150] Setting up conv4
I0419 16:17:43.876997  4348 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:17:43.877002  4348 net.cpp:165] Memory required for data: 476059992
I0419 16:17:43.877012  4348 layer_factory.hpp:77] Creating layer relu4
I0419 16:17:43.877020  4348 net.cpp:106] Creating Layer relu4
I0419 16:17:43.877025  4348 net.cpp:454] relu4 <- conv4
I0419 16:17:43.877032  4348 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:17:43.877046  4348 net.cpp:150] Setting up relu4
I0419 16:17:43.877053  4348 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:17:43.877063  4348 net.cpp:165] Memory required for data: 483727704
I0419 16:17:43.877068  4348 layer_factory.hpp:77] Creating layer conv5
I0419 16:17:43.877080  4348 net.cpp:106] Creating Layer conv5
I0419 16:17:43.877087  4348 net.cpp:454] conv5 <- conv4
I0419 16:17:43.877096  4348 net.cpp:411] conv5 -> conv5
I0419 16:17:43.879369  4348 net.cpp:150] Setting up conv5
I0419 16:17:43.879387  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:43.879392  4348 net.cpp:165] Memory required for data: 488839512
I0419 16:17:43.879407  4348 layer_factory.hpp:77] Creating layer relu5
I0419 16:17:43.879415  4348 net.cpp:106] Creating Layer relu5
I0419 16:17:43.879421  4348 net.cpp:454] relu5 <- conv5
I0419 16:17:43.879428  4348 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:17:43.879442  4348 net.cpp:150] Setting up relu5
I0419 16:17:43.879449  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:43.879453  4348 net.cpp:165] Memory required for data: 493951320
I0419 16:17:43.879458  4348 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:17:43.879472  4348 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:17:43.879477  4348 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:17:43.879488  4348 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:17:43.879498  4348 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:17:43.879544  4348 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:17:43.879555  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:43.879562  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:43.879566  4348 net.cpp:165] Memory required for data: 504174936
I0419 16:17:43.879570  4348 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:17:43.879586  4348 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:17:43.879596  4348 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:17:43.879602  4348 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:17:43.879609  4348 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:17:43.879622  4348 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:17:43.879680  4348 net.cpp:150] Setting up roi_pool_conv5
I0419 16:17:43.879693  4348 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:17:43.879698  4348 net.cpp:165] Memory required for data: 504211800
I0419 16:17:43.879703  4348 layer_factory.hpp:77] Creating layer fc6
I0419 16:17:43.879714  4348 net.cpp:106] Creating Layer fc6
I0419 16:17:43.879719  4348 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:17:43.879725  4348 net.cpp:411] fc6 -> fc6
I0419 16:17:43.977478  4348 net.cpp:150] Setting up fc6
I0419 16:17:43.977519  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:43.977524  4348 net.cpp:165] Memory required for data: 504228184
I0419 16:17:43.977538  4348 layer_factory.hpp:77] Creating layer relu6
I0419 16:17:43.977551  4348 net.cpp:106] Creating Layer relu6
I0419 16:17:43.977558  4348 net.cpp:454] relu6 <- fc6
I0419 16:17:43.977567  4348 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:17:43.977579  4348 net.cpp:150] Setting up relu6
I0419 16:17:43.977591  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:43.977596  4348 net.cpp:165] Memory required for data: 504244568
I0419 16:17:43.977599  4348 layer_factory.hpp:77] Creating layer drop6
I0419 16:17:43.977617  4348 net.cpp:106] Creating Layer drop6
I0419 16:17:43.977627  4348 net.cpp:454] drop6 <- fc6
I0419 16:17:43.977635  4348 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:17:43.977672  4348 net.cpp:150] Setting up drop6
I0419 16:17:43.977684  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:43.977689  4348 net.cpp:165] Memory required for data: 504260952
I0419 16:17:43.977694  4348 layer_factory.hpp:77] Creating layer fc7
I0419 16:17:43.977704  4348 net.cpp:106] Creating Layer fc7
I0419 16:17:43.977708  4348 net.cpp:454] fc7 <- fc6
I0419 16:17:43.977716  4348 net.cpp:411] fc7 -> fc7
I0419 16:17:44.021076  4348 net.cpp:150] Setting up fc7
I0419 16:17:44.021118  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:44.021123  4348 net.cpp:165] Memory required for data: 504277336
I0419 16:17:44.021138  4348 layer_factory.hpp:77] Creating layer relu7
I0419 16:17:44.021152  4348 net.cpp:106] Creating Layer relu7
I0419 16:17:44.021158  4348 net.cpp:454] relu7 <- fc7
I0419 16:17:44.021169  4348 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:17:44.021181  4348 net.cpp:150] Setting up relu7
I0419 16:17:44.021188  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:44.021191  4348 net.cpp:165] Memory required for data: 504293720
I0419 16:17:44.021195  4348 layer_factory.hpp:77] Creating layer drop7
I0419 16:17:44.021203  4348 net.cpp:106] Creating Layer drop7
I0419 16:17:44.021208  4348 net.cpp:454] drop7 <- fc7
I0419 16:17:44.021216  4348 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:17:44.021247  4348 net.cpp:150] Setting up drop7
I0419 16:17:44.021260  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:44.021265  4348 net.cpp:165] Memory required for data: 504310104
I0419 16:17:44.021268  4348 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:17:44.021281  4348 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:17:44.021286  4348 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:17:44.021294  4348 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:17:44.021303  4348 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:17:44.021351  4348 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:17:44.021363  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:44.021369  4348 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:17:44.021373  4348 net.cpp:165] Memory required for data: 504342872
I0419 16:17:44.021378  4348 layer_factory.hpp:77] Creating layer cls_score
I0419 16:17:44.021390  4348 net.cpp:106] Creating Layer cls_score
I0419 16:17:44.021396  4348 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:17:44.021405  4348 net.cpp:411] cls_score -> cls_score
I0419 16:17:44.026969  4348 net.cpp:150] Setting up cls_score
I0419 16:17:44.026988  4348 net.cpp:157] Top shape: 1 44 (44)
I0419 16:17:44.026993  4348 net.cpp:165] Memory required for data: 504343048
I0419 16:17:44.027001  4348 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:17:44.027012  4348 net.cpp:106] Creating Layer bbox_pred
I0419 16:17:44.027017  4348 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:17:44.027026  4348 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:17:44.047713  4348 net.cpp:150] Setting up bbox_pred
I0419 16:17:44.047731  4348 net.cpp:157] Top shape: 1 176 (176)
I0419 16:17:44.047736  4348 net.cpp:165] Memory required for data: 504343752
I0419 16:17:44.047756  4348 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:17:44.047776  4348 net.cpp:106] Creating Layer loss_cls
I0419 16:17:44.047788  4348 net.cpp:454] loss_cls <- cls_score
I0419 16:17:44.047796  4348 net.cpp:454] loss_cls <- labels
I0419 16:17:44.047804  4348 net.cpp:411] loss_cls -> cls_loss
I0419 16:17:44.047827  4348 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:17:44.047919  4348 net.cpp:150] Setting up loss_cls
I0419 16:17:44.047932  4348 net.cpp:157] Top shape: (1)
I0419 16:17:44.047936  4348 net.cpp:160]     with loss weight 1
I0419 16:17:44.047957  4348 net.cpp:165] Memory required for data: 504343756
I0419 16:17:44.047962  4348 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:17:44.047976  4348 net.cpp:106] Creating Layer loss_bbox
I0419 16:17:44.047986  4348 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:17:44.047992  4348 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:17:44.047998  4348 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:17:44.048003  4348 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:17:44.048010  4348 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:17:44.048094  4348 net.cpp:150] Setting up loss_bbox
I0419 16:17:44.048105  4348 net.cpp:157] Top shape: (1)
I0419 16:17:44.048110  4348 net.cpp:160]     with loss weight 1
I0419 16:17:44.048116  4348 net.cpp:165] Memory required for data: 504343760
I0419 16:17:44.048121  4348 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:17:44.048138  4348 net.cpp:106] Creating Layer rpn_conv1
I0419 16:17:44.048148  4348 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:17:44.048158  4348 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:17:44.065208  4348 net.cpp:150] Setting up rpn_conv1
I0419 16:17:44.065230  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:44.065235  4348 net.cpp:165] Memory required for data: 509455568
I0419 16:17:44.065244  4348 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:17:44.065253  4348 net.cpp:106] Creating Layer rpn_relu1
I0419 16:17:44.065258  4348 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:17:44.065265  4348 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:17:44.065274  4348 net.cpp:150] Setting up rpn_relu1
I0419 16:17:44.065289  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:44.065294  4348 net.cpp:165] Memory required for data: 514567376
I0419 16:17:44.065299  4348 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:17:44.065310  4348 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:17:44.065315  4348 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:17:44.065325  4348 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:17:44.065335  4348 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:17:44.065376  4348 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:17:44.065389  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:44.065395  4348 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:17:44.065399  4348 net.cpp:165] Memory required for data: 524790992
I0419 16:17:44.065403  4348 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:17:44.065420  4348 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:17:44.065433  4348 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:17:44.065441  4348 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:17:44.065773  4348 net.cpp:150] Setting up rpn_cls_score
I0419 16:17:44.065789  4348 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:17:44.065794  4348 net.cpp:165] Memory required for data: 525150416
I0419 16:17:44.065803  4348 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:17:44.065824  4348 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:17:44.065830  4348 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:17:44.065840  4348 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:17:44.066303  4348 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:17:44.066318  4348 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:17:44.066323  4348 net.cpp:165] Memory required for data: 525869264
I0419 16:17:44.066344  4348 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:17:44.066356  4348 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:17:44.066364  4348 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:17:44.066371  4348 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:17:44.066377  4348 net.cpp:165] Memory required for data: 525869264
I0419 16:17:44.066381  4348 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:17:44.066390  4348 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:17:44.066396  4348 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:17:44.066402  4348 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:17:44.066406  4348 net.cpp:165] Memory required for data: 525869264
I0419 16:17:44.066413  4348 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:17:44.066418  4348 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:17:44.066422  4348 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:17:44.066427  4348 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:17:44.066432  4348 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:17:44.066437  4348 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:17:44.066442  4348 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:17:44.066447  4348 net.cpp:226] loss_bbox needs backward computation.
I0419 16:17:44.066454  4348 net.cpp:226] loss_cls needs backward computation.
I0419 16:17:44.066459  4348 net.cpp:226] bbox_pred needs backward computation.
I0419 16:17:44.066464  4348 net.cpp:226] cls_score needs backward computation.
I0419 16:17:44.066469  4348 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:17:44.066475  4348 net.cpp:226] drop7 needs backward computation.
I0419 16:17:44.066480  4348 net.cpp:226] relu7 needs backward computation.
I0419 16:17:44.066484  4348 net.cpp:226] fc7 needs backward computation.
I0419 16:17:44.066488  4348 net.cpp:226] drop6 needs backward computation.
I0419 16:17:44.066493  4348 net.cpp:226] relu6 needs backward computation.
I0419 16:17:44.066498  4348 net.cpp:226] fc6 needs backward computation.
I0419 16:17:44.066503  4348 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:17:44.066514  4348 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:17:44.066519  4348 net.cpp:228] relu5 does not need backward computation.
I0419 16:17:44.066524  4348 net.cpp:228] conv5 does not need backward computation.
I0419 16:17:44.066531  4348 net.cpp:228] relu4 does not need backward computation.
I0419 16:17:44.066535  4348 net.cpp:228] conv4 does not need backward computation.
I0419 16:17:44.066541  4348 net.cpp:228] relu3 does not need backward computation.
I0419 16:17:44.066546  4348 net.cpp:228] conv3 does not need backward computation.
I0419 16:17:44.066552  4348 net.cpp:228] pool2 does not need backward computation.
I0419 16:17:44.066557  4348 net.cpp:228] norm2 does not need backward computation.
I0419 16:17:44.066562  4348 net.cpp:228] relu2 does not need backward computation.
I0419 16:17:44.066570  4348 net.cpp:228] conv2 does not need backward computation.
I0419 16:17:44.066575  4348 net.cpp:228] pool1 does not need backward computation.
I0419 16:17:44.066579  4348 net.cpp:228] norm1 does not need backward computation.
I0419 16:17:44.066586  4348 net.cpp:228] relu1 does not need backward computation.
I0419 16:17:44.066591  4348 net.cpp:228] conv1 does not need backward computation.
I0419 16:17:44.066598  4348 net.cpp:228] data does not need backward computation.
I0419 16:17:44.066602  4348 net.cpp:270] This network produces output bbox_loss
I0419 16:17:44.066607  4348 net.cpp:270] This network produces output cls_loss
I0419 16:17:44.066640  4348 net.cpp:283] Network initialization done.
I0419 16:17:44.066784  4348 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
I0419 16:17:44.498062  4348 net.cpp:816] Ignoring source layer input-data
I0419 16:17:44.498095  4348 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:17:44.501631  4348 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:17:44.501657  4348 net.cpp:816] Ignoring source layer rpn_cls_score_reshape
I0419 16:17:44.501662  4348 net.cpp:816] Ignoring source layer rpn-data
I0419 16:17:44.501667  4348 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:17:44.501670  4348 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:17:44.501674  4348 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:17:44.546098  4348 net.cpp:816] Ignoring source layer silence_fc7
Solving...
I0419 16:17:44.878867  4348 solver.cpp:229] Iteration 0, loss = 1.21757
I0419 16:17:44.878917  4348 solver.cpp:245]     Train net output #0: bbox_loss = 0.0242392 (* 1 = 0.0242392 loss)
I0419 16:17:44.878931  4348 solver.cpp:245]     Train net output #1: cls_loss = 1.19333 (* 1 = 1.19333 loss)
I0419 16:17:44.878952  4348 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:17:49.477177  4348 solver.cpp:229] Iteration 20, loss = 0.241161
I0419 16:17:49.477226  4348 solver.cpp:245]     Train net output #0: bbox_loss = 0.0410683 (* 1 = 0.0410683 loss)
I0419 16:17:49.477236  4348 solver.cpp:245]     Train net output #1: cls_loss = 0.200093 (* 1 = 0.200093 loss)
I0419 16:17:49.477243  4348 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:17:53.993432  4348 solver.cpp:229] Iteration 40, loss = 0.222941
I0419 16:17:53.993481  4348 solver.cpp:245]     Train net output #0: bbox_loss = 0.00227355 (* 1 = 0.00227355 loss)
I0419 16:17:53.993491  4348 solver.cpp:245]     Train net output #1: cls_loss = 0.220667 (* 1 = 0.220667 loss)
I0419 16:17:53.993500  4348 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:17:58.526201  4348 solver.cpp:229] Iteration 60, loss = nan
I0419 16:17:58.526244  4348 solver.cpp:245]     Train net output #0: bbox_loss = nan (* 1 = nan loss)
I0419 16:17:58.526252  4348 solver.cpp:245]     Train net output #1: cls_loss = 0.176247 (* 1 = 0.176247 loss)
I0419 16:17:58.526258  4348 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:18:03.018949  4348 solver.cpp:229] Iteration 80, loss = 0.143793
I0419 16:18:03.018993  4348 solver.cpp:245]     Train net output #0: bbox_loss = 0.0193062 (* 1 = 0.0193062 loss)
I0419 16:18:03.019001  4348 solver.cpp:245]     Train net output #1: cls_loss = 0.124486 (* 1 = 0.124486 loss)
I0419 16:18:03.019007  4348 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel
done solving
cp /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel -> /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel
Final model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel

real	5m16.912s
user	4m24.435s
sys	0m51.783s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt --net /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(caffemodel='/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', comp_mode=False, gpu_id=0, imdb_name='voc_2007_test', max_per_image=100, prototxt='models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:18:11.420975  4362 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 1360
  dim: 800
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 44
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 176
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0419 16:18:11.421175  4362 net.cpp:413] Input 0 -> data
I0419 16:18:11.436350  4362 net.cpp:413] Input 1 -> im_info
I0419 16:18:11.436411  4362 layer_factory.hpp:77] Creating layer conv1
I0419 16:18:11.436439  4362 net.cpp:106] Creating Layer conv1
I0419 16:18:11.436446  4362 net.cpp:454] conv1 <- data
I0419 16:18:11.436463  4362 net.cpp:411] conv1 -> conv1
I0419 16:18:11.437899  4362 net.cpp:150] Setting up conv1
I0419 16:18:11.437921  4362 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:18:11.437927  4362 net.cpp:165] Memory required for data: 104448000
I0419 16:18:11.437947  4362 layer_factory.hpp:77] Creating layer relu1
I0419 16:18:11.437965  4362 net.cpp:106] Creating Layer relu1
I0419 16:18:11.437971  4362 net.cpp:454] relu1 <- conv1
I0419 16:18:11.437978  4362 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:18:11.437995  4362 net.cpp:150] Setting up relu1
I0419 16:18:11.438004  4362 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:18:11.438007  4362 net.cpp:165] Memory required for data: 208896000
I0419 16:18:11.438012  4362 layer_factory.hpp:77] Creating layer norm1
I0419 16:18:11.438024  4362 net.cpp:106] Creating Layer norm1
I0419 16:18:11.438033  4362 net.cpp:454] norm1 <- conv1
I0419 16:18:11.438043  4362 net.cpp:411] norm1 -> norm1
I0419 16:18:11.438159  4362 net.cpp:150] Setting up norm1
I0419 16:18:11.438176  4362 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:18:11.438181  4362 net.cpp:165] Memory required for data: 313344000
I0419 16:18:11.438185  4362 layer_factory.hpp:77] Creating layer pool1
I0419 16:18:11.438192  4362 net.cpp:106] Creating Layer pool1
I0419 16:18:11.438197  4362 net.cpp:454] pool1 <- norm1
I0419 16:18:11.438205  4362 net.cpp:411] pool1 -> pool1
I0419 16:18:11.438251  4362 net.cpp:150] Setting up pool1
I0419 16:18:11.438263  4362 net.cpp:157] Top shape: 1 96 341 201 (6579936)
I0419 16:18:11.438268  4362 net.cpp:165] Memory required for data: 339663744
I0419 16:18:11.438272  4362 layer_factory.hpp:77] Creating layer conv2
I0419 16:18:11.438285  4362 net.cpp:106] Creating Layer conv2
I0419 16:18:11.438292  4362 net.cpp:454] conv2 <- pool1
I0419 16:18:11.438299  4362 net.cpp:411] conv2 -> conv2
I0419 16:18:11.440476  4362 net.cpp:150] Setting up conv2
I0419 16:18:11.440495  4362 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:18:11.440500  4362 net.cpp:165] Memory required for data: 357349248
I0419 16:18:11.440513  4362 layer_factory.hpp:77] Creating layer relu2
I0419 16:18:11.440522  4362 net.cpp:106] Creating Layer relu2
I0419 16:18:11.440527  4362 net.cpp:454] relu2 <- conv2
I0419 16:18:11.440546  4362 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:18:11.440557  4362 net.cpp:150] Setting up relu2
I0419 16:18:11.440564  4362 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:18:11.440569  4362 net.cpp:165] Memory required for data: 375034752
I0419 16:18:11.440573  4362 layer_factory.hpp:77] Creating layer norm2
I0419 16:18:11.440582  4362 net.cpp:106] Creating Layer norm2
I0419 16:18:11.440587  4362 net.cpp:454] norm2 <- conv2
I0419 16:18:11.440595  4362 net.cpp:411] norm2 -> norm2
I0419 16:18:11.440685  4362 net.cpp:150] Setting up norm2
I0419 16:18:11.440699  4362 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:18:11.440703  4362 net.cpp:165] Memory required for data: 392720256
I0419 16:18:11.440708  4362 layer_factory.hpp:77] Creating layer pool2
I0419 16:18:11.440716  4362 net.cpp:106] Creating Layer pool2
I0419 16:18:11.440719  4362 net.cpp:454] pool2 <- norm2
I0419 16:18:11.440726  4362 net.cpp:411] pool2 -> pool2
I0419 16:18:11.440767  4362 net.cpp:150] Setting up pool2
I0419 16:18:11.440778  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.440783  4362 net.cpp:165] Memory required for data: 397211520
I0419 16:18:11.440788  4362 layer_factory.hpp:77] Creating layer conv3
I0419 16:18:11.440800  4362 net.cpp:106] Creating Layer conv3
I0419 16:18:11.440807  4362 net.cpp:454] conv3 <- pool2
I0419 16:18:11.440815  4362 net.cpp:411] conv3 -> conv3
I0419 16:18:11.443581  4362 net.cpp:150] Setting up conv3
I0419 16:18:11.443603  4362 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:18:11.443608  4362 net.cpp:165] Memory required for data: 403948416
I0419 16:18:11.443619  4362 layer_factory.hpp:77] Creating layer relu3
I0419 16:18:11.443631  4362 net.cpp:106] Creating Layer relu3
I0419 16:18:11.443644  4362 net.cpp:454] relu3 <- conv3
I0419 16:18:11.443651  4362 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:18:11.443660  4362 net.cpp:150] Setting up relu3
I0419 16:18:11.443670  4362 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:18:11.443675  4362 net.cpp:165] Memory required for data: 410685312
I0419 16:18:11.443678  4362 layer_factory.hpp:77] Creating layer conv4
I0419 16:18:11.443691  4362 net.cpp:106] Creating Layer conv4
I0419 16:18:11.443701  4362 net.cpp:454] conv4 <- conv3
I0419 16:18:11.443708  4362 net.cpp:411] conv4 -> conv4
I0419 16:18:11.447016  4362 net.cpp:150] Setting up conv4
I0419 16:18:11.447036  4362 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:18:11.447041  4362 net.cpp:165] Memory required for data: 417422208
I0419 16:18:11.447051  4362 layer_factory.hpp:77] Creating layer relu4
I0419 16:18:11.447057  4362 net.cpp:106] Creating Layer relu4
I0419 16:18:11.447062  4362 net.cpp:454] relu4 <- conv4
I0419 16:18:11.447069  4362 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:18:11.447078  4362 net.cpp:150] Setting up relu4
I0419 16:18:11.447089  4362 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:18:11.447093  4362 net.cpp:165] Memory required for data: 424159104
I0419 16:18:11.447098  4362 layer_factory.hpp:77] Creating layer conv5
I0419 16:18:11.447110  4362 net.cpp:106] Creating Layer conv5
I0419 16:18:11.447121  4362 net.cpp:454] conv5 <- conv4
I0419 16:18:11.447131  4362 net.cpp:411] conv5 -> conv5
I0419 16:18:11.449443  4362 net.cpp:150] Setting up conv5
I0419 16:18:11.449466  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.449471  4362 net.cpp:165] Memory required for data: 428650368
I0419 16:18:11.449484  4362 layer_factory.hpp:77] Creating layer relu5
I0419 16:18:11.449492  4362 net.cpp:106] Creating Layer relu5
I0419 16:18:11.449501  4362 net.cpp:454] relu5 <- conv5
I0419 16:18:11.449508  4362 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:18:11.449517  4362 net.cpp:150] Setting up relu5
I0419 16:18:11.449527  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.449530  4362 net.cpp:165] Memory required for data: 433141632
I0419 16:18:11.449535  4362 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:18:11.449549  4362 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:18:11.449559  4362 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:18:11.449568  4362 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:18:11.449575  4362 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:18:11.449620  4362 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:18:11.449632  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.449640  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.449643  4362 net.cpp:165] Memory required for data: 442124160
I0419 16:18:11.449648  4362 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:18:11.449661  4362 net.cpp:106] Creating Layer rpn_conv1
I0419 16:18:11.449666  4362 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_0
I0419 16:18:11.449674  4362 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:18:11.451318  4362 net.cpp:150] Setting up rpn_conv1
I0419 16:18:11.451337  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.451342  4362 net.cpp:165] Memory required for data: 446615424
I0419 16:18:11.451352  4362 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:18:11.451362  4362 net.cpp:106] Creating Layer rpn_relu1
I0419 16:18:11.451369  4362 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:18:11.451375  4362 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:18:11.451388  4362 net.cpp:150] Setting up rpn_relu1
I0419 16:18:11.451395  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.451402  4362 net.cpp:165] Memory required for data: 451106688
I0419 16:18:11.451407  4362 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:18:11.451417  4362 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:18:11.451428  4362 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:18:11.451436  4362 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:18:11.451443  4362 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:18:11.451486  4362 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:18:11.451498  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.451504  4362 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:18:11.451508  4362 net.cpp:165] Memory required for data: 460089216
I0419 16:18:11.451514  4362 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:18:11.451525  4362 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:18:11.451535  4362 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:18:11.451542  4362 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:18:11.451746  4362 net.cpp:150] Setting up rpn_cls_score
I0419 16:18:11.451764  4362 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:18:11.451768  4362 net.cpp:165] Memory required for data: 460405008
I0419 16:18:11.451777  4362 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:18:11.451786  4362 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:18:11.451792  4362 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:18:11.451803  4362 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:18:11.452015  4362 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:18:11.452029  4362 net.cpp:157] Top shape: 1 36 86 51 (157896)
I0419 16:18:11.452034  4362 net.cpp:165] Memory required for data: 461036592
I0419 16:18:11.452042  4362 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:18:11.452052  4362 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:18:11.452059  4362 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:18:11.452065  4362 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:18:11.452101  4362 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:18:11.452114  4362 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:18:11.452118  4362 net.cpp:165] Memory required for data: 461352384
I0419 16:18:11.452122  4362 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:18:11.452133  4362 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:18:11.452138  4362 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:18:11.452147  4362 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:18:11.452210  4362 net.cpp:150] Setting up rpn_cls_prob
I0419 16:18:11.452225  4362 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:18:11.452230  4362 net.cpp:165] Memory required for data: 461668176
I0419 16:18:11.452234  4362 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:18:11.452241  4362 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:18:11.452246  4362 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:18:11.452255  4362 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:18:11.452288  4362 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:18:11.452303  4362 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:18:11.452307  4362 net.cpp:165] Memory required for data: 461983968
I0419 16:18:11.452312  4362 layer_factory.hpp:77] Creating layer proposal
I0419 16:18:11.452782  4362 net.cpp:106] Creating Layer proposal
I0419 16:18:11.452800  4362 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:18:11.452807  4362 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:18:11.452813  4362 net.cpp:454] proposal <- im_info
I0419 16:18:11.452821  4362 net.cpp:411] proposal -> rois
I0419 16:18:11.453500  4362 net.cpp:150] Setting up proposal
I0419 16:18:11.453522  4362 net.cpp:157] Top shape: 1 5 (5)
I0419 16:18:11.453527  4362 net.cpp:165] Memory required for data: 461983988
I0419 16:18:11.453532  4362 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:18:11.453544  4362 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:18:11.453550  4362 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0419 16:18:11.453562  4362 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:18:11.453572  4362 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:18:11.453586  4362 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:18:11.453650  4362 net.cpp:150] Setting up roi_pool_conv5
I0419 16:18:11.453665  4362 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:18:11.453668  4362 net.cpp:165] Memory required for data: 462020852
I0419 16:18:11.453673  4362 layer_factory.hpp:77] Creating layer fc6
I0419 16:18:11.453685  4362 net.cpp:106] Creating Layer fc6
I0419 16:18:11.453691  4362 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:18:11.453698  4362 net.cpp:411] fc6 -> fc6
I0419 16:18:11.552294  4362 net.cpp:150] Setting up fc6
I0419 16:18:11.552335  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.552340  4362 net.cpp:165] Memory required for data: 462037236
I0419 16:18:11.552362  4362 layer_factory.hpp:77] Creating layer relu6
I0419 16:18:11.552381  4362 net.cpp:106] Creating Layer relu6
I0419 16:18:11.552387  4362 net.cpp:454] relu6 <- fc6
I0419 16:18:11.552395  4362 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:18:11.552407  4362 net.cpp:150] Setting up relu6
I0419 16:18:11.552417  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.552423  4362 net.cpp:165] Memory required for data: 462053620
I0419 16:18:11.552426  4362 layer_factory.hpp:77] Creating layer drop6
I0419 16:18:11.552441  4362 net.cpp:106] Creating Layer drop6
I0419 16:18:11.552451  4362 net.cpp:454] drop6 <- fc6
I0419 16:18:11.552464  4362 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:18:11.552500  4362 net.cpp:150] Setting up drop6
I0419 16:18:11.552513  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.552518  4362 net.cpp:165] Memory required for data: 462070004
I0419 16:18:11.552523  4362 layer_factory.hpp:77] Creating layer fc7
I0419 16:18:11.552536  4362 net.cpp:106] Creating Layer fc7
I0419 16:18:11.552542  4362 net.cpp:454] fc7 <- fc6
I0419 16:18:11.552548  4362 net.cpp:411] fc7 -> fc7
I0419 16:18:11.596289  4362 net.cpp:150] Setting up fc7
I0419 16:18:11.596334  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.596340  4362 net.cpp:165] Memory required for data: 462086388
I0419 16:18:11.596355  4362 layer_factory.hpp:77] Creating layer relu7
I0419 16:18:11.596369  4362 net.cpp:106] Creating Layer relu7
I0419 16:18:11.596374  4362 net.cpp:454] relu7 <- fc7
I0419 16:18:11.596384  4362 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:18:11.596396  4362 net.cpp:150] Setting up relu7
I0419 16:18:11.596408  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.596412  4362 net.cpp:165] Memory required for data: 462102772
I0419 16:18:11.596417  4362 layer_factory.hpp:77] Creating layer drop7
I0419 16:18:11.596426  4362 net.cpp:106] Creating Layer drop7
I0419 16:18:11.596433  4362 net.cpp:454] drop7 <- fc7
I0419 16:18:11.596439  4362 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:18:11.596473  4362 net.cpp:150] Setting up drop7
I0419 16:18:11.596485  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.596490  4362 net.cpp:165] Memory required for data: 462119156
I0419 16:18:11.596495  4362 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:18:11.596503  4362 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:18:11.596508  4362 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:18:11.596513  4362 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:18:11.596523  4362 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:18:11.596570  4362 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:18:11.596581  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.596588  4362 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:18:11.596592  4362 net.cpp:165] Memory required for data: 462151924
I0419 16:18:11.596596  4362 layer_factory.hpp:77] Creating layer cls_score
I0419 16:18:11.596612  4362 net.cpp:106] Creating Layer cls_score
I0419 16:18:11.596622  4362 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:18:11.596633  4362 net.cpp:411] cls_score -> cls_score
I0419 16:18:11.597476  4362 net.cpp:150] Setting up cls_score
I0419 16:18:11.597493  4362 net.cpp:157] Top shape: 1 44 (44)
I0419 16:18:11.597498  4362 net.cpp:165] Memory required for data: 462152100
I0419 16:18:11.597507  4362 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:18:11.597517  4362 net.cpp:106] Creating Layer bbox_pred
I0419 16:18:11.597522  4362 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:18:11.597528  4362 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:18:11.599364  4362 net.cpp:150] Setting up bbox_pred
I0419 16:18:11.599383  4362 net.cpp:157] Top shape: 1 176 (176)
I0419 16:18:11.599388  4362 net.cpp:165] Memory required for data: 462152804
I0419 16:18:11.599398  4362 layer_factory.hpp:77] Creating layer cls_prob
I0419 16:18:11.599408  4362 net.cpp:106] Creating Layer cls_prob
I0419 16:18:11.599413  4362 net.cpp:454] cls_prob <- cls_score
I0419 16:18:11.599421  4362 net.cpp:411] cls_prob -> cls_prob
I0419 16:18:11.599488  4362 net.cpp:150] Setting up cls_prob
I0419 16:18:11.599501  4362 net.cpp:157] Top shape: 1 44 (44)
I0419 16:18:11.599506  4362 net.cpp:165] Memory required for data: 462152980
I0419 16:18:11.599511  4362 net.cpp:228] cls_prob does not need backward computation.
I0419 16:18:11.599516  4362 net.cpp:228] bbox_pred does not need backward computation.
I0419 16:18:11.599520  4362 net.cpp:228] cls_score does not need backward computation.
I0419 16:18:11.599525  4362 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0419 16:18:11.599529  4362 net.cpp:228] drop7 does not need backward computation.
I0419 16:18:11.599534  4362 net.cpp:228] relu7 does not need backward computation.
I0419 16:18:11.599544  4362 net.cpp:228] fc7 does not need backward computation.
I0419 16:18:11.599548  4362 net.cpp:228] drop6 does not need backward computation.
I0419 16:18:11.599552  4362 net.cpp:228] relu6 does not need backward computation.
I0419 16:18:11.599556  4362 net.cpp:228] fc6 does not need backward computation.
I0419 16:18:11.599563  4362 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:18:11.599568  4362 net.cpp:228] proposal does not need backward computation.
I0419 16:18:11.599575  4362 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:18:11.599581  4362 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:18:11.599586  4362 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:18:11.599591  4362 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:18:11.599596  4362 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:18:11.599601  4362 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:18:11.599607  4362 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:18:11.599612  4362 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:18:11.599618  4362 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:18:11.599637  4362 net.cpp:228] relu5 does not need backward computation.
I0419 16:18:11.599643  4362 net.cpp:228] conv5 does not need backward computation.
I0419 16:18:11.599648  4362 net.cpp:228] relu4 does not need backward computation.
I0419 16:18:11.599653  4362 net.cpp:228] conv4 does not need backward computation.
I0419 16:18:11.599658  4362 net.cpp:228] relu3 does not need backward computation.
I0419 16:18:11.599663  4362 net.cpp:228] conv3 does not need backward computation.
I0419 16:18:11.599668  4362 net.cpp:228] pool2 does not need backward computation.
I0419 16:18:11.599674  4362 net.cpp:228] norm2 does not need backward computation.
I0419 16:18:11.599679  4362 net.cpp:228] relu2 does not need backward computation.
I0419 16:18:11.599684  4362 net.cpp:228] conv2 does not need backward computation.
I0419 16:18:11.599689  4362 net.cpp:228] pool1 does not need backward computation.
I0419 16:18:11.599694  4362 net.cpp:228] norm1 does not need backward computation.
I0419 16:18:11.599699  4362 net.cpp:228] relu1 does not need backward computation.
I0419 16:18:11.599704  4362 net.cpp:228] conv1 does not need backward computation.
I0419 16:18:11.599709  4362 net.cpp:270] This network produces output bbox_pred
I0419 16:18:11.599714  4362 net.cpp:270] This network produces output cls_prob
I0419 16:18:11.599750  4362 net.cpp:283] Network initialization done.
I0419 16:18:12.035503  4362 net.cpp:816] Ignoring source layer data
I0419 16:18:12.083200  4362 net.cpp:816] Ignoring source layer loss_cls
I0419 16:18:12.083231  4362 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:18:12.083747  4362 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:18:12.083760  4362 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
im_detect: 1/50 0.141s 0.001s
im_detect: 2/50 0.119s 0.001s
im_detect: 3/50 0.112s 0.001s
im_detect: 4/50 0.108s 0.001s
im_detect: 5/50 0.106s 0.001s
im_detect: 6/50 0.104s 0.001s
im_detect: 7/50 0.103s 0.001s
im_detect: 8/50 0.102s 0.001s
im_detect: 9/50 0.101s 0.001s
im_detect: 10/50 0.101s 0.001s
im_detect: 11/50 0.101s 0.001s
im_detect: 12/50 0.100s 0.001s
im_detect: 13/50 0.100s 0.001s
im_detect: 14/50 0.100s 0.001s
im_detect: 15/50 0.100s 0.001s
im_detect: 16/50 0.100s 0.001s
im_detect: 17/50 0.101s 0.001s
im_detect: 18/50 0.101s 0.001s
im_detect: 19/50 0.101s 0.001s
im_detect: 20/50 0.100s 0.001s
im_detect: 21/50 0.101s 0.001s
im_detect: 22/50 0.100s 0.001s
im_detect: 23/50 0.100s 0.001s
im_detect: 24/50 0.101s 0.001s
im_detect: 25/50 0.101s 0.001s
im_detect: 26/50 0.101s 0.001s
im_detect: 27/50 0.101s 0.001s
im_detect: 28/50 0.101s 0.001s
im_detect: 29/50 0.101s 0.001s
im_detect: 30/50 0.101s 0.001s
im_detect: 31/50 0.101s 0.001s
im_detect: 32/50 0.101s 0.001s
im_detect: 33/50 0.101s 0.001s
im_detect: 34/50 0.101s 0.001s
im_detect: 35/50 0.101s 0.001s
im_detect: 36/50 0.101s 0.001s
im_detect: 37/50 0.101s 0.001s
im_detect: 38/50 0.101s 0.001s
im_detect: 39/50 0.101s 0.001s
im_detect: 40/50 0.101s 0.001s
im_detect: 41/50 0.101s 0.001s
im_detect: 42/50 0.101s 0.001s
im_detect: 43/50 0.101s 0.001s
im_detect: 44/50 0.101s 0.001s
im_detect: 45/50 0.101s 0.001s
im_detect: 46/50 0.101s 0.001s
im_detect: 47/50 0.101s 0.001s
im_detect: 48/50 0.101s 0.001s
im_detect: 49/50 0.101s 0.001s
im_detect: 50/50 0.101s 0.001s
Evaluating detections
Writing speedlimit-20 VOC results file
Traceback (most recent call last):
  File "./tools/test_net.py", line 90, in <module>
    test_net(net, imdb, max_per_image=args.max_per_image, vis=args.vis)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/test.py", line 295, in test_net
    imdb.evaluate_detections(all_boxes, output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 325, in evaluate_detections
    self._write_voc_results_file(all_boxes)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 252, in _write_voc_results_file
    with open(filename, 'wt') as f:
IOError: [Errno 2] No such file or directory: '/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_dd564699-3728-468f-8ff7-2c05a0c16b7d_det_test_speedlimit-20.txt'
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-19-47
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-19-47
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-19-47
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-19-47
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:19:50.927412  4406 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:19:50.927467  4406 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 16:19:50.928202  4406 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:19:50.928354  4406 layer_factory.hpp:77] Creating layer input-data
I0419 16:19:50.928876  4406 net.cpp:106] Creating Layer input-data
I0419 16:19:50.928897  4406 net.cpp:411] input-data -> data
I0419 16:19:50.928915  4406 net.cpp:411] input-data -> im_info
I0419 16:19:50.928925  4406 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:19:50.944638  4406 net.cpp:150] Setting up input-data
I0419 16:19:50.944658  4406 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:19:50.944666  4406 net.cpp:157] Top shape: 1 3 (3)
I0419 16:19:50.944670  4406 net.cpp:157] Top shape: 1 4 (4)
I0419 16:19:50.944674  4406 net.cpp:165] Memory required for data: 7200028
I0419 16:19:50.944679  4406 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:19:50.944691  4406 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:19:50.944699  4406 net.cpp:454] data_input-data_0_split <- data
I0419 16:19:50.944707  4406 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:19:50.944718  4406 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:19:50.944753  4406 net.cpp:150] Setting up data_input-data_0_split
I0419 16:19:50.944762  4406 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:19:50.944768  4406 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:19:50.944775  4406 net.cpp:165] Memory required for data: 21600028
I0419 16:19:50.944778  4406 layer_factory.hpp:77] Creating layer conv1
I0419 16:19:50.944788  4406 net.cpp:106] Creating Layer conv1
I0419 16:19:50.944795  4406 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:19:50.944802  4406 net.cpp:411] conv1 -> conv1
I0419 16:19:50.946122  4406 net.cpp:150] Setting up conv1
I0419 16:19:50.946140  4406 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:19:50.946142  4406 net.cpp:165] Memory required for data: 79200028
I0419 16:19:50.946156  4406 layer_factory.hpp:77] Creating layer relu1
I0419 16:19:50.946168  4406 net.cpp:106] Creating Layer relu1
I0419 16:19:50.946173  4406 net.cpp:454] relu1 <- conv1
I0419 16:19:50.946178  4406 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:19:50.946187  4406 net.cpp:150] Setting up relu1
I0419 16:19:50.946194  4406 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:19:50.946197  4406 net.cpp:165] Memory required for data: 136800028
I0419 16:19:50.946199  4406 layer_factory.hpp:77] Creating layer norm1
I0419 16:19:50.946208  4406 net.cpp:106] Creating Layer norm1
I0419 16:19:50.946214  4406 net.cpp:454] norm1 <- conv1
I0419 16:19:50.946220  4406 net.cpp:411] norm1 -> norm1
I0419 16:19:50.946321  4406 net.cpp:150] Setting up norm1
I0419 16:19:50.946341  4406 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:19:50.946348  4406 net.cpp:165] Memory required for data: 194400028
I0419 16:19:50.946352  4406 layer_factory.hpp:77] Creating layer pool1
I0419 16:19:50.946358  4406 net.cpp:106] Creating Layer pool1
I0419 16:19:50.946364  4406 net.cpp:454] pool1 <- norm1
I0419 16:19:50.946369  4406 net.cpp:411] pool1 -> pool1
I0419 16:19:50.946403  4406 net.cpp:150] Setting up pool1
I0419 16:19:50.946411  4406 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:19:50.946413  4406 net.cpp:165] Memory required for data: 208954012
I0419 16:19:50.946416  4406 layer_factory.hpp:77] Creating layer conv2
I0419 16:19:50.946424  4406 net.cpp:106] Creating Layer conv2
I0419 16:19:50.946430  4406 net.cpp:454] conv2 <- pool1
I0419 16:19:50.946435  4406 net.cpp:411] conv2 -> conv2
I0419 16:19:50.948086  4406 net.cpp:150] Setting up conv2
I0419 16:19:50.948102  4406 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:19:50.948106  4406 net.cpp:165] Memory required for data: 218759836
I0419 16:19:50.948113  4406 layer_factory.hpp:77] Creating layer relu2
I0419 16:19:50.948125  4406 net.cpp:106] Creating Layer relu2
I0419 16:19:50.948130  4406 net.cpp:454] relu2 <- conv2
I0419 16:19:50.948135  4406 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:19:50.948145  4406 net.cpp:150] Setting up relu2
I0419 16:19:50.948149  4406 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:19:50.948153  4406 net.cpp:165] Memory required for data: 228565660
I0419 16:19:50.948155  4406 layer_factory.hpp:77] Creating layer norm2
I0419 16:19:50.948161  4406 net.cpp:106] Creating Layer norm2
I0419 16:19:50.948168  4406 net.cpp:454] norm2 <- conv2
I0419 16:19:50.948174  4406 net.cpp:411] norm2 -> norm2
I0419 16:19:50.948263  4406 net.cpp:150] Setting up norm2
I0419 16:19:50.948273  4406 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:19:50.948276  4406 net.cpp:165] Memory required for data: 238371484
I0419 16:19:50.948278  4406 layer_factory.hpp:77] Creating layer pool2
I0419 16:19:50.948283  4406 net.cpp:106] Creating Layer pool2
I0419 16:19:50.948290  4406 net.cpp:454] pool2 <- norm2
I0419 16:19:50.948295  4406 net.cpp:411] pool2 -> pool2
I0419 16:19:50.948323  4406 net.cpp:150] Setting up pool2
I0419 16:19:50.948330  4406 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:19:50.948333  4406 net.cpp:165] Memory required for data: 240927388
I0419 16:19:50.948335  4406 layer_factory.hpp:77] Creating layer conv3
I0419 16:19:50.948343  4406 net.cpp:106] Creating Layer conv3
I0419 16:19:50.948349  4406 net.cpp:454] conv3 <- pool2
I0419 16:19:50.948355  4406 net.cpp:411] conv3 -> conv3
I0419 16:19:50.951617  4406 net.cpp:150] Setting up conv3
I0419 16:19:50.951634  4406 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:19:50.951637  4406 net.cpp:165] Memory required for data: 244761244
I0419 16:19:50.951647  4406 layer_factory.hpp:77] Creating layer relu3
I0419 16:19:50.951658  4406 net.cpp:106] Creating Layer relu3
I0419 16:19:50.951661  4406 net.cpp:454] relu3 <- conv3
I0419 16:19:50.951668  4406 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:19:50.951673  4406 net.cpp:150] Setting up relu3
I0419 16:19:50.951680  4406 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:19:50.951683  4406 net.cpp:165] Memory required for data: 248595100
I0419 16:19:50.951685  4406 layer_factory.hpp:77] Creating layer conv4
I0419 16:19:50.951694  4406 net.cpp:106] Creating Layer conv4
I0419 16:19:50.951700  4406 net.cpp:454] conv4 <- conv3
I0419 16:19:50.951704  4406 net.cpp:411] conv4 -> conv4
I0419 16:19:50.954980  4406 net.cpp:150] Setting up conv4
I0419 16:19:50.954998  4406 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:19:50.955000  4406 net.cpp:165] Memory required for data: 252428956
I0419 16:19:50.955006  4406 layer_factory.hpp:77] Creating layer relu4
I0419 16:19:50.955013  4406 net.cpp:106] Creating Layer relu4
I0419 16:19:50.955018  4406 net.cpp:454] relu4 <- conv4
I0419 16:19:50.955025  4406 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:19:50.955030  4406 net.cpp:150] Setting up relu4
I0419 16:19:50.955034  4406 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:19:50.955039  4406 net.cpp:165] Memory required for data: 256262812
I0419 16:19:50.955041  4406 layer_factory.hpp:77] Creating layer conv5
I0419 16:19:50.955047  4406 net.cpp:106] Creating Layer conv5
I0419 16:19:50.955055  4406 net.cpp:454] conv5 <- conv4
I0419 16:19:50.955061  4406 net.cpp:411] conv5 -> conv5
I0419 16:19:50.957315  4406 net.cpp:150] Setting up conv5
I0419 16:19:50.957331  4406 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:19:50.957334  4406 net.cpp:165] Memory required for data: 258818716
I0419 16:19:50.957343  4406 layer_factory.hpp:77] Creating layer relu5
I0419 16:19:50.957352  4406 net.cpp:106] Creating Layer relu5
I0419 16:19:50.957355  4406 net.cpp:454] relu5 <- conv5
I0419 16:19:50.957363  4406 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:19:50.957368  4406 net.cpp:150] Setting up relu5
I0419 16:19:50.957376  4406 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:19:50.957379  4406 net.cpp:165] Memory required for data: 261374620
I0419 16:19:50.957381  4406 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:19:50.957394  4406 net.cpp:106] Creating Layer rpn_conv1
I0419 16:19:50.957401  4406 net.cpp:454] rpn_conv1 <- conv5
I0419 16:19:50.957406  4406 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:19:50.974436  4406 net.cpp:150] Setting up rpn_conv1
I0419 16:19:50.974452  4406 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:19:50.974454  4406 net.cpp:165] Memory required for data: 263930524
I0419 16:19:50.974460  4406 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:19:50.974467  4406 net.cpp:106] Creating Layer rpn_relu1
I0419 16:19:50.974472  4406 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:19:50.974478  4406 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:19:50.974484  4406 net.cpp:150] Setting up rpn_relu1
I0419 16:19:50.974490  4406 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:19:50.974493  4406 net.cpp:165] Memory required for data: 266486428
I0419 16:19:50.974496  4406 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:19:50.974500  4406 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:19:50.974504  4406 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:19:50.974510  4406 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:19:50.974521  4406 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:19:50.974555  4406 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:19:50.974565  4406 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:19:50.974568  4406 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:19:50.974573  4406 net.cpp:165] Memory required for data: 271598236
I0419 16:19:50.974576  4406 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:19:50.974586  4406 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:19:50.974593  4406 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:19:50.974601  4406 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:19:50.974910  4406 net.cpp:150] Setting up rpn_cls_score
I0419 16:19:50.974921  4406 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:19:50.974923  4406 net.cpp:165] Memory required for data: 271777948
I0419 16:19:50.974930  4406 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:19:50.974938  4406 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:19:50.974941  4406 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:19:50.974946  4406 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:19:50.974951  4406 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:19:50.974985  4406 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:19:50.974994  4406 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:19:50.974997  4406 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:19:50.975000  4406 net.cpp:165] Memory required for data: 272137372
I0419 16:19:50.975003  4406 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:19:50.975011  4406 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:19:50.975018  4406 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:19:50.975025  4406 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:19:50.975457  4406 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:19:50.975468  4406 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:19:50.975471  4406 net.cpp:165] Memory required for data: 272496796
I0419 16:19:50.975476  4406 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:19:50.975486  4406 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:19:50.975489  4406 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:19:50.975495  4406 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:19:50.975525  4406 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:19:50.975534  4406 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:19:50.975538  4406 net.cpp:165] Memory required for data: 272676508
I0419 16:19:50.975540  4406 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:19:50.975968  4406 net.cpp:106] Creating Layer rpn-data
I0419 16:19:50.975986  4406 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:19:50.975991  4406 net.cpp:454] rpn-data <- gt_boxes
I0419 16:19:50.975999  4406 net.cpp:454] rpn-data <- im_info
I0419 16:19:50.976002  4406 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:19:50.976007  4406 net.cpp:411] rpn-data -> rpn_labels
I0419 16:19:50.976018  4406 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:19:50.976024  4406 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:19:50.976034  4406 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:19:50.977241  4406 net.cpp:150] Setting up rpn-data
I0419 16:19:50.977262  4406 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:19:50.977268  4406 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:19:50.977272  4406 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:19:50.977274  4406 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:19:50.977278  4406 net.cpp:165] Memory required for data: 273844636
I0419 16:19:50.977283  4406 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:19:50.977293  4406 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:19:50.977301  4406 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:19:50.977306  4406 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:19:50.977315  4406 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:19:50.977332  4406 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:19:50.977440  4406 net.cpp:150] Setting up rpn_loss_cls
I0419 16:19:50.977450  4406 net.cpp:157] Top shape: (1)
I0419 16:19:50.977453  4406 net.cpp:160]     with loss weight 1
I0419 16:19:50.977469  4406 net.cpp:165] Memory required for data: 273844640
I0419 16:19:50.977473  4406 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:19:50.977483  4406 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:19:50.977488  4406 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:19:50.977493  4406 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:19:50.977496  4406 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:19:50.977499  4406 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:19:50.977504  4406 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:19:50.978071  4406 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:19:50.978083  4406 net.cpp:157] Top shape: (1)
I0419 16:19:50.978086  4406 net.cpp:160]     with loss weight 1
I0419 16:19:50.978092  4406 net.cpp:165] Memory required for data: 273844644
I0419 16:19:50.978096  4406 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:19:50.978103  4406 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:19:50.978113  4406 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:19:50.978140  4406 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:19:50.978149  4406 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:19:50.978152  4406 net.cpp:165] Memory required for data: 273881508
I0419 16:19:50.978155  4406 layer_factory.hpp:77] Creating layer fc6
I0419 16:19:50.978162  4406 net.cpp:106] Creating Layer fc6
I0419 16:19:50.978168  4406 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:19:50.978173  4406 net.cpp:411] fc6 -> fc6
I0419 16:19:51.076061  4406 net.cpp:150] Setting up fc6
I0419 16:19:51.076099  4406 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:19:51.076103  4406 net.cpp:165] Memory required for data: 273897892
I0419 16:19:51.076119  4406 layer_factory.hpp:77] Creating layer relu6
I0419 16:19:51.076129  4406 net.cpp:106] Creating Layer relu6
I0419 16:19:51.076135  4406 net.cpp:454] relu6 <- fc6
I0419 16:19:51.076143  4406 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:19:51.076155  4406 net.cpp:150] Setting up relu6
I0419 16:19:51.076159  4406 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:19:51.076164  4406 net.cpp:165] Memory required for data: 273914276
I0419 16:19:51.076165  4406 layer_factory.hpp:77] Creating layer fc7
I0419 16:19:51.076176  4406 net.cpp:106] Creating Layer fc7
I0419 16:19:51.076182  4406 net.cpp:454] fc7 <- fc6
I0419 16:19:51.076187  4406 net.cpp:411] fc7 -> fc7
I0419 16:19:51.119664  4406 net.cpp:150] Setting up fc7
I0419 16:19:51.119705  4406 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:19:51.119710  4406 net.cpp:165] Memory required for data: 273930660
I0419 16:19:51.119720  4406 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:19:51.119736  4406 net.cpp:106] Creating Layer silence_fc7
I0419 16:19:51.119745  4406 net.cpp:454] silence_fc7 <- fc7
I0419 16:19:51.119753  4406 net.cpp:150] Setting up silence_fc7
I0419 16:19:51.119760  4406 net.cpp:165] Memory required for data: 273930660
I0419 16:19:51.119762  4406 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:19:51.119766  4406 net.cpp:228] fc7 does not need backward computation.
I0419 16:19:51.119770  4406 net.cpp:228] relu6 does not need backward computation.
I0419 16:19:51.119774  4406 net.cpp:228] fc6 does not need backward computation.
I0419 16:19:51.119777  4406 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:19:51.119783  4406 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:19:51.119787  4406 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:19:51.119793  4406 net.cpp:226] rpn-data needs backward computation.
I0419 16:19:51.119798  4406 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:19:51.119803  4406 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:19:51.119807  4406 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:19:51.119810  4406 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:19:51.119814  4406 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:19:51.119817  4406 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:19:51.119822  4406 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:19:51.119825  4406 net.cpp:226] relu5 needs backward computation.
I0419 16:19:51.119829  4406 net.cpp:226] conv5 needs backward computation.
I0419 16:19:51.119832  4406 net.cpp:226] relu4 needs backward computation.
I0419 16:19:51.119837  4406 net.cpp:226] conv4 needs backward computation.
I0419 16:19:51.119839  4406 net.cpp:226] relu3 needs backward computation.
I0419 16:19:51.119843  4406 net.cpp:226] conv3 needs backward computation.
I0419 16:19:51.119845  4406 net.cpp:226] pool2 needs backward computation.
I0419 16:19:51.119848  4406 net.cpp:226] norm2 needs backward computation.
I0419 16:19:51.119850  4406 net.cpp:226] relu2 needs backward computation.
I0419 16:19:51.119853  4406 net.cpp:226] conv2 needs backward computation.
I0419 16:19:51.119855  4406 net.cpp:226] pool1 needs backward computation.
I0419 16:19:51.119859  4406 net.cpp:226] norm1 needs backward computation.
I0419 16:19:51.119861  4406 net.cpp:226] relu1 needs backward computation.
I0419 16:19:51.119864  4406 net.cpp:226] conv1 needs backward computation.
I0419 16:19:51.119868  4406 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:19:51.119871  4406 net.cpp:228] input-data does not need backward computation.
I0419 16:19:51.119875  4406 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:19:51.119879  4406 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:19:51.119905  4406 net.cpp:283] Network initialization done.
I0419 16:19:51.120014  4406 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:19:51.568639  4406 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:19:51.568667  4406 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:19:51.598853  4406 net.cpp:816] Ignoring source layer drop6
I0419 16:19:51.612257  4406 net.cpp:816] Ignoring source layer relu7
I0419 16:19:51.612277  4406 net.cpp:816] Ignoring source layer drop7
I0419 16:19:51.612279  4406 net.cpp:816] Ignoring source layer fc8
I0419 16:19:51.612282  4406 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:19:51.795100  4406 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 16:19:51.795142  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 16:19:51.795151  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 16:19:51.795167  4406 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:19:54.705705  4406 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 16:19:54.705750  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 16:19:54.705757  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 16:19:54.705762  4406 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:19:57.555160  4406 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 16:19:57.555209  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 16:19:57.555217  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 16:19:57.555222  4406 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:20:00.403395  4406 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 16:20:00.403437  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 16:20:00.403445  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 16:20:00.403450  4406 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:20:03.261515  4406 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 16:20:03.261557  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 16:20:03.261564  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 16:20:03.261569  4406 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:20:06.128096  4406 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 16:20:06.128139  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 16:20:06.128146  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 16:20:06.128152  4406 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:20:08.988273  4406 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 16:20:08.988315  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 16:20:08.988322  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 16:20:08.988327  4406 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:20:11.844297  4406 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 16:20:11.844341  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 16:20:11.844347  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 16:20:11.844353  4406 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:20:14.711876  4406 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 16:20:14.711920  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 16:20:14.711927  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 16:20:14.711933  4406 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:20:17.580456  4406 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 16:20:17.580500  4406 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 16:20:17.580507  4406 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 16:20:17.580513  4406 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:20:24.228893  4422 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:20:24.229050  4422 net.cpp:413] Input 0 -> data
I0419 16:20:24.244165  4422 net.cpp:413] Input 1 -> im_info
I0419 16:20:24.244216  4422 layer_factory.hpp:77] Creating layer conv1
I0419 16:20:24.244244  4422 net.cpp:106] Creating Layer conv1
I0419 16:20:24.244258  4422 net.cpp:454] conv1 <- data
I0419 16:20:24.244274  4422 net.cpp:411] conv1 -> conv1
I0419 16:20:24.245033  4422 net.cpp:150] Setting up conv1
I0419 16:20:24.245055  4422 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:20:24.245059  4422 net.cpp:165] Memory required for data: 4816896
I0419 16:20:24.245072  4422 layer_factory.hpp:77] Creating layer relu1
I0419 16:20:24.245081  4422 net.cpp:106] Creating Layer relu1
I0419 16:20:24.245087  4422 net.cpp:454] relu1 <- conv1
I0419 16:20:24.245093  4422 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:20:24.245106  4422 net.cpp:150] Setting up relu1
I0419 16:20:24.245121  4422 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:20:24.245126  4422 net.cpp:165] Memory required for data: 9633792
I0419 16:20:24.245131  4422 layer_factory.hpp:77] Creating layer norm1
I0419 16:20:24.245142  4422 net.cpp:106] Creating Layer norm1
I0419 16:20:24.245151  4422 net.cpp:454] norm1 <- conv1
I0419 16:20:24.245159  4422 net.cpp:411] norm1 -> norm1
I0419 16:20:24.245281  4422 net.cpp:150] Setting up norm1
I0419 16:20:24.245295  4422 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:20:24.245296  4422 net.cpp:165] Memory required for data: 14450688
I0419 16:20:24.245299  4422 layer_factory.hpp:77] Creating layer pool1
I0419 16:20:24.245306  4422 net.cpp:106] Creating Layer pool1
I0419 16:20:24.245311  4422 net.cpp:454] pool1 <- norm1
I0419 16:20:24.245316  4422 net.cpp:411] pool1 -> pool1
I0419 16:20:24.245368  4422 net.cpp:150] Setting up pool1
I0419 16:20:24.245380  4422 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:20:24.245383  4422 net.cpp:165] Memory required for data: 15698304
I0419 16:20:24.245385  4422 layer_factory.hpp:77] Creating layer conv2
I0419 16:20:24.245394  4422 net.cpp:106] Creating Layer conv2
I0419 16:20:24.245398  4422 net.cpp:454] conv2 <- pool1
I0419 16:20:24.245404  4422 net.cpp:411] conv2 -> conv2
I0419 16:20:24.247618  4422 net.cpp:150] Setting up conv2
I0419 16:20:24.247637  4422 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:20:24.247639  4422 net.cpp:165] Memory required for data: 16559488
I0419 16:20:24.247649  4422 layer_factory.hpp:77] Creating layer relu2
I0419 16:20:24.247658  4422 net.cpp:106] Creating Layer relu2
I0419 16:20:24.247660  4422 net.cpp:454] relu2 <- conv2
I0419 16:20:24.247670  4422 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:20:24.247681  4422 net.cpp:150] Setting up relu2
I0419 16:20:24.247689  4422 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:20:24.247694  4422 net.cpp:165] Memory required for data: 17420672
I0419 16:20:24.247699  4422 layer_factory.hpp:77] Creating layer norm2
I0419 16:20:24.247706  4422 net.cpp:106] Creating Layer norm2
I0419 16:20:24.247712  4422 net.cpp:454] norm2 <- conv2
I0419 16:20:24.247722  4422 net.cpp:411] norm2 -> norm2
I0419 16:20:24.247828  4422 net.cpp:150] Setting up norm2
I0419 16:20:24.247843  4422 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:20:24.247845  4422 net.cpp:165] Memory required for data: 18281856
I0419 16:20:24.247848  4422 layer_factory.hpp:77] Creating layer pool2
I0419 16:20:24.247853  4422 net.cpp:106] Creating Layer pool2
I0419 16:20:24.247856  4422 net.cpp:454] pool2 <- norm2
I0419 16:20:24.247861  4422 net.cpp:411] pool2 -> pool2
I0419 16:20:24.247905  4422 net.cpp:150] Setting up pool2
I0419 16:20:24.247920  4422 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:20:24.247925  4422 net.cpp:165] Memory required for data: 18512256
I0419 16:20:24.247928  4422 layer_factory.hpp:77] Creating layer conv3
I0419 16:20:24.247937  4422 net.cpp:106] Creating Layer conv3
I0419 16:20:24.247941  4422 net.cpp:454] conv3 <- pool2
I0419 16:20:24.247946  4422 net.cpp:411] conv3 -> conv3
I0419 16:20:24.250221  4422 net.cpp:150] Setting up conv3
I0419 16:20:24.250241  4422 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:20:24.250243  4422 net.cpp:165] Memory required for data: 18857856
I0419 16:20:24.250252  4422 layer_factory.hpp:77] Creating layer relu3
I0419 16:20:24.250258  4422 net.cpp:106] Creating Layer relu3
I0419 16:20:24.250263  4422 net.cpp:454] relu3 <- conv3
I0419 16:20:24.250269  4422 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:20:24.250280  4422 net.cpp:150] Setting up relu3
I0419 16:20:24.250288  4422 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:20:24.250293  4422 net.cpp:165] Memory required for data: 19203456
I0419 16:20:24.250298  4422 layer_factory.hpp:77] Creating layer conv4
I0419 16:20:24.250309  4422 net.cpp:106] Creating Layer conv4
I0419 16:20:24.250314  4422 net.cpp:454] conv4 <- conv3
I0419 16:20:24.250325  4422 net.cpp:411] conv4 -> conv4
I0419 16:20:24.253619  4422 net.cpp:150] Setting up conv4
I0419 16:20:24.253638  4422 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:20:24.253640  4422 net.cpp:165] Memory required for data: 19549056
I0419 16:20:24.253646  4422 layer_factory.hpp:77] Creating layer relu4
I0419 16:20:24.253653  4422 net.cpp:106] Creating Layer relu4
I0419 16:20:24.253655  4422 net.cpp:454] relu4 <- conv4
I0419 16:20:24.253661  4422 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:20:24.253674  4422 net.cpp:150] Setting up relu4
I0419 16:20:24.253681  4422 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:20:24.253690  4422 net.cpp:165] Memory required for data: 19894656
I0419 16:20:24.253695  4422 layer_factory.hpp:77] Creating layer conv5
I0419 16:20:24.253705  4422 net.cpp:106] Creating Layer conv5
I0419 16:20:24.253716  4422 net.cpp:454] conv5 <- conv4
I0419 16:20:24.253727  4422 net.cpp:411] conv5 -> conv5
I0419 16:20:24.256017  4422 net.cpp:150] Setting up conv5
I0419 16:20:24.256034  4422 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:20:24.256037  4422 net.cpp:165] Memory required for data: 20125056
I0419 16:20:24.256050  4422 layer_factory.hpp:77] Creating layer relu5
I0419 16:20:24.256058  4422 net.cpp:106] Creating Layer relu5
I0419 16:20:24.256063  4422 net.cpp:454] relu5 <- conv5
I0419 16:20:24.256078  4422 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:20:24.256088  4422 net.cpp:150] Setting up relu5
I0419 16:20:24.256096  4422 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:20:24.256101  4422 net.cpp:165] Memory required for data: 20355456
I0419 16:20:24.256105  4422 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:20:24.256114  4422 net.cpp:106] Creating Layer rpn_conv1
I0419 16:20:24.256121  4422 net.cpp:454] rpn_conv1 <- conv5
I0419 16:20:24.256131  4422 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:20:24.257753  4422 net.cpp:150] Setting up rpn_conv1
I0419 16:20:24.257771  4422 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:20:24.257773  4422 net.cpp:165] Memory required for data: 20585856
I0419 16:20:24.257779  4422 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:20:24.257784  4422 net.cpp:106] Creating Layer rpn_relu1
I0419 16:20:24.257788  4422 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:20:24.257796  4422 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:20:24.257805  4422 net.cpp:150] Setting up rpn_relu1
I0419 16:20:24.257812  4422 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:20:24.257818  4422 net.cpp:165] Memory required for data: 20816256
I0419 16:20:24.257822  4422 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:20:24.257836  4422 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:20:24.257848  4422 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:20:24.257858  4422 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:20:24.257868  4422 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:20:24.257913  4422 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:20:24.257930  4422 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:20:24.257933  4422 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:20:24.257936  4422 net.cpp:165] Memory required for data: 21277056
I0419 16:20:24.257939  4422 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:20:24.257946  4422 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:20:24.257951  4422 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:20:24.257958  4422 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:20:24.258153  4422 net.cpp:150] Setting up rpn_cls_score
I0419 16:20:24.258165  4422 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:20:24.258168  4422 net.cpp:165] Memory required for data: 21293256
I0419 16:20:24.258174  4422 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:20:24.258179  4422 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:20:24.258183  4422 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:20:24.258189  4422 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:20:24.258410  4422 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:20:24.258424  4422 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:20:24.258426  4422 net.cpp:165] Memory required for data: 21325656
I0419 16:20:24.258431  4422 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:20:24.258438  4422 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:20:24.258441  4422 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:20:24.258447  4422 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:20:24.258487  4422 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:20:24.258504  4422 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:20:24.258507  4422 net.cpp:165] Memory required for data: 21341856
I0419 16:20:24.258510  4422 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:20:24.258517  4422 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:20:24.258520  4422 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:20:24.258524  4422 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:20:24.258596  4422 net.cpp:150] Setting up rpn_cls_prob
I0419 16:20:24.258607  4422 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:20:24.258610  4422 net.cpp:165] Memory required for data: 21358056
I0419 16:20:24.258615  4422 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:20:24.258620  4422 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:20:24.258622  4422 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:20:24.258628  4422 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:20:24.258661  4422 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:20:24.258677  4422 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:20:24.258682  4422 net.cpp:165] Memory required for data: 21374256
I0419 16:20:24.258685  4422 layer_factory.hpp:77] Creating layer proposal
I0419 16:20:24.260071  4422 net.cpp:106] Creating Layer proposal
I0419 16:20:24.260090  4422 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:20:24.260095  4422 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:20:24.260099  4422 net.cpp:454] proposal <- im_info
I0419 16:20:24.260105  4422 net.cpp:411] proposal -> rois
I0419 16:20:24.260113  4422 net.cpp:411] proposal -> scores
I0419 16:20:24.261436  4422 net.cpp:150] Setting up proposal
I0419 16:20:24.261456  4422 net.cpp:157] Top shape: 1 5 (5)
I0419 16:20:24.261461  4422 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:20:24.261464  4422 net.cpp:165] Memory required for data: 21374280
I0419 16:20:24.261467  4422 net.cpp:228] proposal does not need backward computation.
I0419 16:20:24.261472  4422 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:20:24.261476  4422 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:20:24.261478  4422 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:20:24.261487  4422 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:20:24.261492  4422 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:20:24.261497  4422 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:20:24.261503  4422 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:20:24.261507  4422 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:20:24.261512  4422 net.cpp:228] relu5 does not need backward computation.
I0419 16:20:24.261518  4422 net.cpp:228] conv5 does not need backward computation.
I0419 16:20:24.261523  4422 net.cpp:228] relu4 does not need backward computation.
I0419 16:20:24.261528  4422 net.cpp:228] conv4 does not need backward computation.
I0419 16:20:24.261533  4422 net.cpp:228] relu3 does not need backward computation.
I0419 16:20:24.261538  4422 net.cpp:228] conv3 does not need backward computation.
I0419 16:20:24.261543  4422 net.cpp:228] pool2 does not need backward computation.
I0419 16:20:24.261548  4422 net.cpp:228] norm2 does not need backward computation.
I0419 16:20:24.261553  4422 net.cpp:228] relu2 does not need backward computation.
I0419 16:20:24.261556  4422 net.cpp:228] conv2 does not need backward computation.
I0419 16:20:24.261564  4422 net.cpp:228] pool1 does not need backward computation.
I0419 16:20:24.261569  4422 net.cpp:228] norm1 does not need backward computation.
I0419 16:20:24.261572  4422 net.cpp:228] relu1 does not need backward computation.
I0419 16:20:24.261576  4422 net.cpp:228] conv1 does not need backward computation.
I0419 16:20:24.261581  4422 net.cpp:270] This network produces output rois
I0419 16:20:24.261586  4422 net.cpp:270] This network produces output scores
I0419 16:20:24.261617  4422 net.cpp:283] Network initialization done.
I0419 16:20:24.694078  4422 net.cpp:816] Ignoring source layer input-data
I0419 16:20:24.694113  4422 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:20:24.697700  4422 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:20:24.697726  4422 net.cpp:816] Ignoring source layer rpn-data
I0419 16:20:24.697728  4422 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:20:24.697731  4422 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:20:24.697734  4422 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:20:24.697736  4422 net.cpp:816] Ignoring source layer fc6
I0419 16:20:24.697739  4422 net.cpp:816] Ignoring source layer relu6
I0419 16:20:24.697742  4422 net.cpp:816] Ignoring source layer fc7
I0419 16:20:24.697744  4422 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.163s
im_proposals: 2/506 0.153s
im_proposals: 3/506 0.149s
im_proposals: 4/506 0.147s
im_proposals: 5/506 0.146s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.144s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.143s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.142s
im_proposals: 13/506 0.142s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.142s
im_proposals: 16/506 0.142s
im_proposals: 17/506 0.142s
im_proposals: 18/506 0.142s
im_proposals: 19/506 0.142s
im_proposals: 20/506 0.142s
im_proposals: 21/506 0.142s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.142s
im_proposals: 33/506 0.142s
im_proposals: 34/506 0.142s
im_proposals: 35/506 0.142s
im_proposals: 36/506 0.142s
im_proposals: 37/506 0.142s
im_proposals: 38/506 0.141s
im_proposals: 39/506 0.141s
im_proposals: 40/506 0.141s
im_proposals: 41/506 0.141s
im_proposals: 42/506 0.141s
im_proposals: 43/506 0.141s
im_proposals: 44/506 0.141s
im_proposals: 45/506 0.141s
im_proposals: 46/506 0.141s
im_proposals: 47/506 0.141s
im_proposals: 48/506 0.141s
im_proposals: 49/506 0.141s
im_proposals: 50/506 0.141s
im_proposals: 51/506 0.141s
im_proposals: 52/506 0.141s
im_proposals: 53/506 0.141s
im_proposals: 54/506 0.141s
im_proposals: 55/506 0.141s
im_proposals: 56/506 0.141s
im_proposals: 57/506 0.141s
im_proposals: 58/506 0.141s
im_proposals: 59/506 0.141s
im_proposals: 60/506 0.141s
im_proposals: 61/506 0.141s
im_proposals: 62/506 0.141s
im_proposals: 63/506 0.141s
im_proposals: 64/506 0.141s
im_proposals: 65/506 0.141s
im_proposals: 66/506 0.141s
im_proposals: 67/506 0.141s
im_proposals: 68/506 0.141s
im_proposals: 69/506 0.141s
im_proposals: 70/506 0.141s
im_proposals: 71/506 0.141s
im_proposals: 72/506 0.141s
im_proposals: 73/506 0.141s
im_proposals: 74/506 0.141s
im_proposals: 75/506 0.141s
im_proposals: 76/506 0.141s
im_proposals: 77/506 0.141s
im_proposals: 78/506 0.141s
im_proposals: 79/506 0.141s
im_proposals: 80/506 0.141s
im_proposals: 81/506 0.141s
im_proposals: 82/506 0.141s
im_proposals: 83/506 0.141s
im_proposals: 84/506 0.141s
im_proposals: 85/506 0.141s
im_proposals: 86/506 0.141s
im_proposals: 87/506 0.141s
im_proposals: 88/506 0.141s
im_proposals: 89/506 0.141s
im_proposals: 90/506 0.141s
im_proposals: 91/506 0.141s
im_proposals: 92/506 0.141s
im_proposals: 93/506 0.141s
im_proposals: 94/506 0.141s
im_proposals: 95/506 0.141s
im_proposals: 96/506 0.141s
im_proposals: 97/506 0.141s
im_proposals: 98/506 0.141s
im_proposals: 99/506 0.141s
im_proposals: 100/506 0.141s
im_proposals: 101/506 0.141s
im_proposals: 102/506 0.141s
im_proposals: 103/506 0.141s
im_proposals: 104/506 0.141s
im_proposals: 105/506 0.141s
im_proposals: 106/506 0.141s
im_proposals: 107/506 0.141s
im_proposals: 108/506 0.141s
im_proposals: 109/506 0.141s
im_proposals: 110/506 0.141s
im_proposals: 111/506 0.141s
im_proposals: 112/506 0.141s
im_proposals: 113/506 0.141s
im_proposals: 114/506 0.141s
im_proposals: 115/506 0.141s
im_proposals: 116/506 0.141s
im_proposals: 117/506 0.141s
im_proposals: 118/506 0.141s
im_proposals: 119/506 0.141s
im_proposals: 120/506 0.141s
im_proposals: 121/506 0.141s
im_proposals: 122/506 0.141s
im_proposals: 123/506 0.141s
im_proposals: 124/506 0.141s
im_proposals: 125/506 0.141s
im_proposals: 126/506 0.141s
im_proposals: 127/506 0.141s
im_proposals: 128/506 0.141s
im_proposals: 129/506 0.141s
im_proposals: 130/506 0.141s
im_proposals: 131/506 0.141s
im_proposals: 132/506 0.141s
im_proposals: 133/506 0.141s
im_proposals: 134/506 0.141s
im_proposals: 135/506 0.141s
im_proposals: 136/506 0.141s
im_proposals: 137/506 0.141s
im_proposals: 138/506 0.141s
im_proposals: 139/506 0.141s
im_proposals: 140/506 0.141s
im_proposals: 141/506 0.141s
im_proposals: 142/506 0.141s
im_proposals: 143/506 0.141s
im_proposals: 144/506 0.141s
im_proposals: 145/506 0.141s
im_proposals: 146/506 0.141s
im_proposals: 147/506 0.141s
im_proposals: 148/506 0.141s
im_proposals: 149/506 0.141s
im_proposals: 150/506 0.141s
im_proposals: 151/506 0.141s
im_proposals: 152/506 0.141s
im_proposals: 153/506 0.141s
im_proposals: 154/506 0.141s
im_proposals: 155/506 0.141s
im_proposals: 156/506 0.141s
im_proposals: 157/506 0.141s
im_proposals: 158/506 0.141s
im_proposals: 159/506 0.141s
im_proposals: 160/506 0.141s
im_proposals: 161/506 0.141s
im_proposals: 162/506 0.141s
im_proposals: 163/506 0.141s
im_proposals: 164/506 0.141s
im_proposals: 165/506 0.141s
im_proposals: 166/506 0.141s
im_proposals: 167/506 0.141s
im_proposals: 168/506 0.141s
im_proposals: 169/506 0.141s
im_proposals: 170/506 0.141s
im_proposals: 171/506 0.141s
im_proposals: 172/506 0.141s
im_proposals: 173/506 0.141s
im_proposals: 174/506 0.141s
im_proposals: 175/506 0.141s
im_proposals: 176/506 0.141s
im_proposals: 177/506 0.141s
im_proposals: 178/506 0.141s
im_proposals: 179/506 0.141s
im_proposals: 180/506 0.141s
im_proposals: 181/506 0.141s
im_proposals: 182/506 0.141s
im_proposals: 183/506 0.141s
im_proposals: 184/506 0.141s
im_proposals: 185/506 0.141s
im_proposals: 186/506 0.141s
im_proposals: 187/506 0.141s
im_proposals: 188/506 0.141s
im_proposals: 189/506 0.141s
im_proposals: 190/506 0.141s
im_proposals: 191/506 0.141s
im_proposals: 192/506 0.141s
im_proposals: 193/506 0.141s
im_proposals: 194/506 0.141s
im_proposals: 195/506 0.141s
im_proposals: 196/506 0.141s
im_proposals: 197/506 0.141s
im_proposals: 198/506 0.141s
im_proposals: 199/506 0.141s
im_proposals: 200/506 0.141s
im_proposals: 201/506 0.141s
im_proposals: 202/506 0.141s
im_proposals: 203/506 0.141s
im_proposals: 204/506 0.141s
im_proposals: 205/506 0.141s
im_proposals: 206/506 0.141s
im_proposals: 207/506 0.141s
im_proposals: 208/506 0.141s
im_proposals: 209/506 0.141s
im_proposals: 210/506 0.141s
im_proposals: 211/506 0.141s
im_proposals: 212/506 0.141s
im_proposals: 213/506 0.141s
im_proposals: 214/506 0.141s
im_proposals: 215/506 0.141s
im_proposals: 216/506 0.141s
im_proposals: 217/506 0.141s
im_proposals: 218/506 0.141s
im_proposals: 219/506 0.141s
im_proposals: 220/506 0.141s
im_proposals: 221/506 0.141s
im_proposals: 222/506 0.141s
im_proposals: 223/506 0.141s
im_proposals: 224/506 0.141s
im_proposals: 225/506 0.141s
im_proposals: 226/506 0.141s
im_proposals: 227/506 0.141s
im_proposals: 228/506 0.141s
im_proposals: 229/506 0.141s
im_proposals: 230/506 0.141s
im_proposals: 231/506 0.141s
im_proposals: 232/506 0.141s
im_proposals: 233/506 0.141s
im_proposals: 234/506 0.141s
im_proposals: 235/506 0.141s
im_proposals: 236/506 0.141s
im_proposals: 237/506 0.141s
im_proposals: 238/506 0.141s
im_proposals: 239/506 0.141s
im_proposals: 240/506 0.141s
im_proposals: 241/506 0.141s
im_proposals: 242/506 0.141s
im_proposals: 243/506 0.141s
im_proposals: 244/506 0.141s
im_proposals: 245/506 0.141s
im_proposals: 246/506 0.141s
im_proposals: 247/506 0.141s
im_proposals: 248/506 0.141s
im_proposals: 249/506 0.141s
im_proposals: 250/506 0.141s
im_proposals: 251/506 0.141s
im_proposals: 252/506 0.141s
im_proposals: 253/506 0.141s
im_proposals: 254/506 0.141s
im_proposals: 255/506 0.141s
im_proposals: 256/506 0.141s
im_proposals: 257/506 0.141s
im_proposals: 258/506 0.141s
im_proposals: 259/506 0.141s
im_proposals: 260/506 0.141s
im_proposals: 261/506 0.141s
im_proposals: 262/506 0.141s
im_proposals: 263/506 0.141s
im_proposals: 264/506 0.141s
im_proposals: 265/506 0.141s
im_proposals: 266/506 0.141s
im_proposals: 267/506 0.141s
im_proposals: 268/506 0.141s
im_proposals: 269/506 0.141s
im_proposals: 270/506 0.141s
im_proposals: 271/506 0.141s
im_proposals: 272/506 0.141s
im_proposals: 273/506 0.141s
im_proposals: 274/506 0.141s
im_proposals: 275/506 0.141s
im_proposals: 276/506 0.141s
im_proposals: 277/506 0.141s
im_proposals: 278/506 0.141s
im_proposals: 279/506 0.141s
im_proposals: 280/506 0.141s
im_proposals: 281/506 0.141s
im_proposals: 282/506 0.141s
im_proposals: 283/506 0.141s
im_proposals: 284/506 0.141s
im_proposals: 285/506 0.141s
im_proposals: 286/506 0.141s
im_proposals: 287/506 0.141s
im_proposals: 288/506 0.141s
im_proposals: 289/506 0.141s
im_proposals: 290/506 0.141s
im_proposals: 291/506 0.141s
im_proposals: 292/506 0.141s
im_proposals: 293/506 0.141s
im_proposals: 294/506 0.141s
im_proposals: 295/506 0.141s
im_proposals: 296/506 0.141s
im_proposals: 297/506 0.141s
im_proposals: 298/506 0.141s
im_proposals: 299/506 0.141s
im_proposals: 300/506 0.141s
im_proposals: 301/506 0.141s
im_proposals: 302/506 0.141s
im_proposals: 303/506 0.141s
im_proposals: 304/506 0.141s
im_proposals: 305/506 0.141s
im_proposals: 306/506 0.141s
im_proposals: 307/506 0.141s
im_proposals: 308/506 0.141s
im_proposals: 309/506 0.141s
im_proposals: 310/506 0.141s
im_proposals: 311/506 0.141s
im_proposals: 312/506 0.141s
im_proposals: 313/506 0.141s
im_proposals: 314/506 0.141s
im_proposals: 315/506 0.141s
im_proposals: 316/506 0.141s
im_proposals: 317/506 0.141s
im_proposals: 318/506 0.141s
im_proposals: 319/506 0.141s
im_proposals: 320/506 0.141s
im_proposals: 321/506 0.141s
im_proposals: 322/506 0.141s
im_proposals: 323/506 0.141s
im_proposals: 324/506 0.141s
im_proposals: 325/506 0.141s
im_proposals: 326/506 0.141s
im_proposals: 327/506 0.141s
im_proposals: 328/506 0.141s
im_proposals: 329/506 0.141s
im_proposals: 330/506 0.141s
im_proposals: 331/506 0.141s
im_proposals: 332/506 0.141s
im_proposals: 333/506 0.141s
im_proposals: 334/506 0.141s
im_proposals: 335/506 0.141s
im_proposals: 336/506 0.141s
im_proposals: 337/506 0.141s
im_proposals: 338/506 0.141s
im_proposals: 339/506 0.141s
im_proposals: 340/506 0.141s
im_proposals: 341/506 0.141s
im_proposals: 342/506 0.141s
im_proposals: 343/506 0.141s
im_proposals: 344/506 0.141s
im_proposals: 345/506 0.141s
im_proposals: 346/506 0.141s
im_proposals: 347/506 0.141s
im_proposals: 348/506 0.141s
im_proposals: 349/506 0.141s
im_proposals: 350/506 0.141s
im_proposals: 351/506 0.141s
im_proposals: 352/506 0.141s
im_proposals: 353/506 0.141s
im_proposals: 354/506 0.141s
im_proposals: 355/506 0.141s
im_proposals: 356/506 0.141s
im_proposals: 357/506 0.141s
im_proposals: 358/506 0.141s
im_proposals: 359/506 0.141s
im_proposals: 360/506 0.141s
im_proposals: 361/506 0.141s
im_proposals: 362/506 0.141s
im_proposals: 363/506 0.141s
im_proposals: 364/506 0.141s
im_proposals: 365/506 0.141s
im_proposals: 366/506 0.141s
im_proposals: 367/506 0.141s
im_proposals: 368/506 0.141s
im_proposals: 369/506 0.141s
im_proposals: 370/506 0.141s
im_proposals: 371/506 0.141s
im_proposals: 372/506 0.141s
im_proposals: 373/506 0.141s
im_proposals: 374/506 0.141s
im_proposals: 375/506 0.141s
im_proposals: 376/506 0.141s
im_proposals: 377/506 0.141s
im_proposals: 378/506 0.141s
im_proposals: 379/506 0.141s
im_proposals: 380/506 0.141s
im_proposals: 381/506 0.141s
im_proposals: 382/506 0.141s
im_proposals: 383/506 0.141s
im_proposals: 384/506 0.141s
im_proposals: 385/506 0.141s
im_proposals: 386/506 0.141s
im_proposals: 387/506 0.141s
im_proposals: 388/506 0.141s
im_proposals: 389/506 0.141s
im_proposals: 390/506 0.141s
im_proposals: 391/506 0.141s
im_proposals: 392/506 0.141s
im_proposals: 393/506 0.141s
im_proposals: 394/506 0.141s
im_proposals: 395/506 0.141s
im_proposals: 396/506 0.141s
im_proposals: 397/506 0.141s
im_proposals: 398/506 0.141s
im_proposals: 399/506 0.141s
im_proposals: 400/506 0.141s
im_proposals: 401/506 0.141s
im_proposals: 402/506 0.141s
im_proposals: 403/506 0.141s
im_proposals: 404/506 0.141s
im_proposals: 405/506 0.141s
im_proposals: 406/506 0.141s
im_proposals: 407/506 0.141s
im_proposals: 408/506 0.141s
im_proposals: 409/506 0.141s
im_proposals: 410/506 0.141s
im_proposals: 411/506 0.141s
im_proposals: 412/506 0.141s
im_proposals: 413/506 0.141s
im_proposals: 414/506 0.141s
im_proposals: 415/506 0.141s
im_proposals: 416/506 0.141s
im_proposals: 417/506 0.141s
im_proposals: 418/506 0.141s
im_proposals: 419/506 0.141s
im_proposals: 420/506 0.141s
im_proposals: 421/506 0.141s
im_proposals: 422/506 0.141s
im_proposals: 423/506 0.141s
im_proposals: 424/506 0.141s
im_proposals: 425/506 0.141s
im_proposals: 426/506 0.141s
im_proposals: 427/506 0.141s
im_proposals: 428/506 0.141s
im_proposals: 429/506 0.141s
im_proposals: 430/506 0.141s
im_proposals: 431/506 0.141s
im_proposals: 432/506 0.141s
im_proposals: 433/506 0.141s
im_proposals: 434/506 0.141s
im_proposals: 435/506 0.141s
im_proposals: 436/506 0.141s
im_proposals: 437/506 0.141s
im_proposals: 438/506 0.141s
im_proposals: 439/506 0.141s
im_proposals: 440/506 0.141s
im_proposals: 441/506 0.141s
im_proposals: 442/506 0.141s
im_proposals: 443/506 0.141s
im_proposals: 444/506 0.141s
im_proposals: 445/506 0.141s
im_proposals: 446/506 0.141s
im_proposals: 447/506 0.141s
im_proposals: 448/506 0.141s
im_proposals: 449/506 0.141s
im_proposals: 450/506 0.141s
im_proposals: 451/506 0.141s
im_proposals: 452/506 0.141s
im_proposals: 453/506 0.141s
im_proposals: 454/506 0.141s
im_proposals: 455/506 0.141s
im_proposals: 456/506 0.141s
im_proposals: 457/506 0.141s
im_proposals: 458/506 0.141s
im_proposals: 459/506 0.141s
im_proposals: 460/506 0.141s
im_proposals: 461/506 0.141s
im_proposals: 462/506 0.141s
im_proposals: 463/506 0.141s
im_proposals: 464/506 0.141s
im_proposals: 465/506 0.141s
im_proposals: 466/506 0.141s
im_proposals: 467/506 0.141s
im_proposals: 468/506 0.141s
im_proposals: 469/506 0.141s
im_proposals: 470/506 0.141s
im_proposals: 471/506 0.141s
im_proposals: 472/506 0.141s
im_proposals: 473/506 0.141s
im_proposals: 474/506 0.141s
im_proposals: 475/506 0.141s
im_proposals: 476/506 0.141s
im_proposals: 477/506 0.141s
im_proposals: 478/506 0.141s
im_proposals: 479/506 0.141s
im_proposals: 480/506 0.141s
im_proposals: 481/506 0.141s
im_proposals: 482/506 0.141s
im_proposals: 483/506 0.141s
im_proposals: 484/506 0.141s
im_proposals: 485/506 0.141s
im_proposals: 486/506 0.141s
im_proposals: 487/506 0.141s
im_proposals: 488/506 0.141s
im_proposals: 489/506 0.141s
im_proposals: 490/506 0.141s
im_proposals: 491/506 0.141s
im_proposals: 492/506 0.141s
im_proposals: 493/506 0.141s
im_proposals: 494/506 0.141s
im_proposals: 495/506 0.141s
im_proposals: 496/506 0.141s
im_proposals: 497/506 0.141s
im_proposals: 498/506 0.141s
im_proposals: 499/506 0.141s
im_proposals: 500/506 0.141s
im_proposals: 501/506 0.141s
im_proposals: 502/506 0.141s
im_proposals: 503/506 0.141s
im_proposals: 504/506 0.141s
im_proposals: 505/506 0.141s
im_proposals: 506/506 0.141s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:22:00.069702  4457 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:22:00.069763  4457 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 16:22:00.070629  4457 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:22:00.070822  4457 layer_factory.hpp:77] Creating layer data
I0419 16:22:00.071419  4457 net.cpp:106] Creating Layer data
I0419 16:22:00.071444  4457 net.cpp:411] data -> data
I0419 16:22:00.071468  4457 net.cpp:411] data -> rois
I0419 16:22:00.071481  4457 net.cpp:411] data -> labels
I0419 16:22:00.071492  4457 net.cpp:411] data -> bbox_targets
I0419 16:22:00.071502  4457 net.cpp:411] data -> bbox_inside_weights
I0419 16:22:00.071511  4457 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:22:00.086994  4457 net.cpp:150] Setting up data
I0419 16:22:00.087018  4457 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:22:00.087028  4457 net.cpp:157] Top shape: 1 5 (5)
I0419 16:22:00.087034  4457 net.cpp:157] Top shape: 1 (1)
I0419 16:22:00.087041  4457 net.cpp:157] Top shape: 1 176 (176)
I0419 16:22:00.087049  4457 net.cpp:157] Top shape: 1 176 (176)
I0419 16:22:00.087054  4457 net.cpp:157] Top shape: 1 176 (176)
I0419 16:22:00.087059  4457 net.cpp:165] Memory required for data: 14402136
I0419 16:22:00.087064  4457 layer_factory.hpp:77] Creating layer conv1
I0419 16:22:00.087087  4457 net.cpp:106] Creating Layer conv1
I0419 16:22:00.087096  4457 net.cpp:454] conv1 <- data
I0419 16:22:00.087112  4457 net.cpp:411] conv1 -> conv1
I0419 16:22:00.088441  4457 net.cpp:150] Setting up conv1
I0419 16:22:00.088460  4457 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:22:00.088465  4457 net.cpp:165] Memory required for data: 129602136
I0419 16:22:00.088485  4457 layer_factory.hpp:77] Creating layer relu1
I0419 16:22:00.088506  4457 net.cpp:106] Creating Layer relu1
I0419 16:22:00.088513  4457 net.cpp:454] relu1 <- conv1
I0419 16:22:00.088521  4457 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:22:00.088538  4457 net.cpp:150] Setting up relu1
I0419 16:22:00.088547  4457 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:22:00.088552  4457 net.cpp:165] Memory required for data: 244802136
I0419 16:22:00.088557  4457 layer_factory.hpp:77] Creating layer norm1
I0419 16:22:00.088569  4457 net.cpp:106] Creating Layer norm1
I0419 16:22:00.088577  4457 net.cpp:454] norm1 <- conv1
I0419 16:22:00.088585  4457 net.cpp:411] norm1 -> norm1
I0419 16:22:00.088701  4457 net.cpp:150] Setting up norm1
I0419 16:22:00.088712  4457 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:22:00.088717  4457 net.cpp:165] Memory required for data: 360002136
I0419 16:22:00.088721  4457 layer_factory.hpp:77] Creating layer pool1
I0419 16:22:00.088731  4457 net.cpp:106] Creating Layer pool1
I0419 16:22:00.088739  4457 net.cpp:454] pool1 <- norm1
I0419 16:22:00.088750  4457 net.cpp:411] pool1 -> pool1
I0419 16:22:00.088793  4457 net.cpp:150] Setting up pool1
I0419 16:22:00.088805  4457 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:22:00.088810  4457 net.cpp:165] Memory required for data: 389110104
I0419 16:22:00.088814  4457 layer_factory.hpp:77] Creating layer conv2
I0419 16:22:00.088826  4457 net.cpp:106] Creating Layer conv2
I0419 16:22:00.088832  4457 net.cpp:454] conv2 <- pool1
I0419 16:22:00.088840  4457 net.cpp:411] conv2 -> conv2
I0419 16:22:00.090505  4457 net.cpp:150] Setting up conv2
I0419 16:22:00.090523  4457 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:22:00.090528  4457 net.cpp:165] Memory required for data: 408721752
I0419 16:22:00.090540  4457 layer_factory.hpp:77] Creating layer relu2
I0419 16:22:00.090550  4457 net.cpp:106] Creating Layer relu2
I0419 16:22:00.090555  4457 net.cpp:454] relu2 <- conv2
I0419 16:22:00.090569  4457 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:22:00.090579  4457 net.cpp:150] Setting up relu2
I0419 16:22:00.090590  4457 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:22:00.090595  4457 net.cpp:165] Memory required for data: 428333400
I0419 16:22:00.090600  4457 layer_factory.hpp:77] Creating layer norm2
I0419 16:22:00.090606  4457 net.cpp:106] Creating Layer norm2
I0419 16:22:00.090611  4457 net.cpp:454] norm2 <- conv2
I0419 16:22:00.090620  4457 net.cpp:411] norm2 -> norm2
I0419 16:22:00.090714  4457 net.cpp:150] Setting up norm2
I0419 16:22:00.090729  4457 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:22:00.090734  4457 net.cpp:165] Memory required for data: 447945048
I0419 16:22:00.090739  4457 layer_factory.hpp:77] Creating layer pool2
I0419 16:22:00.090746  4457 net.cpp:106] Creating Layer pool2
I0419 16:22:00.090754  4457 net.cpp:454] pool2 <- norm2
I0419 16:22:00.090761  4457 net.cpp:411] pool2 -> pool2
I0419 16:22:00.090800  4457 net.cpp:150] Setting up pool2
I0419 16:22:00.090811  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.090816  4457 net.cpp:165] Memory required for data: 453056856
I0419 16:22:00.090819  4457 layer_factory.hpp:77] Creating layer conv3
I0419 16:22:00.090832  4457 net.cpp:106] Creating Layer conv3
I0419 16:22:00.090842  4457 net.cpp:454] conv3 <- pool2
I0419 16:22:00.090848  4457 net.cpp:411] conv3 -> conv3
I0419 16:22:00.094092  4457 net.cpp:150] Setting up conv3
I0419 16:22:00.094111  4457 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:22:00.094116  4457 net.cpp:165] Memory required for data: 460724568
I0419 16:22:00.094128  4457 layer_factory.hpp:77] Creating layer relu3
I0419 16:22:00.094141  4457 net.cpp:106] Creating Layer relu3
I0419 16:22:00.094148  4457 net.cpp:454] relu3 <- conv3
I0419 16:22:00.094156  4457 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:22:00.094166  4457 net.cpp:150] Setting up relu3
I0419 16:22:00.094173  4457 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:22:00.094179  4457 net.cpp:165] Memory required for data: 468392280
I0419 16:22:00.094184  4457 layer_factory.hpp:77] Creating layer conv4
I0419 16:22:00.094195  4457 net.cpp:106] Creating Layer conv4
I0419 16:22:00.094200  4457 net.cpp:454] conv4 <- conv3
I0419 16:22:00.094211  4457 net.cpp:411] conv4 -> conv4
I0419 16:22:00.097479  4457 net.cpp:150] Setting up conv4
I0419 16:22:00.097498  4457 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:22:00.097503  4457 net.cpp:165] Memory required for data: 476059992
I0419 16:22:00.097512  4457 layer_factory.hpp:77] Creating layer relu4
I0419 16:22:00.097520  4457 net.cpp:106] Creating Layer relu4
I0419 16:22:00.097529  4457 net.cpp:454] relu4 <- conv4
I0419 16:22:00.097537  4457 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:22:00.097548  4457 net.cpp:150] Setting up relu4
I0419 16:22:00.097554  4457 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:22:00.097559  4457 net.cpp:165] Memory required for data: 483727704
I0419 16:22:00.097563  4457 layer_factory.hpp:77] Creating layer conv5
I0419 16:22:00.097578  4457 net.cpp:106] Creating Layer conv5
I0419 16:22:00.097587  4457 net.cpp:454] conv5 <- conv4
I0419 16:22:00.097597  4457 net.cpp:411] conv5 -> conv5
I0419 16:22:00.099872  4457 net.cpp:150] Setting up conv5
I0419 16:22:00.099890  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.099895  4457 net.cpp:165] Memory required for data: 488839512
I0419 16:22:00.099911  4457 layer_factory.hpp:77] Creating layer relu5
I0419 16:22:00.099921  4457 net.cpp:106] Creating Layer relu5
I0419 16:22:00.099926  4457 net.cpp:454] relu5 <- conv5
I0419 16:22:00.099934  4457 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:22:00.099947  4457 net.cpp:150] Setting up relu5
I0419 16:22:00.099956  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.099961  4457 net.cpp:165] Memory required for data: 493951320
I0419 16:22:00.099966  4457 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:22:00.099978  4457 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:22:00.099987  4457 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:22:00.099994  4457 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:22:00.100003  4457 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:22:00.100047  4457 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:22:00.100059  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.100066  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.100070  4457 net.cpp:165] Memory required for data: 504174936
I0419 16:22:00.100076  4457 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:22:00.100092  4457 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:22:00.100102  4457 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:22:00.100108  4457 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:22:00.100116  4457 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:22:00.100133  4457 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:22:00.100186  4457 net.cpp:150] Setting up roi_pool_conv5
I0419 16:22:00.100200  4457 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:22:00.100205  4457 net.cpp:165] Memory required for data: 504211800
I0419 16:22:00.100209  4457 layer_factory.hpp:77] Creating layer fc6
I0419 16:22:00.100222  4457 net.cpp:106] Creating Layer fc6
I0419 16:22:00.100229  4457 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:22:00.100239  4457 net.cpp:411] fc6 -> fc6
I0419 16:22:00.197762  4457 net.cpp:150] Setting up fc6
I0419 16:22:00.197803  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.197808  4457 net.cpp:165] Memory required for data: 504228184
I0419 16:22:00.197824  4457 layer_factory.hpp:77] Creating layer relu6
I0419 16:22:00.197835  4457 net.cpp:106] Creating Layer relu6
I0419 16:22:00.197842  4457 net.cpp:454] relu6 <- fc6
I0419 16:22:00.197862  4457 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:22:00.197876  4457 net.cpp:150] Setting up relu6
I0419 16:22:00.197890  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.197893  4457 net.cpp:165] Memory required for data: 504244568
I0419 16:22:00.197898  4457 layer_factory.hpp:77] Creating layer drop6
I0419 16:22:00.197916  4457 net.cpp:106] Creating Layer drop6
I0419 16:22:00.197923  4457 net.cpp:454] drop6 <- fc6
I0419 16:22:00.197931  4457 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:22:00.197966  4457 net.cpp:150] Setting up drop6
I0419 16:22:00.197978  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.197983  4457 net.cpp:165] Memory required for data: 504260952
I0419 16:22:00.197988  4457 layer_factory.hpp:77] Creating layer fc7
I0419 16:22:00.198004  4457 net.cpp:106] Creating Layer fc7
I0419 16:22:00.198011  4457 net.cpp:454] fc7 <- fc6
I0419 16:22:00.198019  4457 net.cpp:411] fc7 -> fc7
I0419 16:22:00.241380  4457 net.cpp:150] Setting up fc7
I0419 16:22:00.241425  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.241431  4457 net.cpp:165] Memory required for data: 504277336
I0419 16:22:00.241443  4457 layer_factory.hpp:77] Creating layer relu7
I0419 16:22:00.241456  4457 net.cpp:106] Creating Layer relu7
I0419 16:22:00.241462  4457 net.cpp:454] relu7 <- fc7
I0419 16:22:00.241472  4457 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:22:00.241489  4457 net.cpp:150] Setting up relu7
I0419 16:22:00.241495  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.241502  4457 net.cpp:165] Memory required for data: 504293720
I0419 16:22:00.241505  4457 layer_factory.hpp:77] Creating layer drop7
I0419 16:22:00.241514  4457 net.cpp:106] Creating Layer drop7
I0419 16:22:00.241524  4457 net.cpp:454] drop7 <- fc7
I0419 16:22:00.241534  4457 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:22:00.241564  4457 net.cpp:150] Setting up drop7
I0419 16:22:00.241576  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.241580  4457 net.cpp:165] Memory required for data: 504310104
I0419 16:22:00.241585  4457 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:22:00.241593  4457 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:22:00.241600  4457 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:22:00.241606  4457 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:22:00.241616  4457 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:22:00.241665  4457 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:22:00.241677  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.241683  4457 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:00.241686  4457 net.cpp:165] Memory required for data: 504342872
I0419 16:22:00.241691  4457 layer_factory.hpp:77] Creating layer cls_score
I0419 16:22:00.241708  4457 net.cpp:106] Creating Layer cls_score
I0419 16:22:00.241716  4457 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:22:00.241725  4457 net.cpp:411] cls_score -> cls_score
I0419 16:22:00.247280  4457 net.cpp:150] Setting up cls_score
I0419 16:22:00.247298  4457 net.cpp:157] Top shape: 1 44 (44)
I0419 16:22:00.247303  4457 net.cpp:165] Memory required for data: 504343048
I0419 16:22:00.247311  4457 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:22:00.247323  4457 net.cpp:106] Creating Layer bbox_pred
I0419 16:22:00.247328  4457 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:22:00.247340  4457 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:22:00.267923  4457 net.cpp:150] Setting up bbox_pred
I0419 16:22:00.267941  4457 net.cpp:157] Top shape: 1 176 (176)
I0419 16:22:00.267946  4457 net.cpp:165] Memory required for data: 504343752
I0419 16:22:00.267962  4457 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:22:00.267979  4457 net.cpp:106] Creating Layer loss_cls
I0419 16:22:00.267989  4457 net.cpp:454] loss_cls <- cls_score
I0419 16:22:00.267997  4457 net.cpp:454] loss_cls <- labels
I0419 16:22:00.268013  4457 net.cpp:411] loss_cls -> cls_loss
I0419 16:22:00.268038  4457 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:22:00.268133  4457 net.cpp:150] Setting up loss_cls
I0419 16:22:00.268146  4457 net.cpp:157] Top shape: (1)
I0419 16:22:00.268149  4457 net.cpp:160]     with loss weight 1
I0419 16:22:00.268170  4457 net.cpp:165] Memory required for data: 504343756
I0419 16:22:00.268175  4457 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:22:00.268187  4457 net.cpp:106] Creating Layer loss_bbox
I0419 16:22:00.268196  4457 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:22:00.268203  4457 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:22:00.268210  4457 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:22:00.268216  4457 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:22:00.268223  4457 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:22:00.268304  4457 net.cpp:150] Setting up loss_bbox
I0419 16:22:00.268316  4457 net.cpp:157] Top shape: (1)
I0419 16:22:00.268321  4457 net.cpp:160]     with loss weight 1
I0419 16:22:00.268329  4457 net.cpp:165] Memory required for data: 504343760
I0419 16:22:00.268334  4457 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:22:00.268352  4457 net.cpp:106] Creating Layer rpn_conv1
I0419 16:22:00.268359  4457 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:22:00.268368  4457 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:22:00.285490  4457 net.cpp:150] Setting up rpn_conv1
I0419 16:22:00.285509  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.285514  4457 net.cpp:165] Memory required for data: 509455568
I0419 16:22:00.285524  4457 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:22:00.285537  4457 net.cpp:106] Creating Layer rpn_relu1
I0419 16:22:00.285547  4457 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:22:00.285557  4457 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:22:00.285567  4457 net.cpp:150] Setting up rpn_relu1
I0419 16:22:00.285574  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.285581  4457 net.cpp:165] Memory required for data: 514567376
I0419 16:22:00.285586  4457 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:22:00.285601  4457 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:22:00.285611  4457 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:22:00.285619  4457 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:22:00.285629  4457 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:22:00.285678  4457 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:22:00.285691  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.285696  4457 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:22:00.285701  4457 net.cpp:165] Memory required for data: 524790992
I0419 16:22:00.285707  4457 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:22:00.285723  4457 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:22:00.285732  4457 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:22:00.285742  4457 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:22:00.286069  4457 net.cpp:150] Setting up rpn_cls_score
I0419 16:22:00.286084  4457 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:22:00.286088  4457 net.cpp:165] Memory required for data: 525150416
I0419 16:22:00.286098  4457 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:22:00.286121  4457 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:22:00.286130  4457 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:22:00.286139  4457 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:22:00.286603  4457 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:22:00.286619  4457 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:22:00.286624  4457 net.cpp:165] Memory required for data: 525869264
I0419 16:22:00.286633  4457 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:22:00.286648  4457 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:22:00.286658  4457 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:22:00.286665  4457 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:22:00.286670  4457 net.cpp:165] Memory required for data: 525869264
I0419 16:22:00.286675  4457 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:22:00.286682  4457 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:22:00.286687  4457 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:22:00.286692  4457 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:22:00.286696  4457 net.cpp:165] Memory required for data: 525869264
I0419 16:22:00.286701  4457 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:22:00.286707  4457 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:22:00.286711  4457 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:22:00.286717  4457 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:22:00.286721  4457 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:22:00.286726  4457 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:22:00.286731  4457 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:22:00.286736  4457 net.cpp:226] loss_bbox needs backward computation.
I0419 16:22:00.286743  4457 net.cpp:226] loss_cls needs backward computation.
I0419 16:22:00.286748  4457 net.cpp:226] bbox_pred needs backward computation.
I0419 16:22:00.286754  4457 net.cpp:226] cls_score needs backward computation.
I0419 16:22:00.286759  4457 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:22:00.286764  4457 net.cpp:226] drop7 needs backward computation.
I0419 16:22:00.286769  4457 net.cpp:226] relu7 needs backward computation.
I0419 16:22:00.286774  4457 net.cpp:226] fc7 needs backward computation.
I0419 16:22:00.286778  4457 net.cpp:226] drop6 needs backward computation.
I0419 16:22:00.286784  4457 net.cpp:226] relu6 needs backward computation.
I0419 16:22:00.286788  4457 net.cpp:226] fc6 needs backward computation.
I0419 16:22:00.286794  4457 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 16:22:00.286803  4457 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 16:22:00.286814  4457 net.cpp:226] relu5 needs backward computation.
I0419 16:22:00.286818  4457 net.cpp:226] conv5 needs backward computation.
I0419 16:22:00.286823  4457 net.cpp:226] relu4 needs backward computation.
I0419 16:22:00.286828  4457 net.cpp:226] conv4 needs backward computation.
I0419 16:22:00.286833  4457 net.cpp:226] relu3 needs backward computation.
I0419 16:22:00.286836  4457 net.cpp:226] conv3 needs backward computation.
I0419 16:22:00.286840  4457 net.cpp:226] pool2 needs backward computation.
I0419 16:22:00.286845  4457 net.cpp:226] norm2 needs backward computation.
I0419 16:22:00.286849  4457 net.cpp:226] relu2 needs backward computation.
I0419 16:22:00.286854  4457 net.cpp:226] conv2 needs backward computation.
I0419 16:22:00.286860  4457 net.cpp:226] pool1 needs backward computation.
I0419 16:22:00.286865  4457 net.cpp:226] norm1 needs backward computation.
I0419 16:22:00.286870  4457 net.cpp:226] relu1 needs backward computation.
I0419 16:22:00.286875  4457 net.cpp:226] conv1 needs backward computation.
I0419 16:22:00.286883  4457 net.cpp:228] data does not need backward computation.
I0419 16:22:00.286888  4457 net.cpp:270] This network produces output bbox_loss
I0419 16:22:00.286893  4457 net.cpp:270] This network produces output cls_loss
I0419 16:22:00.286927  4457 net.cpp:283] Network initialization done.
I0419 16:22:00.287072  4457 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:22:00.736162  4457 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:22:00.736189  4457 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:22:00.779959  4457 net.cpp:816] Ignoring source layer fc8
I0419 16:22:00.779986  4457 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:22:01.112287  4457 solver.cpp:229] Iteration 0, loss = 3.96455
I0419 16:22:01.112340  4457 solver.cpp:245]     Train net output #0: bbox_loss = 0.00179342 (* 1 = 0.00179342 loss)
I0419 16:22:01.112354  4457 solver.cpp:245]     Train net output #1: cls_loss = 3.96275 (* 1 = 3.96275 loss)
I0419 16:22:01.112375  4457 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:22:07.171597  4457 solver.cpp:229] Iteration 20, loss = 0.158989
I0419 16:22:07.171648  4457 solver.cpp:245]     Train net output #0: bbox_loss = 0.00206027 (* 1 = 0.00206027 loss)
I0419 16:22:07.171658  4457 solver.cpp:245]     Train net output #1: cls_loss = 0.156929 (* 1 = 0.156929 loss)
I0419 16:22:07.171667  4457 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:22:13.177486  4457 solver.cpp:229] Iteration 40, loss = 0.256255
I0419 16:22:13.177534  4457 solver.cpp:245]     Train net output #0: bbox_loss = 0.0311435 (* 1 = 0.0311435 loss)
I0419 16:22:13.177547  4457 solver.cpp:245]     Train net output #1: cls_loss = 0.225112 (* 1 = 0.225112 loss)
I0419 16:22:13.177556  4457 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:22:19.183306  4457 solver.cpp:229] Iteration 60, loss = 0.387985
I0419 16:22:19.183356  4457 solver.cpp:245]     Train net output #0: bbox_loss = 0.0650192 (* 1 = 0.0650192 loss)
I0419 16:22:19.183367  4457 solver.cpp:245]     Train net output #1: cls_loss = 0.322966 (* 1 = 0.322966 loss)
I0419 16:22:19.183375  4457 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:22:25.154181  4457 solver.cpp:229] Iteration 80, loss = 0.2817
I0419 16:22:25.154228  4457 solver.cpp:245]     Train net output #0: bbox_loss = 0.0782601 (* 1 = 0.0782601 loss)
I0419 16:22:25.154239  4457 solver.cpp:245]     Train net output #1: cls_loss = 0.20344 (* 1 = 0.20344 loss)
I0419 16:22:25.154247  4457 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, init from stage 1 Fast R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:22:35.183919  4475 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:22:35.183979  4475 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt
I0419 16:22:35.184742  4475 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:22:35.184924  4475 layer_factory.hpp:77] Creating layer input-data
I0419 16:22:35.185461  4475 net.cpp:106] Creating Layer input-data
I0419 16:22:35.185484  4475 net.cpp:411] input-data -> data
I0419 16:22:35.185508  4475 net.cpp:411] input-data -> im_info
I0419 16:22:35.185523  4475 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:22:35.201088  4475 net.cpp:150] Setting up input-data
I0419 16:22:35.201113  4475 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:22:35.201123  4475 net.cpp:157] Top shape: 1 3 (3)
I0419 16:22:35.201129  4475 net.cpp:157] Top shape: 1 4 (4)
I0419 16:22:35.201135  4475 net.cpp:165] Memory required for data: 7200028
I0419 16:22:35.201143  4475 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:22:35.201159  4475 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:22:35.201169  4475 net.cpp:454] data_input-data_0_split <- data
I0419 16:22:35.201182  4475 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:22:35.201197  4475 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:22:35.201239  4475 net.cpp:150] Setting up data_input-data_0_split
I0419 16:22:35.201256  4475 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:22:35.201263  4475 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:22:35.201268  4475 net.cpp:165] Memory required for data: 21600028
I0419 16:22:35.201273  4475 layer_factory.hpp:77] Creating layer conv1
I0419 16:22:35.201290  4475 net.cpp:106] Creating Layer conv1
I0419 16:22:35.201299  4475 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:22:35.201310  4475 net.cpp:411] conv1 -> conv1
I0419 16:22:35.202677  4475 net.cpp:150] Setting up conv1
I0419 16:22:35.202697  4475 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:22:35.202702  4475 net.cpp:165] Memory required for data: 79200028
I0419 16:22:35.202720  4475 layer_factory.hpp:77] Creating layer relu1
I0419 16:22:35.202739  4475 net.cpp:106] Creating Layer relu1
I0419 16:22:35.202745  4475 net.cpp:454] relu1 <- conv1
I0419 16:22:35.202755  4475 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:22:35.202774  4475 net.cpp:150] Setting up relu1
I0419 16:22:35.202782  4475 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:22:35.202788  4475 net.cpp:165] Memory required for data: 136800028
I0419 16:22:35.202795  4475 layer_factory.hpp:77] Creating layer norm1
I0419 16:22:35.202805  4475 net.cpp:106] Creating Layer norm1
I0419 16:22:35.202812  4475 net.cpp:454] norm1 <- conv1
I0419 16:22:35.202822  4475 net.cpp:411] norm1 -> norm1
I0419 16:22:35.202934  4475 net.cpp:150] Setting up norm1
I0419 16:22:35.202950  4475 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:22:35.202955  4475 net.cpp:165] Memory required for data: 194400028
I0419 16:22:35.202958  4475 layer_factory.hpp:77] Creating layer pool1
I0419 16:22:35.202968  4475 net.cpp:106] Creating Layer pool1
I0419 16:22:35.202975  4475 net.cpp:454] pool1 <- norm1
I0419 16:22:35.202981  4475 net.cpp:411] pool1 -> pool1
I0419 16:22:35.203021  4475 net.cpp:150] Setting up pool1
I0419 16:22:35.203032  4475 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:22:35.203035  4475 net.cpp:165] Memory required for data: 208954012
I0419 16:22:35.203040  4475 layer_factory.hpp:77] Creating layer conv2
I0419 16:22:35.203052  4475 net.cpp:106] Creating Layer conv2
I0419 16:22:35.203061  4475 net.cpp:454] conv2 <- pool1
I0419 16:22:35.203068  4475 net.cpp:411] conv2 -> conv2
I0419 16:22:35.204746  4475 net.cpp:150] Setting up conv2
I0419 16:22:35.204766  4475 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:22:35.204771  4475 net.cpp:165] Memory required for data: 218759836
I0419 16:22:35.204783  4475 layer_factory.hpp:77] Creating layer relu2
I0419 16:22:35.204797  4475 net.cpp:106] Creating Layer relu2
I0419 16:22:35.204807  4475 net.cpp:454] relu2 <- conv2
I0419 16:22:35.204815  4475 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:22:35.204823  4475 net.cpp:150] Setting up relu2
I0419 16:22:35.204830  4475 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:22:35.204836  4475 net.cpp:165] Memory required for data: 228565660
I0419 16:22:35.204840  4475 layer_factory.hpp:77] Creating layer norm2
I0419 16:22:35.204854  4475 net.cpp:106] Creating Layer norm2
I0419 16:22:35.204862  4475 net.cpp:454] norm2 <- conv2
I0419 16:22:35.204869  4475 net.cpp:411] norm2 -> norm2
I0419 16:22:35.204958  4475 net.cpp:150] Setting up norm2
I0419 16:22:35.204970  4475 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:22:35.204975  4475 net.cpp:165] Memory required for data: 238371484
I0419 16:22:35.204979  4475 layer_factory.hpp:77] Creating layer pool2
I0419 16:22:35.204987  4475 net.cpp:106] Creating Layer pool2
I0419 16:22:35.204991  4475 net.cpp:454] pool2 <- norm2
I0419 16:22:35.205001  4475 net.cpp:411] pool2 -> pool2
I0419 16:22:35.205042  4475 net.cpp:150] Setting up pool2
I0419 16:22:35.205055  4475 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:22:35.205060  4475 net.cpp:165] Memory required for data: 240927388
I0419 16:22:35.205065  4475 layer_factory.hpp:77] Creating layer conv3
I0419 16:22:35.205073  4475 net.cpp:106] Creating Layer conv3
I0419 16:22:35.205082  4475 net.cpp:454] conv3 <- pool2
I0419 16:22:35.205093  4475 net.cpp:411] conv3 -> conv3
I0419 16:22:35.208369  4475 net.cpp:150] Setting up conv3
I0419 16:22:35.208389  4475 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:22:35.208392  4475 net.cpp:165] Memory required for data: 244761244
I0419 16:22:35.208406  4475 layer_factory.hpp:77] Creating layer relu3
I0419 16:22:35.208420  4475 net.cpp:106] Creating Layer relu3
I0419 16:22:35.208426  4475 net.cpp:454] relu3 <- conv3
I0419 16:22:35.208434  4475 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:22:35.208449  4475 net.cpp:150] Setting up relu3
I0419 16:22:35.208456  4475 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:22:35.208461  4475 net.cpp:165] Memory required for data: 248595100
I0419 16:22:35.208467  4475 layer_factory.hpp:77] Creating layer conv4
I0419 16:22:35.208480  4475 net.cpp:106] Creating Layer conv4
I0419 16:22:35.208489  4475 net.cpp:454] conv4 <- conv3
I0419 16:22:35.208498  4475 net.cpp:411] conv4 -> conv4
I0419 16:22:35.211782  4475 net.cpp:150] Setting up conv4
I0419 16:22:35.211802  4475 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:22:35.211807  4475 net.cpp:165] Memory required for data: 252428956
I0419 16:22:35.211815  4475 layer_factory.hpp:77] Creating layer relu4
I0419 16:22:35.211823  4475 net.cpp:106] Creating Layer relu4
I0419 16:22:35.211832  4475 net.cpp:454] relu4 <- conv4
I0419 16:22:35.211843  4475 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:22:35.211853  4475 net.cpp:150] Setting up relu4
I0419 16:22:35.211860  4475 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:22:35.211866  4475 net.cpp:165] Memory required for data: 256262812
I0419 16:22:35.211871  4475 layer_factory.hpp:77] Creating layer conv5
I0419 16:22:35.211884  4475 net.cpp:106] Creating Layer conv5
I0419 16:22:35.211894  4475 net.cpp:454] conv5 <- conv4
I0419 16:22:35.211902  4475 net.cpp:411] conv5 -> conv5
I0419 16:22:35.214186  4475 net.cpp:150] Setting up conv5
I0419 16:22:35.214205  4475 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:22:35.214210  4475 net.cpp:165] Memory required for data: 258818716
I0419 16:22:35.214223  4475 layer_factory.hpp:77] Creating layer relu5
I0419 16:22:35.214234  4475 net.cpp:106] Creating Layer relu5
I0419 16:22:35.214239  4475 net.cpp:454] relu5 <- conv5
I0419 16:22:35.214249  4475 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:22:35.214258  4475 net.cpp:150] Setting up relu5
I0419 16:22:35.214270  4475 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:22:35.214274  4475 net.cpp:165] Memory required for data: 261374620
I0419 16:22:35.214279  4475 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:22:35.214298  4475 net.cpp:106] Creating Layer rpn_conv1
I0419 16:22:35.214305  4475 net.cpp:454] rpn_conv1 <- conv5
I0419 16:22:35.214314  4475 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:22:35.231364  4475 net.cpp:150] Setting up rpn_conv1
I0419 16:22:35.231381  4475 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:22:35.231386  4475 net.cpp:165] Memory required for data: 263930524
I0419 16:22:35.231396  4475 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:22:35.231405  4475 net.cpp:106] Creating Layer rpn_relu1
I0419 16:22:35.231412  4475 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:22:35.231420  4475 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:22:35.231431  4475 net.cpp:150] Setting up rpn_relu1
I0419 16:22:35.231441  4475 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:22:35.231444  4475 net.cpp:165] Memory required for data: 266486428
I0419 16:22:35.231449  4475 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:22:35.231461  4475 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:22:35.231467  4475 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:22:35.231473  4475 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:22:35.231483  4475 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:22:35.231526  4475 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:22:35.231539  4475 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:22:35.231545  4475 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:22:35.231549  4475 net.cpp:165] Memory required for data: 271598236
I0419 16:22:35.231556  4475 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:22:35.231571  4475 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:22:35.231580  4475 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:22:35.231590  4475 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:22:35.231921  4475 net.cpp:150] Setting up rpn_cls_score
I0419 16:22:35.231935  4475 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:22:35.231940  4475 net.cpp:165] Memory required for data: 271777948
I0419 16:22:35.231948  4475 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:22:35.231957  4475 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:22:35.231962  4475 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:22:35.231971  4475 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:22:35.231982  4475 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:22:35.232025  4475 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:22:35.232036  4475 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:22:35.232043  4475 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:22:35.232049  4475 net.cpp:165] Memory required for data: 272137372
I0419 16:22:35.232054  4475 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:22:35.232071  4475 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:22:35.232081  4475 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:22:35.232090  4475 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:22:35.232528  4475 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:22:35.232542  4475 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:22:35.232547  4475 net.cpp:165] Memory required for data: 272496796
I0419 16:22:35.232555  4475 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:22:35.232566  4475 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:22:35.232571  4475 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:22:35.232581  4475 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:22:35.232622  4475 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:22:35.232635  4475 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:22:35.232638  4475 net.cpp:165] Memory required for data: 272676508
I0419 16:22:35.232643  4475 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:22:35.233101  4475 net.cpp:106] Creating Layer rpn-data
I0419 16:22:35.233119  4475 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:22:35.233127  4475 net.cpp:454] rpn-data <- gt_boxes
I0419 16:22:35.233132  4475 net.cpp:454] rpn-data <- im_info
I0419 16:22:35.233139  4475 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:22:35.233147  4475 net.cpp:411] rpn-data -> rpn_labels
I0419 16:22:35.233158  4475 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:22:35.233173  4475 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:22:35.233182  4475 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:22:35.234447  4475 net.cpp:150] Setting up rpn-data
I0419 16:22:35.234467  4475 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:22:35.234475  4475 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:22:35.234480  4475 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:22:35.234485  4475 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:22:35.234490  4475 net.cpp:165] Memory required for data: 273844636
I0419 16:22:35.234498  4475 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:22:35.234515  4475 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:22:35.234525  4475 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:22:35.234532  4475 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:22:35.234542  4475 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:22:35.234560  4475 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:22:35.234693  4475 net.cpp:150] Setting up rpn_loss_cls
I0419 16:22:35.234705  4475 net.cpp:157] Top shape: (1)
I0419 16:22:35.234710  4475 net.cpp:160]     with loss weight 1
I0419 16:22:35.234731  4475 net.cpp:165] Memory required for data: 273844640
I0419 16:22:35.234737  4475 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:22:35.234755  4475 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:22:35.234762  4475 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:22:35.234771  4475 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:22:35.234776  4475 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:22:35.234782  4475 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:22:35.234792  4475 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:22:35.235376  4475 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:22:35.235389  4475 net.cpp:157] Top shape: (1)
I0419 16:22:35.235394  4475 net.cpp:160]     with loss weight 1
I0419 16:22:35.235404  4475 net.cpp:165] Memory required for data: 273844644
I0419 16:22:35.235409  4475 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:22:35.235421  4475 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:22:35.235436  4475 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:22:35.235469  4475 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:22:35.235481  4475 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:22:35.235486  4475 net.cpp:165] Memory required for data: 273881508
I0419 16:22:35.235489  4475 layer_factory.hpp:77] Creating layer fc6
I0419 16:22:35.235501  4475 net.cpp:106] Creating Layer fc6
I0419 16:22:35.235509  4475 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:22:35.235520  4475 net.cpp:411] fc6 -> fc6
I0419 16:22:35.333371  4475 net.cpp:150] Setting up fc6
I0419 16:22:35.333416  4475 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:35.333421  4475 net.cpp:165] Memory required for data: 273897892
I0419 16:22:35.333442  4475 layer_factory.hpp:77] Creating layer relu6
I0419 16:22:35.333456  4475 net.cpp:106] Creating Layer relu6
I0419 16:22:35.333461  4475 net.cpp:454] relu6 <- fc6
I0419 16:22:35.333468  4475 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:22:35.333482  4475 net.cpp:150] Setting up relu6
I0419 16:22:35.333493  4475 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:35.333498  4475 net.cpp:165] Memory required for data: 273914276
I0419 16:22:35.333503  4475 layer_factory.hpp:77] Creating layer fc7
I0419 16:22:35.333515  4475 net.cpp:106] Creating Layer fc7
I0419 16:22:35.333525  4475 net.cpp:454] fc7 <- fc6
I0419 16:22:35.333534  4475 net.cpp:411] fc7 -> fc7
I0419 16:22:35.377795  4475 net.cpp:150] Setting up fc7
I0419 16:22:35.377840  4475 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:22:35.377846  4475 net.cpp:165] Memory required for data: 273930660
I0419 16:22:35.377858  4475 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:22:35.377877  4475 net.cpp:106] Creating Layer silence_fc7
I0419 16:22:35.377894  4475 net.cpp:454] silence_fc7 <- fc7
I0419 16:22:35.377905  4475 net.cpp:150] Setting up silence_fc7
I0419 16:22:35.377914  4475 net.cpp:165] Memory required for data: 273930660
I0419 16:22:35.377919  4475 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:22:35.377924  4475 net.cpp:228] fc7 does not need backward computation.
I0419 16:22:35.377929  4475 net.cpp:228] relu6 does not need backward computation.
I0419 16:22:35.377938  4475 net.cpp:228] fc6 does not need backward computation.
I0419 16:22:35.377943  4475 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:22:35.377949  4475 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:22:35.377955  4475 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:22:35.377962  4475 net.cpp:226] rpn-data needs backward computation.
I0419 16:22:35.377970  4475 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:22:35.377976  4475 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:22:35.377981  4475 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:22:35.377987  4475 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:22:35.377992  4475 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:22:35.377998  4475 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:22:35.378005  4475 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:22:35.378010  4475 net.cpp:228] relu5 does not need backward computation.
I0419 16:22:35.378016  4475 net.cpp:228] conv5 does not need backward computation.
I0419 16:22:35.378021  4475 net.cpp:228] relu4 does not need backward computation.
I0419 16:22:35.378026  4475 net.cpp:228] conv4 does not need backward computation.
I0419 16:22:35.378031  4475 net.cpp:228] relu3 does not need backward computation.
I0419 16:22:35.378036  4475 net.cpp:228] conv3 does not need backward computation.
I0419 16:22:35.378042  4475 net.cpp:228] pool2 does not need backward computation.
I0419 16:22:35.378048  4475 net.cpp:228] norm2 does not need backward computation.
I0419 16:22:35.378053  4475 net.cpp:228] relu2 does not need backward computation.
I0419 16:22:35.378057  4475 net.cpp:228] conv2 does not need backward computation.
I0419 16:22:35.378067  4475 net.cpp:228] pool1 does not need backward computation.
I0419 16:22:35.378074  4475 net.cpp:228] norm1 does not need backward computation.
I0419 16:22:35.378079  4475 net.cpp:228] relu1 does not need backward computation.
I0419 16:22:35.378084  4475 net.cpp:228] conv1 does not need backward computation.
I0419 16:22:35.378090  4475 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:22:35.378098  4475 net.cpp:228] input-data does not need backward computation.
I0419 16:22:35.378101  4475 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:22:35.378106  4475 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:22:35.378141  4475 net.cpp:283] Network initialization done.
I0419 16:22:35.378255  4475 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
I0419 16:22:35.814182  4475 net.cpp:816] Ignoring source layer data
I0419 16:22:35.817283  4475 net.cpp:816] Ignoring source layer conv5_relu5_0_split
I0419 16:22:35.817297  4475 net.cpp:816] Ignoring source layer roi_pool_conv5
I0419 16:22:35.847540  4475 net.cpp:816] Ignoring source layer drop6
I0419 16:22:35.861014  4475 net.cpp:816] Ignoring source layer relu7
I0419 16:22:35.861040  4475 net.cpp:816] Ignoring source layer drop7
I0419 16:22:35.861044  4475 net.cpp:816] Ignoring source layer fc7_drop7_0_split
I0419 16:22:35.861048  4475 net.cpp:816] Ignoring source layer cls_score
I0419 16:22:35.861052  4475 net.cpp:816] Ignoring source layer bbox_pred
I0419 16:22:35.861057  4475 net.cpp:816] Ignoring source layer loss_cls
I0419 16:22:35.861059  4475 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:22:35.861577  4475 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:22:35.861588  4475 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Solving...
I0419 16:22:36.041693  4475 solver.cpp:229] Iteration 0, loss = 1.1888
I0419 16:22:36.041738  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.70785 (* 1 = 0.70785 loss)
I0419 16:22:36.041745  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.480947 (* 1 = 0.480947 loss)
I0419 16:22:36.041757  4475 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:22:38.364639  4475 solver.cpp:229] Iteration 20, loss = 0.532486
I0419 16:22:38.364681  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.246661 (* 1 = 0.246661 loss)
I0419 16:22:38.364692  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.285825 (* 1 = 0.285825 loss)
I0419 16:22:38.364699  4475 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:22:40.634805  4475 solver.cpp:229] Iteration 40, loss = 0.387418
I0419 16:22:40.634848  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.208893 (* 1 = 0.208893 loss)
I0419 16:22:40.634860  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.178525 (* 1 = 0.178525 loss)
I0419 16:22:40.634866  4475 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:22:42.886592  4475 solver.cpp:229] Iteration 60, loss = 0.931276
I0419 16:22:42.886638  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.460186 (* 1 = 0.460186 loss)
I0419 16:22:42.886649  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.471089 (* 1 = 0.471089 loss)
I0419 16:22:42.886656  4475 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:22:45.172636  4475 solver.cpp:229] Iteration 80, loss = 0.649747
I0419 16:22:45.172683  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.433855 (* 1 = 0.433855 loss)
I0419 16:22:45.172693  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.215892 (* 1 = 0.215892 loss)
I0419 16:22:45.172700  4475 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:22:47.426312  4475 solver.cpp:229] Iteration 100, loss = 0.288423
I0419 16:22:47.426369  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.249034 (* 1 = 0.249034 loss)
I0419 16:22:47.426380  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0393885 (* 1 = 0.0393885 loss)
I0419 16:22:47.426388  4475 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:22:49.667166  4475 solver.cpp:229] Iteration 120, loss = 0.764852
I0419 16:22:49.667217  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.285139 (* 1 = 0.285139 loss)
I0419 16:22:49.667229  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.479713 (* 1 = 0.479713 loss)
I0419 16:22:49.667237  4475 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:22:51.931485  4475 solver.cpp:229] Iteration 140, loss = 0.244432
I0419 16:22:51.931530  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.110122 (* 1 = 0.110122 loss)
I0419 16:22:51.931542  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.134311 (* 1 = 0.134311 loss)
I0419 16:22:51.931550  4475 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:22:54.157933  4475 solver.cpp:229] Iteration 160, loss = 0.350078
I0419 16:22:54.157987  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.185072 (* 1 = 0.185072 loss)
I0419 16:22:54.157999  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165006 (* 1 = 0.165006 loss)
I0419 16:22:54.158005  4475 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:22:56.431634  4475 solver.cpp:229] Iteration 180, loss = 0.268064
I0419 16:22:56.431681  4475 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.187254 (* 1 = 0.187254 loss)
I0419 16:22:56.431694  4475 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0808104 (* 1 = 0.0808104 loss)
I0419 16:22:56.431701  4475 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.114s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:23:02.446210  4492 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:23:02.446367  4492 net.cpp:413] Input 0 -> data
I0419 16:23:02.461493  4492 net.cpp:413] Input 1 -> im_info
I0419 16:23:02.461554  4492 layer_factory.hpp:77] Creating layer conv1
I0419 16:23:02.461583  4492 net.cpp:106] Creating Layer conv1
I0419 16:23:02.461591  4492 net.cpp:454] conv1 <- data
I0419 16:23:02.461603  4492 net.cpp:411] conv1 -> conv1
I0419 16:23:02.462381  4492 net.cpp:150] Setting up conv1
I0419 16:23:02.462406  4492 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:23:02.462411  4492 net.cpp:165] Memory required for data: 4816896
I0419 16:23:02.462435  4492 layer_factory.hpp:77] Creating layer relu1
I0419 16:23:02.462450  4492 net.cpp:106] Creating Layer relu1
I0419 16:23:02.462456  4492 net.cpp:454] relu1 <- conv1
I0419 16:23:02.462463  4492 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:23:02.462476  4492 net.cpp:150] Setting up relu1
I0419 16:23:02.462486  4492 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:23:02.462491  4492 net.cpp:165] Memory required for data: 9633792
I0419 16:23:02.462494  4492 layer_factory.hpp:77] Creating layer norm1
I0419 16:23:02.462507  4492 net.cpp:106] Creating Layer norm1
I0419 16:23:02.462512  4492 net.cpp:454] norm1 <- conv1
I0419 16:23:02.462519  4492 net.cpp:411] norm1 -> norm1
I0419 16:23:02.462635  4492 net.cpp:150] Setting up norm1
I0419 16:23:02.462651  4492 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:23:02.462654  4492 net.cpp:165] Memory required for data: 14450688
I0419 16:23:02.462659  4492 layer_factory.hpp:77] Creating layer pool1
I0419 16:23:02.462671  4492 net.cpp:106] Creating Layer pool1
I0419 16:23:02.462676  4492 net.cpp:454] pool1 <- norm1
I0419 16:23:02.462683  4492 net.cpp:411] pool1 -> pool1
I0419 16:23:02.462730  4492 net.cpp:150] Setting up pool1
I0419 16:23:02.462743  4492 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:23:02.462748  4492 net.cpp:165] Memory required for data: 15698304
I0419 16:23:02.462751  4492 layer_factory.hpp:77] Creating layer conv2
I0419 16:23:02.462764  4492 net.cpp:106] Creating Layer conv2
I0419 16:23:02.462771  4492 net.cpp:454] conv2 <- pool1
I0419 16:23:02.462779  4492 net.cpp:411] conv2 -> conv2
I0419 16:23:02.464942  4492 net.cpp:150] Setting up conv2
I0419 16:23:02.464962  4492 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:23:02.464967  4492 net.cpp:165] Memory required for data: 16559488
I0419 16:23:02.464980  4492 layer_factory.hpp:77] Creating layer relu2
I0419 16:23:02.464989  4492 net.cpp:106] Creating Layer relu2
I0419 16:23:02.464998  4492 net.cpp:454] relu2 <- conv2
I0419 16:23:02.465004  4492 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:23:02.465013  4492 net.cpp:150] Setting up relu2
I0419 16:23:02.465021  4492 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:23:02.465025  4492 net.cpp:165] Memory required for data: 17420672
I0419 16:23:02.465030  4492 layer_factory.hpp:77] Creating layer norm2
I0419 16:23:02.465041  4492 net.cpp:106] Creating Layer norm2
I0419 16:23:02.465046  4492 net.cpp:454] norm2 <- conv2
I0419 16:23:02.465054  4492 net.cpp:411] norm2 -> norm2
I0419 16:23:02.465147  4492 net.cpp:150] Setting up norm2
I0419 16:23:02.465159  4492 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:23:02.465164  4492 net.cpp:165] Memory required for data: 18281856
I0419 16:23:02.465169  4492 layer_factory.hpp:77] Creating layer pool2
I0419 16:23:02.465179  4492 net.cpp:106] Creating Layer pool2
I0419 16:23:02.465186  4492 net.cpp:454] pool2 <- norm2
I0419 16:23:02.465193  4492 net.cpp:411] pool2 -> pool2
I0419 16:23:02.465232  4492 net.cpp:150] Setting up pool2
I0419 16:23:02.465245  4492 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:23:02.465248  4492 net.cpp:165] Memory required for data: 18512256
I0419 16:23:02.465253  4492 layer_factory.hpp:77] Creating layer conv3
I0419 16:23:02.465266  4492 net.cpp:106] Creating Layer conv3
I0419 16:23:02.465272  4492 net.cpp:454] conv3 <- pool2
I0419 16:23:02.465279  4492 net.cpp:411] conv3 -> conv3
I0419 16:23:02.467581  4492 net.cpp:150] Setting up conv3
I0419 16:23:02.467600  4492 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:23:02.467605  4492 net.cpp:165] Memory required for data: 18857856
I0419 16:23:02.467622  4492 layer_factory.hpp:77] Creating layer relu3
I0419 16:23:02.467630  4492 net.cpp:106] Creating Layer relu3
I0419 16:23:02.467638  4492 net.cpp:454] relu3 <- conv3
I0419 16:23:02.467645  4492 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:23:02.467654  4492 net.cpp:150] Setting up relu3
I0419 16:23:02.467661  4492 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:23:02.467666  4492 net.cpp:165] Memory required for data: 19203456
I0419 16:23:02.467671  4492 layer_factory.hpp:77] Creating layer conv4
I0419 16:23:02.467682  4492 net.cpp:106] Creating Layer conv4
I0419 16:23:02.467692  4492 net.cpp:454] conv4 <- conv3
I0419 16:23:02.467700  4492 net.cpp:411] conv4 -> conv4
I0419 16:23:02.470979  4492 net.cpp:150] Setting up conv4
I0419 16:23:02.470999  4492 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:23:02.471004  4492 net.cpp:165] Memory required for data: 19549056
I0419 16:23:02.471014  4492 layer_factory.hpp:77] Creating layer relu4
I0419 16:23:02.471024  4492 net.cpp:106] Creating Layer relu4
I0419 16:23:02.471029  4492 net.cpp:454] relu4 <- conv4
I0419 16:23:02.471036  4492 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:23:02.471047  4492 net.cpp:150] Setting up relu4
I0419 16:23:02.471055  4492 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:23:02.471062  4492 net.cpp:165] Memory required for data: 19894656
I0419 16:23:02.471067  4492 layer_factory.hpp:77] Creating layer conv5
I0419 16:23:02.471077  4492 net.cpp:106] Creating Layer conv5
I0419 16:23:02.471083  4492 net.cpp:454] conv5 <- conv4
I0419 16:23:02.471091  4492 net.cpp:411] conv5 -> conv5
I0419 16:23:02.473358  4492 net.cpp:150] Setting up conv5
I0419 16:23:02.473377  4492 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:23:02.473382  4492 net.cpp:165] Memory required for data: 20125056
I0419 16:23:02.473395  4492 layer_factory.hpp:77] Creating layer relu5
I0419 16:23:02.473409  4492 net.cpp:106] Creating Layer relu5
I0419 16:23:02.473417  4492 net.cpp:454] relu5 <- conv5
I0419 16:23:02.473424  4492 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:23:02.473433  4492 net.cpp:150] Setting up relu5
I0419 16:23:02.473441  4492 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:23:02.473446  4492 net.cpp:165] Memory required for data: 20355456
I0419 16:23:02.473450  4492 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:23:02.473464  4492 net.cpp:106] Creating Layer rpn_conv1
I0419 16:23:02.473474  4492 net.cpp:454] rpn_conv1 <- conv5
I0419 16:23:02.473481  4492 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:23:02.475100  4492 net.cpp:150] Setting up rpn_conv1
I0419 16:23:02.475119  4492 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:23:02.475124  4492 net.cpp:165] Memory required for data: 20585856
I0419 16:23:02.475134  4492 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:23:02.475142  4492 net.cpp:106] Creating Layer rpn_relu1
I0419 16:23:02.475147  4492 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:23:02.475154  4492 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:23:02.475168  4492 net.cpp:150] Setting up rpn_relu1
I0419 16:23:02.475175  4492 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:23:02.475180  4492 net.cpp:165] Memory required for data: 20816256
I0419 16:23:02.475184  4492 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:23:02.475203  4492 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:23:02.475210  4492 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:23:02.475216  4492 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:23:02.475227  4492 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:23:02.475277  4492 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:23:02.475289  4492 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:23:02.475296  4492 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:23:02.475299  4492 net.cpp:165] Memory required for data: 21277056
I0419 16:23:02.475304  4492 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:23:02.475317  4492 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:23:02.475327  4492 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:23:02.475333  4492 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:23:02.475520  4492 net.cpp:150] Setting up rpn_cls_score
I0419 16:23:02.475538  4492 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:23:02.475541  4492 net.cpp:165] Memory required for data: 21293256
I0419 16:23:02.475550  4492 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:23:02.475559  4492 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:23:02.475566  4492 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:23:02.475579  4492 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:23:02.475785  4492 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:23:02.475800  4492 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:23:02.475803  4492 net.cpp:165] Memory required for data: 21325656
I0419 16:23:02.475812  4492 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:23:02.475822  4492 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:23:02.475828  4492 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:23:02.475836  4492 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:23:02.475878  4492 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:23:02.475893  4492 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:23:02.475896  4492 net.cpp:165] Memory required for data: 21341856
I0419 16:23:02.475901  4492 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:23:02.475909  4492 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:23:02.475914  4492 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:23:02.475920  4492 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:23:02.475983  4492 net.cpp:150] Setting up rpn_cls_prob
I0419 16:23:02.475996  4492 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:23:02.476001  4492 net.cpp:165] Memory required for data: 21358056
I0419 16:23:02.476004  4492 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:23:02.476012  4492 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:23:02.476017  4492 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:23:02.476024  4492 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:23:02.476058  4492 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:23:02.476070  4492 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:23:02.476075  4492 net.cpp:165] Memory required for data: 21374256
I0419 16:23:02.476079  4492 layer_factory.hpp:77] Creating layer proposal
I0419 16:23:02.477540  4492 net.cpp:106] Creating Layer proposal
I0419 16:23:02.477557  4492 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:23:02.477566  4492 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:23:02.477571  4492 net.cpp:454] proposal <- im_info
I0419 16:23:02.477581  4492 net.cpp:411] proposal -> rois
I0419 16:23:02.477592  4492 net.cpp:411] proposal -> scores
I0419 16:23:02.478960  4492 net.cpp:150] Setting up proposal
I0419 16:23:02.478984  4492 net.cpp:157] Top shape: 1 5 (5)
I0419 16:23:02.478992  4492 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:23:02.478996  4492 net.cpp:165] Memory required for data: 21374280
I0419 16:23:02.479002  4492 net.cpp:228] proposal does not need backward computation.
I0419 16:23:02.479009  4492 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:23:02.479014  4492 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:23:02.479019  4492 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:23:02.479027  4492 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:23:02.479032  4492 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:23:02.479037  4492 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:23:02.479041  4492 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:23:02.479045  4492 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:23:02.479050  4492 net.cpp:228] relu5 does not need backward computation.
I0419 16:23:02.479055  4492 net.cpp:228] conv5 does not need backward computation.
I0419 16:23:02.479059  4492 net.cpp:228] relu4 does not need backward computation.
I0419 16:23:02.479065  4492 net.cpp:228] conv4 does not need backward computation.
I0419 16:23:02.479070  4492 net.cpp:228] relu3 does not need backward computation.
I0419 16:23:02.479074  4492 net.cpp:228] conv3 does not need backward computation.
I0419 16:23:02.479079  4492 net.cpp:228] pool2 does not need backward computation.
I0419 16:23:02.479084  4492 net.cpp:228] norm2 does not need backward computation.
I0419 16:23:02.479089  4492 net.cpp:228] relu2 does not need backward computation.
I0419 16:23:02.479094  4492 net.cpp:228] conv2 does not need backward computation.
I0419 16:23:02.479099  4492 net.cpp:228] pool1 does not need backward computation.
I0419 16:23:02.479104  4492 net.cpp:228] norm1 does not need backward computation.
I0419 16:23:02.479109  4492 net.cpp:228] relu1 does not need backward computation.
I0419 16:23:02.479112  4492 net.cpp:228] conv1 does not need backward computation.
I0419 16:23:02.479117  4492 net.cpp:270] This network produces output rois
I0419 16:23:02.479122  4492 net.cpp:270] This network produces output scores
I0419 16:23:02.479151  4492 net.cpp:283] Network initialization done.
I0419 16:23:02.913337  4492 net.cpp:816] Ignoring source layer input-data
I0419 16:23:02.913375  4492 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:23:02.916944  4492 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:23:02.916972  4492 net.cpp:816] Ignoring source layer rpn-data
I0419 16:23:02.916977  4492 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:23:02.916981  4492 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:23:02.916985  4492 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:23:02.916990  4492 net.cpp:816] Ignoring source layer fc6
I0419 16:23:02.916995  4492 net.cpp:816] Ignoring source layer relu6
I0419 16:23:02.916997  4492 net.cpp:816] Ignoring source layer fc7
I0419 16:23:02.917007  4492 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.163s
im_proposals: 2/506 0.153s
im_proposals: 3/506 0.149s
im_proposals: 4/506 0.146s
im_proposals: 5/506 0.145s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.144s
im_proposals: 8/506 0.144s
im_proposals: 9/506 0.143s
im_proposals: 10/506 0.143s
im_proposals: 11/506 0.142s
im_proposals: 12/506 0.142s
im_proposals: 13/506 0.142s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.141s
im_proposals: 16/506 0.141s
im_proposals: 17/506 0.141s
im_proposals: 18/506 0.141s
im_proposals: 19/506 0.141s
im_proposals: 20/506 0.141s
im_proposals: 21/506 0.141s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.142s
im_proposals: 33/506 0.142s
im_proposals: 34/506 0.142s
im_proposals: 35/506 0.142s
im_proposals: 36/506 0.142s
im_proposals: 37/506 0.142s
im_proposals: 38/506 0.142s
im_proposals: 39/506 0.142s
im_proposals: 40/506 0.142s
im_proposals: 41/506 0.142s
im_proposals: 42/506 0.141s
im_proposals: 43/506 0.141s
im_proposals: 44/506 0.141s
im_proposals: 45/506 0.141s
im_proposals: 46/506 0.141s
im_proposals: 47/506 0.141s
im_proposals: 48/506 0.141s
im_proposals: 49/506 0.141s
im_proposals: 50/506 0.141s
im_proposals: 51/506 0.141s
im_proposals: 52/506 0.141s
im_proposals: 53/506 0.141s
im_proposals: 54/506 0.141s
im_proposals: 55/506 0.141s
im_proposals: 56/506 0.141s
im_proposals: 57/506 0.141s
im_proposals: 58/506 0.141s
im_proposals: 59/506 0.141s
im_proposals: 60/506 0.141s
im_proposals: 61/506 0.141s
im_proposals: 62/506 0.141s
im_proposals: 63/506 0.141s
im_proposals: 64/506 0.141s
im_proposals: 65/506 0.141s
im_proposals: 66/506 0.141s
im_proposals: 67/506 0.141s
im_proposals: 68/506 0.141s
im_proposals: 69/506 0.141s
im_proposals: 70/506 0.141s
im_proposals: 71/506 0.142s
im_proposals: 72/506 0.142s
im_proposals: 73/506 0.142s
im_proposals: 74/506 0.142s
im_proposals: 75/506 0.142s
im_proposals: 76/506 0.142s
im_proposals: 77/506 0.142s
im_proposals: 78/506 0.142s
im_proposals: 79/506 0.142s
im_proposals: 80/506 0.142s
im_proposals: 81/506 0.142s
im_proposals: 82/506 0.142s
im_proposals: 83/506 0.142s
im_proposals: 84/506 0.142s
im_proposals: 85/506 0.142s
im_proposals: 86/506 0.142s
im_proposals: 87/506 0.142s
im_proposals: 88/506 0.142s
im_proposals: 89/506 0.142s
im_proposals: 90/506 0.142s
im_proposals: 91/506 0.142s
im_proposals: 92/506 0.142s
im_proposals: 93/506 0.142s
im_proposals: 94/506 0.142s
im_proposals: 95/506 0.142s
im_proposals: 96/506 0.142s
im_proposals: 97/506 0.142s
im_proposals: 98/506 0.142s
im_proposals: 99/506 0.142s
im_proposals: 100/506 0.142s
im_proposals: 101/506 0.142s
im_proposals: 102/506 0.142s
im_proposals: 103/506 0.142s
im_proposals: 104/506 0.142s
im_proposals: 105/506 0.142s
im_proposals: 106/506 0.142s
im_proposals: 107/506 0.142s
im_proposals: 108/506 0.142s
im_proposals: 109/506 0.142s
im_proposals: 110/506 0.142s
im_proposals: 111/506 0.142s
im_proposals: 112/506 0.142s
im_proposals: 113/506 0.142s
im_proposals: 114/506 0.142s
im_proposals: 115/506 0.142s
im_proposals: 116/506 0.142s
im_proposals: 117/506 0.142s
im_proposals: 118/506 0.142s
im_proposals: 119/506 0.142s
im_proposals: 120/506 0.142s
im_proposals: 121/506 0.142s
im_proposals: 122/506 0.142s
im_proposals: 123/506 0.142s
im_proposals: 124/506 0.142s
im_proposals: 125/506 0.142s
im_proposals: 126/506 0.142s
im_proposals: 127/506 0.142s
im_proposals: 128/506 0.142s
im_proposals: 129/506 0.142s
im_proposals: 130/506 0.142s
im_proposals: 131/506 0.142s
im_proposals: 132/506 0.142s
im_proposals: 133/506 0.142s
im_proposals: 134/506 0.142s
im_proposals: 135/506 0.142s
im_proposals: 136/506 0.142s
im_proposals: 137/506 0.142s
im_proposals: 138/506 0.142s
im_proposals: 139/506 0.142s
im_proposals: 140/506 0.142s
im_proposals: 141/506 0.142s
im_proposals: 142/506 0.142s
im_proposals: 143/506 0.142s
im_proposals: 144/506 0.142s
im_proposals: 145/506 0.142s
im_proposals: 146/506 0.142s
im_proposals: 147/506 0.142s
im_proposals: 148/506 0.142s
im_proposals: 149/506 0.142s
im_proposals: 150/506 0.142s
im_proposals: 151/506 0.142s
im_proposals: 152/506 0.142s
im_proposals: 153/506 0.142s
im_proposals: 154/506 0.142s
im_proposals: 155/506 0.142s
im_proposals: 156/506 0.142s
im_proposals: 157/506 0.142s
im_proposals: 158/506 0.142s
im_proposals: 159/506 0.142s
im_proposals: 160/506 0.142s
im_proposals: 161/506 0.142s
im_proposals: 162/506 0.142s
im_proposals: 163/506 0.142s
im_proposals: 164/506 0.142s
im_proposals: 165/506 0.142s
im_proposals: 166/506 0.142s
im_proposals: 167/506 0.142s
im_proposals: 168/506 0.142s
im_proposals: 169/506 0.142s
im_proposals: 170/506 0.142s
im_proposals: 171/506 0.142s
im_proposals: 172/506 0.142s
im_proposals: 173/506 0.142s
im_proposals: 174/506 0.142s
im_proposals: 175/506 0.142s
im_proposals: 176/506 0.142s
im_proposals: 177/506 0.142s
im_proposals: 178/506 0.142s
im_proposals: 179/506 0.142s
im_proposals: 180/506 0.142s
im_proposals: 181/506 0.142s
im_proposals: 182/506 0.142s
im_proposals: 183/506 0.142s
im_proposals: 184/506 0.142s
im_proposals: 185/506 0.142s
im_proposals: 186/506 0.142s
im_proposals: 187/506 0.142s
im_proposals: 188/506 0.142s
im_proposals: 189/506 0.142s
im_proposals: 190/506 0.142s
im_proposals: 191/506 0.142s
im_proposals: 192/506 0.142s
im_proposals: 193/506 0.142s
im_proposals: 194/506 0.142s
im_proposals: 195/506 0.142s
im_proposals: 196/506 0.142s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.142s
im_proposals: 455/506 0.142s
im_proposals: 456/506 0.142s
im_proposals: 457/506 0.142s
im_proposals: 458/506 0.142s
im_proposals: 459/506 0.142s
im_proposals: 460/506 0.142s
im_proposals: 461/506 0.142s
im_proposals: 462/506 0.142s
im_proposals: 463/506 0.142s
im_proposals: 464/506 0.142s
im_proposals: 465/506 0.142s
im_proposals: 466/506 0.142s
im_proposals: 467/506 0.142s
im_proposals: 468/506 0.142s
im_proposals: 469/506 0.142s
im_proposals: 470/506 0.142s
im_proposals: 471/506 0.142s
im_proposals: 472/506 0.142s
im_proposals: 473/506 0.142s
im_proposals: 474/506 0.142s
im_proposals: 475/506 0.142s
im_proposals: 476/506 0.142s
im_proposals: 477/506 0.142s
im_proposals: 478/506 0.142s
im_proposals: 479/506 0.142s
im_proposals: 480/506 0.142s
im_proposals: 481/506 0.142s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 Fast R-CNN, init from stage 2 RPN R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.15217907e-07  -5.22005132e-03  -4.10793339e-02  -7.08718981e-02]
 [  8.92164694e-09   1.57054396e-02   2.19984295e-02  -2.78301045e-02]
 [ -1.94225821e-08  -8.61593031e-03   2.96989892e-02   6.69870494e-03]
 [ -7.33882189e-08   5.15535573e-02  -1.74732055e-02  -1.51888100e-02]
 [ -3.10440858e-09   3.40905333e-03   4.68776354e-02   1.95911229e-02]
 [  4.61332605e-08   5.50199124e-03   1.79429869e-03  -1.13158196e-02]
 [  6.25020928e-08   6.30476822e-03   4.30800884e-02  -2.43445225e-02]
 [ -6.09688356e-08   5.95824371e-03   3.37530213e-02   8.76786686e-05]
 [  1.42873350e-08  -3.70246134e-03   9.61448828e-03  -4.24198652e-02]
 [ -2.70083547e-08   1.58831410e-02   2.96526237e-02  -6.28295529e-04]
 [ -2.62309697e-08  -3.76861907e-03   3.92433991e-02  -1.64119690e-02]
 [  0.00000000e+00   8.80879668e-03   2.87056245e-02  -2.28243431e-02]
 [ -1.35863529e-09  -9.36826113e-03   3.53036770e-02   6.68836523e-03]
 [  1.29442049e-08  -9.80455974e-03   3.10986247e-02  -2.54646419e-02]
 [ -5.93788696e-08   1.30135879e-03   5.14335681e-02   1.49192686e-02]
 [  7.97444955e-08   3.25487806e-03  -1.91324592e-02  -4.42155972e-02]
 [  9.22009349e-08  -2.18390419e-02   1.16236154e-02  -1.29788245e-02]
 [ -2.68220901e-08  -1.63504751e-02  -3.63551257e-02  -7.34175252e-03]
 [ -3.47987421e-09  -1.28009905e-02   8.80987278e-02   3.39212810e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.62374266e-08   1.18576192e-02   2.12963320e-02  -3.55426945e-02]
 [  0.00000000e+00  -2.73562421e-02   3.71764302e-02   3.08031489e-02]
 [  3.29954284e-08   1.68099446e-02   9.91061250e-03  -6.47755188e-02]
 [  2.33865447e-08  -1.50194568e-02   3.35465732e-02  -5.10053122e-02]
 [  0.00000000e+00  -3.37360675e-02  -1.29876547e-02  -4.63749021e-02]
 [ -1.02445483e-08  -1.05859681e-02   3.63236621e-02  -3.95815330e-02]
 [  0.00000000e+00  -3.08435158e-02   2.72995049e-02  -3.17263682e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  9.77888703e-09  -3.37978094e-02   6.62351726e-03  -8.73072081e-02]
 [  2.13583310e-07   2.10562771e-02   1.04123890e-01   4.05486003e-02]
 [ -3.28065888e-08  -1.67200157e-02   9.78282262e-02  -1.73913034e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.20222791e-08   2.34385286e-02  -1.33259988e-02  -7.88555294e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.62520358e-08   7.97461874e-04   5.48839222e-02   5.03097506e-03]
 [  0.00000000e+00   4.31492925e-04  -5.06124686e-02  -1.98517618e-02]
 [ -3.17891439e-07  -6.48143639e-02   3.39208096e-02   1.15097900e-01]
 [ -2.70295211e-08  -9.81775733e-03   3.64169462e-02  -1.26073294e-02]
 [ -5.43892384e-08   1.18854707e-03   8.86017084e-03   9.47771966e-03]
 [  0.00000000e+00  -6.53625764e-03  -2.74993025e-02  -3.78074154e-02]
 [  5.06639481e-08   1.53237820e-02  -2.71972924e-02  -7.01517552e-02]
 [  0.00000000e+00  -1.49319681e-02  -3.88354932e-02  -2.72935242e-02]]
[ -2.54797916e-09  -3.41964957e-03   1.68764901e-02  -1.36807874e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.03118599  0.07820029  0.1879694   0.14515669]
 [ 0.10536447  0.0797608   0.11253537  0.15070204]
 [ 0.08942478  0.07682879  0.13667433  0.12012078]
 [ 0.07049701  0.08686918  0.10685716  0.16090195]
 [ 0.0689664   0.05151737  0.12282298  0.11078129]
 [ 0.10360388  0.08304575  0.15080414  0.14082425]
 [ 0.11339058  0.09352458  0.12649984  0.13832591]
 [ 0.09553999  0.0839336   0.11087185  0.10994704]
 [ 0.08797301  0.09229198  0.11841849  0.1628425 ]
 [ 0.06877713  0.08209774  0.10731047  0.11249492]
 [ 0.09604479  0.08389204  0.13290211  0.14286387]
 [ 0.08018352  0.0476292   0.06521492  0.08339381]
 [ 0.09109489  0.07227066  0.13383813  0.11657726]
 [ 0.08248341  0.06775028  0.13091794  0.11488883]
 [ 0.08776188  0.06086896  0.11978036  0.13528876]
 [ 0.06678698  0.09860393  0.10633958  0.14652086]
 [ 0.07079301  0.04207947  0.11737497  0.14684446]
 [ 0.0580357   0.06989958  0.10342338  0.11984149]
 [ 0.09966203  0.06932348  0.15290589  0.07684153]
 [ 0.          0.          0.          0.        ]
 [ 0.08639607  0.08594219  0.08092752  0.13541661]
 [ 0.03014494  0.06117042  0.08312902  0.06887794]
 [ 0.0929154   0.06259105  0.06433442  0.1096136 ]
 [ 0.04194884  0.04463624  0.07054561  0.1400867 ]
 [ 0.09694613  0.04771     0.01836732  0.06558402]
 [ 0.09028725  0.07122774  0.09998849  0.12037752]
 [ 0.0663192   0.08220008  0.11306004  0.0989453 ]
 [ 0.          0.          0.          0.        ]
 [ 0.06314527  0.07380807  0.11801258  0.12682124]
 [ 0.13168107  0.08334689  0.14726568  0.06057606]
 [ 0.10438679  0.08478485  0.16519981  0.15300941]
 [ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.07618705  0.09091894  0.11355521  0.12738066]
 [ 0.          0.          0.          0.        ]
 [ 0.09182852  0.05424865  0.09980124  0.098256  ]
 [ 0.09025062  0.06356327  0.11134718  0.0849115 ]
 [ 0.18744507  0.09413033  0.02669303  0.09491941]
 [ 0.09314606  0.07054383  0.10796287  0.10054283]
 [ 0.04503347  0.00237709  0.01772034  0.01895544]
 [ 0.08338253  0.05074086  0.08206391  0.09212766]
 [ 0.082225    0.07509092  0.05039421  0.13436018]
 [ 0.08375372  0.04804325  0.084512    0.08427064]]
[ 0.07453471  0.06203401  0.09298469  0.10116723]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:24:39.056645  4506 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:24:39.056707  4506 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt
I0419 16:24:39.057551  4506 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:24:39.057752  4506 layer_factory.hpp:77] Creating layer data
I0419 16:24:39.058405  4506 net.cpp:106] Creating Layer data
I0419 16:24:39.058429  4506 net.cpp:411] data -> data
I0419 16:24:39.058454  4506 net.cpp:411] data -> rois
I0419 16:24:39.058470  4506 net.cpp:411] data -> labels
I0419 16:24:39.058480  4506 net.cpp:411] data -> bbox_targets
I0419 16:24:39.058490  4506 net.cpp:411] data -> bbox_inside_weights
I0419 16:24:39.058498  4506 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:24:39.073989  4506 net.cpp:150] Setting up data
I0419 16:24:39.074014  4506 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:24:39.074023  4506 net.cpp:157] Top shape: 1 5 (5)
I0419 16:24:39.074028  4506 net.cpp:157] Top shape: 1 (1)
I0419 16:24:39.074038  4506 net.cpp:157] Top shape: 1 176 (176)
I0419 16:24:39.074044  4506 net.cpp:157] Top shape: 1 176 (176)
I0419 16:24:39.074054  4506 net.cpp:157] Top shape: 1 176 (176)
I0419 16:24:39.074059  4506 net.cpp:165] Memory required for data: 14402136
I0419 16:24:39.074069  4506 layer_factory.hpp:77] Creating layer conv1
I0419 16:24:39.074085  4506 net.cpp:106] Creating Layer conv1
I0419 16:24:39.074097  4506 net.cpp:454] conv1 <- data
I0419 16:24:39.074115  4506 net.cpp:411] conv1 -> conv1
I0419 16:24:39.075469  4506 net.cpp:150] Setting up conv1
I0419 16:24:39.075491  4506 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:24:39.075496  4506 net.cpp:165] Memory required for data: 129602136
I0419 16:24:39.075516  4506 layer_factory.hpp:77] Creating layer relu1
I0419 16:24:39.075536  4506 net.cpp:106] Creating Layer relu1
I0419 16:24:39.075544  4506 net.cpp:454] relu1 <- conv1
I0419 16:24:39.075551  4506 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:24:39.075565  4506 net.cpp:150] Setting up relu1
I0419 16:24:39.075574  4506 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:24:39.075578  4506 net.cpp:165] Memory required for data: 244802136
I0419 16:24:39.075583  4506 layer_factory.hpp:77] Creating layer norm1
I0419 16:24:39.075597  4506 net.cpp:106] Creating Layer norm1
I0419 16:24:39.075603  4506 net.cpp:454] norm1 <- conv1
I0419 16:24:39.075611  4506 net.cpp:411] norm1 -> norm1
I0419 16:24:39.075726  4506 net.cpp:150] Setting up norm1
I0419 16:24:39.075739  4506 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:24:39.075743  4506 net.cpp:165] Memory required for data: 360002136
I0419 16:24:39.075748  4506 layer_factory.hpp:77] Creating layer pool1
I0419 16:24:39.075759  4506 net.cpp:106] Creating Layer pool1
I0419 16:24:39.075767  4506 net.cpp:454] pool1 <- norm1
I0419 16:24:39.075773  4506 net.cpp:411] pool1 -> pool1
I0419 16:24:39.075819  4506 net.cpp:150] Setting up pool1
I0419 16:24:39.075830  4506 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:24:39.075835  4506 net.cpp:165] Memory required for data: 389110104
I0419 16:24:39.075839  4506 layer_factory.hpp:77] Creating layer conv2
I0419 16:24:39.075855  4506 net.cpp:106] Creating Layer conv2
I0419 16:24:39.075865  4506 net.cpp:454] conv2 <- pool1
I0419 16:24:39.075873  4506 net.cpp:411] conv2 -> conv2
I0419 16:24:39.077569  4506 net.cpp:150] Setting up conv2
I0419 16:24:39.077589  4506 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:24:39.077594  4506 net.cpp:165] Memory required for data: 408721752
I0419 16:24:39.077605  4506 layer_factory.hpp:77] Creating layer relu2
I0419 16:24:39.077618  4506 net.cpp:106] Creating Layer relu2
I0419 16:24:39.077630  4506 net.cpp:454] relu2 <- conv2
I0419 16:24:39.077637  4506 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:24:39.077646  4506 net.cpp:150] Setting up relu2
I0419 16:24:39.077653  4506 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:24:39.077658  4506 net.cpp:165] Memory required for data: 428333400
I0419 16:24:39.077663  4506 layer_factory.hpp:77] Creating layer norm2
I0419 16:24:39.077671  4506 net.cpp:106] Creating Layer norm2
I0419 16:24:39.077675  4506 net.cpp:454] norm2 <- conv2
I0419 16:24:39.077685  4506 net.cpp:411] norm2 -> norm2
I0419 16:24:39.077787  4506 net.cpp:150] Setting up norm2
I0419 16:24:39.077801  4506 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:24:39.077806  4506 net.cpp:165] Memory required for data: 447945048
I0419 16:24:39.077811  4506 layer_factory.hpp:77] Creating layer pool2
I0419 16:24:39.077821  4506 net.cpp:106] Creating Layer pool2
I0419 16:24:39.077827  4506 net.cpp:454] pool2 <- norm2
I0419 16:24:39.077837  4506 net.cpp:411] pool2 -> pool2
I0419 16:24:39.077874  4506 net.cpp:150] Setting up pool2
I0419 16:24:39.077885  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.077890  4506 net.cpp:165] Memory required for data: 453056856
I0419 16:24:39.077894  4506 layer_factory.hpp:77] Creating layer conv3
I0419 16:24:39.077906  4506 net.cpp:106] Creating Layer conv3
I0419 16:24:39.077914  4506 net.cpp:454] conv3 <- pool2
I0419 16:24:39.077927  4506 net.cpp:411] conv3 -> conv3
I0419 16:24:39.081215  4506 net.cpp:150] Setting up conv3
I0419 16:24:39.081235  4506 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:24:39.081240  4506 net.cpp:165] Memory required for data: 460724568
I0419 16:24:39.081254  4506 layer_factory.hpp:77] Creating layer relu3
I0419 16:24:39.081265  4506 net.cpp:106] Creating Layer relu3
I0419 16:24:39.081274  4506 net.cpp:454] relu3 <- conv3
I0419 16:24:39.081282  4506 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:24:39.081293  4506 net.cpp:150] Setting up relu3
I0419 16:24:39.081300  4506 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:24:39.081306  4506 net.cpp:165] Memory required for data: 468392280
I0419 16:24:39.081310  4506 layer_factory.hpp:77] Creating layer conv4
I0419 16:24:39.081322  4506 net.cpp:106] Creating Layer conv4
I0419 16:24:39.081332  4506 net.cpp:454] conv4 <- conv3
I0419 16:24:39.081341  4506 net.cpp:411] conv4 -> conv4
I0419 16:24:39.084650  4506 net.cpp:150] Setting up conv4
I0419 16:24:39.084671  4506 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:24:39.084676  4506 net.cpp:165] Memory required for data: 476059992
I0419 16:24:39.084686  4506 layer_factory.hpp:77] Creating layer relu4
I0419 16:24:39.084693  4506 net.cpp:106] Creating Layer relu4
I0419 16:24:39.084698  4506 net.cpp:454] relu4 <- conv4
I0419 16:24:39.084705  4506 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:24:39.084719  4506 net.cpp:150] Setting up relu4
I0419 16:24:39.084727  4506 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:24:39.084734  4506 net.cpp:165] Memory required for data: 483727704
I0419 16:24:39.084739  4506 layer_factory.hpp:77] Creating layer conv5
I0419 16:24:39.084755  4506 net.cpp:106] Creating Layer conv5
I0419 16:24:39.084765  4506 net.cpp:454] conv5 <- conv4
I0419 16:24:39.084776  4506 net.cpp:411] conv5 -> conv5
I0419 16:24:39.087064  4506 net.cpp:150] Setting up conv5
I0419 16:24:39.087083  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.087088  4506 net.cpp:165] Memory required for data: 488839512
I0419 16:24:39.087101  4506 layer_factory.hpp:77] Creating layer relu5
I0419 16:24:39.087110  4506 net.cpp:106] Creating Layer relu5
I0419 16:24:39.087123  4506 net.cpp:454] relu5 <- conv5
I0419 16:24:39.087131  4506 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:24:39.087143  4506 net.cpp:150] Setting up relu5
I0419 16:24:39.087152  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.087157  4506 net.cpp:165] Memory required for data: 493951320
I0419 16:24:39.087162  4506 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:24:39.087175  4506 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:24:39.087185  4506 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:24:39.087193  4506 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:24:39.087201  4506 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:24:39.087246  4506 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:24:39.087258  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.087268  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.087272  4506 net.cpp:165] Memory required for data: 504174936
I0419 16:24:39.087277  4506 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:24:39.087291  4506 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:24:39.087296  4506 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:24:39.087302  4506 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:24:39.087309  4506 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:24:39.087323  4506 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:24:39.087383  4506 net.cpp:150] Setting up roi_pool_conv5
I0419 16:24:39.087395  4506 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:24:39.087399  4506 net.cpp:165] Memory required for data: 504211800
I0419 16:24:39.087404  4506 layer_factory.hpp:77] Creating layer fc6
I0419 16:24:39.087415  4506 net.cpp:106] Creating Layer fc6
I0419 16:24:39.087420  4506 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:24:39.087433  4506 net.cpp:411] fc6 -> fc6
I0419 16:24:39.186887  4506 net.cpp:150] Setting up fc6
I0419 16:24:39.186930  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.186936  4506 net.cpp:165] Memory required for data: 504228184
I0419 16:24:39.186950  4506 layer_factory.hpp:77] Creating layer relu6
I0419 16:24:39.186964  4506 net.cpp:106] Creating Layer relu6
I0419 16:24:39.186970  4506 net.cpp:454] relu6 <- fc6
I0419 16:24:39.186980  4506 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:24:39.186990  4506 net.cpp:150] Setting up relu6
I0419 16:24:39.187001  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.187005  4506 net.cpp:165] Memory required for data: 504244568
I0419 16:24:39.187011  4506 layer_factory.hpp:77] Creating layer drop6
I0419 16:24:39.187026  4506 net.cpp:106] Creating Layer drop6
I0419 16:24:39.187037  4506 net.cpp:454] drop6 <- fc6
I0419 16:24:39.187048  4506 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:24:39.187085  4506 net.cpp:150] Setting up drop6
I0419 16:24:39.187098  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.187101  4506 net.cpp:165] Memory required for data: 504260952
I0419 16:24:39.187105  4506 layer_factory.hpp:77] Creating layer fc7
I0419 16:24:39.187116  4506 net.cpp:106] Creating Layer fc7
I0419 16:24:39.187124  4506 net.cpp:454] fc7 <- fc6
I0419 16:24:39.187132  4506 net.cpp:411] fc7 -> fc7
I0419 16:24:39.230610  4506 net.cpp:150] Setting up fc7
I0419 16:24:39.230648  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.230653  4506 net.cpp:165] Memory required for data: 504277336
I0419 16:24:39.230665  4506 layer_factory.hpp:77] Creating layer relu7
I0419 16:24:39.230682  4506 net.cpp:106] Creating Layer relu7
I0419 16:24:39.230690  4506 net.cpp:454] relu7 <- fc7
I0419 16:24:39.230705  4506 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:24:39.230717  4506 net.cpp:150] Setting up relu7
I0419 16:24:39.230726  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.230729  4506 net.cpp:165] Memory required for data: 504293720
I0419 16:24:39.230738  4506 layer_factory.hpp:77] Creating layer drop7
I0419 16:24:39.230751  4506 net.cpp:106] Creating Layer drop7
I0419 16:24:39.230761  4506 net.cpp:454] drop7 <- fc7
I0419 16:24:39.230767  4506 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:24:39.230799  4506 net.cpp:150] Setting up drop7
I0419 16:24:39.230814  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.230818  4506 net.cpp:165] Memory required for data: 504310104
I0419 16:24:39.230823  4506 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:24:39.230832  4506 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:24:39.230837  4506 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:24:39.230847  4506 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:24:39.230859  4506 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:24:39.230901  4506 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:24:39.230912  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.230918  4506 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:24:39.230922  4506 net.cpp:165] Memory required for data: 504342872
I0419 16:24:39.230927  4506 layer_factory.hpp:77] Creating layer cls_score
I0419 16:24:39.230939  4506 net.cpp:106] Creating Layer cls_score
I0419 16:24:39.230943  4506 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:24:39.230952  4506 net.cpp:411] cls_score -> cls_score
I0419 16:24:39.236498  4506 net.cpp:150] Setting up cls_score
I0419 16:24:39.236516  4506 net.cpp:157] Top shape: 1 44 (44)
I0419 16:24:39.236521  4506 net.cpp:165] Memory required for data: 504343048
I0419 16:24:39.236531  4506 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:24:39.236541  4506 net.cpp:106] Creating Layer bbox_pred
I0419 16:24:39.236546  4506 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:24:39.236555  4506 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:24:39.257154  4506 net.cpp:150] Setting up bbox_pred
I0419 16:24:39.257174  4506 net.cpp:157] Top shape: 1 176 (176)
I0419 16:24:39.257179  4506 net.cpp:165] Memory required for data: 504343752
I0419 16:24:39.257203  4506 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:24:39.257220  4506 net.cpp:106] Creating Layer loss_cls
I0419 16:24:39.257227  4506 net.cpp:454] loss_cls <- cls_score
I0419 16:24:39.257235  4506 net.cpp:454] loss_cls <- labels
I0419 16:24:39.257246  4506 net.cpp:411] loss_cls -> cls_loss
I0419 16:24:39.257264  4506 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:24:39.257369  4506 net.cpp:150] Setting up loss_cls
I0419 16:24:39.257380  4506 net.cpp:157] Top shape: (1)
I0419 16:24:39.257385  4506 net.cpp:160]     with loss weight 1
I0419 16:24:39.257405  4506 net.cpp:165] Memory required for data: 504343756
I0419 16:24:39.257410  4506 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:24:39.257421  4506 net.cpp:106] Creating Layer loss_bbox
I0419 16:24:39.257431  4506 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:24:39.257438  4506 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:24:39.257443  4506 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:24:39.257448  4506 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:24:39.257458  4506 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:24:39.257545  4506 net.cpp:150] Setting up loss_bbox
I0419 16:24:39.257557  4506 net.cpp:157] Top shape: (1)
I0419 16:24:39.257562  4506 net.cpp:160]     with loss weight 1
I0419 16:24:39.257570  4506 net.cpp:165] Memory required for data: 504343760
I0419 16:24:39.257573  4506 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:24:39.257591  4506 net.cpp:106] Creating Layer rpn_conv1
I0419 16:24:39.257601  4506 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:24:39.257613  4506 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:24:39.274636  4506 net.cpp:150] Setting up rpn_conv1
I0419 16:24:39.274655  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.274660  4506 net.cpp:165] Memory required for data: 509455568
I0419 16:24:39.274669  4506 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:24:39.274678  4506 net.cpp:106] Creating Layer rpn_relu1
I0419 16:24:39.274684  4506 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:24:39.274690  4506 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:24:39.274704  4506 net.cpp:150] Setting up rpn_relu1
I0419 16:24:39.274713  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.274718  4506 net.cpp:165] Memory required for data: 514567376
I0419 16:24:39.274724  4506 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:24:39.274739  4506 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:24:39.274744  4506 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:24:39.274751  4506 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:24:39.274763  4506 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:24:39.274807  4506 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:24:39.274819  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.274826  4506 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:24:39.274829  4506 net.cpp:165] Memory required for data: 524790992
I0419 16:24:39.274833  4506 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:24:39.274849  4506 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:24:39.274855  4506 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:24:39.274863  4506 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:24:39.275197  4506 net.cpp:150] Setting up rpn_cls_score
I0419 16:24:39.275213  4506 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:24:39.275216  4506 net.cpp:165] Memory required for data: 525150416
I0419 16:24:39.275225  4506 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:24:39.275248  4506 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:24:39.275259  4506 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:24:39.275271  4506 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:24:39.275725  4506 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:24:39.275739  4506 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:24:39.275744  4506 net.cpp:165] Memory required for data: 525869264
I0419 16:24:39.275753  4506 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:24:39.275768  4506 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:24:39.275779  4506 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:24:39.275787  4506 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:24:39.275791  4506 net.cpp:165] Memory required for data: 525869264
I0419 16:24:39.275796  4506 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:24:39.275804  4506 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:24:39.275809  4506 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:24:39.275813  4506 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:24:39.275817  4506 net.cpp:165] Memory required for data: 525869264
I0419 16:24:39.275825  4506 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:24:39.275830  4506 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:24:39.275835  4506 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:24:39.275840  4506 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:24:39.275846  4506 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:24:39.275851  4506 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:24:39.275856  4506 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:24:39.275861  4506 net.cpp:226] loss_bbox needs backward computation.
I0419 16:24:39.275871  4506 net.cpp:226] loss_cls needs backward computation.
I0419 16:24:39.275878  4506 net.cpp:226] bbox_pred needs backward computation.
I0419 16:24:39.275883  4506 net.cpp:226] cls_score needs backward computation.
I0419 16:24:39.275888  4506 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:24:39.275893  4506 net.cpp:226] drop7 needs backward computation.
I0419 16:24:39.275898  4506 net.cpp:226] relu7 needs backward computation.
I0419 16:24:39.275903  4506 net.cpp:226] fc7 needs backward computation.
I0419 16:24:39.275909  4506 net.cpp:226] drop6 needs backward computation.
I0419 16:24:39.275914  4506 net.cpp:226] relu6 needs backward computation.
I0419 16:24:39.275919  4506 net.cpp:226] fc6 needs backward computation.
I0419 16:24:39.275925  4506 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:24:39.275933  4506 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:24:39.275939  4506 net.cpp:228] relu5 does not need backward computation.
I0419 16:24:39.275945  4506 net.cpp:228] conv5 does not need backward computation.
I0419 16:24:39.275951  4506 net.cpp:228] relu4 does not need backward computation.
I0419 16:24:39.275957  4506 net.cpp:228] conv4 does not need backward computation.
I0419 16:24:39.275962  4506 net.cpp:228] relu3 does not need backward computation.
I0419 16:24:39.275969  4506 net.cpp:228] conv3 does not need backward computation.
I0419 16:24:39.275974  4506 net.cpp:228] pool2 does not need backward computation.
I0419 16:24:39.275980  4506 net.cpp:228] norm2 does not need backward computation.
I0419 16:24:39.275985  4506 net.cpp:228] relu2 does not need backward computation.
I0419 16:24:39.275990  4506 net.cpp:228] conv2 does not need backward computation.
I0419 16:24:39.275995  4506 net.cpp:228] pool1 does not need backward computation.
I0419 16:24:39.276000  4506 net.cpp:228] norm1 does not need backward computation.
I0419 16:24:39.276005  4506 net.cpp:228] relu1 does not need backward computation.
I0419 16:24:39.276010  4506 net.cpp:228] conv1 does not need backward computation.
I0419 16:24:39.276018  4506 net.cpp:228] data does not need backward computation.
I0419 16:24:39.276022  4506 net.cpp:270] This network produces output bbox_loss
I0419 16:24:39.276027  4506 net.cpp:270] This network produces output cls_loss
I0419 16:24:39.276062  4506 net.cpp:283] Network initialization done.
I0419 16:24:39.276207  4506 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
I0419 16:24:39.710279  4506 net.cpp:816] Ignoring source layer input-data
I0419 16:24:39.710312  4506 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:24:39.713837  4506 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:24:39.713860  4506 net.cpp:816] Ignoring source layer rpn_cls_score_reshape
I0419 16:24:39.713863  4506 net.cpp:816] Ignoring source layer rpn-data
I0419 16:24:39.713866  4506 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:24:39.713868  4506 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:24:39.713871  4506 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:24:39.757897  4506 net.cpp:816] Ignoring source layer silence_fc7
Solving...
I0419 16:24:40.091414  4506 solver.cpp:229] Iteration 0, loss = 1.21757
I0419 16:24:40.091464  4506 solver.cpp:245]     Train net output #0: bbox_loss = 0.0242392 (* 1 = 0.0242392 loss)
I0419 16:24:40.091472  4506 solver.cpp:245]     Train net output #1: cls_loss = 1.19333 (* 1 = 1.19333 loss)
I0419 16:24:40.091488  4506 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:24:44.673884  4506 solver.cpp:229] Iteration 20, loss = 0.241161
I0419 16:24:44.673928  4506 solver.cpp:245]     Train net output #0: bbox_loss = 0.0410683 (* 1 = 0.0410683 loss)
I0419 16:24:44.673933  4506 solver.cpp:245]     Train net output #1: cls_loss = 0.200093 (* 1 = 0.200093 loss)
I0419 16:24:44.673940  4506 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:24:49.201514  4506 solver.cpp:229] Iteration 40, loss = 0.222941
I0419 16:24:49.201558  4506 solver.cpp:245]     Train net output #0: bbox_loss = 0.00227355 (* 1 = 0.00227355 loss)
I0419 16:24:49.201565  4506 solver.cpp:245]     Train net output #1: cls_loss = 0.220667 (* 1 = 0.220667 loss)
I0419 16:24:49.201572  4506 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:24:53.709452  4506 solver.cpp:229] Iteration 60, loss = nan
I0419 16:24:53.709492  4506 solver.cpp:245]     Train net output #0: bbox_loss = nan (* 1 = nan loss)
I0419 16:24:53.709501  4506 solver.cpp:245]     Train net output #1: cls_loss = 0.176247 (* 1 = 0.176247 loss)
I0419 16:24:53.709507  4506 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:24:58.216214  4506 solver.cpp:229] Iteration 80, loss = 0.143793
I0419 16:24:58.216261  4506 solver.cpp:245]     Train net output #0: bbox_loss = 0.0193062 (* 1 = 0.0193062 loss)
I0419 16:24:58.216269  4506 solver.cpp:245]     Train net output #1: cls_loss = 0.124486 (* 1 = 0.124486 loss)
I0419 16:24:58.216274  4506 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel
done solving
cp /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel -> /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel
Final model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel

real	5m16.446s
user	4m23.978s
sys	0m52.138s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt --net /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(caffemodel='/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', comp_mode=False, gpu_id=0, imdb_name='voc_2007_test', max_per_image=100, prototxt='models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:25:06.728855  4530 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 1360
  dim: 800
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 44
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 176
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0419 16:25:06.729050  4530 net.cpp:413] Input 0 -> data
I0419 16:25:06.744225  4530 net.cpp:413] Input 1 -> im_info
I0419 16:25:06.744287  4530 layer_factory.hpp:77] Creating layer conv1
I0419 16:25:06.744315  4530 net.cpp:106] Creating Layer conv1
I0419 16:25:06.744326  4530 net.cpp:454] conv1 <- data
I0419 16:25:06.744340  4530 net.cpp:411] conv1 -> conv1
I0419 16:25:06.745800  4530 net.cpp:150] Setting up conv1
I0419 16:25:06.745820  4530 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:25:06.745823  4530 net.cpp:165] Memory required for data: 104448000
I0419 16:25:06.745837  4530 layer_factory.hpp:77] Creating layer relu1
I0419 16:25:06.745849  4530 net.cpp:106] Creating Layer relu1
I0419 16:25:06.745858  4530 net.cpp:454] relu1 <- conv1
I0419 16:25:06.745868  4530 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:25:06.745887  4530 net.cpp:150] Setting up relu1
I0419 16:25:06.745914  4530 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:25:06.745923  4530 net.cpp:165] Memory required for data: 208896000
I0419 16:25:06.745929  4530 layer_factory.hpp:77] Creating layer norm1
I0419 16:25:06.745939  4530 net.cpp:106] Creating Layer norm1
I0419 16:25:06.745944  4530 net.cpp:454] norm1 <- conv1
I0419 16:25:06.745955  4530 net.cpp:411] norm1 -> norm1
I0419 16:25:06.746073  4530 net.cpp:150] Setting up norm1
I0419 16:25:06.746088  4530 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:25:06.746093  4530 net.cpp:165] Memory required for data: 313344000
I0419 16:25:06.746098  4530 layer_factory.hpp:77] Creating layer pool1
I0419 16:25:06.746109  4530 net.cpp:106] Creating Layer pool1
I0419 16:25:06.746117  4530 net.cpp:454] pool1 <- norm1
I0419 16:25:06.746125  4530 net.cpp:411] pool1 -> pool1
I0419 16:25:06.746168  4530 net.cpp:150] Setting up pool1
I0419 16:25:06.746181  4530 net.cpp:157] Top shape: 1 96 341 201 (6579936)
I0419 16:25:06.746184  4530 net.cpp:165] Memory required for data: 339663744
I0419 16:25:06.746189  4530 layer_factory.hpp:77] Creating layer conv2
I0419 16:25:06.746199  4530 net.cpp:106] Creating Layer conv2
I0419 16:25:06.746206  4530 net.cpp:454] conv2 <- pool1
I0419 16:25:06.746214  4530 net.cpp:411] conv2 -> conv2
I0419 16:25:06.748412  4530 net.cpp:150] Setting up conv2
I0419 16:25:06.748431  4530 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:25:06.748437  4530 net.cpp:165] Memory required for data: 357349248
I0419 16:25:06.748450  4530 layer_factory.hpp:77] Creating layer relu2
I0419 16:25:06.748462  4530 net.cpp:106] Creating Layer relu2
I0419 16:25:06.748471  4530 net.cpp:454] relu2 <- conv2
I0419 16:25:06.748479  4530 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:25:06.748488  4530 net.cpp:150] Setting up relu2
I0419 16:25:06.748499  4530 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:25:06.748504  4530 net.cpp:165] Memory required for data: 375034752
I0419 16:25:06.748508  4530 layer_factory.hpp:77] Creating layer norm2
I0419 16:25:06.748517  4530 net.cpp:106] Creating Layer norm2
I0419 16:25:06.748535  4530 net.cpp:454] norm2 <- conv2
I0419 16:25:06.748559  4530 net.cpp:411] norm2 -> norm2
I0419 16:25:06.748673  4530 net.cpp:150] Setting up norm2
I0419 16:25:06.748687  4530 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:25:06.748689  4530 net.cpp:165] Memory required for data: 392720256
I0419 16:25:06.748692  4530 layer_factory.hpp:77] Creating layer pool2
I0419 16:25:06.748699  4530 net.cpp:106] Creating Layer pool2
I0419 16:25:06.748709  4530 net.cpp:454] pool2 <- norm2
I0419 16:25:06.748718  4530 net.cpp:411] pool2 -> pool2
I0419 16:25:06.748769  4530 net.cpp:150] Setting up pool2
I0419 16:25:06.748782  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.748785  4530 net.cpp:165] Memory required for data: 397211520
I0419 16:25:06.748788  4530 layer_factory.hpp:77] Creating layer conv3
I0419 16:25:06.748800  4530 net.cpp:106] Creating Layer conv3
I0419 16:25:06.748809  4530 net.cpp:454] conv3 <- pool2
I0419 16:25:06.748819  4530 net.cpp:411] conv3 -> conv3
I0419 16:25:06.751619  4530 net.cpp:150] Setting up conv3
I0419 16:25:06.751637  4530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:25:06.751641  4530 net.cpp:165] Memory required for data: 403948416
I0419 16:25:06.751654  4530 layer_factory.hpp:77] Creating layer relu3
I0419 16:25:06.751669  4530 net.cpp:106] Creating Layer relu3
I0419 16:25:06.751675  4530 net.cpp:454] relu3 <- conv3
I0419 16:25:06.751689  4530 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:25:06.751698  4530 net.cpp:150] Setting up relu3
I0419 16:25:06.751708  4530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:25:06.751711  4530 net.cpp:165] Memory required for data: 410685312
I0419 16:25:06.751716  4530 layer_factory.hpp:77] Creating layer conv4
I0419 16:25:06.751727  4530 net.cpp:106] Creating Layer conv4
I0419 16:25:06.751732  4530 net.cpp:454] conv4 <- conv3
I0419 16:25:06.751739  4530 net.cpp:411] conv4 -> conv4
I0419 16:25:06.755038  4530 net.cpp:150] Setting up conv4
I0419 16:25:06.755054  4530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:25:06.755058  4530 net.cpp:165] Memory required for data: 417422208
I0419 16:25:06.755065  4530 layer_factory.hpp:77] Creating layer relu4
I0419 16:25:06.755074  4530 net.cpp:106] Creating Layer relu4
I0419 16:25:06.755085  4530 net.cpp:454] relu4 <- conv4
I0419 16:25:06.755096  4530 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:25:06.755111  4530 net.cpp:150] Setting up relu4
I0419 16:25:06.755120  4530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:25:06.755123  4530 net.cpp:165] Memory required for data: 424159104
I0419 16:25:06.755133  4530 layer_factory.hpp:77] Creating layer conv5
I0419 16:25:06.755142  4530 net.cpp:106] Creating Layer conv5
I0419 16:25:06.755153  4530 net.cpp:454] conv5 <- conv4
I0419 16:25:06.755163  4530 net.cpp:411] conv5 -> conv5
I0419 16:25:06.757447  4530 net.cpp:150] Setting up conv5
I0419 16:25:06.757465  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.757468  4530 net.cpp:165] Memory required for data: 428650368
I0419 16:25:06.757485  4530 layer_factory.hpp:77] Creating layer relu5
I0419 16:25:06.757500  4530 net.cpp:106] Creating Layer relu5
I0419 16:25:06.757505  4530 net.cpp:454] relu5 <- conv5
I0419 16:25:06.757522  4530 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:25:06.757534  4530 net.cpp:150] Setting up relu5
I0419 16:25:06.757540  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.757546  4530 net.cpp:165] Memory required for data: 433141632
I0419 16:25:06.757552  4530 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:25:06.757562  4530 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:25:06.757573  4530 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:25:06.757580  4530 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:25:06.757586  4530 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:25:06.757633  4530 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:25:06.757645  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.757649  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.757652  4530 net.cpp:165] Memory required for data: 442124160
I0419 16:25:06.757657  4530 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:25:06.757674  4530 net.cpp:106] Creating Layer rpn_conv1
I0419 16:25:06.757685  4530 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_0
I0419 16:25:06.757694  4530 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:25:06.759335  4530 net.cpp:150] Setting up rpn_conv1
I0419 16:25:06.759351  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.759354  4530 net.cpp:165] Memory required for data: 446615424
I0419 16:25:06.759362  4530 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:25:06.759378  4530 net.cpp:106] Creating Layer rpn_relu1
I0419 16:25:06.759390  4530 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:25:06.759402  4530 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:25:06.759416  4530 net.cpp:150] Setting up rpn_relu1
I0419 16:25:06.759424  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.759428  4530 net.cpp:165] Memory required for data: 451106688
I0419 16:25:06.759433  4530 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:25:06.759441  4530 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:25:06.759452  4530 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:25:06.759459  4530 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:25:06.759469  4530 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:25:06.759519  4530 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:25:06.759536  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.759541  4530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:25:06.759544  4530 net.cpp:165] Memory required for data: 460089216
I0419 16:25:06.759548  4530 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:25:06.759560  4530 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:25:06.759572  4530 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:25:06.759579  4530 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:25:06.759783  4530 net.cpp:150] Setting up rpn_cls_score
I0419 16:25:06.759794  4530 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:25:06.759798  4530 net.cpp:165] Memory required for data: 460405008
I0419 16:25:06.759804  4530 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:25:06.759815  4530 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:25:06.759826  4530 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:25:06.759838  4530 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:25:06.760057  4530 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:25:06.760069  4530 net.cpp:157] Top shape: 1 36 86 51 (157896)
I0419 16:25:06.760072  4530 net.cpp:165] Memory required for data: 461036592
I0419 16:25:06.760079  4530 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:25:06.760090  4530 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:25:06.760102  4530 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:25:06.760113  4530 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:25:06.760156  4530 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:25:06.760170  4530 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:25:06.760174  4530 net.cpp:165] Memory required for data: 461352384
I0419 16:25:06.760176  4530 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:25:06.760185  4530 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:25:06.760196  4530 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:25:06.760203  4530 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:25:06.760283  4530 net.cpp:150] Setting up rpn_cls_prob
I0419 16:25:06.760294  4530 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:25:06.760298  4530 net.cpp:165] Memory required for data: 461668176
I0419 16:25:06.760300  4530 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:25:06.760309  4530 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:25:06.760319  4530 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:25:06.760336  4530 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:25:06.760370  4530 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:25:06.760383  4530 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:25:06.760388  4530 net.cpp:165] Memory required for data: 461983968
I0419 16:25:06.760392  4530 layer_factory.hpp:77] Creating layer proposal
I0419 16:25:06.760851  4530 net.cpp:106] Creating Layer proposal
I0419 16:25:06.760869  4530 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:25:06.760874  4530 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:25:06.760879  4530 net.cpp:454] proposal <- im_info
I0419 16:25:06.760893  4530 net.cpp:411] proposal -> rois
I0419 16:25:06.761569  4530 net.cpp:150] Setting up proposal
I0419 16:25:06.761590  4530 net.cpp:157] Top shape: 1 5 (5)
I0419 16:25:06.761593  4530 net.cpp:165] Memory required for data: 461983988
I0419 16:25:06.761597  4530 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:25:06.761610  4530 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:25:06.761620  4530 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0419 16:25:06.761628  4530 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:25:06.761644  4530 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:25:06.761657  4530 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:25:06.761721  4530 net.cpp:150] Setting up roi_pool_conv5
I0419 16:25:06.761737  4530 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:25:06.761740  4530 net.cpp:165] Memory required for data: 462020852
I0419 16:25:06.761744  4530 layer_factory.hpp:77] Creating layer fc6
I0419 16:25:06.761754  4530 net.cpp:106] Creating Layer fc6
I0419 16:25:06.761765  4530 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:25:06.761773  4530 net.cpp:411] fc6 -> fc6
I0419 16:25:06.860450  4530 net.cpp:150] Setting up fc6
I0419 16:25:06.860489  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.860492  4530 net.cpp:165] Memory required for data: 462037236
I0419 16:25:06.860510  4530 layer_factory.hpp:77] Creating layer relu6
I0419 16:25:06.860527  4530 net.cpp:106] Creating Layer relu6
I0419 16:25:06.860532  4530 net.cpp:454] relu6 <- fc6
I0419 16:25:06.860540  4530 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:25:06.860555  4530 net.cpp:150] Setting up relu6
I0419 16:25:06.860568  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.860571  4530 net.cpp:165] Memory required for data: 462053620
I0419 16:25:06.860581  4530 layer_factory.hpp:77] Creating layer drop6
I0419 16:25:06.860595  4530 net.cpp:106] Creating Layer drop6
I0419 16:25:06.860606  4530 net.cpp:454] drop6 <- fc6
I0419 16:25:06.860617  4530 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:25:06.860656  4530 net.cpp:150] Setting up drop6
I0419 16:25:06.860666  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.860668  4530 net.cpp:165] Memory required for data: 462070004
I0419 16:25:06.860671  4530 layer_factory.hpp:77] Creating layer fc7
I0419 16:25:06.860683  4530 net.cpp:106] Creating Layer fc7
I0419 16:25:06.860693  4530 net.cpp:454] fc7 <- fc6
I0419 16:25:06.860700  4530 net.cpp:411] fc7 -> fc7
I0419 16:25:06.903934  4530 net.cpp:150] Setting up fc7
I0419 16:25:06.903975  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.903978  4530 net.cpp:165] Memory required for data: 462086388
I0419 16:25:06.903990  4530 layer_factory.hpp:77] Creating layer relu7
I0419 16:25:06.904002  4530 net.cpp:106] Creating Layer relu7
I0419 16:25:06.904012  4530 net.cpp:454] relu7 <- fc7
I0419 16:25:06.904021  4530 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:25:06.904038  4530 net.cpp:150] Setting up relu7
I0419 16:25:06.904049  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.904053  4530 net.cpp:165] Memory required for data: 462102772
I0419 16:25:06.904058  4530 layer_factory.hpp:77] Creating layer drop7
I0419 16:25:06.904073  4530 net.cpp:106] Creating Layer drop7
I0419 16:25:06.904085  4530 net.cpp:454] drop7 <- fc7
I0419 16:25:06.904091  4530 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:25:06.904129  4530 net.cpp:150] Setting up drop7
I0419 16:25:06.904142  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.904146  4530 net.cpp:165] Memory required for data: 462119156
I0419 16:25:06.904151  4530 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:25:06.904160  4530 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:25:06.904170  4530 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:25:06.904181  4530 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:25:06.904196  4530 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:25:06.904244  4530 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:25:06.904254  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.904258  4530 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:25:06.904260  4530 net.cpp:165] Memory required for data: 462151924
I0419 16:25:06.904264  4530 layer_factory.hpp:77] Creating layer cls_score
I0419 16:25:06.904284  4530 net.cpp:106] Creating Layer cls_score
I0419 16:25:06.904295  4530 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:25:06.904304  4530 net.cpp:411] cls_score -> cls_score
I0419 16:25:06.905146  4530 net.cpp:150] Setting up cls_score
I0419 16:25:06.905163  4530 net.cpp:157] Top shape: 1 44 (44)
I0419 16:25:06.905165  4530 net.cpp:165] Memory required for data: 462152100
I0419 16:25:06.905174  4530 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:25:06.905190  4530 net.cpp:106] Creating Layer bbox_pred
I0419 16:25:06.905196  4530 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:25:06.905203  4530 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:25:06.907032  4530 net.cpp:150] Setting up bbox_pred
I0419 16:25:06.907048  4530 net.cpp:157] Top shape: 1 176 (176)
I0419 16:25:06.907052  4530 net.cpp:165] Memory required for data: 462152804
I0419 16:25:06.907059  4530 layer_factory.hpp:77] Creating layer cls_prob
I0419 16:25:06.907075  4530 net.cpp:106] Creating Layer cls_prob
I0419 16:25:06.907081  4530 net.cpp:454] cls_prob <- cls_score
I0419 16:25:06.907091  4530 net.cpp:411] cls_prob -> cls_prob
I0419 16:25:06.907171  4530 net.cpp:150] Setting up cls_prob
I0419 16:25:06.907182  4530 net.cpp:157] Top shape: 1 44 (44)
I0419 16:25:06.907186  4530 net.cpp:165] Memory required for data: 462152980
I0419 16:25:06.907188  4530 net.cpp:228] cls_prob does not need backward computation.
I0419 16:25:06.907192  4530 net.cpp:228] bbox_pred does not need backward computation.
I0419 16:25:06.907198  4530 net.cpp:228] cls_score does not need backward computation.
I0419 16:25:06.907203  4530 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0419 16:25:06.907209  4530 net.cpp:228] drop7 does not need backward computation.
I0419 16:25:06.907213  4530 net.cpp:228] relu7 does not need backward computation.
I0419 16:25:06.907222  4530 net.cpp:228] fc7 does not need backward computation.
I0419 16:25:06.907225  4530 net.cpp:228] drop6 does not need backward computation.
I0419 16:25:06.907232  4530 net.cpp:228] relu6 does not need backward computation.
I0419 16:25:06.907236  4530 net.cpp:228] fc6 does not need backward computation.
I0419 16:25:06.907241  4530 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:25:06.907250  4530 net.cpp:228] proposal does not need backward computation.
I0419 16:25:06.907258  4530 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:25:06.907264  4530 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:25:06.907269  4530 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:25:06.907274  4530 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:25:06.907279  4530 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:25:06.907286  4530 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:25:06.907291  4530 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:25:06.907296  4530 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:25:06.907304  4530 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:25:06.907308  4530 net.cpp:228] relu5 does not need backward computation.
I0419 16:25:06.907315  4530 net.cpp:228] conv5 does not need backward computation.
I0419 16:25:06.907320  4530 net.cpp:228] relu4 does not need backward computation.
I0419 16:25:06.907325  4530 net.cpp:228] conv4 does not need backward computation.
I0419 16:25:06.907331  4530 net.cpp:228] relu3 does not need backward computation.
I0419 16:25:06.907335  4530 net.cpp:228] conv3 does not need backward computation.
I0419 16:25:06.907343  4530 net.cpp:228] pool2 does not need backward computation.
I0419 16:25:06.907354  4530 net.cpp:228] norm2 does not need backward computation.
I0419 16:25:06.907359  4530 net.cpp:228] relu2 does not need backward computation.
I0419 16:25:06.907363  4530 net.cpp:228] conv2 does not need backward computation.
I0419 16:25:06.907368  4530 net.cpp:228] pool1 does not need backward computation.
I0419 16:25:06.907373  4530 net.cpp:228] norm1 does not need backward computation.
I0419 16:25:06.907382  4530 net.cpp:228] relu1 does not need backward computation.
I0419 16:25:06.907385  4530 net.cpp:228] conv1 does not need backward computation.
I0419 16:25:06.907389  4530 net.cpp:270] This network produces output bbox_pred
I0419 16:25:06.907397  4530 net.cpp:270] This network produces output cls_prob
I0419 16:25:06.907435  4530 net.cpp:283] Network initialization done.
I0419 16:25:07.343670  4530 net.cpp:816] Ignoring source layer data
I0419 16:25:07.390974  4530 net.cpp:816] Ignoring source layer loss_cls
I0419 16:25:07.391001  4530 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:25:07.391523  4530 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:25:07.391535  4530 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
im_detect: 1/50 0.141s 0.001s
im_detect: 2/50 0.119s 0.001s
im_detect: 3/50 0.112s 0.001s
im_detect: 4/50 0.108s 0.001s
im_detect: 5/50 0.106s 0.001s
im_detect: 6/50 0.104s 0.001s
im_detect: 7/50 0.103s 0.001s
im_detect: 8/50 0.102s 0.001s
im_detect: 9/50 0.101s 0.001s
im_detect: 10/50 0.101s 0.001s
im_detect: 11/50 0.101s 0.001s
im_detect: 12/50 0.100s 0.001s
im_detect: 13/50 0.100s 0.001s
im_detect: 14/50 0.100s 0.001s
im_detect: 15/50 0.100s 0.001s
im_detect: 16/50 0.100s 0.001s
im_detect: 17/50 0.100s 0.001s
im_detect: 18/50 0.100s 0.001s
im_detect: 19/50 0.100s 0.001s
im_detect: 20/50 0.100s 0.001s
im_detect: 21/50 0.100s 0.001s
im_detect: 22/50 0.100s 0.001s
im_detect: 23/50 0.100s 0.001s
im_detect: 24/50 0.100s 0.001s
im_detect: 25/50 0.100s 0.001s
im_detect: 26/50 0.100s 0.001s
im_detect: 27/50 0.100s 0.001s
im_detect: 28/50 0.101s 0.001s
im_detect: 29/50 0.101s 0.001s
im_detect: 30/50 0.101s 0.001s
im_detect: 31/50 0.101s 0.001s
im_detect: 32/50 0.101s 0.001s
im_detect: 33/50 0.101s 0.001s
im_detect: 34/50 0.101s 0.001s
im_detect: 35/50 0.101s 0.001s
im_detect: 36/50 0.101s 0.001s
im_detect: 37/50 0.101s 0.001s
im_detect: 38/50 0.101s 0.001s
im_detect: 39/50 0.101s 0.001s
im_detect: 40/50 0.101s 0.001s
im_detect: 41/50 0.101s 0.001s
im_detect: 42/50 0.101s 0.001s
im_detect: 43/50 0.101s 0.001s
im_detect: 44/50 0.101s 0.001s
im_detect: 45/50 0.101s 0.001s
im_detect: 46/50 0.102s 0.001s
im_detect: 47/50 0.102s 0.001s
im_detect: 48/50 0.102s 0.001s
im_detect: 49/50 0.102s 0.001s
im_detect: 50/50 0.102s 0.001s
Evaluating detections
Writing speedlimit-20 VOC results file
Writing speedlimit-30 VOC results file
Writing speedlimit-50 VOC results file
Writing speedlimit-60 VOC results file
Writing speedlimit-70 VOC results file
Writing speedlimit-80 VOC results file
Writing restrict-end-80 VOC results file
Writing speedlimit-100 VOC results file
Writing speedlimit-120 VOC results file
Writing no-overtake VOC results file
Writing no-overtake-truck VOC results file
Writing priority-next-intersect VOC results file
Writing priority-road VOC results file
Writing giveaway VOC results file
Writing stop VOC results file
Writing no-traffic-bothways VOC results file
Writing no-truck VOC results file
Writing no-entry VOC results file
Writing danger VOC results file
Writing bend-left VOC results file
Writing bend-right VOC results file
Writing bend VOC results file
Writing uneven-road VOC results file
Writing slippery-road VOC results file
Writing road-narrow VOC results file
Writing construction VOC results file
Writing traffic-signal VOC results file
Writing pedestrian-crossing VOC results file
Writing school-crossing VOC results file
Writing cycle-crossing VOC results file
Writing snow VOC results file
Writing animals VOC results file
Writing restriction-ends VOC results file
Writing go-right VOC results file
Writing go-left VOC results file
Writing go-straight VOC results file
Writing go-right-straight VOC results file
Writing go-left-straight VOC results file
Writing keep-right VOC results file
Writing keep-left VOC results file
Writing roundabout VOC results file
Writing restrict-ends-overtaking VOC results file
Writing restrict-ends-overtaking-truck VOC results file
VOC07 metric? Yes
Traceback (most recent call last):
  File "./tools/test_net.py", line 90, in <module>
    test_net(net, imdb, max_per_image=args.max_per_image, vis=args.vis)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/test.py", line 295, in test_net
    imdb.evaluate_detections(all_boxes, output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 326, in evaluate_detections
    self._do_python_eval(output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 289, in _do_python_eval
    use_07_metric=use_07_metric)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/voc_eval.py", line 109, in voc_eval
    recs[imagename] = parse_rec(annopath.format(imagename))
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/voc_eval.py", line 19, in parse_rec
    obj_struct['pose'] = obj.find('pose').text
AttributeError: 'NoneType' object has no attribute 'text'
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-28-41
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-28-41
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-28-41
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-28-41
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:28:45.180217  4589 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:28:45.180277  4589 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 16:28:45.181025  4589 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:28:45.181205  4589 layer_factory.hpp:77] Creating layer input-data
I0419 16:28:45.181859  4589 net.cpp:106] Creating Layer input-data
I0419 16:28:45.181884  4589 net.cpp:411] input-data -> data
I0419 16:28:45.181906  4589 net.cpp:411] input-data -> im_info
I0419 16:28:45.181921  4589 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:28:45.197876  4589 net.cpp:150] Setting up input-data
I0419 16:28:45.197901  4589 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:28:45.197911  4589 net.cpp:157] Top shape: 1 3 (3)
I0419 16:28:45.197916  4589 net.cpp:157] Top shape: 1 4 (4)
I0419 16:28:45.197923  4589 net.cpp:165] Memory required for data: 7200028
I0419 16:28:45.197931  4589 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:28:45.197945  4589 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:28:45.197955  4589 net.cpp:454] data_input-data_0_split <- data
I0419 16:28:45.197968  4589 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:28:45.197983  4589 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:28:45.198022  4589 net.cpp:150] Setting up data_input-data_0_split
I0419 16:28:45.198035  4589 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:28:45.198041  4589 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:28:45.198045  4589 net.cpp:165] Memory required for data: 21600028
I0419 16:28:45.198051  4589 layer_factory.hpp:77] Creating layer conv1
I0419 16:28:45.198067  4589 net.cpp:106] Creating Layer conv1
I0419 16:28:45.198074  4589 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:28:45.198082  4589 net.cpp:411] conv1 -> conv1
I0419 16:28:45.199436  4589 net.cpp:150] Setting up conv1
I0419 16:28:45.199456  4589 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:28:45.199461  4589 net.cpp:165] Memory required for data: 79200028
I0419 16:28:45.199481  4589 layer_factory.hpp:77] Creating layer relu1
I0419 16:28:45.199499  4589 net.cpp:106] Creating Layer relu1
I0419 16:28:45.199506  4589 net.cpp:454] relu1 <- conv1
I0419 16:28:45.199517  4589 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:28:45.199534  4589 net.cpp:150] Setting up relu1
I0419 16:28:45.199542  4589 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:28:45.199548  4589 net.cpp:165] Memory required for data: 136800028
I0419 16:28:45.199553  4589 layer_factory.hpp:77] Creating layer norm1
I0419 16:28:45.199564  4589 net.cpp:106] Creating Layer norm1
I0419 16:28:45.199573  4589 net.cpp:454] norm1 <- conv1
I0419 16:28:45.199579  4589 net.cpp:411] norm1 -> norm1
I0419 16:28:45.199694  4589 net.cpp:150] Setting up norm1
I0419 16:28:45.199707  4589 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:28:45.199712  4589 net.cpp:165] Memory required for data: 194400028
I0419 16:28:45.199717  4589 layer_factory.hpp:77] Creating layer pool1
I0419 16:28:45.199723  4589 net.cpp:106] Creating Layer pool1
I0419 16:28:45.199733  4589 net.cpp:454] pool1 <- norm1
I0419 16:28:45.199739  4589 net.cpp:411] pool1 -> pool1
I0419 16:28:45.199779  4589 net.cpp:150] Setting up pool1
I0419 16:28:45.199790  4589 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:28:45.199795  4589 net.cpp:165] Memory required for data: 208954012
I0419 16:28:45.199798  4589 layer_factory.hpp:77] Creating layer conv2
I0419 16:28:45.199811  4589 net.cpp:106] Creating Layer conv2
I0419 16:28:45.199820  4589 net.cpp:454] conv2 <- pool1
I0419 16:28:45.199828  4589 net.cpp:411] conv2 -> conv2
I0419 16:28:45.201498  4589 net.cpp:150] Setting up conv2
I0419 16:28:45.201519  4589 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:28:45.201524  4589 net.cpp:165] Memory required for data: 218759836
I0419 16:28:45.201535  4589 layer_factory.hpp:77] Creating layer relu2
I0419 16:28:45.201545  4589 net.cpp:106] Creating Layer relu2
I0419 16:28:45.201552  4589 net.cpp:454] relu2 <- conv2
I0419 16:28:45.201560  4589 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:28:45.201570  4589 net.cpp:150] Setting up relu2
I0419 16:28:45.201576  4589 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:28:45.201581  4589 net.cpp:165] Memory required for data: 228565660
I0419 16:28:45.201586  4589 layer_factory.hpp:77] Creating layer norm2
I0419 16:28:45.201598  4589 net.cpp:106] Creating Layer norm2
I0419 16:28:45.201608  4589 net.cpp:454] norm2 <- conv2
I0419 16:28:45.201617  4589 net.cpp:411] norm2 -> norm2
I0419 16:28:45.201705  4589 net.cpp:150] Setting up norm2
I0419 16:28:45.201717  4589 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:28:45.201722  4589 net.cpp:165] Memory required for data: 238371484
I0419 16:28:45.201726  4589 layer_factory.hpp:77] Creating layer pool2
I0419 16:28:45.201736  4589 net.cpp:106] Creating Layer pool2
I0419 16:28:45.201745  4589 net.cpp:454] pool2 <- norm2
I0419 16:28:45.201752  4589 net.cpp:411] pool2 -> pool2
I0419 16:28:45.201792  4589 net.cpp:150] Setting up pool2
I0419 16:28:45.201802  4589 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:28:45.201807  4589 net.cpp:165] Memory required for data: 240927388
I0419 16:28:45.201810  4589 layer_factory.hpp:77] Creating layer conv3
I0419 16:28:45.201819  4589 net.cpp:106] Creating Layer conv3
I0419 16:28:45.201828  4589 net.cpp:454] conv3 <- pool2
I0419 16:28:45.201839  4589 net.cpp:411] conv3 -> conv3
I0419 16:28:45.205098  4589 net.cpp:150] Setting up conv3
I0419 16:28:45.205117  4589 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:28:45.205122  4589 net.cpp:165] Memory required for data: 244761244
I0419 16:28:45.205135  4589 layer_factory.hpp:77] Creating layer relu3
I0419 16:28:45.205153  4589 net.cpp:106] Creating Layer relu3
I0419 16:28:45.205159  4589 net.cpp:454] relu3 <- conv3
I0419 16:28:45.205166  4589 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:28:45.205176  4589 net.cpp:150] Setting up relu3
I0419 16:28:45.205184  4589 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:28:45.205189  4589 net.cpp:165] Memory required for data: 248595100
I0419 16:28:45.205194  4589 layer_factory.hpp:77] Creating layer conv4
I0419 16:28:45.205206  4589 net.cpp:106] Creating Layer conv4
I0419 16:28:45.205216  4589 net.cpp:454] conv4 <- conv3
I0419 16:28:45.205226  4589 net.cpp:411] conv4 -> conv4
I0419 16:28:45.208534  4589 net.cpp:150] Setting up conv4
I0419 16:28:45.208554  4589 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:28:45.208559  4589 net.cpp:165] Memory required for data: 252428956
I0419 16:28:45.208567  4589 layer_factory.hpp:77] Creating layer relu4
I0419 16:28:45.208575  4589 net.cpp:106] Creating Layer relu4
I0419 16:28:45.208581  4589 net.cpp:454] relu4 <- conv4
I0419 16:28:45.208591  4589 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:28:45.208600  4589 net.cpp:150] Setting up relu4
I0419 16:28:45.208611  4589 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:28:45.208616  4589 net.cpp:165] Memory required for data: 256262812
I0419 16:28:45.208621  4589 layer_factory.hpp:77] Creating layer conv5
I0419 16:28:45.208634  4589 net.cpp:106] Creating Layer conv5
I0419 16:28:45.208640  4589 net.cpp:454] conv5 <- conv4
I0419 16:28:45.208647  4589 net.cpp:411] conv5 -> conv5
I0419 16:28:45.210958  4589 net.cpp:150] Setting up conv5
I0419 16:28:45.210975  4589 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:28:45.210980  4589 net.cpp:165] Memory required for data: 258818716
I0419 16:28:45.210994  4589 layer_factory.hpp:77] Creating layer relu5
I0419 16:28:45.211007  4589 net.cpp:106] Creating Layer relu5
I0419 16:28:45.211012  4589 net.cpp:454] relu5 <- conv5
I0419 16:28:45.211021  4589 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:28:45.211035  4589 net.cpp:150] Setting up relu5
I0419 16:28:45.211043  4589 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:28:45.211048  4589 net.cpp:165] Memory required for data: 261374620
I0419 16:28:45.211053  4589 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:28:45.211071  4589 net.cpp:106] Creating Layer rpn_conv1
I0419 16:28:45.211078  4589 net.cpp:454] rpn_conv1 <- conv5
I0419 16:28:45.211089  4589 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:28:45.228117  4589 net.cpp:150] Setting up rpn_conv1
I0419 16:28:45.228135  4589 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:28:45.228140  4589 net.cpp:165] Memory required for data: 263930524
I0419 16:28:45.228149  4589 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:28:45.228157  4589 net.cpp:106] Creating Layer rpn_relu1
I0419 16:28:45.228165  4589 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:28:45.228173  4589 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:28:45.228183  4589 net.cpp:150] Setting up rpn_relu1
I0419 16:28:45.228193  4589 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:28:45.228198  4589 net.cpp:165] Memory required for data: 266486428
I0419 16:28:45.228202  4589 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:28:45.228214  4589 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:28:45.228220  4589 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:28:45.228227  4589 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:28:45.228236  4589 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:28:45.228279  4589 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:28:45.228291  4589 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:28:45.228301  4589 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:28:45.228307  4589 net.cpp:165] Memory required for data: 271598236
I0419 16:28:45.228312  4589 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:28:45.228324  4589 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:28:45.228334  4589 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:28:45.228346  4589 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:28:45.228674  4589 net.cpp:150] Setting up rpn_cls_score
I0419 16:28:45.228688  4589 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:28:45.228693  4589 net.cpp:165] Memory required for data: 271777948
I0419 16:28:45.228700  4589 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:28:45.228710  4589 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:28:45.228714  4589 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:28:45.228729  4589 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:28:45.228737  4589 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:28:45.228776  4589 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:28:45.228787  4589 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:28:45.228793  4589 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:28:45.228797  4589 net.cpp:165] Memory required for data: 272137372
I0419 16:28:45.228802  4589 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:28:45.228817  4589 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:28:45.228827  4589 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:28:45.228837  4589 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:28:45.229279  4589 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:28:45.229292  4589 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:28:45.229297  4589 net.cpp:165] Memory required for data: 272496796
I0419 16:28:45.229305  4589 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:28:45.229318  4589 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:28:45.229324  4589 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:28:45.229332  4589 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:28:45.229367  4589 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:28:45.229378  4589 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:28:45.229382  4589 net.cpp:165] Memory required for data: 272676508
I0419 16:28:45.229387  4589 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:28:45.229923  4589 net.cpp:106] Creating Layer rpn-data
I0419 16:28:45.229941  4589 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:28:45.229949  4589 net.cpp:454] rpn-data <- gt_boxes
I0419 16:28:45.229955  4589 net.cpp:454] rpn-data <- im_info
I0419 16:28:45.229960  4589 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:28:45.229969  4589 net.cpp:411] rpn-data -> rpn_labels
I0419 16:28:45.229980  4589 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:28:45.229995  4589 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:28:45.230005  4589 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:28:45.231266  4589 net.cpp:150] Setting up rpn-data
I0419 16:28:45.231289  4589 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:28:45.231297  4589 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:28:45.231302  4589 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:28:45.231307  4589 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:28:45.231312  4589 net.cpp:165] Memory required for data: 273844636
I0419 16:28:45.231319  4589 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:28:45.231334  4589 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:28:45.231344  4589 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:28:45.231351  4589 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:28:45.231362  4589 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:28:45.231379  4589 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:28:45.231498  4589 net.cpp:150] Setting up rpn_loss_cls
I0419 16:28:45.231510  4589 net.cpp:157] Top shape: (1)
I0419 16:28:45.231515  4589 net.cpp:160]     with loss weight 1
I0419 16:28:45.231536  4589 net.cpp:165] Memory required for data: 273844640
I0419 16:28:45.231541  4589 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:28:45.231556  4589 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:28:45.231561  4589 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:28:45.231570  4589 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:28:45.231575  4589 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:28:45.231581  4589 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:28:45.231590  4589 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:28:45.232173  4589 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:28:45.232187  4589 net.cpp:157] Top shape: (1)
I0419 16:28:45.232190  4589 net.cpp:160]     with loss weight 1
I0419 16:28:45.232198  4589 net.cpp:165] Memory required for data: 273844644
I0419 16:28:45.232205  4589 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:28:45.232218  4589 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:28:45.232231  4589 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:28:45.232271  4589 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:28:45.232282  4589 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:28:45.232287  4589 net.cpp:165] Memory required for data: 273881508
I0419 16:28:45.232291  4589 layer_factory.hpp:77] Creating layer fc6
I0419 16:28:45.232302  4589 net.cpp:106] Creating Layer fc6
I0419 16:28:45.232312  4589 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:28:45.232322  4589 net.cpp:411] fc6 -> fc6
I0419 16:28:45.330777  4589 net.cpp:150] Setting up fc6
I0419 16:28:45.330821  4589 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:28:45.330826  4589 net.cpp:165] Memory required for data: 273897892
I0419 16:28:45.330847  4589 layer_factory.hpp:77] Creating layer relu6
I0419 16:28:45.330862  4589 net.cpp:106] Creating Layer relu6
I0419 16:28:45.330876  4589 net.cpp:454] relu6 <- fc6
I0419 16:28:45.330890  4589 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:28:45.330909  4589 net.cpp:150] Setting up relu6
I0419 16:28:45.330919  4589 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:28:45.330924  4589 net.cpp:165] Memory required for data: 273914276
I0419 16:28:45.330929  4589 layer_factory.hpp:77] Creating layer fc7
I0419 16:28:45.330940  4589 net.cpp:106] Creating Layer fc7
I0419 16:28:45.330947  4589 net.cpp:454] fc7 <- fc6
I0419 16:28:45.330957  4589 net.cpp:411] fc7 -> fc7
I0419 16:28:45.374583  4589 net.cpp:150] Setting up fc7
I0419 16:28:45.374624  4589 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:28:45.374629  4589 net.cpp:165] Memory required for data: 273930660
I0419 16:28:45.374644  4589 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:28:45.374663  4589 net.cpp:106] Creating Layer silence_fc7
I0419 16:28:45.374675  4589 net.cpp:454] silence_fc7 <- fc7
I0419 16:28:45.374686  4589 net.cpp:150] Setting up silence_fc7
I0419 16:28:45.374696  4589 net.cpp:165] Memory required for data: 273930660
I0419 16:28:45.374701  4589 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:28:45.374706  4589 net.cpp:228] fc7 does not need backward computation.
I0419 16:28:45.374709  4589 net.cpp:228] relu6 does not need backward computation.
I0419 16:28:45.374714  4589 net.cpp:228] fc6 does not need backward computation.
I0419 16:28:45.374722  4589 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:28:45.374725  4589 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:28:45.374734  4589 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:28:45.374740  4589 net.cpp:226] rpn-data needs backward computation.
I0419 16:28:45.374749  4589 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:28:45.374755  4589 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:28:45.374761  4589 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:28:45.374765  4589 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:28:45.374773  4589 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:28:45.374778  4589 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:28:45.374783  4589 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:28:45.374786  4589 net.cpp:226] relu5 needs backward computation.
I0419 16:28:45.374790  4589 net.cpp:226] conv5 needs backward computation.
I0419 16:28:45.374794  4589 net.cpp:226] relu4 needs backward computation.
I0419 16:28:45.374797  4589 net.cpp:226] conv4 needs backward computation.
I0419 16:28:45.374802  4589 net.cpp:226] relu3 needs backward computation.
I0419 16:28:45.374806  4589 net.cpp:226] conv3 needs backward computation.
I0419 16:28:45.374812  4589 net.cpp:226] pool2 needs backward computation.
I0419 16:28:45.374820  4589 net.cpp:226] norm2 needs backward computation.
I0419 16:28:45.374830  4589 net.cpp:226] relu2 needs backward computation.
I0419 16:28:45.374835  4589 net.cpp:226] conv2 needs backward computation.
I0419 16:28:45.374840  4589 net.cpp:226] pool1 needs backward computation.
I0419 16:28:45.374845  4589 net.cpp:226] norm1 needs backward computation.
I0419 16:28:45.374848  4589 net.cpp:226] relu1 needs backward computation.
I0419 16:28:45.374852  4589 net.cpp:226] conv1 needs backward computation.
I0419 16:28:45.374858  4589 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:28:45.374866  4589 net.cpp:228] input-data does not need backward computation.
I0419 16:28:45.374869  4589 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:28:45.374874  4589 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:28:45.374910  4589 net.cpp:283] Network initialization done.
I0419 16:28:45.375032  4589 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:28:45.823706  4589 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:28:45.823737  4589 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:28:45.854104  4589 net.cpp:816] Ignoring source layer drop6
I0419 16:28:45.867593  4589 net.cpp:816] Ignoring source layer relu7
I0419 16:28:45.867621  4589 net.cpp:816] Ignoring source layer drop7
I0419 16:28:45.867626  4589 net.cpp:816] Ignoring source layer fc8
I0419 16:28:45.867630  4589 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:28:46.049696  4589 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 16:28:46.049743  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 16:28:46.049757  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 16:28:46.049772  4589 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:28:48.964227  4589 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 16:28:48.964273  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 16:28:48.964283  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 16:28:48.964292  4589 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:28:51.816246  4589 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 16:28:51.816292  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 16:28:51.816303  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 16:28:51.816309  4589 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:28:54.659175  4589 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 16:28:54.659220  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 16:28:54.659230  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 16:28:54.659238  4589 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:28:57.513375  4589 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 16:28:57.513424  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 16:28:57.513435  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 16:28:57.513443  4589 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:29:00.374536  4589 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 16:29:00.374581  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 16:29:00.374591  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 16:29:00.374599  4589 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:29:03.230450  4589 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 16:29:03.230499  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 16:29:03.230510  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 16:29:03.230518  4589 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:29:06.095381  4589 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 16:29:06.095427  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 16:29:06.095438  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 16:29:06.095445  4589 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:29:08.961215  4589 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 16:29:08.961264  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 16:29:08.961277  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 16:29:08.961284  4589 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:29:11.827098  4589 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 16:29:11.827147  4589 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 16:29:11.827158  4589 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 16:29:11.827167  4589 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:29:18.088642  4602 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:29:18.088779  4602 net.cpp:413] Input 0 -> data
I0419 16:29:18.104033  4602 net.cpp:413] Input 1 -> im_info
I0419 16:29:18.104080  4602 layer_factory.hpp:77] Creating layer conv1
I0419 16:29:18.104100  4602 net.cpp:106] Creating Layer conv1
I0419 16:29:18.104107  4602 net.cpp:454] conv1 <- data
I0419 16:29:18.104117  4602 net.cpp:411] conv1 -> conv1
I0419 16:29:18.104866  4602 net.cpp:150] Setting up conv1
I0419 16:29:18.104887  4602 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:29:18.104890  4602 net.cpp:165] Memory required for data: 4816896
I0419 16:29:18.104904  4602 layer_factory.hpp:77] Creating layer relu1
I0419 16:29:18.104918  4602 net.cpp:106] Creating Layer relu1
I0419 16:29:18.104920  4602 net.cpp:454] relu1 <- conv1
I0419 16:29:18.104929  4602 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:29:18.104938  4602 net.cpp:150] Setting up relu1
I0419 16:29:18.104946  4602 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:29:18.104949  4602 net.cpp:165] Memory required for data: 9633792
I0419 16:29:18.104953  4602 layer_factory.hpp:77] Creating layer norm1
I0419 16:29:18.104957  4602 net.cpp:106] Creating Layer norm1
I0419 16:29:18.104960  4602 net.cpp:454] norm1 <- conv1
I0419 16:29:18.104964  4602 net.cpp:411] norm1 -> norm1
I0419 16:29:18.105067  4602 net.cpp:150] Setting up norm1
I0419 16:29:18.105080  4602 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:29:18.105082  4602 net.cpp:165] Memory required for data: 14450688
I0419 16:29:18.105085  4602 layer_factory.hpp:77] Creating layer pool1
I0419 16:29:18.105092  4602 net.cpp:106] Creating Layer pool1
I0419 16:29:18.105095  4602 net.cpp:454] pool1 <- norm1
I0419 16:29:18.105099  4602 net.cpp:411] pool1 -> pool1
I0419 16:29:18.105131  4602 net.cpp:150] Setting up pool1
I0419 16:29:18.105140  4602 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:29:18.105144  4602 net.cpp:165] Memory required for data: 15698304
I0419 16:29:18.105145  4602 layer_factory.hpp:77] Creating layer conv2
I0419 16:29:18.105157  4602 net.cpp:106] Creating Layer conv2
I0419 16:29:18.105165  4602 net.cpp:454] conv2 <- pool1
I0419 16:29:18.105168  4602 net.cpp:411] conv2 -> conv2
I0419 16:29:18.107326  4602 net.cpp:150] Setting up conv2
I0419 16:29:18.107343  4602 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:29:18.107347  4602 net.cpp:165] Memory required for data: 16559488
I0419 16:29:18.107355  4602 layer_factory.hpp:77] Creating layer relu2
I0419 16:29:18.107365  4602 net.cpp:106] Creating Layer relu2
I0419 16:29:18.107368  4602 net.cpp:454] relu2 <- conv2
I0419 16:29:18.107374  4602 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:29:18.107384  4602 net.cpp:150] Setting up relu2
I0419 16:29:18.107388  4602 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:29:18.107393  4602 net.cpp:165] Memory required for data: 17420672
I0419 16:29:18.107395  4602 layer_factory.hpp:77] Creating layer norm2
I0419 16:29:18.107399  4602 net.cpp:106] Creating Layer norm2
I0419 16:29:18.107403  4602 net.cpp:454] norm2 <- conv2
I0419 16:29:18.107409  4602 net.cpp:411] norm2 -> norm2
I0419 16:29:18.107493  4602 net.cpp:150] Setting up norm2
I0419 16:29:18.107504  4602 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:29:18.107507  4602 net.cpp:165] Memory required for data: 18281856
I0419 16:29:18.107509  4602 layer_factory.hpp:77] Creating layer pool2
I0419 16:29:18.107514  4602 net.cpp:106] Creating Layer pool2
I0419 16:29:18.107518  4602 net.cpp:454] pool2 <- norm2
I0419 16:29:18.107522  4602 net.cpp:411] pool2 -> pool2
I0419 16:29:18.107552  4602 net.cpp:150] Setting up pool2
I0419 16:29:18.107559  4602 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:29:18.107563  4602 net.cpp:165] Memory required for data: 18512256
I0419 16:29:18.107564  4602 layer_factory.hpp:77] Creating layer conv3
I0419 16:29:18.107573  4602 net.cpp:106] Creating Layer conv3
I0419 16:29:18.107579  4602 net.cpp:454] conv3 <- pool2
I0419 16:29:18.107583  4602 net.cpp:411] conv3 -> conv3
I0419 16:29:18.109861  4602 net.cpp:150] Setting up conv3
I0419 16:29:18.109879  4602 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:29:18.109880  4602 net.cpp:165] Memory required for data: 18857856
I0419 16:29:18.109889  4602 layer_factory.hpp:77] Creating layer relu3
I0419 16:29:18.109895  4602 net.cpp:106] Creating Layer relu3
I0419 16:29:18.109899  4602 net.cpp:454] relu3 <- conv3
I0419 16:29:18.109905  4602 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:29:18.109910  4602 net.cpp:150] Setting up relu3
I0419 16:29:18.109915  4602 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:29:18.109917  4602 net.cpp:165] Memory required for data: 19203456
I0419 16:29:18.109920  4602 layer_factory.hpp:77] Creating layer conv4
I0419 16:29:18.109927  4602 net.cpp:106] Creating Layer conv4
I0419 16:29:18.109935  4602 net.cpp:454] conv4 <- conv3
I0419 16:29:18.109941  4602 net.cpp:411] conv4 -> conv4
I0419 16:29:18.113221  4602 net.cpp:150] Setting up conv4
I0419 16:29:18.113239  4602 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:29:18.113242  4602 net.cpp:165] Memory required for data: 19549056
I0419 16:29:18.113248  4602 layer_factory.hpp:77] Creating layer relu4
I0419 16:29:18.113253  4602 net.cpp:106] Creating Layer relu4
I0419 16:29:18.113258  4602 net.cpp:454] relu4 <- conv4
I0419 16:29:18.113265  4602 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:29:18.113272  4602 net.cpp:150] Setting up relu4
I0419 16:29:18.113277  4602 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:29:18.113281  4602 net.cpp:165] Memory required for data: 19894656
I0419 16:29:18.113283  4602 layer_factory.hpp:77] Creating layer conv5
I0419 16:29:18.113288  4602 net.cpp:106] Creating Layer conv5
I0419 16:29:18.113292  4602 net.cpp:454] conv5 <- conv4
I0419 16:29:18.113298  4602 net.cpp:411] conv5 -> conv5
I0419 16:29:18.115581  4602 net.cpp:150] Setting up conv5
I0419 16:29:18.115598  4602 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:29:18.115600  4602 net.cpp:165] Memory required for data: 20125056
I0419 16:29:18.115613  4602 layer_factory.hpp:77] Creating layer relu5
I0419 16:29:18.115623  4602 net.cpp:106] Creating Layer relu5
I0419 16:29:18.115627  4602 net.cpp:454] relu5 <- conv5
I0419 16:29:18.115633  4602 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:29:18.115643  4602 net.cpp:150] Setting up relu5
I0419 16:29:18.115646  4602 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:29:18.115651  4602 net.cpp:165] Memory required for data: 20355456
I0419 16:29:18.115653  4602 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:29:18.115659  4602 net.cpp:106] Creating Layer rpn_conv1
I0419 16:29:18.115666  4602 net.cpp:454] rpn_conv1 <- conv5
I0419 16:29:18.115672  4602 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:29:18.117274  4602 net.cpp:150] Setting up rpn_conv1
I0419 16:29:18.117290  4602 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:29:18.117293  4602 net.cpp:165] Memory required for data: 20585856
I0419 16:29:18.117300  4602 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:29:18.117308  4602 net.cpp:106] Creating Layer rpn_relu1
I0419 16:29:18.117311  4602 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:29:18.117317  4602 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:29:18.117328  4602 net.cpp:150] Setting up rpn_relu1
I0419 16:29:18.117331  4602 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:29:18.117334  4602 net.cpp:165] Memory required for data: 20816256
I0419 16:29:18.117339  4602 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:29:18.117348  4602 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:29:18.117355  4602 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:29:18.117362  4602 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:29:18.117367  4602 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:29:18.117398  4602 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:29:18.117408  4602 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:29:18.117411  4602 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:29:18.117414  4602 net.cpp:165] Memory required for data: 21277056
I0419 16:29:18.117419  4602 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:29:18.117424  4602 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:29:18.117426  4602 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:29:18.117431  4602 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:29:18.117607  4602 net.cpp:150] Setting up rpn_cls_score
I0419 16:29:18.117617  4602 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:29:18.117619  4602 net.cpp:165] Memory required for data: 21293256
I0419 16:29:18.117624  4602 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:29:18.117633  4602 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:29:18.117638  4602 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:29:18.117642  4602 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:29:18.117828  4602 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:29:18.117838  4602 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:29:18.117841  4602 net.cpp:165] Memory required for data: 21325656
I0419 16:29:18.117846  4602 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:29:18.117852  4602 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:29:18.117856  4602 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:29:18.117861  4602 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:29:18.117892  4602 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:29:18.117902  4602 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:29:18.117904  4602 net.cpp:165] Memory required for data: 21341856
I0419 16:29:18.117907  4602 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:29:18.117913  4602 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:29:18.117915  4602 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:29:18.117921  4602 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:29:18.117977  4602 net.cpp:150] Setting up rpn_cls_prob
I0419 16:29:18.117986  4602 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:29:18.117988  4602 net.cpp:165] Memory required for data: 21358056
I0419 16:29:18.117991  4602 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:29:18.117996  4602 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:29:18.118000  4602 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:29:18.118007  4602 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:29:18.118031  4602 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:29:18.118039  4602 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:29:18.118041  4602 net.cpp:165] Memory required for data: 21374256
I0419 16:29:18.118044  4602 layer_factory.hpp:77] Creating layer proposal
I0419 16:29:18.119622  4602 net.cpp:106] Creating Layer proposal
I0419 16:29:18.119642  4602 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:29:18.119647  4602 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:29:18.119652  4602 net.cpp:454] proposal <- im_info
I0419 16:29:18.119659  4602 net.cpp:411] proposal -> rois
I0419 16:29:18.119670  4602 net.cpp:411] proposal -> scores
I0419 16:29:18.121000  4602 net.cpp:150] Setting up proposal
I0419 16:29:18.121021  4602 net.cpp:157] Top shape: 1 5 (5)
I0419 16:29:18.121026  4602 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:29:18.121028  4602 net.cpp:165] Memory required for data: 21374280
I0419 16:29:18.121032  4602 net.cpp:228] proposal does not need backward computation.
I0419 16:29:18.121038  4602 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:29:18.121042  4602 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:29:18.121045  4602 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:29:18.121048  4602 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:29:18.121052  4602 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:29:18.121054  4602 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:29:18.121059  4602 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:29:18.121062  4602 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:29:18.121065  4602 net.cpp:228] relu5 does not need backward computation.
I0419 16:29:18.121068  4602 net.cpp:228] conv5 does not need backward computation.
I0419 16:29:18.121070  4602 net.cpp:228] relu4 does not need backward computation.
I0419 16:29:18.121073  4602 net.cpp:228] conv4 does not need backward computation.
I0419 16:29:18.121075  4602 net.cpp:228] relu3 does not need backward computation.
I0419 16:29:18.121079  4602 net.cpp:228] conv3 does not need backward computation.
I0419 16:29:18.121083  4602 net.cpp:228] pool2 does not need backward computation.
I0419 16:29:18.121085  4602 net.cpp:228] norm2 does not need backward computation.
I0419 16:29:18.121088  4602 net.cpp:228] relu2 does not need backward computation.
I0419 16:29:18.121093  4602 net.cpp:228] conv2 does not need backward computation.
I0419 16:29:18.121094  4602 net.cpp:228] pool1 does not need backward computation.
I0419 16:29:18.121098  4602 net.cpp:228] norm1 does not need backward computation.
I0419 16:29:18.121100  4602 net.cpp:228] relu1 does not need backward computation.
I0419 16:29:18.121103  4602 net.cpp:228] conv1 does not need backward computation.
I0419 16:29:18.121105  4602 net.cpp:270] This network produces output rois
I0419 16:29:18.121109  4602 net.cpp:270] This network produces output scores
I0419 16:29:18.121129  4602 net.cpp:283] Network initialization done.
I0419 16:29:18.551885  4602 net.cpp:816] Ignoring source layer input-data
I0419 16:29:18.551918  4602 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:29:18.555464  4602 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:29:18.555486  4602 net.cpp:816] Ignoring source layer rpn-data
I0419 16:29:18.555491  4602 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:29:18.555495  4602 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:29:18.555496  4602 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:29:18.555500  4602 net.cpp:816] Ignoring source layer fc6
I0419 16:29:18.555502  4602 net.cpp:816] Ignoring source layer relu6
I0419 16:29:18.555507  4602 net.cpp:816] Ignoring source layer fc7
I0419 16:29:18.555510  4602 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.137s
im_proposals: 2/506 0.127s
im_proposals: 3/506 0.123s
im_proposals: 4/506 0.122s
im_proposals: 5/506 0.121s
im_proposals: 6/506 0.120s
im_proposals: 7/506 0.120s
im_proposals: 8/506 0.119s
im_proposals: 9/506 0.119s
im_proposals: 10/506 0.118s
im_proposals: 11/506 0.118s
im_proposals: 12/506 0.118s
im_proposals: 13/506 0.117s
im_proposals: 14/506 0.117s
im_proposals: 15/506 0.117s
im_proposals: 16/506 0.117s
im_proposals: 17/506 0.117s
im_proposals: 18/506 0.117s
im_proposals: 19/506 0.117s
im_proposals: 20/506 0.117s
im_proposals: 21/506 0.117s
im_proposals: 22/506 0.117s
im_proposals: 23/506 0.117s
im_proposals: 24/506 0.117s
im_proposals: 25/506 0.117s
im_proposals: 26/506 0.117s
im_proposals: 27/506 0.117s
im_proposals: 28/506 0.117s
im_proposals: 29/506 0.117s
im_proposals: 30/506 0.117s
im_proposals: 31/506 0.117s
im_proposals: 32/506 0.117s
im_proposals: 33/506 0.117s
im_proposals: 34/506 0.118s
im_proposals: 35/506 0.118s
im_proposals: 36/506 0.118s
im_proposals: 37/506 0.118s
im_proposals: 38/506 0.118s
im_proposals: 39/506 0.118s
im_proposals: 40/506 0.118s
im_proposals: 41/506 0.119s
im_proposals: 42/506 0.119s
im_proposals: 43/506 0.119s
im_proposals: 44/506 0.119s
im_proposals: 45/506 0.119s
im_proposals: 46/506 0.119s
im_proposals: 47/506 0.119s
im_proposals: 48/506 0.119s
im_proposals: 49/506 0.120s
im_proposals: 50/506 0.120s
im_proposals: 51/506 0.120s
im_proposals: 52/506 0.120s
im_proposals: 53/506 0.120s
im_proposals: 54/506 0.120s
im_proposals: 55/506 0.121s
im_proposals: 56/506 0.121s
im_proposals: 57/506 0.121s
im_proposals: 58/506 0.121s
im_proposals: 59/506 0.121s
im_proposals: 60/506 0.121s
im_proposals: 61/506 0.121s
im_proposals: 62/506 0.122s
im_proposals: 63/506 0.122s
im_proposals: 64/506 0.122s
im_proposals: 65/506 0.122s
im_proposals: 66/506 0.122s
im_proposals: 67/506 0.122s
im_proposals: 68/506 0.122s
im_proposals: 69/506 0.122s
im_proposals: 70/506 0.122s
im_proposals: 71/506 0.122s
im_proposals: 72/506 0.123s
im_proposals: 73/506 0.123s
im_proposals: 74/506 0.123s
im_proposals: 75/506 0.123s
im_proposals: 76/506 0.123s
im_proposals: 77/506 0.123s
im_proposals: 78/506 0.123s
im_proposals: 79/506 0.123s
im_proposals: 80/506 0.123s
im_proposals: 81/506 0.123s
im_proposals: 82/506 0.123s
im_proposals: 83/506 0.123s
im_proposals: 84/506 0.123s
im_proposals: 85/506 0.123s
im_proposals: 86/506 0.124s
im_proposals: 87/506 0.124s
im_proposals: 88/506 0.124s
im_proposals: 89/506 0.124s
im_proposals: 90/506 0.124s
im_proposals: 91/506 0.124s
im_proposals: 92/506 0.124s
im_proposals: 93/506 0.124s
im_proposals: 94/506 0.124s
im_proposals: 95/506 0.124s
im_proposals: 96/506 0.124s
im_proposals: 97/506 0.125s
im_proposals: 98/506 0.125s
im_proposals: 99/506 0.125s
im_proposals: 100/506 0.125s
im_proposals: 101/506 0.125s
im_proposals: 102/506 0.125s
im_proposals: 103/506 0.125s
im_proposals: 104/506 0.126s
im_proposals: 105/506 0.126s
im_proposals: 106/506 0.126s
im_proposals: 107/506 0.126s
im_proposals: 108/506 0.126s
im_proposals: 109/506 0.126s
im_proposals: 110/506 0.126s
im_proposals: 111/506 0.126s
im_proposals: 112/506 0.126s
im_proposals: 113/506 0.126s
im_proposals: 114/506 0.127s
im_proposals: 115/506 0.127s
im_proposals: 116/506 0.127s
im_proposals: 117/506 0.127s
im_proposals: 118/506 0.127s
im_proposals: 119/506 0.127s
im_proposals: 120/506 0.127s
im_proposals: 121/506 0.127s
im_proposals: 122/506 0.127s
im_proposals: 123/506 0.127s
im_proposals: 124/506 0.128s
im_proposals: 125/506 0.128s
im_proposals: 126/506 0.128s
im_proposals: 127/506 0.128s
im_proposals: 128/506 0.128s
im_proposals: 129/506 0.128s
im_proposals: 130/506 0.128s
im_proposals: 131/506 0.128s
im_proposals: 132/506 0.128s
im_proposals: 133/506 0.128s
im_proposals: 134/506 0.128s
im_proposals: 135/506 0.128s
im_proposals: 136/506 0.128s
im_proposals: 137/506 0.128s
im_proposals: 138/506 0.129s
im_proposals: 139/506 0.129s
im_proposals: 140/506 0.129s
im_proposals: 141/506 0.129s
im_proposals: 142/506 0.129s
im_proposals: 143/506 0.129s
im_proposals: 144/506 0.129s
im_proposals: 145/506 0.129s
im_proposals: 146/506 0.129s
im_proposals: 147/506 0.129s
im_proposals: 148/506 0.129s
im_proposals: 149/506 0.129s
im_proposals: 150/506 0.129s
im_proposals: 151/506 0.129s
im_proposals: 152/506 0.129s
im_proposals: 153/506 0.129s
im_proposals: 154/506 0.129s
im_proposals: 155/506 0.129s
im_proposals: 156/506 0.129s
im_proposals: 157/506 0.130s
im_proposals: 158/506 0.130s
im_proposals: 159/506 0.130s
im_proposals: 160/506 0.130s
im_proposals: 161/506 0.130s
im_proposals: 162/506 0.130s
im_proposals: 163/506 0.130s
im_proposals: 164/506 0.130s
im_proposals: 165/506 0.130s
im_proposals: 166/506 0.130s
im_proposals: 167/506 0.130s
im_proposals: 168/506 0.130s
im_proposals: 169/506 0.130s
im_proposals: 170/506 0.130s
im_proposals: 171/506 0.130s
im_proposals: 172/506 0.130s
im_proposals: 173/506 0.130s
im_proposals: 174/506 0.130s
im_proposals: 175/506 0.130s
im_proposals: 176/506 0.130s
im_proposals: 177/506 0.130s
im_proposals: 178/506 0.130s
im_proposals: 179/506 0.130s
im_proposals: 180/506 0.130s
im_proposals: 181/506 0.130s
im_proposals: 182/506 0.131s
im_proposals: 183/506 0.131s
im_proposals: 184/506 0.131s
im_proposals: 185/506 0.131s
im_proposals: 186/506 0.131s
im_proposals: 187/506 0.131s
im_proposals: 188/506 0.131s
im_proposals: 189/506 0.131s
im_proposals: 190/506 0.131s
im_proposals: 191/506 0.131s
im_proposals: 192/506 0.131s
im_proposals: 193/506 0.131s
im_proposals: 194/506 0.131s
im_proposals: 195/506 0.131s
im_proposals: 196/506 0.131s
im_proposals: 197/506 0.131s
im_proposals: 198/506 0.131s
im_proposals: 199/506 0.131s
im_proposals: 200/506 0.131s
im_proposals: 201/506 0.131s
im_proposals: 202/506 0.131s
im_proposals: 203/506 0.131s
im_proposals: 204/506 0.131s
im_proposals: 205/506 0.131s
im_proposals: 206/506 0.131s
im_proposals: 207/506 0.132s
im_proposals: 208/506 0.132s
im_proposals: 209/506 0.132s
im_proposals: 210/506 0.132s
im_proposals: 211/506 0.132s
im_proposals: 212/506 0.132s
im_proposals: 213/506 0.132s
im_proposals: 214/506 0.132s
im_proposals: 215/506 0.132s
im_proposals: 216/506 0.132s
im_proposals: 217/506 0.132s
im_proposals: 218/506 0.132s
im_proposals: 219/506 0.132s
im_proposals: 220/506 0.132s
im_proposals: 221/506 0.132s
im_proposals: 222/506 0.132s
im_proposals: 223/506 0.132s
im_proposals: 224/506 0.132s
im_proposals: 225/506 0.132s
im_proposals: 226/506 0.132s
im_proposals: 227/506 0.132s
im_proposals: 228/506 0.132s
im_proposals: 229/506 0.132s
im_proposals: 230/506 0.132s
im_proposals: 231/506 0.132s
im_proposals: 232/506 0.132s
im_proposals: 233/506 0.132s
im_proposals: 234/506 0.132s
im_proposals: 235/506 0.132s
im_proposals: 236/506 0.132s
im_proposals: 237/506 0.132s
im_proposals: 238/506 0.132s
im_proposals: 239/506 0.132s
im_proposals: 240/506 0.132s
im_proposals: 241/506 0.132s
im_proposals: 242/506 0.132s
im_proposals: 243/506 0.132s
im_proposals: 244/506 0.132s
im_proposals: 245/506 0.132s
im_proposals: 246/506 0.132s
im_proposals: 247/506 0.132s
im_proposals: 248/506 0.133s
im_proposals: 249/506 0.133s
im_proposals: 250/506 0.133s
im_proposals: 251/506 0.133s
im_proposals: 252/506 0.133s
im_proposals: 253/506 0.133s
im_proposals: 254/506 0.133s
im_proposals: 255/506 0.133s
im_proposals: 256/506 0.133s
im_proposals: 257/506 0.133s
im_proposals: 258/506 0.133s
im_proposals: 259/506 0.133s
im_proposals: 260/506 0.133s
im_proposals: 261/506 0.133s
im_proposals: 262/506 0.133s
im_proposals: 263/506 0.133s
im_proposals: 264/506 0.133s
im_proposals: 265/506 0.133s
im_proposals: 266/506 0.133s
im_proposals: 267/506 0.133s
im_proposals: 268/506 0.133s
im_proposals: 269/506 0.133s
im_proposals: 270/506 0.133s
im_proposals: 271/506 0.133s
im_proposals: 272/506 0.133s
im_proposals: 273/506 0.133s
im_proposals: 274/506 0.133s
im_proposals: 275/506 0.133s
im_proposals: 276/506 0.133s
im_proposals: 277/506 0.133s
im_proposals: 278/506 0.133s
im_proposals: 279/506 0.133s
im_proposals: 280/506 0.133s
im_proposals: 281/506 0.133s
im_proposals: 282/506 0.133s
im_proposals: 283/506 0.133s
im_proposals: 284/506 0.133s
im_proposals: 285/506 0.133s
im_proposals: 286/506 0.133s
im_proposals: 287/506 0.133s
im_proposals: 288/506 0.133s
im_proposals: 289/506 0.133s
im_proposals: 290/506 0.133s
im_proposals: 291/506 0.133s
im_proposals: 292/506 0.133s
im_proposals: 293/506 0.133s
im_proposals: 294/506 0.133s
im_proposals: 295/506 0.133s
im_proposals: 296/506 0.133s
im_proposals: 297/506 0.133s
im_proposals: 298/506 0.133s
im_proposals: 299/506 0.133s
im_proposals: 300/506 0.133s
im_proposals: 301/506 0.133s
im_proposals: 302/506 0.133s
im_proposals: 303/506 0.133s
im_proposals: 304/506 0.133s
im_proposals: 305/506 0.133s
im_proposals: 306/506 0.133s
im_proposals: 307/506 0.133s
im_proposals: 308/506 0.133s
im_proposals: 309/506 0.133s
im_proposals: 310/506 0.133s
im_proposals: 311/506 0.133s
im_proposals: 312/506 0.133s
im_proposals: 313/506 0.133s
im_proposals: 314/506 0.133s
im_proposals: 315/506 0.134s
im_proposals: 316/506 0.134s
im_proposals: 317/506 0.134s
im_proposals: 318/506 0.134s
im_proposals: 319/506 0.134s
im_proposals: 320/506 0.134s
im_proposals: 321/506 0.134s
im_proposals: 322/506 0.134s
im_proposals: 323/506 0.134s
im_proposals: 324/506 0.134s
im_proposals: 325/506 0.134s
im_proposals: 326/506 0.134s
im_proposals: 327/506 0.134s
im_proposals: 328/506 0.134s
im_proposals: 329/506 0.134s
im_proposals: 330/506 0.134s
im_proposals: 331/506 0.134s
im_proposals: 332/506 0.134s
im_proposals: 333/506 0.134s
im_proposals: 334/506 0.134s
im_proposals: 335/506 0.134s
im_proposals: 336/506 0.134s
im_proposals: 337/506 0.134s
im_proposals: 338/506 0.134s
im_proposals: 339/506 0.134s
im_proposals: 340/506 0.134s
im_proposals: 341/506 0.134s
im_proposals: 342/506 0.134s
im_proposals: 343/506 0.134s
im_proposals: 344/506 0.134s
im_proposals: 345/506 0.134s
im_proposals: 346/506 0.134s
im_proposals: 347/506 0.134s
im_proposals: 348/506 0.134s
im_proposals: 349/506 0.134s
im_proposals: 350/506 0.134s
im_proposals: 351/506 0.134s
im_proposals: 352/506 0.134s
im_proposals: 353/506 0.134s
im_proposals: 354/506 0.134s
im_proposals: 355/506 0.134s
im_proposals: 356/506 0.134s
im_proposals: 357/506 0.134s
im_proposals: 358/506 0.134s
im_proposals: 359/506 0.134s
im_proposals: 360/506 0.134s
im_proposals: 361/506 0.134s
im_proposals: 362/506 0.134s
im_proposals: 363/506 0.134s
im_proposals: 364/506 0.134s
im_proposals: 365/506 0.134s
im_proposals: 366/506 0.134s
im_proposals: 367/506 0.134s
im_proposals: 368/506 0.134s
im_proposals: 369/506 0.134s
im_proposals: 370/506 0.134s
im_proposals: 371/506 0.134s
im_proposals: 372/506 0.134s
im_proposals: 373/506 0.134s
im_proposals: 374/506 0.134s
im_proposals: 375/506 0.134s
im_proposals: 376/506 0.134s
im_proposals: 377/506 0.134s
im_proposals: 378/506 0.134s
im_proposals: 379/506 0.134s
im_proposals: 380/506 0.134s
im_proposals: 381/506 0.134s
im_proposals: 382/506 0.134s
im_proposals: 383/506 0.134s
im_proposals: 384/506 0.134s
im_proposals: 385/506 0.134s
im_proposals: 386/506 0.134s
im_proposals: 387/506 0.134s
im_proposals: 388/506 0.134s
im_proposals: 389/506 0.134s
im_proposals: 390/506 0.134s
im_proposals: 391/506 0.134s
im_proposals: 392/506 0.134s
im_proposals: 393/506 0.134s
im_proposals: 394/506 0.134s
im_proposals: 395/506 0.134s
im_proposals: 396/506 0.134s
im_proposals: 397/506 0.134s
im_proposals: 398/506 0.134s
im_proposals: 399/506 0.134s
im_proposals: 400/506 0.134s
im_proposals: 401/506 0.134s
im_proposals: 402/506 0.134s
im_proposals: 403/506 0.134s
im_proposals: 404/506 0.134s
im_proposals: 405/506 0.134s
im_proposals: 406/506 0.134s
im_proposals: 407/506 0.134s
im_proposals: 408/506 0.134s
im_proposals: 409/506 0.134s
im_proposals: 410/506 0.134s
im_proposals: 411/506 0.134s
im_proposals: 412/506 0.134s
im_proposals: 413/506 0.134s
im_proposals: 414/506 0.134s
im_proposals: 415/506 0.134s
im_proposals: 416/506 0.134s
im_proposals: 417/506 0.134s
im_proposals: 418/506 0.134s
im_proposals: 419/506 0.134s
im_proposals: 420/506 0.134s
im_proposals: 421/506 0.134s
im_proposals: 422/506 0.134s
im_proposals: 423/506 0.134s
im_proposals: 424/506 0.134s
im_proposals: 425/506 0.134s
im_proposals: 426/506 0.134s
im_proposals: 427/506 0.134s
im_proposals: 428/506 0.134s
im_proposals: 429/506 0.134s
im_proposals: 430/506 0.134s
im_proposals: 431/506 0.134s
im_proposals: 432/506 0.134s
im_proposals: 433/506 0.134s
im_proposals: 434/506 0.134s
im_proposals: 435/506 0.134s
im_proposals: 436/506 0.134s
im_proposals: 437/506 0.134s
im_proposals: 438/506 0.134s
im_proposals: 439/506 0.134s
im_proposals: 440/506 0.134s
im_proposals: 441/506 0.134s
im_proposals: 442/506 0.134s
im_proposals: 443/506 0.134s
im_proposals: 444/506 0.134s
im_proposals: 445/506 0.134s
im_proposals: 446/506 0.134s
im_proposals: 447/506 0.134s
im_proposals: 448/506 0.134s
im_proposals: 449/506 0.134s
im_proposals: 450/506 0.134s
im_proposals: 451/506 0.134s
im_proposals: 452/506 0.134s
im_proposals: 453/506 0.134s
im_proposals: 454/506 0.134s
im_proposals: 455/506 0.134s
im_proposals: 456/506 0.134s
im_proposals: 457/506 0.134s
im_proposals: 458/506 0.134s
im_proposals: 459/506 0.134s
im_proposals: 460/506 0.134s
im_proposals: 461/506 0.134s
im_proposals: 462/506 0.134s
im_proposals: 463/506 0.134s
im_proposals: 464/506 0.134s
im_proposals: 465/506 0.134s
im_proposals: 466/506 0.134s
im_proposals: 467/506 0.134s
im_proposals: 468/506 0.134s
im_proposals: 469/506 0.134s
im_proposals: 470/506 0.134s
im_proposals: 471/506 0.134s
im_proposals: 472/506 0.134s
im_proposals: 473/506 0.134s
im_proposals: 474/506 0.134s
im_proposals: 475/506 0.134s
im_proposals: 476/506 0.134s
im_proposals: 477/506 0.134s
im_proposals: 478/506 0.134s
im_proposals: 479/506 0.135s
im_proposals: 480/506 0.135s
im_proposals: 481/506 0.135s
im_proposals: 482/506 0.135s
im_proposals: 483/506 0.135s
im_proposals: 484/506 0.135s
im_proposals: 485/506 0.135s
im_proposals: 486/506 0.135s
im_proposals: 487/506 0.135s
im_proposals: 488/506 0.135s
im_proposals: 489/506 0.135s
im_proposals: 490/506 0.135s
im_proposals: 491/506 0.135s
im_proposals: 492/506 0.135s
im_proposals: 493/506 0.135s
im_proposals: 494/506 0.135s
im_proposals: 495/506 0.135s
im_proposals: 496/506 0.135s
im_proposals: 497/506 0.135s
im_proposals: 498/506 0.135s
im_proposals: 499/506 0.135s
im_proposals: 500/506 0.135s
im_proposals: 501/506 0.135s
im_proposals: 502/506 0.135s
im_proposals: 503/506 0.135s
im_proposals: 504/506 0.135s
im_proposals: 505/506 0.135s
im_proposals: 506/506 0.135s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:30:51.077894  4618 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:30:51.077956  4618 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 16:30:51.078829  4618 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:30:51.079031  4618 layer_factory.hpp:77] Creating layer data
I0419 16:30:51.079761  4618 net.cpp:106] Creating Layer data
I0419 16:30:51.079785  4618 net.cpp:411] data -> data
I0419 16:30:51.079809  4618 net.cpp:411] data -> rois
I0419 16:30:51.079821  4618 net.cpp:411] data -> labels
I0419 16:30:51.079831  4618 net.cpp:411] data -> bbox_targets
I0419 16:30:51.079841  4618 net.cpp:411] data -> bbox_inside_weights
I0419 16:30:51.079849  4618 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:30:51.095377  4618 net.cpp:150] Setting up data
I0419 16:30:51.095403  4618 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:30:51.095412  4618 net.cpp:157] Top shape: 1 5 (5)
I0419 16:30:51.095417  4618 net.cpp:157] Top shape: 1 (1)
I0419 16:30:51.095423  4618 net.cpp:157] Top shape: 1 176 (176)
I0419 16:30:51.095432  4618 net.cpp:157] Top shape: 1 176 (176)
I0419 16:30:51.095438  4618 net.cpp:157] Top shape: 1 176 (176)
I0419 16:30:51.095441  4618 net.cpp:165] Memory required for data: 14402136
I0419 16:30:51.095448  4618 layer_factory.hpp:77] Creating layer conv1
I0419 16:30:51.095468  4618 net.cpp:106] Creating Layer conv1
I0419 16:30:51.095474  4618 net.cpp:454] conv1 <- data
I0419 16:30:51.095489  4618 net.cpp:411] conv1 -> conv1
I0419 16:30:51.096819  4618 net.cpp:150] Setting up conv1
I0419 16:30:51.096839  4618 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:30:51.096844  4618 net.cpp:165] Memory required for data: 129602136
I0419 16:30:51.096864  4618 layer_factory.hpp:77] Creating layer relu1
I0419 16:30:51.096884  4618 net.cpp:106] Creating Layer relu1
I0419 16:30:51.096891  4618 net.cpp:454] relu1 <- conv1
I0419 16:30:51.096899  4618 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:30:51.096912  4618 net.cpp:150] Setting up relu1
I0419 16:30:51.096921  4618 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:30:51.096926  4618 net.cpp:165] Memory required for data: 244802136
I0419 16:30:51.096930  4618 layer_factory.hpp:77] Creating layer norm1
I0419 16:30:51.096940  4618 net.cpp:106] Creating Layer norm1
I0419 16:30:51.096945  4618 net.cpp:454] norm1 <- conv1
I0419 16:30:51.096954  4618 net.cpp:411] norm1 -> norm1
I0419 16:30:51.097074  4618 net.cpp:150] Setting up norm1
I0419 16:30:51.097087  4618 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:30:51.097091  4618 net.cpp:165] Memory required for data: 360002136
I0419 16:30:51.097095  4618 layer_factory.hpp:77] Creating layer pool1
I0419 16:30:51.097107  4618 net.cpp:106] Creating Layer pool1
I0419 16:30:51.097112  4618 net.cpp:454] pool1 <- norm1
I0419 16:30:51.097124  4618 net.cpp:411] pool1 -> pool1
I0419 16:30:51.097167  4618 net.cpp:150] Setting up pool1
I0419 16:30:51.097182  4618 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:30:51.097185  4618 net.cpp:165] Memory required for data: 389110104
I0419 16:30:51.097190  4618 layer_factory.hpp:77] Creating layer conv2
I0419 16:30:51.097200  4618 net.cpp:106] Creating Layer conv2
I0419 16:30:51.097205  4618 net.cpp:454] conv2 <- pool1
I0419 16:30:51.097215  4618 net.cpp:411] conv2 -> conv2
I0419 16:30:51.098891  4618 net.cpp:150] Setting up conv2
I0419 16:30:51.098909  4618 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:30:51.098913  4618 net.cpp:165] Memory required for data: 408721752
I0419 16:30:51.098927  4618 layer_factory.hpp:77] Creating layer relu2
I0419 16:30:51.098938  4618 net.cpp:106] Creating Layer relu2
I0419 16:30:51.098947  4618 net.cpp:454] relu2 <- conv2
I0419 16:30:51.098953  4618 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:30:51.098963  4618 net.cpp:150] Setting up relu2
I0419 16:30:51.098970  4618 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:30:51.098975  4618 net.cpp:165] Memory required for data: 428333400
I0419 16:30:51.098979  4618 layer_factory.hpp:77] Creating layer norm2
I0419 16:30:51.098991  4618 net.cpp:106] Creating Layer norm2
I0419 16:30:51.098995  4618 net.cpp:454] norm2 <- conv2
I0419 16:30:51.099002  4618 net.cpp:411] norm2 -> norm2
I0419 16:30:51.099097  4618 net.cpp:150] Setting up norm2
I0419 16:30:51.099109  4618 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:30:51.099113  4618 net.cpp:165] Memory required for data: 447945048
I0419 16:30:51.099117  4618 layer_factory.hpp:77] Creating layer pool2
I0419 16:30:51.099129  4618 net.cpp:106] Creating Layer pool2
I0419 16:30:51.099134  4618 net.cpp:454] pool2 <- norm2
I0419 16:30:51.099141  4618 net.cpp:411] pool2 -> pool2
I0419 16:30:51.099184  4618 net.cpp:150] Setting up pool2
I0419 16:30:51.099196  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.099200  4618 net.cpp:165] Memory required for data: 453056856
I0419 16:30:51.099205  4618 layer_factory.hpp:77] Creating layer conv3
I0419 16:30:51.099215  4618 net.cpp:106] Creating Layer conv3
I0419 16:30:51.099220  4618 net.cpp:454] conv3 <- pool2
I0419 16:30:51.099230  4618 net.cpp:411] conv3 -> conv3
I0419 16:30:51.102500  4618 net.cpp:150] Setting up conv3
I0419 16:30:51.102520  4618 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:30:51.102525  4618 net.cpp:165] Memory required for data: 460724568
I0419 16:30:51.102538  4618 layer_factory.hpp:77] Creating layer relu3
I0419 16:30:51.102546  4618 net.cpp:106] Creating Layer relu3
I0419 16:30:51.102552  4618 net.cpp:454] relu3 <- conv3
I0419 16:30:51.102560  4618 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:30:51.102571  4618 net.cpp:150] Setting up relu3
I0419 16:30:51.102578  4618 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:30:51.102583  4618 net.cpp:165] Memory required for data: 468392280
I0419 16:30:51.102588  4618 layer_factory.hpp:77] Creating layer conv4
I0419 16:30:51.102602  4618 net.cpp:106] Creating Layer conv4
I0419 16:30:51.102612  4618 net.cpp:454] conv4 <- conv3
I0419 16:30:51.102620  4618 net.cpp:411] conv4 -> conv4
I0419 16:30:51.105882  4618 net.cpp:150] Setting up conv4
I0419 16:30:51.105904  4618 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:30:51.105911  4618 net.cpp:165] Memory required for data: 476059992
I0419 16:30:51.105918  4618 layer_factory.hpp:77] Creating layer relu4
I0419 16:30:51.105927  4618 net.cpp:106] Creating Layer relu4
I0419 16:30:51.105932  4618 net.cpp:454] relu4 <- conv4
I0419 16:30:51.105939  4618 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:30:51.105952  4618 net.cpp:150] Setting up relu4
I0419 16:30:51.105958  4618 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:30:51.105965  4618 net.cpp:165] Memory required for data: 483727704
I0419 16:30:51.105970  4618 layer_factory.hpp:77] Creating layer conv5
I0419 16:30:51.105983  4618 net.cpp:106] Creating Layer conv5
I0419 16:30:51.105989  4618 net.cpp:454] conv5 <- conv4
I0419 16:30:51.105996  4618 net.cpp:411] conv5 -> conv5
I0419 16:30:51.108292  4618 net.cpp:150] Setting up conv5
I0419 16:30:51.108311  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.108316  4618 net.cpp:165] Memory required for data: 488839512
I0419 16:30:51.108332  4618 layer_factory.hpp:77] Creating layer relu5
I0419 16:30:51.108341  4618 net.cpp:106] Creating Layer relu5
I0419 16:30:51.108351  4618 net.cpp:454] relu5 <- conv5
I0419 16:30:51.108359  4618 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:30:51.108368  4618 net.cpp:150] Setting up relu5
I0419 16:30:51.108374  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.108378  4618 net.cpp:165] Memory required for data: 493951320
I0419 16:30:51.108382  4618 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:30:51.108393  4618 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:30:51.108399  4618 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:30:51.108410  4618 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:30:51.108420  4618 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:30:51.108463  4618 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:30:51.108474  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.108484  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.108489  4618 net.cpp:165] Memory required for data: 504174936
I0419 16:30:51.108494  4618 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:30:51.108505  4618 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:30:51.108515  4618 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:30:51.108520  4618 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:30:51.108530  4618 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:30:51.108544  4618 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:30:51.108604  4618 net.cpp:150] Setting up roi_pool_conv5
I0419 16:30:51.108618  4618 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:30:51.108623  4618 net.cpp:165] Memory required for data: 504211800
I0419 16:30:51.108628  4618 layer_factory.hpp:77] Creating layer fc6
I0419 16:30:51.108639  4618 net.cpp:106] Creating Layer fc6
I0419 16:30:51.108645  4618 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:30:51.108652  4618 net.cpp:411] fc6 -> fc6
I0419 16:30:51.206315  4618 net.cpp:150] Setting up fc6
I0419 16:30:51.206365  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.206372  4618 net.cpp:165] Memory required for data: 504228184
I0419 16:30:51.206384  4618 layer_factory.hpp:77] Creating layer relu6
I0419 16:30:51.206398  4618 net.cpp:106] Creating Layer relu6
I0419 16:30:51.206404  4618 net.cpp:454] relu6 <- fc6
I0419 16:30:51.206413  4618 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:30:51.206425  4618 net.cpp:150] Setting up relu6
I0419 16:30:51.206434  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.206439  4618 net.cpp:165] Memory required for data: 504244568
I0419 16:30:51.206444  4618 layer_factory.hpp:77] Creating layer drop6
I0419 16:30:51.206459  4618 net.cpp:106] Creating Layer drop6
I0419 16:30:51.206470  4618 net.cpp:454] drop6 <- fc6
I0419 16:30:51.206477  4618 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:30:51.206516  4618 net.cpp:150] Setting up drop6
I0419 16:30:51.206526  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.206531  4618 net.cpp:165] Memory required for data: 504260952
I0419 16:30:51.206535  4618 layer_factory.hpp:77] Creating layer fc7
I0419 16:30:51.206547  4618 net.cpp:106] Creating Layer fc7
I0419 16:30:51.206550  4618 net.cpp:454] fc7 <- fc6
I0419 16:30:51.206558  4618 net.cpp:411] fc7 -> fc7
I0419 16:30:51.250241  4618 net.cpp:150] Setting up fc7
I0419 16:30:51.250283  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.250288  4618 net.cpp:165] Memory required for data: 504277336
I0419 16:30:51.250303  4618 layer_factory.hpp:77] Creating layer relu7
I0419 16:30:51.250315  4618 net.cpp:106] Creating Layer relu7
I0419 16:30:51.250321  4618 net.cpp:454] relu7 <- fc7
I0419 16:30:51.250344  4618 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:30:51.250360  4618 net.cpp:150] Setting up relu7
I0419 16:30:51.250365  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.250370  4618 net.cpp:165] Memory required for data: 504293720
I0419 16:30:51.250380  4618 layer_factory.hpp:77] Creating layer drop7
I0419 16:30:51.250387  4618 net.cpp:106] Creating Layer drop7
I0419 16:30:51.250392  4618 net.cpp:454] drop7 <- fc7
I0419 16:30:51.250406  4618 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:30:51.250437  4618 net.cpp:150] Setting up drop7
I0419 16:30:51.250445  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.250449  4618 net.cpp:165] Memory required for data: 504310104
I0419 16:30:51.250458  4618 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:30:51.250468  4618 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:30:51.250471  4618 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:30:51.250481  4618 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:30:51.250493  4618 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:30:51.250535  4618 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:30:51.250546  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.250552  4618 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:30:51.250555  4618 net.cpp:165] Memory required for data: 504342872
I0419 16:30:51.250560  4618 layer_factory.hpp:77] Creating layer cls_score
I0419 16:30:51.250571  4618 net.cpp:106] Creating Layer cls_score
I0419 16:30:51.250577  4618 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:30:51.250586  4618 net.cpp:411] cls_score -> cls_score
I0419 16:30:51.256152  4618 net.cpp:150] Setting up cls_score
I0419 16:30:51.256170  4618 net.cpp:157] Top shape: 1 44 (44)
I0419 16:30:51.256175  4618 net.cpp:165] Memory required for data: 504343048
I0419 16:30:51.256184  4618 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:30:51.256198  4618 net.cpp:106] Creating Layer bbox_pred
I0419 16:30:51.256209  4618 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:30:51.256217  4618 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:30:51.276909  4618 net.cpp:150] Setting up bbox_pred
I0419 16:30:51.276929  4618 net.cpp:157] Top shape: 1 176 (176)
I0419 16:30:51.276934  4618 net.cpp:165] Memory required for data: 504343752
I0419 16:30:51.276953  4618 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:30:51.276973  4618 net.cpp:106] Creating Layer loss_cls
I0419 16:30:51.276978  4618 net.cpp:454] loss_cls <- cls_score
I0419 16:30:51.276985  4618 net.cpp:454] loss_cls <- labels
I0419 16:30:51.276998  4618 net.cpp:411] loss_cls -> cls_loss
I0419 16:30:51.277016  4618 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:30:51.277117  4618 net.cpp:150] Setting up loss_cls
I0419 16:30:51.277128  4618 net.cpp:157] Top shape: (1)
I0419 16:30:51.277133  4618 net.cpp:160]     with loss weight 1
I0419 16:30:51.277153  4618 net.cpp:165] Memory required for data: 504343756
I0419 16:30:51.277158  4618 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:30:51.277168  4618 net.cpp:106] Creating Layer loss_bbox
I0419 16:30:51.277175  4618 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:30:51.277181  4618 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:30:51.277189  4618 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:30:51.277195  4618 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:30:51.277201  4618 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:30:51.277281  4618 net.cpp:150] Setting up loss_bbox
I0419 16:30:51.277292  4618 net.cpp:157] Top shape: (1)
I0419 16:30:51.277297  4618 net.cpp:160]     with loss weight 1
I0419 16:30:51.277304  4618 net.cpp:165] Memory required for data: 504343760
I0419 16:30:51.277308  4618 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:30:51.277325  4618 net.cpp:106] Creating Layer rpn_conv1
I0419 16:30:51.277335  4618 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:30:51.277344  4618 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:30:51.294353  4618 net.cpp:150] Setting up rpn_conv1
I0419 16:30:51.294370  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.294375  4618 net.cpp:165] Memory required for data: 509455568
I0419 16:30:51.294385  4618 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:30:51.294399  4618 net.cpp:106] Creating Layer rpn_relu1
I0419 16:30:51.294409  4618 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:30:51.294416  4618 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:30:51.294425  4618 net.cpp:150] Setting up rpn_relu1
I0419 16:30:51.294435  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.294438  4618 net.cpp:165] Memory required for data: 514567376
I0419 16:30:51.294443  4618 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:30:51.294450  4618 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:30:51.294455  4618 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:30:51.294461  4618 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:30:51.294471  4618 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:30:51.294515  4618 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:30:51.294528  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.294534  4618 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:30:51.294538  4618 net.cpp:165] Memory required for data: 524790992
I0419 16:30:51.294543  4618 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:30:51.294559  4618 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:30:51.294570  4618 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:30:51.294579  4618 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:30:51.294917  4618 net.cpp:150] Setting up rpn_cls_score
I0419 16:30:51.294931  4618 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:30:51.294936  4618 net.cpp:165] Memory required for data: 525150416
I0419 16:30:51.294945  4618 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:30:51.294970  4618 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:30:51.294978  4618 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:30:51.294987  4618 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:30:51.295449  4618 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:30:51.295461  4618 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:30:51.295466  4618 net.cpp:165] Memory required for data: 525869264
I0419 16:30:51.295475  4618 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:30:51.295488  4618 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:30:51.295495  4618 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:30:51.295502  4618 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:30:51.295507  4618 net.cpp:165] Memory required for data: 525869264
I0419 16:30:51.295512  4618 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:30:51.295521  4618 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:30:51.295527  4618 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:30:51.295533  4618 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:30:51.295538  4618 net.cpp:165] Memory required for data: 525869264
I0419 16:30:51.295543  4618 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:30:51.295547  4618 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:30:51.295552  4618 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:30:51.295557  4618 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:30:51.295562  4618 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:30:51.295567  4618 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:30:51.295572  4618 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:30:51.295577  4618 net.cpp:226] loss_bbox needs backward computation.
I0419 16:30:51.295584  4618 net.cpp:226] loss_cls needs backward computation.
I0419 16:30:51.295589  4618 net.cpp:226] bbox_pred needs backward computation.
I0419 16:30:51.295594  4618 net.cpp:226] cls_score needs backward computation.
I0419 16:30:51.295600  4618 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:30:51.295604  4618 net.cpp:226] drop7 needs backward computation.
I0419 16:30:51.295609  4618 net.cpp:226] relu7 needs backward computation.
I0419 16:30:51.295614  4618 net.cpp:226] fc7 needs backward computation.
I0419 16:30:51.295619  4618 net.cpp:226] drop6 needs backward computation.
I0419 16:30:51.295624  4618 net.cpp:226] relu6 needs backward computation.
I0419 16:30:51.295629  4618 net.cpp:226] fc6 needs backward computation.
I0419 16:30:51.295634  4618 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 16:30:51.295639  4618 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 16:30:51.295644  4618 net.cpp:226] relu5 needs backward computation.
I0419 16:30:51.295648  4618 net.cpp:226] conv5 needs backward computation.
I0419 16:30:51.295655  4618 net.cpp:226] relu4 needs backward computation.
I0419 16:30:51.295660  4618 net.cpp:226] conv4 needs backward computation.
I0419 16:30:51.295665  4618 net.cpp:226] relu3 needs backward computation.
I0419 16:30:51.295670  4618 net.cpp:226] conv3 needs backward computation.
I0419 16:30:51.295675  4618 net.cpp:226] pool2 needs backward computation.
I0419 16:30:51.295680  4618 net.cpp:226] norm2 needs backward computation.
I0419 16:30:51.295686  4618 net.cpp:226] relu2 needs backward computation.
I0419 16:30:51.295689  4618 net.cpp:226] conv2 needs backward computation.
I0419 16:30:51.295694  4618 net.cpp:226] pool1 needs backward computation.
I0419 16:30:51.295702  4618 net.cpp:226] norm1 needs backward computation.
I0419 16:30:51.295706  4618 net.cpp:226] relu1 needs backward computation.
I0419 16:30:51.295711  4618 net.cpp:226] conv1 needs backward computation.
I0419 16:30:51.295720  4618 net.cpp:228] data does not need backward computation.
I0419 16:30:51.295724  4618 net.cpp:270] This network produces output bbox_loss
I0419 16:30:51.295729  4618 net.cpp:270] This network produces output cls_loss
I0419 16:30:51.295766  4618 net.cpp:283] Network initialization done.
I0419 16:30:51.295917  4618 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:30:51.777814  4618 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:30:51.777848  4618 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:30:51.821789  4618 net.cpp:816] Ignoring source layer fc8
I0419 16:30:51.821820  4618 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:30:52.160547  4618 solver.cpp:229] Iteration 0, loss = 3.96455
I0419 16:30:52.160596  4618 solver.cpp:245]     Train net output #0: bbox_loss = 0.00179342 (* 1 = 0.00179342 loss)
I0419 16:30:52.160609  4618 solver.cpp:245]     Train net output #1: cls_loss = 3.96275 (* 1 = 3.96275 loss)
I0419 16:30:52.160629  4618 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:30:58.213171  4618 solver.cpp:229] Iteration 20, loss = 0.158989
I0419 16:30:58.213213  4618 solver.cpp:245]     Train net output #0: bbox_loss = 0.00206027 (* 1 = 0.00206027 loss)
I0419 16:30:58.213222  4618 solver.cpp:245]     Train net output #1: cls_loss = 0.156929 (* 1 = 0.156929 loss)
I0419 16:30:58.213227  4618 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:31:04.228619  4618 solver.cpp:229] Iteration 40, loss = 0.256255
I0419 16:31:04.228662  4618 solver.cpp:245]     Train net output #0: bbox_loss = 0.0311435 (* 1 = 0.0311435 loss)
I0419 16:31:04.228670  4618 solver.cpp:245]     Train net output #1: cls_loss = 0.225112 (* 1 = 0.225112 loss)
I0419 16:31:04.228677  4618 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:31:10.240844  4618 solver.cpp:229] Iteration 60, loss = 0.387985
I0419 16:31:10.240886  4618 solver.cpp:245]     Train net output #0: bbox_loss = 0.0650192 (* 1 = 0.0650192 loss)
I0419 16:31:10.240893  4618 solver.cpp:245]     Train net output #1: cls_loss = 0.322966 (* 1 = 0.322966 loss)
I0419 16:31:10.240900  4618 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:31:16.261826  4618 solver.cpp:229] Iteration 80, loss = 0.2817
I0419 16:31:16.261868  4618 solver.cpp:245]     Train net output #0: bbox_loss = 0.0782601 (* 1 = 0.0782601 loss)
I0419 16:31:16.261875  4618 solver.cpp:245]     Train net output #1: cls_loss = 0.20344 (* 1 = 0.20344 loss)
I0419 16:31:16.261883  4618 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, init from stage 1 Fast R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:31:26.275823  4630 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:31:26.275880  4630 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt
I0419 16:31:26.276664  4630 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:31:26.276859  4630 layer_factory.hpp:77] Creating layer input-data
I0419 16:31:26.277711  4630 net.cpp:106] Creating Layer input-data
I0419 16:31:26.277740  4630 net.cpp:411] input-data -> data
I0419 16:31:26.277761  4630 net.cpp:411] input-data -> im_info
I0419 16:31:26.277778  4630 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:31:26.293671  4630 net.cpp:150] Setting up input-data
I0419 16:31:26.293699  4630 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:31:26.293709  4630 net.cpp:157] Top shape: 1 3 (3)
I0419 16:31:26.293715  4630 net.cpp:157] Top shape: 1 4 (4)
I0419 16:31:26.293720  4630 net.cpp:165] Memory required for data: 7200028
I0419 16:31:26.293731  4630 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:31:26.293745  4630 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:31:26.293757  4630 net.cpp:454] data_input-data_0_split <- data
I0419 16:31:26.293771  4630 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:31:26.293782  4630 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:31:26.293828  4630 net.cpp:150] Setting up data_input-data_0_split
I0419 16:31:26.293841  4630 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:31:26.293845  4630 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:31:26.293848  4630 net.cpp:165] Memory required for data: 21600028
I0419 16:31:26.293851  4630 layer_factory.hpp:77] Creating layer conv1
I0419 16:31:26.293864  4630 net.cpp:106] Creating Layer conv1
I0419 16:31:26.293872  4630 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:31:26.293880  4630 net.cpp:411] conv1 -> conv1
I0419 16:31:26.295243  4630 net.cpp:150] Setting up conv1
I0419 16:31:26.295262  4630 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:31:26.295265  4630 net.cpp:165] Memory required for data: 79200028
I0419 16:31:26.295279  4630 layer_factory.hpp:77] Creating layer relu1
I0419 16:31:26.295295  4630 net.cpp:106] Creating Layer relu1
I0419 16:31:26.295306  4630 net.cpp:454] relu1 <- conv1
I0419 16:31:26.295316  4630 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:31:26.295337  4630 net.cpp:150] Setting up relu1
I0419 16:31:26.295351  4630 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:31:26.295356  4630 net.cpp:165] Memory required for data: 136800028
I0419 16:31:26.295359  4630 layer_factory.hpp:77] Creating layer norm1
I0419 16:31:26.295377  4630 net.cpp:106] Creating Layer norm1
I0419 16:31:26.295387  4630 net.cpp:454] norm1 <- conv1
I0419 16:31:26.295397  4630 net.cpp:411] norm1 -> norm1
I0419 16:31:26.295531  4630 net.cpp:150] Setting up norm1
I0419 16:31:26.295543  4630 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:31:26.295545  4630 net.cpp:165] Memory required for data: 194400028
I0419 16:31:26.295548  4630 layer_factory.hpp:77] Creating layer pool1
I0419 16:31:26.295554  4630 net.cpp:106] Creating Layer pool1
I0419 16:31:26.295557  4630 net.cpp:454] pool1 <- norm1
I0419 16:31:26.295562  4630 net.cpp:411] pool1 -> pool1
I0419 16:31:26.295603  4630 net.cpp:150] Setting up pool1
I0419 16:31:26.295617  4630 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:31:26.295622  4630 net.cpp:165] Memory required for data: 208954012
I0419 16:31:26.295626  4630 layer_factory.hpp:77] Creating layer conv2
I0419 16:31:26.295637  4630 net.cpp:106] Creating Layer conv2
I0419 16:31:26.295647  4630 net.cpp:454] conv2 <- pool1
I0419 16:31:26.295655  4630 net.cpp:411] conv2 -> conv2
I0419 16:31:26.297361  4630 net.cpp:150] Setting up conv2
I0419 16:31:26.297380  4630 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:31:26.297384  4630 net.cpp:165] Memory required for data: 218759836
I0419 16:31:26.297392  4630 layer_factory.hpp:77] Creating layer relu2
I0419 16:31:26.297408  4630 net.cpp:106] Creating Layer relu2
I0419 16:31:26.297415  4630 net.cpp:454] relu2 <- conv2
I0419 16:31:26.297420  4630 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:31:26.297430  4630 net.cpp:150] Setting up relu2
I0419 16:31:26.297442  4630 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:31:26.297447  4630 net.cpp:165] Memory required for data: 228565660
I0419 16:31:26.297451  4630 layer_factory.hpp:77] Creating layer norm2
I0419 16:31:26.297463  4630 net.cpp:106] Creating Layer norm2
I0419 16:31:26.297473  4630 net.cpp:454] norm2 <- conv2
I0419 16:31:26.297482  4630 net.cpp:411] norm2 -> norm2
I0419 16:31:26.297586  4630 net.cpp:150] Setting up norm2
I0419 16:31:26.297597  4630 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:31:26.297600  4630 net.cpp:165] Memory required for data: 238371484
I0419 16:31:26.297602  4630 layer_factory.hpp:77] Creating layer pool2
I0419 16:31:26.297607  4630 net.cpp:106] Creating Layer pool2
I0419 16:31:26.297616  4630 net.cpp:454] pool2 <- norm2
I0419 16:31:26.297621  4630 net.cpp:411] pool2 -> pool2
I0419 16:31:26.297663  4630 net.cpp:150] Setting up pool2
I0419 16:31:26.297675  4630 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:31:26.297677  4630 net.cpp:165] Memory required for data: 240927388
I0419 16:31:26.297680  4630 layer_factory.hpp:77] Creating layer conv3
I0419 16:31:26.297686  4630 net.cpp:106] Creating Layer conv3
I0419 16:31:26.297693  4630 net.cpp:454] conv3 <- pool2
I0419 16:31:26.297701  4630 net.cpp:411] conv3 -> conv3
I0419 16:31:26.301013  4630 net.cpp:150] Setting up conv3
I0419 16:31:26.301033  4630 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:31:26.301035  4630 net.cpp:165] Memory required for data: 244761244
I0419 16:31:26.301044  4630 layer_factory.hpp:77] Creating layer relu3
I0419 16:31:26.301053  4630 net.cpp:106] Creating Layer relu3
I0419 16:31:26.301057  4630 net.cpp:454] relu3 <- conv3
I0419 16:31:26.301062  4630 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:31:26.301070  4630 net.cpp:150] Setting up relu3
I0419 16:31:26.301079  4630 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:31:26.301082  4630 net.cpp:165] Memory required for data: 248595100
I0419 16:31:26.301086  4630 layer_factory.hpp:77] Creating layer conv4
I0419 16:31:26.301100  4630 net.cpp:106] Creating Layer conv4
I0419 16:31:26.301110  4630 net.cpp:454] conv4 <- conv3
I0419 16:31:26.301118  4630 net.cpp:411] conv4 -> conv4
I0419 16:31:26.304433  4630 net.cpp:150] Setting up conv4
I0419 16:31:26.304451  4630 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:31:26.304455  4630 net.cpp:165] Memory required for data: 252428956
I0419 16:31:26.304461  4630 layer_factory.hpp:77] Creating layer relu4
I0419 16:31:26.304466  4630 net.cpp:106] Creating Layer relu4
I0419 16:31:26.304469  4630 net.cpp:454] relu4 <- conv4
I0419 16:31:26.304477  4630 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:31:26.304488  4630 net.cpp:150] Setting up relu4
I0419 16:31:26.304494  4630 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:31:26.304503  4630 net.cpp:165] Memory required for data: 256262812
I0419 16:31:26.304508  4630 layer_factory.hpp:77] Creating layer conv5
I0419 16:31:26.304520  4630 net.cpp:106] Creating Layer conv5
I0419 16:31:26.304527  4630 net.cpp:454] conv5 <- conv4
I0419 16:31:26.304533  4630 net.cpp:411] conv5 -> conv5
I0419 16:31:26.306843  4630 net.cpp:150] Setting up conv5
I0419 16:31:26.306860  4630 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:31:26.306864  4630 net.cpp:165] Memory required for data: 258818716
I0419 16:31:26.306871  4630 layer_factory.hpp:77] Creating layer relu5
I0419 16:31:26.306877  4630 net.cpp:106] Creating Layer relu5
I0419 16:31:26.306884  4630 net.cpp:454] relu5 <- conv5
I0419 16:31:26.306892  4630 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:31:26.306901  4630 net.cpp:150] Setting up relu5
I0419 16:31:26.306910  4630 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:31:26.306913  4630 net.cpp:165] Memory required for data: 261374620
I0419 16:31:26.306917  4630 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:31:26.306936  4630 net.cpp:106] Creating Layer rpn_conv1
I0419 16:31:26.306947  4630 net.cpp:454] rpn_conv1 <- conv5
I0419 16:31:26.306957  4630 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:31:26.324062  4630 net.cpp:150] Setting up rpn_conv1
I0419 16:31:26.324080  4630 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:31:26.324084  4630 net.cpp:165] Memory required for data: 263930524
I0419 16:31:26.324090  4630 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:31:26.324095  4630 net.cpp:106] Creating Layer rpn_relu1
I0419 16:31:26.324102  4630 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:31:26.324110  4630 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:31:26.324117  4630 net.cpp:150] Setting up rpn_relu1
I0419 16:31:26.324126  4630 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:31:26.324131  4630 net.cpp:165] Memory required for data: 266486428
I0419 16:31:26.324136  4630 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:31:26.324146  4630 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:31:26.324152  4630 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:31:26.324159  4630 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:31:26.324169  4630 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:31:26.324218  4630 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:31:26.324230  4630 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:31:26.324234  4630 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:31:26.324237  4630 net.cpp:165] Memory required for data: 271598236
I0419 16:31:26.324240  4630 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:31:26.324250  4630 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:31:26.324260  4630 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:31:26.324270  4630 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:31:26.324602  4630 net.cpp:150] Setting up rpn_cls_score
I0419 16:31:26.324615  4630 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:31:26.324617  4630 net.cpp:165] Memory required for data: 271777948
I0419 16:31:26.324623  4630 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:31:26.324628  4630 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:31:26.324631  4630 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:31:26.324642  4630 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:31:26.324656  4630 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:31:26.324702  4630 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:31:26.324712  4630 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:31:26.324717  4630 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:31:26.324718  4630 net.cpp:165] Memory required for data: 272137372
I0419 16:31:26.324722  4630 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:31:26.324733  4630 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:31:26.324741  4630 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:31:26.324749  4630 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:31:26.325208  4630 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:31:26.325220  4630 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:31:26.325223  4630 net.cpp:165] Memory required for data: 272496796
I0419 16:31:26.325228  4630 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:31:26.325235  4630 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:31:26.325239  4630 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:31:26.325248  4630 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:31:26.325287  4630 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:31:26.325301  4630 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:31:26.325304  4630 net.cpp:165] Memory required for data: 272676508
I0419 16:31:26.325307  4630 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:31:26.325853  4630 net.cpp:106] Creating Layer rpn-data
I0419 16:31:26.325871  4630 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:31:26.325877  4630 net.cpp:454] rpn-data <- gt_boxes
I0419 16:31:26.325881  4630 net.cpp:454] rpn-data <- im_info
I0419 16:31:26.325884  4630 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:31:26.325889  4630 net.cpp:411] rpn-data -> rpn_labels
I0419 16:31:26.325896  4630 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:31:26.325907  4630 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:31:26.325915  4630 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:31:26.327196  4630 net.cpp:150] Setting up rpn-data
I0419 16:31:26.327219  4630 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:31:26.327222  4630 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:31:26.327226  4630 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:31:26.327229  4630 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:31:26.327231  4630 net.cpp:165] Memory required for data: 273844636
I0419 16:31:26.327235  4630 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:31:26.327250  4630 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:31:26.327257  4630 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:31:26.327266  4630 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:31:26.327275  4630 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:31:26.327294  4630 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:31:26.327430  4630 net.cpp:150] Setting up rpn_loss_cls
I0419 16:31:26.327442  4630 net.cpp:157] Top shape: (1)
I0419 16:31:26.327445  4630 net.cpp:160]     with loss weight 1
I0419 16:31:26.327458  4630 net.cpp:165] Memory required for data: 273844640
I0419 16:31:26.327461  4630 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:31:26.327473  4630 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:31:26.327484  4630 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:31:26.327491  4630 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:31:26.327497  4630 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:31:26.327502  4630 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:31:26.327513  4630 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:31:26.328101  4630 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:31:26.328114  4630 net.cpp:157] Top shape: (1)
I0419 16:31:26.328116  4630 net.cpp:160]     with loss weight 1
I0419 16:31:26.328122  4630 net.cpp:165] Memory required for data: 273844644
I0419 16:31:26.328125  4630 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:31:26.328135  4630 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:31:26.328143  4630 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:31:26.328184  4630 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:31:26.328196  4630 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:31:26.328198  4630 net.cpp:165] Memory required for data: 273881508
I0419 16:31:26.328200  4630 layer_factory.hpp:77] Creating layer fc6
I0419 16:31:26.328208  4630 net.cpp:106] Creating Layer fc6
I0419 16:31:26.328212  4630 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:31:26.328218  4630 net.cpp:411] fc6 -> fc6
I0419 16:31:26.426633  4630 net.cpp:150] Setting up fc6
I0419 16:31:26.426671  4630 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:31:26.426674  4630 net.cpp:165] Memory required for data: 273897892
I0419 16:31:26.426690  4630 layer_factory.hpp:77] Creating layer relu6
I0419 16:31:26.426700  4630 net.cpp:106] Creating Layer relu6
I0419 16:31:26.426707  4630 net.cpp:454] relu6 <- fc6
I0419 16:31:26.426713  4630 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:31:26.426722  4630 net.cpp:150] Setting up relu6
I0419 16:31:26.426728  4630 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:31:26.426729  4630 net.cpp:165] Memory required for data: 273914276
I0419 16:31:26.426733  4630 layer_factory.hpp:77] Creating layer fc7
I0419 16:31:26.426743  4630 net.cpp:106] Creating Layer fc7
I0419 16:31:26.426744  4630 net.cpp:454] fc7 <- fc6
I0419 16:31:26.426749  4630 net.cpp:411] fc7 -> fc7
I0419 16:31:26.470284  4630 net.cpp:150] Setting up fc7
I0419 16:31:26.470335  4630 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:31:26.470338  4630 net.cpp:165] Memory required for data: 273930660
I0419 16:31:26.470350  4630 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:31:26.470367  4630 net.cpp:106] Creating Layer silence_fc7
I0419 16:31:26.470373  4630 net.cpp:454] silence_fc7 <- fc7
I0419 16:31:26.470381  4630 net.cpp:150] Setting up silence_fc7
I0419 16:31:26.470387  4630 net.cpp:165] Memory required for data: 273930660
I0419 16:31:26.470391  4630 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:31:26.470393  4630 net.cpp:228] fc7 does not need backward computation.
I0419 16:31:26.470396  4630 net.cpp:228] relu6 does not need backward computation.
I0419 16:31:26.470399  4630 net.cpp:228] fc6 does not need backward computation.
I0419 16:31:26.470402  4630 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:31:26.470404  4630 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:31:26.470408  4630 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:31:26.470412  4630 net.cpp:226] rpn-data needs backward computation.
I0419 16:31:26.470417  4630 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:31:26.470420  4630 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:31:26.470424  4630 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:31:26.470427  4630 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:31:26.470430  4630 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:31:26.470433  4630 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:31:26.470438  4630 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:31:26.470439  4630 net.cpp:228] relu5 does not need backward computation.
I0419 16:31:26.470443  4630 net.cpp:228] conv5 does not need backward computation.
I0419 16:31:26.470445  4630 net.cpp:228] relu4 does not need backward computation.
I0419 16:31:26.470448  4630 net.cpp:228] conv4 does not need backward computation.
I0419 16:31:26.470453  4630 net.cpp:228] relu3 does not need backward computation.
I0419 16:31:26.470454  4630 net.cpp:228] conv3 does not need backward computation.
I0419 16:31:26.470458  4630 net.cpp:228] pool2 does not need backward computation.
I0419 16:31:26.470463  4630 net.cpp:228] norm2 does not need backward computation.
I0419 16:31:26.470466  4630 net.cpp:228] relu2 does not need backward computation.
I0419 16:31:26.470469  4630 net.cpp:228] conv2 does not need backward computation.
I0419 16:31:26.470473  4630 net.cpp:228] pool1 does not need backward computation.
I0419 16:31:26.470475  4630 net.cpp:228] norm1 does not need backward computation.
I0419 16:31:26.470479  4630 net.cpp:228] relu1 does not need backward computation.
I0419 16:31:26.470481  4630 net.cpp:228] conv1 does not need backward computation.
I0419 16:31:26.470485  4630 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:31:26.470489  4630 net.cpp:228] input-data does not need backward computation.
I0419 16:31:26.470491  4630 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:31:26.470494  4630 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:31:26.470520  4630 net.cpp:283] Network initialization done.
I0419 16:31:26.470628  4630 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
I0419 16:31:26.906957  4630 net.cpp:816] Ignoring source layer data
I0419 16:31:26.910046  4630 net.cpp:816] Ignoring source layer conv5_relu5_0_split
I0419 16:31:26.910060  4630 net.cpp:816] Ignoring source layer roi_pool_conv5
I0419 16:31:26.940709  4630 net.cpp:816] Ignoring source layer drop6
I0419 16:31:26.954310  4630 net.cpp:816] Ignoring source layer relu7
I0419 16:31:26.954341  4630 net.cpp:816] Ignoring source layer drop7
I0419 16:31:26.954344  4630 net.cpp:816] Ignoring source layer fc7_drop7_0_split
I0419 16:31:26.954346  4630 net.cpp:816] Ignoring source layer cls_score
I0419 16:31:26.954349  4630 net.cpp:816] Ignoring source layer bbox_pred
I0419 16:31:26.954351  4630 net.cpp:816] Ignoring source layer loss_cls
I0419 16:31:26.954354  4630 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:31:26.954874  4630 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:31:26.954882  4630 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Solving...
I0419 16:31:27.133843  4630 solver.cpp:229] Iteration 0, loss = 1.1888
I0419 16:31:27.133886  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.70785 (* 1 = 0.70785 loss)
I0419 16:31:27.133894  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.480947 (* 1 = 0.480947 loss)
I0419 16:31:27.133906  4630 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:31:29.461052  4630 solver.cpp:229] Iteration 20, loss = 0.532486
I0419 16:31:29.461092  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.246661 (* 1 = 0.246661 loss)
I0419 16:31:29.461099  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.285825 (* 1 = 0.285825 loss)
I0419 16:31:29.461104  4630 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:31:31.735589  4630 solver.cpp:229] Iteration 40, loss = 0.387418
I0419 16:31:31.735635  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.208893 (* 1 = 0.208893 loss)
I0419 16:31:31.735641  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.178525 (* 1 = 0.178525 loss)
I0419 16:31:31.735647  4630 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:31:33.990429  4630 solver.cpp:229] Iteration 60, loss = 0.931276
I0419 16:31:33.990470  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.460186 (* 1 = 0.460186 loss)
I0419 16:31:33.990478  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.471089 (* 1 = 0.471089 loss)
I0419 16:31:33.990483  4630 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:31:36.300776  4630 solver.cpp:229] Iteration 80, loss = 0.649747
I0419 16:31:36.300819  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.433855 (* 1 = 0.433855 loss)
I0419 16:31:36.300827  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.215892 (* 1 = 0.215892 loss)
I0419 16:31:36.300832  4630 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:31:38.585603  4630 solver.cpp:229] Iteration 100, loss = 0.288423
I0419 16:31:38.585644  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.249034 (* 1 = 0.249034 loss)
I0419 16:31:38.585651  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0393885 (* 1 = 0.0393885 loss)
I0419 16:31:38.585656  4630 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:31:40.845854  4630 solver.cpp:229] Iteration 120, loss = 0.764852
I0419 16:31:40.845894  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.285139 (* 1 = 0.285139 loss)
I0419 16:31:40.845901  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.479713 (* 1 = 0.479713 loss)
I0419 16:31:40.845906  4630 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:31:43.132230  4630 solver.cpp:229] Iteration 140, loss = 0.244432
I0419 16:31:43.132271  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.110122 (* 1 = 0.110122 loss)
I0419 16:31:43.132277  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.134311 (* 1 = 0.134311 loss)
I0419 16:31:43.132282  4630 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:31:45.354497  4630 solver.cpp:229] Iteration 160, loss = 0.350078
I0419 16:31:45.354537  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.185072 (* 1 = 0.185072 loss)
I0419 16:31:45.354543  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165006 (* 1 = 0.165006 loss)
I0419 16:31:45.354548  4630 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:31:47.624161  4630 solver.cpp:229] Iteration 180, loss = 0.268064
I0419 16:31:47.624203  4630 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.187254 (* 1 = 0.187254 loss)
I0419 16:31:47.624212  4630 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0808104 (* 1 = 0.0808104 loss)
I0419 16:31:47.624217  4630 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.114s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:31:53.565031  4658 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:31:53.565188  4658 net.cpp:413] Input 0 -> data
I0419 16:31:53.580647  4658 net.cpp:413] Input 1 -> im_info
I0419 16:31:53.580693  4658 layer_factory.hpp:77] Creating layer conv1
I0419 16:31:53.580720  4658 net.cpp:106] Creating Layer conv1
I0419 16:31:53.580729  4658 net.cpp:454] conv1 <- data
I0419 16:31:53.580742  4658 net.cpp:411] conv1 -> conv1
I0419 16:31:53.581544  4658 net.cpp:150] Setting up conv1
I0419 16:31:53.581567  4658 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:31:53.581570  4658 net.cpp:165] Memory required for data: 4816896
I0419 16:31:53.581584  4658 layer_factory.hpp:77] Creating layer relu1
I0419 16:31:53.581603  4658 net.cpp:106] Creating Layer relu1
I0419 16:31:53.581609  4658 net.cpp:454] relu1 <- conv1
I0419 16:31:53.581619  4658 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:31:53.581631  4658 net.cpp:150] Setting up relu1
I0419 16:31:53.581641  4658 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:31:53.581646  4658 net.cpp:165] Memory required for data: 9633792
I0419 16:31:53.581650  4658 layer_factory.hpp:77] Creating layer norm1
I0419 16:31:53.581660  4658 net.cpp:106] Creating Layer norm1
I0419 16:31:53.581666  4658 net.cpp:454] norm1 <- conv1
I0419 16:31:53.581673  4658 net.cpp:411] norm1 -> norm1
I0419 16:31:53.581799  4658 net.cpp:150] Setting up norm1
I0419 16:31:53.581815  4658 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:31:53.581817  4658 net.cpp:165] Memory required for data: 14450688
I0419 16:31:53.581820  4658 layer_factory.hpp:77] Creating layer pool1
I0419 16:31:53.581826  4658 net.cpp:106] Creating Layer pool1
I0419 16:31:53.581828  4658 net.cpp:454] pool1 <- norm1
I0419 16:31:53.581833  4658 net.cpp:411] pool1 -> pool1
I0419 16:31:53.581876  4658 net.cpp:150] Setting up pool1
I0419 16:31:53.581892  4658 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:31:53.581897  4658 net.cpp:165] Memory required for data: 15698304
I0419 16:31:53.581900  4658 layer_factory.hpp:77] Creating layer conv2
I0419 16:31:53.581909  4658 net.cpp:106] Creating Layer conv2
I0419 16:31:53.581914  4658 net.cpp:454] conv2 <- pool1
I0419 16:31:53.581919  4658 net.cpp:411] conv2 -> conv2
I0419 16:31:53.584100  4658 net.cpp:150] Setting up conv2
I0419 16:31:53.584118  4658 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:31:53.584121  4658 net.cpp:165] Memory required for data: 16559488
I0419 16:31:53.584131  4658 layer_factory.hpp:77] Creating layer relu2
I0419 16:31:53.584139  4658 net.cpp:106] Creating Layer relu2
I0419 16:31:53.584143  4658 net.cpp:454] relu2 <- conv2
I0419 16:31:53.584153  4658 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:31:53.584163  4658 net.cpp:150] Setting up relu2
I0419 16:31:53.584170  4658 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:31:53.584177  4658 net.cpp:165] Memory required for data: 17420672
I0419 16:31:53.584180  4658 layer_factory.hpp:77] Creating layer norm2
I0419 16:31:53.584187  4658 net.cpp:106] Creating Layer norm2
I0419 16:31:53.584194  4658 net.cpp:454] norm2 <- conv2
I0419 16:31:53.584203  4658 net.cpp:411] norm2 -> norm2
I0419 16:31:53.584306  4658 net.cpp:150] Setting up norm2
I0419 16:31:53.584318  4658 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:31:53.584321  4658 net.cpp:165] Memory required for data: 18281856
I0419 16:31:53.584324  4658 layer_factory.hpp:77] Creating layer pool2
I0419 16:31:53.584328  4658 net.cpp:106] Creating Layer pool2
I0419 16:31:53.584331  4658 net.cpp:454] pool2 <- norm2
I0419 16:31:53.584336  4658 net.cpp:411] pool2 -> pool2
I0419 16:31:53.584377  4658 net.cpp:150] Setting up pool2
I0419 16:31:53.584393  4658 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:31:53.584398  4658 net.cpp:165] Memory required for data: 18512256
I0419 16:31:53.584400  4658 layer_factory.hpp:77] Creating layer conv3
I0419 16:31:53.584409  4658 net.cpp:106] Creating Layer conv3
I0419 16:31:53.584414  4658 net.cpp:454] conv3 <- pool2
I0419 16:31:53.584420  4658 net.cpp:411] conv3 -> conv3
I0419 16:31:53.586714  4658 net.cpp:150] Setting up conv3
I0419 16:31:53.586730  4658 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:31:53.586733  4658 net.cpp:165] Memory required for data: 18857856
I0419 16:31:53.586742  4658 layer_factory.hpp:77] Creating layer relu3
I0419 16:31:53.586750  4658 net.cpp:106] Creating Layer relu3
I0419 16:31:53.586753  4658 net.cpp:454] relu3 <- conv3
I0419 16:31:53.586760  4658 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:31:53.586769  4658 net.cpp:150] Setting up relu3
I0419 16:31:53.586777  4658 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:31:53.586781  4658 net.cpp:165] Memory required for data: 19203456
I0419 16:31:53.586788  4658 layer_factory.hpp:77] Creating layer conv4
I0419 16:31:53.586800  4658 net.cpp:106] Creating Layer conv4
I0419 16:31:53.586814  4658 net.cpp:454] conv4 <- conv3
I0419 16:31:53.586824  4658 net.cpp:411] conv4 -> conv4
I0419 16:31:53.590102  4658 net.cpp:150] Setting up conv4
I0419 16:31:53.590119  4658 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:31:53.590122  4658 net.cpp:165] Memory required for data: 19549056
I0419 16:31:53.590128  4658 layer_factory.hpp:77] Creating layer relu4
I0419 16:31:53.590134  4658 net.cpp:106] Creating Layer relu4
I0419 16:31:53.590140  4658 net.cpp:454] relu4 <- conv4
I0419 16:31:53.590149  4658 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:31:53.590158  4658 net.cpp:150] Setting up relu4
I0419 16:31:53.590167  4658 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:31:53.590171  4658 net.cpp:165] Memory required for data: 19894656
I0419 16:31:53.590175  4658 layer_factory.hpp:77] Creating layer conv5
I0419 16:31:53.590186  4658 net.cpp:106] Creating Layer conv5
I0419 16:31:53.590191  4658 net.cpp:454] conv5 <- conv4
I0419 16:31:53.590201  4658 net.cpp:411] conv5 -> conv5
I0419 16:31:53.592497  4658 net.cpp:150] Setting up conv5
I0419 16:31:53.592516  4658 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:31:53.592519  4658 net.cpp:165] Memory required for data: 20125056
I0419 16:31:53.592531  4658 layer_factory.hpp:77] Creating layer relu5
I0419 16:31:53.592538  4658 net.cpp:106] Creating Layer relu5
I0419 16:31:53.592543  4658 net.cpp:454] relu5 <- conv5
I0419 16:31:53.592553  4658 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:31:53.592563  4658 net.cpp:150] Setting up relu5
I0419 16:31:53.592571  4658 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:31:53.592577  4658 net.cpp:165] Memory required for data: 20355456
I0419 16:31:53.592582  4658 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:31:53.592592  4658 net.cpp:106] Creating Layer rpn_conv1
I0419 16:31:53.592595  4658 net.cpp:454] rpn_conv1 <- conv5
I0419 16:31:53.592605  4658 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:31:53.594238  4658 net.cpp:150] Setting up rpn_conv1
I0419 16:31:53.594254  4658 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:31:53.594257  4658 net.cpp:165] Memory required for data: 20585856
I0419 16:31:53.594264  4658 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:31:53.594269  4658 net.cpp:106] Creating Layer rpn_relu1
I0419 16:31:53.594275  4658 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:31:53.594283  4658 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:31:53.594291  4658 net.cpp:150] Setting up rpn_relu1
I0419 16:31:53.594300  4658 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:31:53.594305  4658 net.cpp:165] Memory required for data: 20816256
I0419 16:31:53.594308  4658 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:31:53.594321  4658 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:31:53.594347  4658 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:31:53.594357  4658 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:31:53.594372  4658 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:31:53.594421  4658 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:31:53.594437  4658 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:31:53.594441  4658 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:31:53.594444  4658 net.cpp:165] Memory required for data: 21277056
I0419 16:31:53.594446  4658 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:31:53.594452  4658 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:31:53.594457  4658 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:31:53.594466  4658 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:31:53.594665  4658 net.cpp:150] Setting up rpn_cls_score
I0419 16:31:53.594676  4658 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:31:53.594679  4658 net.cpp:165] Memory required for data: 21293256
I0419 16:31:53.594686  4658 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:31:53.594693  4658 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:31:53.594703  4658 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:31:53.594710  4658 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:31:53.594918  4658 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:31:53.594930  4658 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:31:53.594933  4658 net.cpp:165] Memory required for data: 21325656
I0419 16:31:53.594939  4658 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:31:53.594945  4658 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:31:53.594949  4658 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:31:53.594957  4658 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:31:53.595000  4658 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:31:53.595012  4658 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:31:53.595016  4658 net.cpp:165] Memory required for data: 21341856
I0419 16:31:53.595018  4658 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:31:53.595024  4658 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:31:53.595027  4658 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:31:53.595033  4658 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:31:53.595105  4658 net.cpp:150] Setting up rpn_cls_prob
I0419 16:31:53.595116  4658 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:31:53.595119  4658 net.cpp:165] Memory required for data: 21358056
I0419 16:31:53.595122  4658 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:31:53.595127  4658 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:31:53.595130  4658 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:31:53.595137  4658 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:31:53.595168  4658 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:31:53.595183  4658 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:31:53.595188  4658 net.cpp:165] Memory required for data: 21374256
I0419 16:31:53.595193  4658 layer_factory.hpp:77] Creating layer proposal
I0419 16:31:53.596741  4658 net.cpp:106] Creating Layer proposal
I0419 16:31:53.596760  4658 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:31:53.596765  4658 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:31:53.596768  4658 net.cpp:454] proposal <- im_info
I0419 16:31:53.596774  4658 net.cpp:411] proposal -> rois
I0419 16:31:53.596782  4658 net.cpp:411] proposal -> scores
I0419 16:31:53.598094  4658 net.cpp:150] Setting up proposal
I0419 16:31:53.598116  4658 net.cpp:157] Top shape: 1 5 (5)
I0419 16:31:53.598121  4658 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:31:53.598124  4658 net.cpp:165] Memory required for data: 21374280
I0419 16:31:53.598127  4658 net.cpp:228] proposal does not need backward computation.
I0419 16:31:53.598131  4658 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:31:53.598135  4658 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:31:53.598137  4658 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:31:53.598142  4658 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:31:53.598147  4658 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:31:53.598155  4658 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:31:53.598160  4658 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:31:53.598163  4658 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:31:53.598167  4658 net.cpp:228] relu5 does not need backward computation.
I0419 16:31:53.598173  4658 net.cpp:228] conv5 does not need backward computation.
I0419 16:31:53.598178  4658 net.cpp:228] relu4 does not need backward computation.
I0419 16:31:53.598182  4658 net.cpp:228] conv4 does not need backward computation.
I0419 16:31:53.598186  4658 net.cpp:228] relu3 does not need backward computation.
I0419 16:31:53.598192  4658 net.cpp:228] conv3 does not need backward computation.
I0419 16:31:53.598197  4658 net.cpp:228] pool2 does not need backward computation.
I0419 16:31:53.598202  4658 net.cpp:228] norm2 does not need backward computation.
I0419 16:31:53.598206  4658 net.cpp:228] relu2 does not need backward computation.
I0419 16:31:53.598211  4658 net.cpp:228] conv2 does not need backward computation.
I0419 16:31:53.598215  4658 net.cpp:228] pool1 does not need backward computation.
I0419 16:31:53.598219  4658 net.cpp:228] norm1 does not need backward computation.
I0419 16:31:53.598224  4658 net.cpp:228] relu1 does not need backward computation.
I0419 16:31:53.598232  4658 net.cpp:228] conv1 does not need backward computation.
I0419 16:31:53.598237  4658 net.cpp:270] This network produces output rois
I0419 16:31:53.598242  4658 net.cpp:270] This network produces output scores
I0419 16:31:53.598273  4658 net.cpp:283] Network initialization done.
I0419 16:31:54.029029  4658 net.cpp:816] Ignoring source layer input-data
I0419 16:31:54.029072  4658 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:31:54.032651  4658 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:31:54.032685  4658 net.cpp:816] Ignoring source layer rpn-data
I0419 16:31:54.032690  4658 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:31:54.032693  4658 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:31:54.032697  4658 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:31:54.032701  4658 net.cpp:816] Ignoring source layer fc6
I0419 16:31:54.032706  4658 net.cpp:816] Ignoring source layer relu6
I0419 16:31:54.032709  4658 net.cpp:816] Ignoring source layer fc7
I0419 16:31:54.032713  4658 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.162s
im_proposals: 2/506 0.152s
im_proposals: 3/506 0.148s
im_proposals: 4/506 0.146s
im_proposals: 5/506 0.145s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.144s
im_proposals: 8/506 0.144s
im_proposals: 9/506 0.143s
im_proposals: 10/506 0.143s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.142s
im_proposals: 13/506 0.142s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.142s
im_proposals: 16/506 0.142s
im_proposals: 17/506 0.142s
im_proposals: 18/506 0.142s
im_proposals: 19/506 0.142s
im_proposals: 20/506 0.142s
im_proposals: 21/506 0.142s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.141s
im_proposals: 33/506 0.141s
im_proposals: 34/506 0.141s
im_proposals: 35/506 0.141s
im_proposals: 36/506 0.141s
im_proposals: 37/506 0.141s
im_proposals: 38/506 0.141s
im_proposals: 39/506 0.141s
im_proposals: 40/506 0.141s
im_proposals: 41/506 0.141s
im_proposals: 42/506 0.141s
im_proposals: 43/506 0.141s
im_proposals: 44/506 0.141s
im_proposals: 45/506 0.141s
im_proposals: 46/506 0.141s
im_proposals: 47/506 0.141s
im_proposals: 48/506 0.141s
im_proposals: 49/506 0.141s
im_proposals: 50/506 0.141s
im_proposals: 51/506 0.141s
im_proposals: 52/506 0.141s
im_proposals: 53/506 0.141s
im_proposals: 54/506 0.141s
im_proposals: 55/506 0.141s
im_proposals: 56/506 0.141s
im_proposals: 57/506 0.141s
im_proposals: 58/506 0.141s
im_proposals: 59/506 0.141s
im_proposals: 60/506 0.141s
im_proposals: 61/506 0.140s
im_proposals: 62/506 0.141s
im_proposals: 63/506 0.141s
im_proposals: 64/506 0.140s
im_proposals: 65/506 0.140s
im_proposals: 66/506 0.140s
im_proposals: 67/506 0.140s
im_proposals: 68/506 0.140s
im_proposals: 69/506 0.140s
im_proposals: 70/506 0.140s
im_proposals: 71/506 0.140s
im_proposals: 72/506 0.140s
im_proposals: 73/506 0.140s
im_proposals: 74/506 0.140s
im_proposals: 75/506 0.140s
im_proposals: 76/506 0.140s
im_proposals: 77/506 0.140s
im_proposals: 78/506 0.140s
im_proposals: 79/506 0.140s
im_proposals: 80/506 0.140s
im_proposals: 81/506 0.140s
im_proposals: 82/506 0.140s
im_proposals: 83/506 0.140s
im_proposals: 84/506 0.140s
im_proposals: 85/506 0.140s
im_proposals: 86/506 0.140s
im_proposals: 87/506 0.140s
im_proposals: 88/506 0.140s
im_proposals: 89/506 0.140s
im_proposals: 90/506 0.140s
im_proposals: 91/506 0.140s
im_proposals: 92/506 0.140s
im_proposals: 93/506 0.140s
im_proposals: 94/506 0.140s
im_proposals: 95/506 0.140s
im_proposals: 96/506 0.140s
im_proposals: 97/506 0.140s
im_proposals: 98/506 0.140s
im_proposals: 99/506 0.140s
im_proposals: 100/506 0.141s
im_proposals: 101/506 0.141s
im_proposals: 102/506 0.141s
im_proposals: 103/506 0.141s
im_proposals: 104/506 0.141s
im_proposals: 105/506 0.141s
im_proposals: 106/506 0.141s
im_proposals: 107/506 0.141s
im_proposals: 108/506 0.141s
im_proposals: 109/506 0.141s
im_proposals: 110/506 0.141s
im_proposals: 111/506 0.141s
im_proposals: 112/506 0.141s
im_proposals: 113/506 0.141s
im_proposals: 114/506 0.141s
im_proposals: 115/506 0.141s
im_proposals: 116/506 0.141s
im_proposals: 117/506 0.141s
im_proposals: 118/506 0.141s
im_proposals: 119/506 0.141s
im_proposals: 120/506 0.141s
im_proposals: 121/506 0.141s
im_proposals: 122/506 0.141s
im_proposals: 123/506 0.141s
im_proposals: 124/506 0.141s
im_proposals: 125/506 0.141s
im_proposals: 126/506 0.141s
im_proposals: 127/506 0.141s
im_proposals: 128/506 0.141s
im_proposals: 129/506 0.141s
im_proposals: 130/506 0.141s
im_proposals: 131/506 0.141s
im_proposals: 132/506 0.141s
im_proposals: 133/506 0.141s
im_proposals: 134/506 0.141s
im_proposals: 135/506 0.141s
im_proposals: 136/506 0.141s
im_proposals: 137/506 0.141s
im_proposals: 138/506 0.141s
im_proposals: 139/506 0.141s
im_proposals: 140/506 0.141s
im_proposals: 141/506 0.141s
im_proposals: 142/506 0.141s
im_proposals: 143/506 0.141s
im_proposals: 144/506 0.141s
im_proposals: 145/506 0.141s
im_proposals: 146/506 0.141s
im_proposals: 147/506 0.141s
im_proposals: 148/506 0.141s
im_proposals: 149/506 0.141s
im_proposals: 150/506 0.141s
im_proposals: 151/506 0.141s
im_proposals: 152/506 0.141s
im_proposals: 153/506 0.141s
im_proposals: 154/506 0.141s
im_proposals: 155/506 0.141s
im_proposals: 156/506 0.141s
im_proposals: 157/506 0.141s
im_proposals: 158/506 0.141s
im_proposals: 159/506 0.141s
im_proposals: 160/506 0.141s
im_proposals: 161/506 0.141s
im_proposals: 162/506 0.141s
im_proposals: 163/506 0.141s
im_proposals: 164/506 0.141s
im_proposals: 165/506 0.141s
im_proposals: 166/506 0.141s
im_proposals: 167/506 0.141s
im_proposals: 168/506 0.141s
im_proposals: 169/506 0.141s
im_proposals: 170/506 0.141s
im_proposals: 171/506 0.141s
im_proposals: 172/506 0.141s
im_proposals: 173/506 0.141s
im_proposals: 174/506 0.141s
im_proposals: 175/506 0.141s
im_proposals: 176/506 0.141s
im_proposals: 177/506 0.141s
im_proposals: 178/506 0.141s
im_proposals: 179/506 0.141s
im_proposals: 180/506 0.141s
im_proposals: 181/506 0.141s
im_proposals: 182/506 0.141s
im_proposals: 183/506 0.141s
im_proposals: 184/506 0.141s
im_proposals: 185/506 0.141s
im_proposals: 186/506 0.141s
im_proposals: 187/506 0.141s
im_proposals: 188/506 0.141s
im_proposals: 189/506 0.141s
im_proposals: 190/506 0.141s
im_proposals: 191/506 0.141s
im_proposals: 192/506 0.141s
im_proposals: 193/506 0.141s
im_proposals: 194/506 0.141s
im_proposals: 195/506 0.141s
im_proposals: 196/506 0.141s
im_proposals: 197/506 0.141s
im_proposals: 198/506 0.141s
im_proposals: 199/506 0.141s
im_proposals: 200/506 0.141s
im_proposals: 201/506 0.141s
im_proposals: 202/506 0.141s
im_proposals: 203/506 0.141s
im_proposals: 204/506 0.141s
im_proposals: 205/506 0.141s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.141s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.141s
im_proposals: 221/506 0.141s
im_proposals: 222/506 0.141s
im_proposals: 223/506 0.141s
im_proposals: 224/506 0.141s
im_proposals: 225/506 0.141s
im_proposals: 226/506 0.141s
im_proposals: 227/506 0.141s
im_proposals: 228/506 0.141s
im_proposals: 229/506 0.141s
im_proposals: 230/506 0.141s
im_proposals: 231/506 0.141s
im_proposals: 232/506 0.141s
im_proposals: 233/506 0.141s
im_proposals: 234/506 0.141s
im_proposals: 235/506 0.141s
im_proposals: 236/506 0.141s
im_proposals: 237/506 0.141s
im_proposals: 238/506 0.141s
im_proposals: 239/506 0.141s
im_proposals: 240/506 0.141s
im_proposals: 241/506 0.141s
im_proposals: 242/506 0.141s
im_proposals: 243/506 0.141s
im_proposals: 244/506 0.141s
im_proposals: 245/506 0.141s
im_proposals: 246/506 0.141s
im_proposals: 247/506 0.141s
im_proposals: 248/506 0.141s
im_proposals: 249/506 0.141s
im_proposals: 250/506 0.141s
im_proposals: 251/506 0.141s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.141s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.141s
im_proposals: 257/506 0.141s
im_proposals: 258/506 0.141s
im_proposals: 259/506 0.141s
im_proposals: 260/506 0.141s
im_proposals: 261/506 0.141s
im_proposals: 262/506 0.141s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.141s
im_proposals: 266/506 0.141s
im_proposals: 267/506 0.141s
im_proposals: 268/506 0.141s
im_proposals: 269/506 0.141s
im_proposals: 270/506 0.141s
im_proposals: 271/506 0.141s
im_proposals: 272/506 0.141s
im_proposals: 273/506 0.141s
im_proposals: 274/506 0.141s
im_proposals: 275/506 0.141s
im_proposals: 276/506 0.141s
im_proposals: 277/506 0.141s
im_proposals: 278/506 0.141s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.141s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.141s
im_proposals: 288/506 0.141s
im_proposals: 289/506 0.141s
im_proposals: 290/506 0.141s
im_proposals: 291/506 0.141s
im_proposals: 292/506 0.141s
im_proposals: 293/506 0.141s
im_proposals: 294/506 0.141s
im_proposals: 295/506 0.141s
im_proposals: 296/506 0.141s
im_proposals: 297/506 0.141s
im_proposals: 298/506 0.141s
im_proposals: 299/506 0.141s
im_proposals: 300/506 0.141s
im_proposals: 301/506 0.141s
im_proposals: 302/506 0.141s
im_proposals: 303/506 0.141s
im_proposals: 304/506 0.141s
im_proposals: 305/506 0.141s
im_proposals: 306/506 0.141s
im_proposals: 307/506 0.141s
im_proposals: 308/506 0.141s
im_proposals: 309/506 0.141s
im_proposals: 310/506 0.141s
im_proposals: 311/506 0.141s
im_proposals: 312/506 0.141s
im_proposals: 313/506 0.141s
im_proposals: 314/506 0.141s
im_proposals: 315/506 0.141s
im_proposals: 316/506 0.141s
im_proposals: 317/506 0.141s
im_proposals: 318/506 0.141s
im_proposals: 319/506 0.141s
im_proposals: 320/506 0.141s
im_proposals: 321/506 0.141s
im_proposals: 322/506 0.141s
im_proposals: 323/506 0.141s
im_proposals: 324/506 0.141s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.141s
im_proposals: 332/506 0.141s
im_proposals: 333/506 0.141s
im_proposals: 334/506 0.141s
im_proposals: 335/506 0.141s
im_proposals: 336/506 0.141s
im_proposals: 337/506 0.141s
im_proposals: 338/506 0.141s
im_proposals: 339/506 0.141s
im_proposals: 340/506 0.141s
im_proposals: 341/506 0.141s
im_proposals: 342/506 0.141s
im_proposals: 343/506 0.141s
im_proposals: 344/506 0.141s
im_proposals: 345/506 0.141s
im_proposals: 346/506 0.141s
im_proposals: 347/506 0.141s
im_proposals: 348/506 0.141s
im_proposals: 349/506 0.141s
im_proposals: 350/506 0.141s
im_proposals: 351/506 0.141s
im_proposals: 352/506 0.141s
im_proposals: 353/506 0.141s
im_proposals: 354/506 0.141s
im_proposals: 355/506 0.141s
im_proposals: 356/506 0.141s
im_proposals: 357/506 0.141s
im_proposals: 358/506 0.141s
im_proposals: 359/506 0.141s
im_proposals: 360/506 0.141s
im_proposals: 361/506 0.141s
im_proposals: 362/506 0.141s
im_proposals: 363/506 0.141s
im_proposals: 364/506 0.141s
im_proposals: 365/506 0.141s
im_proposals: 366/506 0.141s
im_proposals: 367/506 0.141s
im_proposals: 368/506 0.141s
im_proposals: 369/506 0.141s
im_proposals: 370/506 0.141s
im_proposals: 371/506 0.141s
im_proposals: 372/506 0.141s
im_proposals: 373/506 0.141s
im_proposals: 374/506 0.141s
im_proposals: 375/506 0.141s
im_proposals: 376/506 0.141s
im_proposals: 377/506 0.141s
im_proposals: 378/506 0.141s
im_proposals: 379/506 0.141s
im_proposals: 380/506 0.141s
im_proposals: 381/506 0.141s
im_proposals: 382/506 0.141s
im_proposals: 383/506 0.141s
im_proposals: 384/506 0.141s
im_proposals: 385/506 0.141s
im_proposals: 386/506 0.141s
im_proposals: 387/506 0.141s
im_proposals: 388/506 0.141s
im_proposals: 389/506 0.141s
im_proposals: 390/506 0.141s
im_proposals: 391/506 0.141s
im_proposals: 392/506 0.141s
im_proposals: 393/506 0.141s
im_proposals: 394/506 0.141s
im_proposals: 395/506 0.141s
im_proposals: 396/506 0.141s
im_proposals: 397/506 0.141s
im_proposals: 398/506 0.141s
im_proposals: 399/506 0.141s
im_proposals: 400/506 0.141s
im_proposals: 401/506 0.141s
im_proposals: 402/506 0.141s
im_proposals: 403/506 0.141s
im_proposals: 404/506 0.141s
im_proposals: 405/506 0.141s
im_proposals: 406/506 0.141s
im_proposals: 407/506 0.141s
im_proposals: 408/506 0.141s
im_proposals: 409/506 0.141s
im_proposals: 410/506 0.141s
im_proposals: 411/506 0.141s
im_proposals: 412/506 0.141s
im_proposals: 413/506 0.141s
im_proposals: 414/506 0.141s
im_proposals: 415/506 0.141s
im_proposals: 416/506 0.141s
im_proposals: 417/506 0.141s
im_proposals: 418/506 0.141s
im_proposals: 419/506 0.141s
im_proposals: 420/506 0.141s
im_proposals: 421/506 0.141s
im_proposals: 422/506 0.141s
im_proposals: 423/506 0.141s
im_proposals: 424/506 0.141s
im_proposals: 425/506 0.141s
im_proposals: 426/506 0.141s
im_proposals: 427/506 0.141s
im_proposals: 428/506 0.141s
im_proposals: 429/506 0.141s
im_proposals: 430/506 0.141s
im_proposals: 431/506 0.141s
im_proposals: 432/506 0.141s
im_proposals: 433/506 0.141s
im_proposals: 434/506 0.141s
im_proposals: 435/506 0.141s
im_proposals: 436/506 0.141s
im_proposals: 437/506 0.141s
im_proposals: 438/506 0.141s
im_proposals: 439/506 0.141s
im_proposals: 440/506 0.141s
im_proposals: 441/506 0.141s
im_proposals: 442/506 0.141s
im_proposals: 443/506 0.141s
im_proposals: 444/506 0.141s
im_proposals: 445/506 0.141s
im_proposals: 446/506 0.141s
im_proposals: 447/506 0.141s
im_proposals: 448/506 0.141s
im_proposals: 449/506 0.141s
im_proposals: 450/506 0.141s
im_proposals: 451/506 0.141s
im_proposals: 452/506 0.141s
im_proposals: 453/506 0.141s
im_proposals: 454/506 0.141s
im_proposals: 455/506 0.141s
im_proposals: 456/506 0.141s
im_proposals: 457/506 0.141s
im_proposals: 458/506 0.141s
im_proposals: 459/506 0.141s
im_proposals: 460/506 0.141s
im_proposals: 461/506 0.141s
im_proposals: 462/506 0.141s
im_proposals: 463/506 0.141s
im_proposals: 464/506 0.141s
im_proposals: 465/506 0.141s
im_proposals: 466/506 0.141s
im_proposals: 467/506 0.141s
im_proposals: 468/506 0.141s
im_proposals: 469/506 0.141s
im_proposals: 470/506 0.141s
im_proposals: 471/506 0.141s
im_proposals: 472/506 0.141s
im_proposals: 473/506 0.141s
im_proposals: 474/506 0.141s
im_proposals: 475/506 0.141s
im_proposals: 476/506 0.141s
im_proposals: 477/506 0.141s
im_proposals: 478/506 0.141s
im_proposals: 479/506 0.141s
im_proposals: 480/506 0.141s
im_proposals: 481/506 0.141s
im_proposals: 482/506 0.141s
im_proposals: 483/506 0.141s
im_proposals: 484/506 0.141s
im_proposals: 485/506 0.141s
im_proposals: 486/506 0.141s
im_proposals: 487/506 0.141s
im_proposals: 488/506 0.141s
im_proposals: 489/506 0.141s
im_proposals: 490/506 0.141s
im_proposals: 491/506 0.141s
im_proposals: 492/506 0.141s
im_proposals: 493/506 0.141s
im_proposals: 494/506 0.141s
im_proposals: 495/506 0.141s
im_proposals: 496/506 0.141s
im_proposals: 497/506 0.141s
im_proposals: 498/506 0.141s
im_proposals: 499/506 0.141s
im_proposals: 500/506 0.141s
im_proposals: 501/506 0.141s
im_proposals: 502/506 0.141s
im_proposals: 503/506 0.141s
im_proposals: 504/506 0.141s
im_proposals: 505/506 0.141s
im_proposals: 506/506 0.141s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 Fast R-CNN, init from stage 2 RPN R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.15217907e-07  -5.22005132e-03  -4.10793339e-02  -7.08718981e-02]
 [  8.92164694e-09   1.57054396e-02   2.19984295e-02  -2.78301045e-02]
 [ -1.94225821e-08  -8.61593031e-03   2.96989892e-02   6.69870494e-03]
 [ -7.33882189e-08   5.15535573e-02  -1.74732055e-02  -1.51888100e-02]
 [ -3.10440858e-09   3.40905333e-03   4.68776354e-02   1.95911229e-02]
 [  4.61332605e-08   5.50199124e-03   1.79429869e-03  -1.13158196e-02]
 [  6.25020928e-08   6.30476822e-03   4.30800884e-02  -2.43445225e-02]
 [ -6.09688356e-08   5.95824371e-03   3.37530213e-02   8.76786686e-05]
 [  1.42873350e-08  -3.70246134e-03   9.61448828e-03  -4.24198652e-02]
 [ -2.70083547e-08   1.58831410e-02   2.96526237e-02  -6.28295529e-04]
 [ -2.62309697e-08  -3.76861907e-03   3.92433991e-02  -1.64119690e-02]
 [  0.00000000e+00   8.80879668e-03   2.87056245e-02  -2.28243431e-02]
 [ -1.35863529e-09  -9.36826113e-03   3.53036770e-02   6.68836523e-03]
 [  1.29442049e-08  -9.80455974e-03   3.10986247e-02  -2.54646419e-02]
 [ -5.93788696e-08   1.30135879e-03   5.14335681e-02   1.49192686e-02]
 [  7.97444955e-08   3.25487806e-03  -1.91324592e-02  -4.42155972e-02]
 [  9.22009349e-08  -2.18390419e-02   1.16236154e-02  -1.29788245e-02]
 [ -2.68220901e-08  -1.63504751e-02  -3.63551257e-02  -7.34175252e-03]
 [ -3.47987421e-09  -1.28009905e-02   8.80987278e-02   3.39212810e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.62374266e-08   1.18576192e-02   2.12963320e-02  -3.55426945e-02]
 [  0.00000000e+00  -2.73562421e-02   3.71764302e-02   3.08031489e-02]
 [  3.29954284e-08   1.68099446e-02   9.91061250e-03  -6.47755188e-02]
 [  2.33865447e-08  -1.50194568e-02   3.35465732e-02  -5.10053122e-02]
 [  0.00000000e+00  -3.37360675e-02  -1.29876547e-02  -4.63749021e-02]
 [ -1.02445483e-08  -1.05859681e-02   3.63236621e-02  -3.95815330e-02]
 [  0.00000000e+00  -3.08435158e-02   2.72995049e-02  -3.17263682e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  9.77888703e-09  -3.37978094e-02   6.62351726e-03  -8.73072081e-02]
 [  2.13583310e-07   2.10562771e-02   1.04123890e-01   4.05486003e-02]
 [ -3.28065888e-08  -1.67200157e-02   9.78282262e-02  -1.73913034e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.20222791e-08   2.34385286e-02  -1.33259988e-02  -7.88555294e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.62520358e-08   7.97461874e-04   5.48839222e-02   5.03097506e-03]
 [  0.00000000e+00   4.31492925e-04  -5.06124686e-02  -1.98517618e-02]
 [ -3.17891439e-07  -6.48143639e-02   3.39208096e-02   1.15097900e-01]
 [ -2.70295211e-08  -9.81775733e-03   3.64169462e-02  -1.26073294e-02]
 [ -5.43892384e-08   1.18854707e-03   8.86017084e-03   9.47771966e-03]
 [  0.00000000e+00  -6.53625764e-03  -2.74993025e-02  -3.78074154e-02]
 [  5.06639481e-08   1.53237820e-02  -2.71972924e-02  -7.01517552e-02]
 [  0.00000000e+00  -1.49319681e-02  -3.88354932e-02  -2.72935242e-02]]
[ -2.54797916e-09  -3.41964957e-03   1.68764901e-02  -1.36807874e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.03118599  0.07820029  0.1879694   0.14515669]
 [ 0.10536447  0.0797608   0.11253537  0.15070204]
 [ 0.08942478  0.07682879  0.13667433  0.12012078]
 [ 0.07049701  0.08686918  0.10685716  0.16090195]
 [ 0.0689664   0.05151737  0.12282298  0.11078129]
 [ 0.10360388  0.08304575  0.15080414  0.14082425]
 [ 0.11339058  0.09352458  0.12649984  0.13832591]
 [ 0.09553999  0.0839336   0.11087185  0.10994704]
 [ 0.08797301  0.09229198  0.11841849  0.1628425 ]
 [ 0.06877713  0.08209774  0.10731047  0.11249492]
 [ 0.09604479  0.08389204  0.13290211  0.14286387]
 [ 0.08018352  0.0476292   0.06521492  0.08339381]
 [ 0.09109489  0.07227066  0.13383813  0.11657726]
 [ 0.08248341  0.06775028  0.13091794  0.11488883]
 [ 0.08776188  0.06086896  0.11978036  0.13528876]
 [ 0.06678698  0.09860393  0.10633958  0.14652086]
 [ 0.07079301  0.04207947  0.11737497  0.14684446]
 [ 0.0580357   0.06989958  0.10342338  0.11984149]
 [ 0.09966203  0.06932348  0.15290589  0.07684153]
 [ 0.          0.          0.          0.        ]
 [ 0.08639607  0.08594219  0.08092752  0.13541661]
 [ 0.03014494  0.06117042  0.08312902  0.06887794]
 [ 0.0929154   0.06259105  0.06433442  0.1096136 ]
 [ 0.04194884  0.04463624  0.07054561  0.1400867 ]
 [ 0.09694613  0.04771     0.01836732  0.06558402]
 [ 0.09028725  0.07122774  0.09998849  0.12037752]
 [ 0.0663192   0.08220008  0.11306004  0.0989453 ]
 [ 0.          0.          0.          0.        ]
 [ 0.06314527  0.07380807  0.11801258  0.12682124]
 [ 0.13168107  0.08334689  0.14726568  0.06057606]
 [ 0.10438679  0.08478485  0.16519981  0.15300941]
 [ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.07618705  0.09091894  0.11355521  0.12738066]
 [ 0.          0.          0.          0.        ]
 [ 0.09182852  0.05424865  0.09980124  0.098256  ]
 [ 0.09025062  0.06356327  0.11134718  0.0849115 ]
 [ 0.18744507  0.09413033  0.02669303  0.09491941]
 [ 0.09314606  0.07054383  0.10796287  0.10054283]
 [ 0.04503347  0.00237709  0.01772034  0.01895544]
 [ 0.08338253  0.05074086  0.08206391  0.09212766]
 [ 0.082225    0.07509092  0.05039421  0.13436018]
 [ 0.08375372  0.04804325  0.084512    0.08427064]]
[ 0.07453471  0.06203401  0.09298469  0.10116723]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:33:30.011497  4687 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:33:30.011555  4687 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt
I0419 16:33:30.012393  4687 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:33:30.012559  4687 layer_factory.hpp:77] Creating layer data
I0419 16:33:30.013286  4687 net.cpp:106] Creating Layer data
I0419 16:33:30.013309  4687 net.cpp:411] data -> data
I0419 16:33:30.013327  4687 net.cpp:411] data -> rois
I0419 16:33:30.013339  4687 net.cpp:411] data -> labels
I0419 16:33:30.013344  4687 net.cpp:411] data -> bbox_targets
I0419 16:33:30.013350  4687 net.cpp:411] data -> bbox_inside_weights
I0419 16:33:30.013355  4687 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:33:30.028911  4687 net.cpp:150] Setting up data
I0419 16:33:30.028931  4687 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:33:30.028937  4687 net.cpp:157] Top shape: 1 5 (5)
I0419 16:33:30.028941  4687 net.cpp:157] Top shape: 1 (1)
I0419 16:33:30.028947  4687 net.cpp:157] Top shape: 1 176 (176)
I0419 16:33:30.028950  4687 net.cpp:157] Top shape: 1 176 (176)
I0419 16:33:30.028954  4687 net.cpp:157] Top shape: 1 176 (176)
I0419 16:33:30.028956  4687 net.cpp:165] Memory required for data: 14402136
I0419 16:33:30.028962  4687 layer_factory.hpp:77] Creating layer conv1
I0419 16:33:30.028975  4687 net.cpp:106] Creating Layer conv1
I0419 16:33:30.028983  4687 net.cpp:454] conv1 <- data
I0419 16:33:30.028992  4687 net.cpp:411] conv1 -> conv1
I0419 16:33:30.030318  4687 net.cpp:150] Setting up conv1
I0419 16:33:30.030346  4687 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:33:30.030354  4687 net.cpp:165] Memory required for data: 129602136
I0419 16:33:30.030367  4687 layer_factory.hpp:77] Creating layer relu1
I0419 16:33:30.030380  4687 net.cpp:106] Creating Layer relu1
I0419 16:33:30.030386  4687 net.cpp:454] relu1 <- conv1
I0419 16:33:30.030390  4687 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:33:30.030400  4687 net.cpp:150] Setting up relu1
I0419 16:33:30.030408  4687 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:33:30.030411  4687 net.cpp:165] Memory required for data: 244802136
I0419 16:33:30.030414  4687 layer_factory.hpp:77] Creating layer norm1
I0419 16:33:30.030421  4687 net.cpp:106] Creating Layer norm1
I0419 16:33:30.030428  4687 net.cpp:454] norm1 <- conv1
I0419 16:33:30.030434  4687 net.cpp:411] norm1 -> norm1
I0419 16:33:30.030539  4687 net.cpp:150] Setting up norm1
I0419 16:33:30.030550  4687 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:33:30.030552  4687 net.cpp:165] Memory required for data: 360002136
I0419 16:33:30.030555  4687 layer_factory.hpp:77] Creating layer pool1
I0419 16:33:30.030565  4687 net.cpp:106] Creating Layer pool1
I0419 16:33:30.030568  4687 net.cpp:454] pool1 <- norm1
I0419 16:33:30.030573  4687 net.cpp:411] pool1 -> pool1
I0419 16:33:30.030606  4687 net.cpp:150] Setting up pool1
I0419 16:33:30.030616  4687 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:33:30.030618  4687 net.cpp:165] Memory required for data: 389110104
I0419 16:33:30.030622  4687 layer_factory.hpp:77] Creating layer conv2
I0419 16:33:30.030630  4687 net.cpp:106] Creating Layer conv2
I0419 16:33:30.030637  4687 net.cpp:454] conv2 <- pool1
I0419 16:33:30.030642  4687 net.cpp:411] conv2 -> conv2
I0419 16:33:30.032280  4687 net.cpp:150] Setting up conv2
I0419 16:33:30.032297  4687 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:33:30.032300  4687 net.cpp:165] Memory required for data: 408721752
I0419 16:33:30.032311  4687 layer_factory.hpp:77] Creating layer relu2
I0419 16:33:30.032321  4687 net.cpp:106] Creating Layer relu2
I0419 16:33:30.032326  4687 net.cpp:454] relu2 <- conv2
I0419 16:33:30.032330  4687 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:33:30.032336  4687 net.cpp:150] Setting up relu2
I0419 16:33:30.032341  4687 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:33:30.032342  4687 net.cpp:165] Memory required for data: 428333400
I0419 16:33:30.032346  4687 layer_factory.hpp:77] Creating layer norm2
I0419 16:33:30.032351  4687 net.cpp:106] Creating Layer norm2
I0419 16:33:30.032353  4687 net.cpp:454] norm2 <- conv2
I0419 16:33:30.032359  4687 net.cpp:411] norm2 -> norm2
I0419 16:33:30.032441  4687 net.cpp:150] Setting up norm2
I0419 16:33:30.032452  4687 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:33:30.032454  4687 net.cpp:165] Memory required for data: 447945048
I0419 16:33:30.032457  4687 layer_factory.hpp:77] Creating layer pool2
I0419 16:33:30.032462  4687 net.cpp:106] Creating Layer pool2
I0419 16:33:30.032469  4687 net.cpp:454] pool2 <- norm2
I0419 16:33:30.032477  4687 net.cpp:411] pool2 -> pool2
I0419 16:33:30.032505  4687 net.cpp:150] Setting up pool2
I0419 16:33:30.032516  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.032518  4687 net.cpp:165] Memory required for data: 453056856
I0419 16:33:30.032521  4687 layer_factory.hpp:77] Creating layer conv3
I0419 16:33:30.032526  4687 net.cpp:106] Creating Layer conv3
I0419 16:33:30.032531  4687 net.cpp:454] conv3 <- pool2
I0419 16:33:30.032536  4687 net.cpp:411] conv3 -> conv3
I0419 16:33:30.035799  4687 net.cpp:150] Setting up conv3
I0419 16:33:30.035816  4687 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:33:30.035818  4687 net.cpp:165] Memory required for data: 460724568
I0419 16:33:30.035827  4687 layer_factory.hpp:77] Creating layer relu3
I0419 16:33:30.035840  4687 net.cpp:106] Creating Layer relu3
I0419 16:33:30.035842  4687 net.cpp:454] relu3 <- conv3
I0419 16:33:30.035847  4687 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:33:30.035854  4687 net.cpp:150] Setting up relu3
I0419 16:33:30.035861  4687 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:33:30.035862  4687 net.cpp:165] Memory required for data: 468392280
I0419 16:33:30.035866  4687 layer_factory.hpp:77] Creating layer conv4
I0419 16:33:30.035872  4687 net.cpp:106] Creating Layer conv4
I0419 16:33:30.035879  4687 net.cpp:454] conv4 <- conv3
I0419 16:33:30.035884  4687 net.cpp:411] conv4 -> conv4
I0419 16:33:30.039191  4687 net.cpp:150] Setting up conv4
I0419 16:33:30.039208  4687 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:33:30.039212  4687 net.cpp:165] Memory required for data: 476059992
I0419 16:33:30.039218  4687 layer_factory.hpp:77] Creating layer relu4
I0419 16:33:30.039225  4687 net.cpp:106] Creating Layer relu4
I0419 16:33:30.039228  4687 net.cpp:454] relu4 <- conv4
I0419 16:33:30.039235  4687 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:33:30.039245  4687 net.cpp:150] Setting up relu4
I0419 16:33:30.039249  4687 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:33:30.039255  4687 net.cpp:165] Memory required for data: 483727704
I0419 16:33:30.039258  4687 layer_factory.hpp:77] Creating layer conv5
I0419 16:33:30.039264  4687 net.cpp:106] Creating Layer conv5
I0419 16:33:30.039271  4687 net.cpp:454] conv5 <- conv4
I0419 16:33:30.039278  4687 net.cpp:411] conv5 -> conv5
I0419 16:33:30.041539  4687 net.cpp:150] Setting up conv5
I0419 16:33:30.041555  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.041558  4687 net.cpp:165] Memory required for data: 488839512
I0419 16:33:30.041568  4687 layer_factory.hpp:77] Creating layer relu5
I0419 16:33:30.041576  4687 net.cpp:106] Creating Layer relu5
I0419 16:33:30.041579  4687 net.cpp:454] relu5 <- conv5
I0419 16:33:30.041584  4687 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:33:30.041591  4687 net.cpp:150] Setting up relu5
I0419 16:33:30.041595  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.041599  4687 net.cpp:165] Memory required for data: 493951320
I0419 16:33:30.041601  4687 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:33:30.041610  4687 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:33:30.041618  4687 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:33:30.041622  4687 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:33:30.041627  4687 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:33:30.041662  4687 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:33:30.041671  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.041678  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.041682  4687 net.cpp:165] Memory required for data: 504174936
I0419 16:33:30.041685  4687 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:33:30.041693  4687 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:33:30.041700  4687 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:33:30.041704  4687 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:33:30.041708  4687 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:33:30.041718  4687 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:33:30.041764  4687 net.cpp:150] Setting up roi_pool_conv5
I0419 16:33:30.041771  4687 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:33:30.041774  4687 net.cpp:165] Memory required for data: 504211800
I0419 16:33:30.041777  4687 layer_factory.hpp:77] Creating layer fc6
I0419 16:33:30.041785  4687 net.cpp:106] Creating Layer fc6
I0419 16:33:30.041788  4687 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:33:30.041795  4687 net.cpp:411] fc6 -> fc6
I0419 16:33:30.139729  4687 net.cpp:150] Setting up fc6
I0419 16:33:30.139770  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.139772  4687 net.cpp:165] Memory required for data: 504228184
I0419 16:33:30.139786  4687 layer_factory.hpp:77] Creating layer relu6
I0419 16:33:30.139796  4687 net.cpp:106] Creating Layer relu6
I0419 16:33:30.139806  4687 net.cpp:454] relu6 <- fc6
I0419 16:33:30.139811  4687 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:33:30.139822  4687 net.cpp:150] Setting up relu6
I0419 16:33:30.139827  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.139829  4687 net.cpp:165] Memory required for data: 504244568
I0419 16:33:30.139832  4687 layer_factory.hpp:77] Creating layer drop6
I0419 16:33:30.139844  4687 net.cpp:106] Creating Layer drop6
I0419 16:33:30.139853  4687 net.cpp:454] drop6 <- fc6
I0419 16:33:30.139858  4687 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:33:30.139884  4687 net.cpp:150] Setting up drop6
I0419 16:33:30.139894  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.139896  4687 net.cpp:165] Memory required for data: 504260952
I0419 16:33:30.139899  4687 layer_factory.hpp:77] Creating layer fc7
I0419 16:33:30.139905  4687 net.cpp:106] Creating Layer fc7
I0419 16:33:30.139914  4687 net.cpp:454] fc7 <- fc6
I0419 16:33:30.139917  4687 net.cpp:411] fc7 -> fc7
I0419 16:33:30.183485  4687 net.cpp:150] Setting up fc7
I0419 16:33:30.183524  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.183527  4687 net.cpp:165] Memory required for data: 504277336
I0419 16:33:30.183537  4687 layer_factory.hpp:77] Creating layer relu7
I0419 16:33:30.183547  4687 net.cpp:106] Creating Layer relu7
I0419 16:33:30.183557  4687 net.cpp:454] relu7 <- fc7
I0419 16:33:30.183563  4687 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:33:30.183596  4687 net.cpp:150] Setting up relu7
I0419 16:33:30.183604  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.183606  4687 net.cpp:165] Memory required for data: 504293720
I0419 16:33:30.183609  4687 layer_factory.hpp:77] Creating layer drop7
I0419 16:33:30.183615  4687 net.cpp:106] Creating Layer drop7
I0419 16:33:30.183624  4687 net.cpp:454] drop7 <- fc7
I0419 16:33:30.183627  4687 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:33:30.183653  4687 net.cpp:150] Setting up drop7
I0419 16:33:30.183662  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.183665  4687 net.cpp:165] Memory required for data: 504310104
I0419 16:33:30.183667  4687 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:33:30.183672  4687 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:33:30.183676  4687 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:33:30.183682  4687 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:33:30.183688  4687 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:33:30.183719  4687 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:33:30.183727  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.183732  4687 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:30.183734  4687 net.cpp:165] Memory required for data: 504342872
I0419 16:33:30.183737  4687 layer_factory.hpp:77] Creating layer cls_score
I0419 16:33:30.183745  4687 net.cpp:106] Creating Layer cls_score
I0419 16:33:30.183751  4687 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:33:30.183758  4687 net.cpp:411] cls_score -> cls_score
I0419 16:33:30.189323  4687 net.cpp:150] Setting up cls_score
I0419 16:33:30.189339  4687 net.cpp:157] Top shape: 1 44 (44)
I0419 16:33:30.189342  4687 net.cpp:165] Memory required for data: 504343048
I0419 16:33:30.189348  4687 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:33:30.189357  4687 net.cpp:106] Creating Layer bbox_pred
I0419 16:33:30.189360  4687 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:33:30.189365  4687 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:33:30.210067  4687 net.cpp:150] Setting up bbox_pred
I0419 16:33:30.210085  4687 net.cpp:157] Top shape: 1 176 (176)
I0419 16:33:30.210088  4687 net.cpp:165] Memory required for data: 504343752
I0419 16:33:30.210099  4687 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:33:30.210114  4687 net.cpp:106] Creating Layer loss_cls
I0419 16:33:30.210119  4687 net.cpp:454] loss_cls <- cls_score
I0419 16:33:30.210124  4687 net.cpp:454] loss_cls <- labels
I0419 16:33:30.210129  4687 net.cpp:411] loss_cls -> cls_loss
I0419 16:33:30.210144  4687 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:33:30.210227  4687 net.cpp:150] Setting up loss_cls
I0419 16:33:30.210237  4687 net.cpp:157] Top shape: (1)
I0419 16:33:30.210239  4687 net.cpp:160]     with loss weight 1
I0419 16:33:30.210255  4687 net.cpp:165] Memory required for data: 504343756
I0419 16:33:30.210258  4687 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:33:30.210266  4687 net.cpp:106] Creating Layer loss_bbox
I0419 16:33:30.210273  4687 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:33:30.210278  4687 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:33:30.210280  4687 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:33:30.210284  4687 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:33:30.210290  4687 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:33:30.210374  4687 net.cpp:150] Setting up loss_bbox
I0419 16:33:30.210384  4687 net.cpp:157] Top shape: (1)
I0419 16:33:30.210387  4687 net.cpp:160]     with loss weight 1
I0419 16:33:30.210393  4687 net.cpp:165] Memory required for data: 504343760
I0419 16:33:30.210397  4687 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:33:30.210408  4687 net.cpp:106] Creating Layer rpn_conv1
I0419 16:33:30.210415  4687 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:33:30.210422  4687 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:33:30.227401  4687 net.cpp:150] Setting up rpn_conv1
I0419 16:33:30.227416  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.227419  4687 net.cpp:165] Memory required for data: 509455568
I0419 16:33:30.227425  4687 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:33:30.227433  4687 net.cpp:106] Creating Layer rpn_relu1
I0419 16:33:30.227437  4687 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:33:30.227444  4687 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:33:30.227450  4687 net.cpp:150] Setting up rpn_relu1
I0419 16:33:30.227455  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.227458  4687 net.cpp:165] Memory required for data: 514567376
I0419 16:33:30.227460  4687 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:33:30.227470  4687 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:33:30.227473  4687 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:33:30.227478  4687 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:33:30.227483  4687 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:33:30.227515  4687 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:33:30.227525  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.227529  4687 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:33:30.227530  4687 net.cpp:165] Memory required for data: 524790992
I0419 16:33:30.227533  4687 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:33:30.227545  4687 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:33:30.227550  4687 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:33:30.227557  4687 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:33:30.227877  4687 net.cpp:150] Setting up rpn_cls_score
I0419 16:33:30.227888  4687 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:33:30.227890  4687 net.cpp:165] Memory required for data: 525150416
I0419 16:33:30.227896  4687 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:33:30.227916  4687 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:33:30.227921  4687 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:33:30.227928  4687 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:33:30.228379  4687 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:33:30.228389  4687 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:33:30.228392  4687 net.cpp:165] Memory required for data: 525869264
I0419 16:33:30.228397  4687 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:33:30.228412  4687 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:33:30.228420  4687 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:33:30.228425  4687 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:33:30.228427  4687 net.cpp:165] Memory required for data: 525869264
I0419 16:33:30.228430  4687 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:33:30.228435  4687 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:33:30.228438  4687 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:33:30.228441  4687 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:33:30.228443  4687 net.cpp:165] Memory required for data: 525869264
I0419 16:33:30.228446  4687 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:33:30.228449  4687 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:33:30.228452  4687 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:33:30.228456  4687 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:33:30.228458  4687 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:33:30.228461  4687 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:33:30.228466  4687 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:33:30.228467  4687 net.cpp:226] loss_bbox needs backward computation.
I0419 16:33:30.228473  4687 net.cpp:226] loss_cls needs backward computation.
I0419 16:33:30.228478  4687 net.cpp:226] bbox_pred needs backward computation.
I0419 16:33:30.228482  4687 net.cpp:226] cls_score needs backward computation.
I0419 16:33:30.228484  4687 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:33:30.228489  4687 net.cpp:226] drop7 needs backward computation.
I0419 16:33:30.228492  4687 net.cpp:226] relu7 needs backward computation.
I0419 16:33:30.228494  4687 net.cpp:226] fc7 needs backward computation.
I0419 16:33:30.228497  4687 net.cpp:226] drop6 needs backward computation.
I0419 16:33:30.228500  4687 net.cpp:226] relu6 needs backward computation.
I0419 16:33:30.228503  4687 net.cpp:226] fc6 needs backward computation.
I0419 16:33:30.228507  4687 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:33:30.228513  4687 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:33:30.228516  4687 net.cpp:228] relu5 does not need backward computation.
I0419 16:33:30.228520  4687 net.cpp:228] conv5 does not need backward computation.
I0419 16:33:30.228523  4687 net.cpp:228] relu4 does not need backward computation.
I0419 16:33:30.228526  4687 net.cpp:228] conv4 does not need backward computation.
I0419 16:33:30.228529  4687 net.cpp:228] relu3 does not need backward computation.
I0419 16:33:30.228533  4687 net.cpp:228] conv3 does not need backward computation.
I0419 16:33:30.228536  4687 net.cpp:228] pool2 does not need backward computation.
I0419 16:33:30.228539  4687 net.cpp:228] norm2 does not need backward computation.
I0419 16:33:30.228543  4687 net.cpp:228] relu2 does not need backward computation.
I0419 16:33:30.228546  4687 net.cpp:228] conv2 does not need backward computation.
I0419 16:33:30.228550  4687 net.cpp:228] pool1 does not need backward computation.
I0419 16:33:30.228554  4687 net.cpp:228] norm1 does not need backward computation.
I0419 16:33:30.228556  4687 net.cpp:228] relu1 does not need backward computation.
I0419 16:33:30.228560  4687 net.cpp:228] conv1 does not need backward computation.
I0419 16:33:30.228565  4687 net.cpp:228] data does not need backward computation.
I0419 16:33:30.228569  4687 net.cpp:270] This network produces output bbox_loss
I0419 16:33:30.228571  4687 net.cpp:270] This network produces output cls_loss
I0419 16:33:30.228596  4687 net.cpp:283] Network initialization done.
I0419 16:33:30.228732  4687 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
I0419 16:33:30.660018  4687 net.cpp:816] Ignoring source layer input-data
I0419 16:33:30.660049  4687 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:33:30.663599  4687 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:33:30.663622  4687 net.cpp:816] Ignoring source layer rpn_cls_score_reshape
I0419 16:33:30.663627  4687 net.cpp:816] Ignoring source layer rpn-data
I0419 16:33:30.663630  4687 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:33:30.663632  4687 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:33:30.663635  4687 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:33:30.707464  4687 net.cpp:816] Ignoring source layer silence_fc7
Solving...
I0419 16:33:31.039989  4687 solver.cpp:229] Iteration 0, loss = 1.21757
I0419 16:33:31.040037  4687 solver.cpp:245]     Train net output #0: bbox_loss = 0.0242392 (* 1 = 0.0242392 loss)
I0419 16:33:31.040045  4687 solver.cpp:245]     Train net output #1: cls_loss = 1.19333 (* 1 = 1.19333 loss)
I0419 16:33:31.040061  4687 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:33:35.629765  4687 solver.cpp:229] Iteration 20, loss = 0.241161
I0419 16:33:35.629807  4687 solver.cpp:245]     Train net output #0: bbox_loss = 0.0410683 (* 1 = 0.0410683 loss)
I0419 16:33:35.629814  4687 solver.cpp:245]     Train net output #1: cls_loss = 0.200093 (* 1 = 0.200093 loss)
I0419 16:33:35.629820  4687 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:33:40.153837  4687 solver.cpp:229] Iteration 40, loss = 0.222941
I0419 16:33:40.153882  4687 solver.cpp:245]     Train net output #0: bbox_loss = 0.00227355 (* 1 = 0.00227355 loss)
I0419 16:33:40.153889  4687 solver.cpp:245]     Train net output #1: cls_loss = 0.220667 (* 1 = 0.220667 loss)
I0419 16:33:40.153895  4687 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:33:44.651176  4687 solver.cpp:229] Iteration 60, loss = nan
I0419 16:33:44.651217  4687 solver.cpp:245]     Train net output #0: bbox_loss = nan (* 1 = nan loss)
I0419 16:33:44.651224  4687 solver.cpp:245]     Train net output #1: cls_loss = 0.176247 (* 1 = 0.176247 loss)
I0419 16:33:44.651232  4687 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:33:49.137322  4687 solver.cpp:229] Iteration 80, loss = 0.143793
I0419 16:33:49.137367  4687 solver.cpp:245]     Train net output #0: bbox_loss = 0.0193062 (* 1 = 0.0193062 loss)
I0419 16:33:49.137373  4687 solver.cpp:245]     Train net output #1: cls_loss = 0.124486 (* 1 = 0.124486 loss)
I0419 16:33:49.137379  4687 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel
done solving
cp /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel -> /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel
Final model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel

real	5m13.084s
user	4m22.715s
sys	0m49.499s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt --net /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(caffemodel='/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', comp_mode=False, gpu_id=0, imdb_name='voc_2007_test', max_per_image=100, prototxt='models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:33:57.983613  4704 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 1360
  dim: 800
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 44
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 176
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0419 16:33:57.983785  4704 net.cpp:413] Input 0 -> data
I0419 16:33:57.999337  4704 net.cpp:413] Input 1 -> im_info
I0419 16:33:57.999382  4704 layer_factory.hpp:77] Creating layer conv1
I0419 16:33:57.999409  4704 net.cpp:106] Creating Layer conv1
I0419 16:33:57.999418  4704 net.cpp:454] conv1 <- data
I0419 16:33:57.999433  4704 net.cpp:411] conv1 -> conv1
I0419 16:33:58.000885  4704 net.cpp:150] Setting up conv1
I0419 16:33:58.000905  4704 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:33:58.000910  4704 net.cpp:165] Memory required for data: 104448000
I0419 16:33:58.000924  4704 layer_factory.hpp:77] Creating layer relu1
I0419 16:33:58.000942  4704 net.cpp:106] Creating Layer relu1
I0419 16:33:58.000948  4704 net.cpp:454] relu1 <- conv1
I0419 16:33:58.000959  4704 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:33:58.000972  4704 net.cpp:150] Setting up relu1
I0419 16:33:58.000986  4704 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:33:58.000990  4704 net.cpp:165] Memory required for data: 208896000
I0419 16:33:58.000995  4704 layer_factory.hpp:77] Creating layer norm1
I0419 16:33:58.001005  4704 net.cpp:106] Creating Layer norm1
I0419 16:33:58.001013  4704 net.cpp:454] norm1 <- conv1
I0419 16:33:58.001020  4704 net.cpp:411] norm1 -> norm1
I0419 16:33:58.001139  4704 net.cpp:150] Setting up norm1
I0419 16:33:58.001152  4704 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:33:58.001155  4704 net.cpp:165] Memory required for data: 313344000
I0419 16:33:58.001158  4704 layer_factory.hpp:77] Creating layer pool1
I0419 16:33:58.001165  4704 net.cpp:106] Creating Layer pool1
I0419 16:33:58.001169  4704 net.cpp:454] pool1 <- norm1
I0419 16:33:58.001173  4704 net.cpp:411] pool1 -> pool1
I0419 16:33:58.001219  4704 net.cpp:150] Setting up pool1
I0419 16:33:58.001235  4704 net.cpp:157] Top shape: 1 96 341 201 (6579936)
I0419 16:33:58.001238  4704 net.cpp:165] Memory required for data: 339663744
I0419 16:33:58.001240  4704 layer_factory.hpp:77] Creating layer conv2
I0419 16:33:58.001250  4704 net.cpp:106] Creating Layer conv2
I0419 16:33:58.001257  4704 net.cpp:454] conv2 <- pool1
I0419 16:33:58.001263  4704 net.cpp:411] conv2 -> conv2
I0419 16:33:58.003481  4704 net.cpp:150] Setting up conv2
I0419 16:33:58.003499  4704 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:33:58.003502  4704 net.cpp:165] Memory required for data: 357349248
I0419 16:33:58.003512  4704 layer_factory.hpp:77] Creating layer relu2
I0419 16:33:58.003523  4704 net.cpp:106] Creating Layer relu2
I0419 16:33:58.003531  4704 net.cpp:454] relu2 <- conv2
I0419 16:33:58.003538  4704 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:33:58.003549  4704 net.cpp:150] Setting up relu2
I0419 16:33:58.003557  4704 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:33:58.003561  4704 net.cpp:165] Memory required for data: 375034752
I0419 16:33:58.003566  4704 layer_factory.hpp:77] Creating layer norm2
I0419 16:33:58.003573  4704 net.cpp:106] Creating Layer norm2
I0419 16:33:58.003584  4704 net.cpp:454] norm2 <- conv2
I0419 16:33:58.003595  4704 net.cpp:411] norm2 -> norm2
I0419 16:33:58.003698  4704 net.cpp:150] Setting up norm2
I0419 16:33:58.003711  4704 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:33:58.003715  4704 net.cpp:165] Memory required for data: 392720256
I0419 16:33:58.003716  4704 layer_factory.hpp:77] Creating layer pool2
I0419 16:33:58.003723  4704 net.cpp:106] Creating Layer pool2
I0419 16:33:58.003727  4704 net.cpp:454] pool2 <- norm2
I0419 16:33:58.003731  4704 net.cpp:411] pool2 -> pool2
I0419 16:33:58.003773  4704 net.cpp:150] Setting up pool2
I0419 16:33:58.003789  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.003793  4704 net.cpp:165] Memory required for data: 397211520
I0419 16:33:58.003795  4704 layer_factory.hpp:77] Creating layer conv3
I0419 16:33:58.003805  4704 net.cpp:106] Creating Layer conv3
I0419 16:33:58.003814  4704 net.cpp:454] conv3 <- pool2
I0419 16:33:58.003821  4704 net.cpp:411] conv3 -> conv3
I0419 16:33:58.006633  4704 net.cpp:150] Setting up conv3
I0419 16:33:58.006650  4704 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:33:58.006654  4704 net.cpp:165] Memory required for data: 403948416
I0419 16:33:58.006662  4704 layer_factory.hpp:77] Creating layer relu3
I0419 16:33:58.006671  4704 net.cpp:106] Creating Layer relu3
I0419 16:33:58.006675  4704 net.cpp:454] relu3 <- conv3
I0419 16:33:58.006681  4704 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:33:58.006696  4704 net.cpp:150] Setting up relu3
I0419 16:33:58.006702  4704 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:33:58.006708  4704 net.cpp:165] Memory required for data: 410685312
I0419 16:33:58.006713  4704 layer_factory.hpp:77] Creating layer conv4
I0419 16:33:58.006722  4704 net.cpp:106] Creating Layer conv4
I0419 16:33:58.006733  4704 net.cpp:454] conv4 <- conv3
I0419 16:33:58.006744  4704 net.cpp:411] conv4 -> conv4
I0419 16:33:58.010077  4704 net.cpp:150] Setting up conv4
I0419 16:33:58.010095  4704 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:33:58.010098  4704 net.cpp:165] Memory required for data: 417422208
I0419 16:33:58.010105  4704 layer_factory.hpp:77] Creating layer relu4
I0419 16:33:58.010112  4704 net.cpp:106] Creating Layer relu4
I0419 16:33:58.010118  4704 net.cpp:454] relu4 <- conv4
I0419 16:33:58.010125  4704 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:33:58.010138  4704 net.cpp:150] Setting up relu4
I0419 16:33:58.010144  4704 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:33:58.010152  4704 net.cpp:165] Memory required for data: 424159104
I0419 16:33:58.010156  4704 layer_factory.hpp:77] Creating layer conv5
I0419 16:33:58.010166  4704 net.cpp:106] Creating Layer conv5
I0419 16:33:58.010177  4704 net.cpp:454] conv5 <- conv4
I0419 16:33:58.010188  4704 net.cpp:411] conv5 -> conv5
I0419 16:33:58.012511  4704 net.cpp:150] Setting up conv5
I0419 16:33:58.012529  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.012532  4704 net.cpp:165] Memory required for data: 428650368
I0419 16:33:58.012542  4704 layer_factory.hpp:77] Creating layer relu5
I0419 16:33:58.012550  4704 net.cpp:106] Creating Layer relu5
I0419 16:33:58.012554  4704 net.cpp:454] relu5 <- conv5
I0419 16:33:58.012560  4704 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:33:58.012572  4704 net.cpp:150] Setting up relu5
I0419 16:33:58.012578  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.012583  4704 net.cpp:165] Memory required for data: 433141632
I0419 16:33:58.012588  4704 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:33:58.012603  4704 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:33:58.012614  4704 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:33:58.012621  4704 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:33:58.012629  4704 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:33:58.012679  4704 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:33:58.012693  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.012697  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.012701  4704 net.cpp:165] Memory required for data: 442124160
I0419 16:33:58.012702  4704 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:33:58.012709  4704 net.cpp:106] Creating Layer rpn_conv1
I0419 16:33:58.012713  4704 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_0
I0419 16:33:58.012722  4704 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:33:58.014365  4704 net.cpp:150] Setting up rpn_conv1
I0419 16:33:58.014381  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.014384  4704 net.cpp:165] Memory required for data: 446615424
I0419 16:33:58.014391  4704 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:33:58.014406  4704 net.cpp:106] Creating Layer rpn_relu1
I0419 16:33:58.014411  4704 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:33:58.014425  4704 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:33:58.014433  4704 net.cpp:150] Setting up rpn_relu1
I0419 16:33:58.014446  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.014451  4704 net.cpp:165] Memory required for data: 451106688
I0419 16:33:58.014456  4704 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:33:58.014466  4704 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:33:58.014470  4704 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:33:58.014484  4704 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:33:58.014493  4704 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:33:58.014545  4704 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:33:58.014556  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.014560  4704 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:33:58.014564  4704 net.cpp:165] Memory required for data: 460089216
I0419 16:33:58.014566  4704 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:33:58.014575  4704 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:33:58.014585  4704 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:33:58.014591  4704 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:33:58.014798  4704 net.cpp:150] Setting up rpn_cls_score
I0419 16:33:58.014811  4704 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:33:58.014813  4704 net.cpp:165] Memory required for data: 460405008
I0419 16:33:58.014818  4704 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:33:58.014827  4704 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:33:58.014834  4704 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:33:58.014845  4704 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:33:58.015076  4704 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:33:58.015090  4704 net.cpp:157] Top shape: 1 36 86 51 (157896)
I0419 16:33:58.015092  4704 net.cpp:165] Memory required for data: 461036592
I0419 16:33:58.015100  4704 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:33:58.015107  4704 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:33:58.015111  4704 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:33:58.015116  4704 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:33:58.015158  4704 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:33:58.015173  4704 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:33:58.015178  4704 net.cpp:165] Memory required for data: 461352384
I0419 16:33:58.015182  4704 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:33:58.015189  4704 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:33:58.015193  4704 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:33:58.015202  4704 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:33:58.015274  4704 net.cpp:150] Setting up rpn_cls_prob
I0419 16:33:58.015283  4704 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:33:58.015286  4704 net.cpp:165] Memory required for data: 461668176
I0419 16:33:58.015290  4704 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:33:58.015296  4704 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:33:58.015301  4704 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:33:58.015306  4704 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:33:58.015337  4704 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:33:58.015352  4704 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:33:58.015357  4704 net.cpp:165] Memory required for data: 461983968
I0419 16:33:58.015362  4704 layer_factory.hpp:77] Creating layer proposal
I0419 16:33:58.015831  4704 net.cpp:106] Creating Layer proposal
I0419 16:33:58.015848  4704 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:33:58.015853  4704 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:33:58.015857  4704 net.cpp:454] proposal <- im_info
I0419 16:33:58.015862  4704 net.cpp:411] proposal -> rois
I0419 16:33:58.016559  4704 net.cpp:150] Setting up proposal
I0419 16:33:58.016580  4704 net.cpp:157] Top shape: 1 5 (5)
I0419 16:33:58.016583  4704 net.cpp:165] Memory required for data: 461983988
I0419 16:33:58.016587  4704 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:33:58.016597  4704 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:33:58.016599  4704 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0419 16:33:58.016603  4704 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:33:58.016610  4704 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:33:58.016625  4704 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:33:58.016695  4704 net.cpp:150] Setting up roi_pool_conv5
I0419 16:33:58.016711  4704 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:33:58.016716  4704 net.cpp:165] Memory required for data: 462020852
I0419 16:33:58.016721  4704 layer_factory.hpp:77] Creating layer fc6
I0419 16:33:58.016731  4704 net.cpp:106] Creating Layer fc6
I0419 16:33:58.016741  4704 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:33:58.016748  4704 net.cpp:411] fc6 -> fc6
I0419 16:33:58.116721  4704 net.cpp:150] Setting up fc6
I0419 16:33:58.116760  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.116763  4704 net.cpp:165] Memory required for data: 462037236
I0419 16:33:58.116781  4704 layer_factory.hpp:77] Creating layer relu6
I0419 16:33:58.116793  4704 net.cpp:106] Creating Layer relu6
I0419 16:33:58.116797  4704 net.cpp:454] relu6 <- fc6
I0419 16:33:58.116806  4704 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:33:58.116821  4704 net.cpp:150] Setting up relu6
I0419 16:33:58.116827  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.116832  4704 net.cpp:165] Memory required for data: 462053620
I0419 16:33:58.116837  4704 layer_factory.hpp:77] Creating layer drop6
I0419 16:33:58.116852  4704 net.cpp:106] Creating Layer drop6
I0419 16:33:58.116861  4704 net.cpp:454] drop6 <- fc6
I0419 16:33:58.116870  4704 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:33:58.116912  4704 net.cpp:150] Setting up drop6
I0419 16:33:58.116928  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.116932  4704 net.cpp:165] Memory required for data: 462070004
I0419 16:33:58.116936  4704 layer_factory.hpp:77] Creating layer fc7
I0419 16:33:58.116945  4704 net.cpp:106] Creating Layer fc7
I0419 16:33:58.116950  4704 net.cpp:454] fc7 <- fc6
I0419 16:33:58.116958  4704 net.cpp:411] fc7 -> fc7
I0419 16:33:58.162053  4704 net.cpp:150] Setting up fc7
I0419 16:33:58.162096  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.162099  4704 net.cpp:165] Memory required for data: 462086388
I0419 16:33:58.162111  4704 layer_factory.hpp:77] Creating layer relu7
I0419 16:33:58.162120  4704 net.cpp:106] Creating Layer relu7
I0419 16:33:58.162129  4704 net.cpp:454] relu7 <- fc7
I0419 16:33:58.162134  4704 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:33:58.162143  4704 net.cpp:150] Setting up relu7
I0419 16:33:58.162155  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.162159  4704 net.cpp:165] Memory required for data: 462102772
I0419 16:33:58.162164  4704 layer_factory.hpp:77] Creating layer drop7
I0419 16:33:58.162176  4704 net.cpp:106] Creating Layer drop7
I0419 16:33:58.162186  4704 net.cpp:454] drop7 <- fc7
I0419 16:33:58.162192  4704 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:33:58.162220  4704 net.cpp:150] Setting up drop7
I0419 16:33:58.162235  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.162240  4704 net.cpp:165] Memory required for data: 462119156
I0419 16:33:58.162243  4704 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:33:58.162251  4704 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:33:58.162257  4704 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:33:58.162264  4704 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:33:58.162279  4704 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:33:58.162343  4704 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:33:58.162353  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.162356  4704 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:33:58.162359  4704 net.cpp:165] Memory required for data: 462151924
I0419 16:33:58.162362  4704 layer_factory.hpp:77] Creating layer cls_score
I0419 16:33:58.162377  4704 net.cpp:106] Creating Layer cls_score
I0419 16:33:58.162380  4704 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:33:58.162386  4704 net.cpp:411] cls_score -> cls_score
I0419 16:33:58.163231  4704 net.cpp:150] Setting up cls_score
I0419 16:33:58.163249  4704 net.cpp:157] Top shape: 1 44 (44)
I0419 16:33:58.163252  4704 net.cpp:165] Memory required for data: 462152100
I0419 16:33:58.163259  4704 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:33:58.163264  4704 net.cpp:106] Creating Layer bbox_pred
I0419 16:33:58.163269  4704 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:33:58.163278  4704 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:33:58.165098  4704 net.cpp:150] Setting up bbox_pred
I0419 16:33:58.165115  4704 net.cpp:157] Top shape: 1 176 (176)
I0419 16:33:58.165118  4704 net.cpp:165] Memory required for data: 462152804
I0419 16:33:58.165125  4704 layer_factory.hpp:77] Creating layer cls_prob
I0419 16:33:58.165136  4704 net.cpp:106] Creating Layer cls_prob
I0419 16:33:58.165141  4704 net.cpp:454] cls_prob <- cls_score
I0419 16:33:58.165148  4704 net.cpp:411] cls_prob -> cls_prob
I0419 16:33:58.165223  4704 net.cpp:150] Setting up cls_prob
I0419 16:33:58.165235  4704 net.cpp:157] Top shape: 1 44 (44)
I0419 16:33:58.165238  4704 net.cpp:165] Memory required for data: 462152980
I0419 16:33:58.165241  4704 net.cpp:228] cls_prob does not need backward computation.
I0419 16:33:58.165244  4704 net.cpp:228] bbox_pred does not need backward computation.
I0419 16:33:58.165246  4704 net.cpp:228] cls_score does not need backward computation.
I0419 16:33:58.165249  4704 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0419 16:33:58.165252  4704 net.cpp:228] drop7 does not need backward computation.
I0419 16:33:58.165256  4704 net.cpp:228] relu7 does not need backward computation.
I0419 16:33:58.165258  4704 net.cpp:228] fc7 does not need backward computation.
I0419 16:33:58.165263  4704 net.cpp:228] drop6 does not need backward computation.
I0419 16:33:58.165269  4704 net.cpp:228] relu6 does not need backward computation.
I0419 16:33:58.165274  4704 net.cpp:228] fc6 does not need backward computation.
I0419 16:33:58.165278  4704 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:33:58.165285  4704 net.cpp:228] proposal does not need backward computation.
I0419 16:33:58.165292  4704 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:33:58.165297  4704 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:33:58.165303  4704 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:33:58.165308  4704 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:33:58.165314  4704 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:33:58.165320  4704 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:33:58.165325  4704 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:33:58.165330  4704 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:33:58.165338  4704 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:33:58.165343  4704 net.cpp:228] relu5 does not need backward computation.
I0419 16:33:58.165349  4704 net.cpp:228] conv5 does not need backward computation.
I0419 16:33:58.165354  4704 net.cpp:228] relu4 does not need backward computation.
I0419 16:33:58.165359  4704 net.cpp:228] conv4 does not need backward computation.
I0419 16:33:58.165362  4704 net.cpp:228] relu3 does not need backward computation.
I0419 16:33:58.165369  4704 net.cpp:228] conv3 does not need backward computation.
I0419 16:33:58.165374  4704 net.cpp:228] pool2 does not need backward computation.
I0419 16:33:58.165379  4704 net.cpp:228] norm2 does not need backward computation.
I0419 16:33:58.165383  4704 net.cpp:228] relu2 does not need backward computation.
I0419 16:33:58.165390  4704 net.cpp:228] conv2 does not need backward computation.
I0419 16:33:58.165395  4704 net.cpp:228] pool1 does not need backward computation.
I0419 16:33:58.165400  4704 net.cpp:228] norm1 does not need backward computation.
I0419 16:33:58.165405  4704 net.cpp:228] relu1 does not need backward computation.
I0419 16:33:58.165408  4704 net.cpp:228] conv1 does not need backward computation.
I0419 16:33:58.165412  4704 net.cpp:270] This network produces output bbox_pred
I0419 16:33:58.165417  4704 net.cpp:270] This network produces output cls_prob
I0419 16:33:58.165460  4704 net.cpp:283] Network initialization done.
I0419 16:33:58.609284  4704 net.cpp:816] Ignoring source layer data
I0419 16:33:58.657567  4704 net.cpp:816] Ignoring source layer loss_cls
I0419 16:33:58.657596  4704 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:33:58.658119  4704 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:33:58.658130  4704 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
im_detect: 1/50 0.166s 0.001s
im_detect: 2/50 0.137s 0.001s
im_detect: 3/50 0.127s 0.001s
im_detect: 4/50 0.122s 0.001s
im_detect: 5/50 0.119s 0.001s
im_detect: 6/50 0.117s 0.001s
im_detect: 7/50 0.116s 0.001s
im_detect: 8/50 0.115s 0.001s
im_detect: 9/50 0.114s 0.001s
im_detect: 10/50 0.113s 0.001s
im_detect: 11/50 0.113s 0.001s
im_detect: 12/50 0.112s 0.001s
im_detect: 13/50 0.112s 0.001s
im_detect: 14/50 0.112s 0.001s
im_detect: 15/50 0.112s 0.001s
im_detect: 16/50 0.111s 0.001s
im_detect: 17/50 0.111s 0.001s
im_detect: 18/50 0.111s 0.001s
im_detect: 19/50 0.111s 0.001s
im_detect: 20/50 0.111s 0.001s
im_detect: 21/50 0.110s 0.001s
im_detect: 22/50 0.110s 0.001s
im_detect: 23/50 0.110s 0.001s
im_detect: 24/50 0.110s 0.001s
im_detect: 25/50 0.110s 0.001s
im_detect: 26/50 0.110s 0.001s
im_detect: 27/50 0.110s 0.001s
im_detect: 28/50 0.109s 0.001s
im_detect: 29/50 0.109s 0.001s
im_detect: 30/50 0.109s 0.001s
im_detect: 31/50 0.109s 0.001s
im_detect: 32/50 0.109s 0.001s
im_detect: 33/50 0.109s 0.001s
im_detect: 34/50 0.109s 0.001s
im_detect: 35/50 0.109s 0.001s
im_detect: 36/50 0.109s 0.001s
im_detect: 37/50 0.109s 0.001s
im_detect: 38/50 0.109s 0.001s
im_detect: 39/50 0.109s 0.001s
im_detect: 40/50 0.109s 0.001s
im_detect: 41/50 0.109s 0.001s
im_detect: 42/50 0.109s 0.001s
im_detect: 43/50 0.109s 0.001s
im_detect: 44/50 0.109s 0.001s
im_detect: 45/50 0.109s 0.001s
im_detect: 46/50 0.109s 0.001s
im_detect: 47/50 0.109s 0.001s
im_detect: 48/50 0.109s 0.001s
im_detect: 49/50 0.109s 0.001s
im_detect: 50/50 0.109s 0.001s
Evaluating detections
Writing speedlimit-20 VOC results file
Writing speedlimit-30 VOC results file
Writing speedlimit-50 VOC results file
Writing speedlimit-60 VOC results file
Writing speedlimit-70 VOC results file
Writing speedlimit-80 VOC results file
Writing restrict-end-80 VOC results file
Writing speedlimit-100 VOC results file
Writing speedlimit-120 VOC results file
Writing no-overtake VOC results file
Writing no-overtake-truck VOC results file
Writing priority-next-intersect VOC results file
Writing priority-road VOC results file
Writing giveaway VOC results file
Writing stop VOC results file
Writing no-traffic-bothways VOC results file
Writing no-truck VOC results file
Writing no-entry VOC results file
Writing danger VOC results file
Writing bend-left VOC results file
Writing bend-right VOC results file
Writing bend VOC results file
Writing uneven-road VOC results file
Writing slippery-road VOC results file
Writing road-narrow VOC results file
Writing construction VOC results file
Writing traffic-signal VOC results file
Writing pedestrian-crossing VOC results file
Writing school-crossing VOC results file
Writing cycle-crossing VOC results file
Writing snow VOC results file
Writing animals VOC results file
Writing restriction-ends VOC results file
Writing go-right VOC results file
Writing go-left VOC results file
Writing go-straight VOC results file
Writing go-right-straight VOC results file
Writing go-left-straight VOC results file
Writing keep-right VOC results file
Writing keep-left VOC results file
Writing roundabout VOC results file
Writing restrict-ends-overtaking VOC results file
Writing restrict-ends-overtaking-truck VOC results file
VOC07 metric? Yes
Traceback (most recent call last):
  File "./tools/test_net.py", line 90, in <module>
    test_net(net, imdb, max_per_image=args.max_per_image, vis=args.vis)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/test.py", line 295, in test_net
    imdb.evaluate_detections(all_boxes, output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 326, in evaluate_detections
    self._do_python_eval(output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 289, in _do_python_eval
    use_07_metric=use_07_metric)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/voc_eval.py", line 109, in voc_eval
    recs[imagename] = parse_rec(annopath.format(imagename))
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/voc_eval.py", line 20, in parse_rec
    obj_struct['truncated'] = int(obj.find('truncated').text)
AttributeError: 'NoneType' object has no attribute 'text'
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-37-07
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-37-07
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-37-07
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-37-07
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:37:10.374212  4763 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:37:10.374269  4763 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 16:37:10.375075  4763 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:37:10.375231  4763 layer_factory.hpp:77] Creating layer input-data
I0419 16:37:10.375876  4763 net.cpp:106] Creating Layer input-data
I0419 16:37:10.375896  4763 net.cpp:411] input-data -> data
I0419 16:37:10.375916  4763 net.cpp:411] input-data -> im_info
I0419 16:37:10.375926  4763 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:37:10.391811  4763 net.cpp:150] Setting up input-data
I0419 16:37:10.391832  4763 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:37:10.391839  4763 net.cpp:157] Top shape: 1 3 (3)
I0419 16:37:10.391841  4763 net.cpp:157] Top shape: 1 4 (4)
I0419 16:37:10.391846  4763 net.cpp:165] Memory required for data: 7200028
I0419 16:37:10.391850  4763 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:37:10.391860  4763 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:37:10.391867  4763 net.cpp:454] data_input-data_0_split <- data
I0419 16:37:10.391877  4763 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:37:10.391890  4763 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:37:10.391924  4763 net.cpp:150] Setting up data_input-data_0_split
I0419 16:37:10.391933  4763 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:37:10.391938  4763 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:37:10.391942  4763 net.cpp:165] Memory required for data: 21600028
I0419 16:37:10.391943  4763 layer_factory.hpp:77] Creating layer conv1
I0419 16:37:10.391958  4763 net.cpp:106] Creating Layer conv1
I0419 16:37:10.391965  4763 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:37:10.391971  4763 net.cpp:411] conv1 -> conv1
I0419 16:37:10.393290  4763 net.cpp:150] Setting up conv1
I0419 16:37:10.393309  4763 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:37:10.393313  4763 net.cpp:165] Memory required for data: 79200028
I0419 16:37:10.393329  4763 layer_factory.hpp:77] Creating layer relu1
I0419 16:37:10.393342  4763 net.cpp:106] Creating Layer relu1
I0419 16:37:10.393347  4763 net.cpp:454] relu1 <- conv1
I0419 16:37:10.393352  4763 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:37:10.393362  4763 net.cpp:150] Setting up relu1
I0419 16:37:10.393369  4763 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:37:10.393371  4763 net.cpp:165] Memory required for data: 136800028
I0419 16:37:10.393374  4763 layer_factory.hpp:77] Creating layer norm1
I0419 16:37:10.393383  4763 net.cpp:106] Creating Layer norm1
I0419 16:37:10.393389  4763 net.cpp:454] norm1 <- conv1
I0419 16:37:10.393394  4763 net.cpp:411] norm1 -> norm1
I0419 16:37:10.393496  4763 net.cpp:150] Setting up norm1
I0419 16:37:10.393506  4763 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:37:10.393508  4763 net.cpp:165] Memory required for data: 194400028
I0419 16:37:10.393512  4763 layer_factory.hpp:77] Creating layer pool1
I0419 16:37:10.393517  4763 net.cpp:106] Creating Layer pool1
I0419 16:37:10.393525  4763 net.cpp:454] pool1 <- norm1
I0419 16:37:10.393529  4763 net.cpp:411] pool1 -> pool1
I0419 16:37:10.393560  4763 net.cpp:150] Setting up pool1
I0419 16:37:10.393569  4763 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:37:10.393573  4763 net.cpp:165] Memory required for data: 208954012
I0419 16:37:10.393575  4763 layer_factory.hpp:77] Creating layer conv2
I0419 16:37:10.393584  4763 net.cpp:106] Creating Layer conv2
I0419 16:37:10.393589  4763 net.cpp:454] conv2 <- pool1
I0419 16:37:10.393594  4763 net.cpp:411] conv2 -> conv2
I0419 16:37:10.395264  4763 net.cpp:150] Setting up conv2
I0419 16:37:10.395282  4763 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:37:10.395285  4763 net.cpp:165] Memory required for data: 218759836
I0419 16:37:10.395294  4763 layer_factory.hpp:77] Creating layer relu2
I0419 16:37:10.395304  4763 net.cpp:106] Creating Layer relu2
I0419 16:37:10.395308  4763 net.cpp:454] relu2 <- conv2
I0419 16:37:10.395315  4763 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:37:10.395325  4763 net.cpp:150] Setting up relu2
I0419 16:37:10.395329  4763 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:37:10.395334  4763 net.cpp:165] Memory required for data: 228565660
I0419 16:37:10.395336  4763 layer_factory.hpp:77] Creating layer norm2
I0419 16:37:10.395341  4763 net.cpp:106] Creating Layer norm2
I0419 16:37:10.395345  4763 net.cpp:454] norm2 <- conv2
I0419 16:37:10.395351  4763 net.cpp:411] norm2 -> norm2
I0419 16:37:10.395437  4763 net.cpp:150] Setting up norm2
I0419 16:37:10.395447  4763 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:37:10.395450  4763 net.cpp:165] Memory required for data: 238371484
I0419 16:37:10.395453  4763 layer_factory.hpp:77] Creating layer pool2
I0419 16:37:10.395459  4763 net.cpp:106] Creating Layer pool2
I0419 16:37:10.395467  4763 net.cpp:454] pool2 <- norm2
I0419 16:37:10.395472  4763 net.cpp:411] pool2 -> pool2
I0419 16:37:10.395498  4763 net.cpp:150] Setting up pool2
I0419 16:37:10.395506  4763 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:37:10.395509  4763 net.cpp:165] Memory required for data: 240927388
I0419 16:37:10.395512  4763 layer_factory.hpp:77] Creating layer conv3
I0419 16:37:10.395520  4763 net.cpp:106] Creating Layer conv3
I0419 16:37:10.395524  4763 net.cpp:454] conv3 <- pool2
I0419 16:37:10.395530  4763 net.cpp:411] conv3 -> conv3
I0419 16:37:10.398780  4763 net.cpp:150] Setting up conv3
I0419 16:37:10.398797  4763 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:37:10.398800  4763 net.cpp:165] Memory required for data: 244761244
I0419 16:37:10.398808  4763 layer_factory.hpp:77] Creating layer relu3
I0419 16:37:10.398818  4763 net.cpp:106] Creating Layer relu3
I0419 16:37:10.398821  4763 net.cpp:454] relu3 <- conv3
I0419 16:37:10.398828  4763 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:37:10.398838  4763 net.cpp:150] Setting up relu3
I0419 16:37:10.398841  4763 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:37:10.398846  4763 net.cpp:165] Memory required for data: 248595100
I0419 16:37:10.398849  4763 layer_factory.hpp:77] Creating layer conv4
I0419 16:37:10.398857  4763 net.cpp:106] Creating Layer conv4
I0419 16:37:10.398864  4763 net.cpp:454] conv4 <- conv3
I0419 16:37:10.398869  4763 net.cpp:411] conv4 -> conv4
I0419 16:37:10.402153  4763 net.cpp:150] Setting up conv4
I0419 16:37:10.402169  4763 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:37:10.402173  4763 net.cpp:165] Memory required for data: 252428956
I0419 16:37:10.402179  4763 layer_factory.hpp:77] Creating layer relu4
I0419 16:37:10.402189  4763 net.cpp:106] Creating Layer relu4
I0419 16:37:10.402192  4763 net.cpp:454] relu4 <- conv4
I0419 16:37:10.402196  4763 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:37:10.402202  4763 net.cpp:150] Setting up relu4
I0419 16:37:10.402206  4763 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:37:10.402210  4763 net.cpp:165] Memory required for data: 256262812
I0419 16:37:10.402214  4763 layer_factory.hpp:77] Creating layer conv5
I0419 16:37:10.402221  4763 net.cpp:106] Creating Layer conv5
I0419 16:37:10.402227  4763 net.cpp:454] conv5 <- conv4
I0419 16:37:10.402233  4763 net.cpp:411] conv5 -> conv5
I0419 16:37:10.404502  4763 net.cpp:150] Setting up conv5
I0419 16:37:10.404521  4763 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:37:10.404525  4763 net.cpp:165] Memory required for data: 258818716
I0419 16:37:10.404532  4763 layer_factory.hpp:77] Creating layer relu5
I0419 16:37:10.404542  4763 net.cpp:106] Creating Layer relu5
I0419 16:37:10.404546  4763 net.cpp:454] relu5 <- conv5
I0419 16:37:10.404551  4763 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:37:10.404557  4763 net.cpp:150] Setting up relu5
I0419 16:37:10.404561  4763 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:37:10.404566  4763 net.cpp:165] Memory required for data: 261374620
I0419 16:37:10.404568  4763 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:37:10.404582  4763 net.cpp:106] Creating Layer rpn_conv1
I0419 16:37:10.404588  4763 net.cpp:454] rpn_conv1 <- conv5
I0419 16:37:10.404594  4763 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:37:10.421617  4763 net.cpp:150] Setting up rpn_conv1
I0419 16:37:10.421634  4763 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:37:10.421638  4763 net.cpp:165] Memory required for data: 263930524
I0419 16:37:10.421644  4763 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:37:10.421651  4763 net.cpp:106] Creating Layer rpn_relu1
I0419 16:37:10.421654  4763 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:37:10.421660  4763 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:37:10.421666  4763 net.cpp:150] Setting up rpn_relu1
I0419 16:37:10.421671  4763 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:37:10.421674  4763 net.cpp:165] Memory required for data: 266486428
I0419 16:37:10.421677  4763 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:37:10.421684  4763 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:37:10.421686  4763 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:37:10.421694  4763 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:37:10.421700  4763 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:37:10.421731  4763 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:37:10.421741  4763 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:37:10.421747  4763 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:37:10.421751  4763 net.cpp:165] Memory required for data: 271598236
I0419 16:37:10.421753  4763 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:37:10.421762  4763 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:37:10.421769  4763 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:37:10.421774  4763 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:37:10.422086  4763 net.cpp:150] Setting up rpn_cls_score
I0419 16:37:10.422098  4763 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:37:10.422101  4763 net.cpp:165] Memory required for data: 271777948
I0419 16:37:10.422106  4763 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:37:10.422111  4763 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:37:10.422116  4763 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:37:10.422121  4763 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:37:10.422127  4763 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:37:10.422158  4763 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:37:10.422166  4763 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:37:10.422169  4763 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:37:10.422173  4763 net.cpp:165] Memory required for data: 272137372
I0419 16:37:10.422175  4763 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:37:10.422183  4763 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:37:10.422190  4763 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:37:10.422196  4763 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:37:10.422639  4763 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:37:10.422650  4763 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:37:10.422653  4763 net.cpp:165] Memory required for data: 272496796
I0419 16:37:10.422658  4763 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:37:10.422669  4763 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:37:10.422673  4763 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:37:10.422678  4763 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:37:10.422709  4763 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:37:10.422719  4763 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:37:10.422721  4763 net.cpp:165] Memory required for data: 272676508
I0419 16:37:10.422725  4763 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:37:10.423266  4763 net.cpp:106] Creating Layer rpn-data
I0419 16:37:10.423285  4763 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:37:10.423290  4763 net.cpp:454] rpn-data <- gt_boxes
I0419 16:37:10.423295  4763 net.cpp:454] rpn-data <- im_info
I0419 16:37:10.423300  4763 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:37:10.423305  4763 net.cpp:411] rpn-data -> rpn_labels
I0419 16:37:10.423312  4763 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:37:10.423322  4763 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:37:10.423328  4763 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:37:10.424546  4763 net.cpp:150] Setting up rpn-data
I0419 16:37:10.424567  4763 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:37:10.424572  4763 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:37:10.424577  4763 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:37:10.424581  4763 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:37:10.424584  4763 net.cpp:165] Memory required for data: 273844636
I0419 16:37:10.424588  4763 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:37:10.424598  4763 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:37:10.424607  4763 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:37:10.424612  4763 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:37:10.424619  4763 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:37:10.424633  4763 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:37:10.424742  4763 net.cpp:150] Setting up rpn_loss_cls
I0419 16:37:10.424752  4763 net.cpp:157] Top shape: (1)
I0419 16:37:10.424756  4763 net.cpp:160]     with loss weight 1
I0419 16:37:10.424770  4763 net.cpp:165] Memory required for data: 273844640
I0419 16:37:10.424773  4763 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:37:10.424783  4763 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:37:10.424792  4763 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:37:10.424794  4763 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:37:10.424798  4763 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:37:10.424803  4763 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:37:10.424808  4763 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:37:10.425380  4763 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:37:10.425391  4763 net.cpp:157] Top shape: (1)
I0419 16:37:10.425395  4763 net.cpp:160]     with loss weight 1
I0419 16:37:10.425401  4763 net.cpp:165] Memory required for data: 273844644
I0419 16:37:10.425405  4763 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:37:10.425415  4763 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:37:10.425423  4763 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:37:10.425451  4763 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:37:10.425460  4763 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:37:10.425462  4763 net.cpp:165] Memory required for data: 273881508
I0419 16:37:10.425467  4763 layer_factory.hpp:77] Creating layer fc6
I0419 16:37:10.425475  4763 net.cpp:106] Creating Layer fc6
I0419 16:37:10.425478  4763 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:37:10.425484  4763 net.cpp:411] fc6 -> fc6
I0419 16:37:10.523682  4763 net.cpp:150] Setting up fc6
I0419 16:37:10.523723  4763 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:37:10.523728  4763 net.cpp:165] Memory required for data: 273897892
I0419 16:37:10.523746  4763 layer_factory.hpp:77] Creating layer relu6
I0419 16:37:10.523758  4763 net.cpp:106] Creating Layer relu6
I0419 16:37:10.523764  4763 net.cpp:454] relu6 <- fc6
I0419 16:37:10.523771  4763 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:37:10.523784  4763 net.cpp:150] Setting up relu6
I0419 16:37:10.523788  4763 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:37:10.523793  4763 net.cpp:165] Memory required for data: 273914276
I0419 16:37:10.523797  4763 layer_factory.hpp:77] Creating layer fc7
I0419 16:37:10.523803  4763 net.cpp:106] Creating Layer fc7
I0419 16:37:10.523808  4763 net.cpp:454] fc7 <- fc6
I0419 16:37:10.523815  4763 net.cpp:411] fc7 -> fc7
I0419 16:37:10.567348  4763 net.cpp:150] Setting up fc7
I0419 16:37:10.567389  4763 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:37:10.567394  4763 net.cpp:165] Memory required for data: 273930660
I0419 16:37:10.567404  4763 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:37:10.567426  4763 net.cpp:106] Creating Layer silence_fc7
I0419 16:37:10.567435  4763 net.cpp:454] silence_fc7 <- fc7
I0419 16:37:10.567442  4763 net.cpp:150] Setting up silence_fc7
I0419 16:37:10.567445  4763 net.cpp:165] Memory required for data: 273930660
I0419 16:37:10.567448  4763 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:37:10.567452  4763 net.cpp:228] fc7 does not need backward computation.
I0419 16:37:10.567457  4763 net.cpp:228] relu6 does not need backward computation.
I0419 16:37:10.567459  4763 net.cpp:228] fc6 does not need backward computation.
I0419 16:37:10.567463  4763 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:37:10.567468  4763 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:37:10.567472  4763 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:37:10.567476  4763 net.cpp:226] rpn-data needs backward computation.
I0419 16:37:10.567481  4763 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:37:10.567484  4763 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:37:10.567487  4763 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:37:10.567490  4763 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:37:10.567494  4763 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:37:10.567500  4763 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:37:10.567503  4763 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:37:10.567507  4763 net.cpp:226] relu5 needs backward computation.
I0419 16:37:10.567510  4763 net.cpp:226] conv5 needs backward computation.
I0419 16:37:10.567513  4763 net.cpp:226] relu4 needs backward computation.
I0419 16:37:10.567517  4763 net.cpp:226] conv4 needs backward computation.
I0419 16:37:10.567519  4763 net.cpp:226] relu3 needs backward computation.
I0419 16:37:10.567523  4763 net.cpp:226] conv3 needs backward computation.
I0419 16:37:10.567528  4763 net.cpp:226] pool2 needs backward computation.
I0419 16:37:10.567530  4763 net.cpp:226] norm2 needs backward computation.
I0419 16:37:10.567533  4763 net.cpp:226] relu2 needs backward computation.
I0419 16:37:10.567536  4763 net.cpp:226] conv2 needs backward computation.
I0419 16:37:10.567540  4763 net.cpp:226] pool1 needs backward computation.
I0419 16:37:10.567544  4763 net.cpp:226] norm1 needs backward computation.
I0419 16:37:10.567548  4763 net.cpp:226] relu1 needs backward computation.
I0419 16:37:10.567550  4763 net.cpp:226] conv1 needs backward computation.
I0419 16:37:10.567553  4763 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:37:10.567556  4763 net.cpp:228] input-data does not need backward computation.
I0419 16:37:10.567559  4763 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:37:10.567562  4763 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:37:10.567589  4763 net.cpp:283] Network initialization done.
I0419 16:37:10.567694  4763 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:37:11.016975  4763 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:37:11.017007  4763 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:37:11.047446  4763 net.cpp:816] Ignoring source layer drop6
I0419 16:37:11.060926  4763 net.cpp:816] Ignoring source layer relu7
I0419 16:37:11.060948  4763 net.cpp:816] Ignoring source layer drop7
I0419 16:37:11.060952  4763 net.cpp:816] Ignoring source layer fc8
I0419 16:37:11.060955  4763 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:37:11.226572  4763 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 16:37:11.226615  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 16:37:11.226624  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 16:37:11.226637  4763 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:37:14.082641  4763 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 16:37:14.082684  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 16:37:14.082690  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 16:37:14.082695  4763 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:37:16.937836  4763 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 16:37:16.937878  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 16:37:16.937885  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 16:37:16.937891  4763 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:37:19.793050  4763 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 16:37:19.793092  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 16:37:19.793098  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 16:37:19.793104  4763 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:37:22.652359  4763 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 16:37:22.652400  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 16:37:22.652407  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 16:37:22.652412  4763 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:37:25.516818  4763 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 16:37:25.516862  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 16:37:25.516870  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 16:37:25.516875  4763 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:37:28.382441  4763 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 16:37:28.382481  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 16:37:28.382488  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 16:37:28.382493  4763 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:37:31.249410  4763 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 16:37:31.249454  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 16:37:31.249459  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 16:37:31.249464  4763 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:37:34.120285  4763 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 16:37:34.120327  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 16:37:34.120333  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 16:37:34.120338  4763 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:37:36.984465  4763 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 16:37:36.984508  4763 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 16:37:36.984514  4763 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 16:37:36.984519  4763 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.143s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:37:43.624707  4785 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:37:43.624876  4785 net.cpp:413] Input 0 -> data
I0419 16:37:43.640398  4785 net.cpp:413] Input 1 -> im_info
I0419 16:37:43.640455  4785 layer_factory.hpp:77] Creating layer conv1
I0419 16:37:43.640487  4785 net.cpp:106] Creating Layer conv1
I0419 16:37:43.640501  4785 net.cpp:454] conv1 <- data
I0419 16:37:43.640516  4785 net.cpp:411] conv1 -> conv1
I0419 16:37:43.641278  4785 net.cpp:150] Setting up conv1
I0419 16:37:43.641300  4785 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:37:43.641304  4785 net.cpp:165] Memory required for data: 4816896
I0419 16:37:43.641326  4785 layer_factory.hpp:77] Creating layer relu1
I0419 16:37:43.641348  4785 net.cpp:106] Creating Layer relu1
I0419 16:37:43.641360  4785 net.cpp:454] relu1 <- conv1
I0419 16:37:43.641368  4785 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:37:43.641381  4785 net.cpp:150] Setting up relu1
I0419 16:37:43.641396  4785 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:37:43.641402  4785 net.cpp:165] Memory required for data: 9633792
I0419 16:37:43.641409  4785 layer_factory.hpp:77] Creating layer norm1
I0419 16:37:43.641423  4785 net.cpp:106] Creating Layer norm1
I0419 16:37:43.641428  4785 net.cpp:454] norm1 <- conv1
I0419 16:37:43.641435  4785 net.cpp:411] norm1 -> norm1
I0419 16:37:43.641557  4785 net.cpp:150] Setting up norm1
I0419 16:37:43.641571  4785 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:37:43.641573  4785 net.cpp:165] Memory required for data: 14450688
I0419 16:37:43.641577  4785 layer_factory.hpp:77] Creating layer pool1
I0419 16:37:43.641583  4785 net.cpp:106] Creating Layer pool1
I0419 16:37:43.641592  4785 net.cpp:454] pool1 <- norm1
I0419 16:37:43.641602  4785 net.cpp:411] pool1 -> pool1
I0419 16:37:43.641659  4785 net.cpp:150] Setting up pool1
I0419 16:37:43.641672  4785 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:37:43.641675  4785 net.cpp:165] Memory required for data: 15698304
I0419 16:37:43.641679  4785 layer_factory.hpp:77] Creating layer conv2
I0419 16:37:43.641686  4785 net.cpp:106] Creating Layer conv2
I0419 16:37:43.641696  4785 net.cpp:454] conv2 <- pool1
I0419 16:37:43.641707  4785 net.cpp:411] conv2 -> conv2
I0419 16:37:43.643877  4785 net.cpp:150] Setting up conv2
I0419 16:37:43.643896  4785 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:37:43.643900  4785 net.cpp:165] Memory required for data: 16559488
I0419 16:37:43.643913  4785 layer_factory.hpp:77] Creating layer relu2
I0419 16:37:43.643929  4785 net.cpp:106] Creating Layer relu2
I0419 16:37:43.643936  4785 net.cpp:454] relu2 <- conv2
I0419 16:37:43.643944  4785 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:37:43.643959  4785 net.cpp:150] Setting up relu2
I0419 16:37:43.643967  4785 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:37:43.643973  4785 net.cpp:165] Memory required for data: 17420672
I0419 16:37:43.643978  4785 layer_factory.hpp:77] Creating layer norm2
I0419 16:37:43.643990  4785 net.cpp:106] Creating Layer norm2
I0419 16:37:43.643997  4785 net.cpp:454] norm2 <- conv2
I0419 16:37:43.644004  4785 net.cpp:411] norm2 -> norm2
I0419 16:37:43.644101  4785 net.cpp:150] Setting up norm2
I0419 16:37:43.644114  4785 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:37:43.644117  4785 net.cpp:165] Memory required for data: 18281856
I0419 16:37:43.644119  4785 layer_factory.hpp:77] Creating layer pool2
I0419 16:37:43.644129  4785 net.cpp:106] Creating Layer pool2
I0419 16:37:43.644139  4785 net.cpp:454] pool2 <- norm2
I0419 16:37:43.644145  4785 net.cpp:411] pool2 -> pool2
I0419 16:37:43.644197  4785 net.cpp:150] Setting up pool2
I0419 16:37:43.644209  4785 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:37:43.644212  4785 net.cpp:165] Memory required for data: 18512256
I0419 16:37:43.644215  4785 layer_factory.hpp:77] Creating layer conv3
I0419 16:37:43.644222  4785 net.cpp:106] Creating Layer conv3
I0419 16:37:43.644225  4785 net.cpp:454] conv3 <- pool2
I0419 16:37:43.644232  4785 net.cpp:411] conv3 -> conv3
I0419 16:37:43.646533  4785 net.cpp:150] Setting up conv3
I0419 16:37:43.646549  4785 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:37:43.646553  4785 net.cpp:165] Memory required for data: 18857856
I0419 16:37:43.646564  4785 layer_factory.hpp:77] Creating layer relu3
I0419 16:37:43.646579  4785 net.cpp:106] Creating Layer relu3
I0419 16:37:43.646591  4785 net.cpp:454] relu3 <- conv3
I0419 16:37:43.646600  4785 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:37:43.646610  4785 net.cpp:150] Setting up relu3
I0419 16:37:43.646620  4785 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:37:43.646623  4785 net.cpp:165] Memory required for data: 19203456
I0419 16:37:43.646628  4785 layer_factory.hpp:77] Creating layer conv4
I0419 16:37:43.646637  4785 net.cpp:106] Creating Layer conv4
I0419 16:37:43.646648  4785 net.cpp:454] conv4 <- conv3
I0419 16:37:43.646657  4785 net.cpp:411] conv4 -> conv4
I0419 16:37:43.649961  4785 net.cpp:150] Setting up conv4
I0419 16:37:43.649979  4785 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:37:43.649982  4785 net.cpp:165] Memory required for data: 19549056
I0419 16:37:43.649991  4785 layer_factory.hpp:77] Creating layer relu4
I0419 16:37:43.650002  4785 net.cpp:106] Creating Layer relu4
I0419 16:37:43.650013  4785 net.cpp:454] relu4 <- conv4
I0419 16:37:43.650022  4785 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:37:43.650032  4785 net.cpp:150] Setting up relu4
I0419 16:37:43.650041  4785 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:37:43.650045  4785 net.cpp:165] Memory required for data: 19894656
I0419 16:37:43.650050  4785 layer_factory.hpp:77] Creating layer conv5
I0419 16:37:43.650064  4785 net.cpp:106] Creating Layer conv5
I0419 16:37:43.650070  4785 net.cpp:454] conv5 <- conv4
I0419 16:37:43.650077  4785 net.cpp:411] conv5 -> conv5
I0419 16:37:43.652371  4785 net.cpp:150] Setting up conv5
I0419 16:37:43.652389  4785 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:37:43.652391  4785 net.cpp:165] Memory required for data: 20125056
I0419 16:37:43.652402  4785 layer_factory.hpp:77] Creating layer relu5
I0419 16:37:43.652420  4785 net.cpp:106] Creating Layer relu5
I0419 16:37:43.652431  4785 net.cpp:454] relu5 <- conv5
I0419 16:37:43.652439  4785 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:37:43.652451  4785 net.cpp:150] Setting up relu5
I0419 16:37:43.652459  4785 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:37:43.652464  4785 net.cpp:165] Memory required for data: 20355456
I0419 16:37:43.652468  4785 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:37:43.652482  4785 net.cpp:106] Creating Layer rpn_conv1
I0419 16:37:43.652493  4785 net.cpp:454] rpn_conv1 <- conv5
I0419 16:37:43.652501  4785 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:37:43.654104  4785 net.cpp:150] Setting up rpn_conv1
I0419 16:37:43.654121  4785 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:37:43.654124  4785 net.cpp:165] Memory required for data: 20585856
I0419 16:37:43.654132  4785 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:37:43.654145  4785 net.cpp:106] Creating Layer rpn_relu1
I0419 16:37:43.654151  4785 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:37:43.654165  4785 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:37:43.654175  4785 net.cpp:150] Setting up rpn_relu1
I0419 16:37:43.654188  4785 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:37:43.654192  4785 net.cpp:165] Memory required for data: 20816256
I0419 16:37:43.654197  4785 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:37:43.654216  4785 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:37:43.654227  4785 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:37:43.654234  4785 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:37:43.654242  4785 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:37:43.654287  4785 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:37:43.654304  4785 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:37:43.654309  4785 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:37:43.654311  4785 net.cpp:165] Memory required for data: 21277056
I0419 16:37:43.654316  4785 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:37:43.654347  4785 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:37:43.654358  4785 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:37:43.654366  4785 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:37:43.654567  4785 net.cpp:150] Setting up rpn_cls_score
I0419 16:37:43.654579  4785 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:37:43.654582  4785 net.cpp:165] Memory required for data: 21293256
I0419 16:37:43.654589  4785 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:37:43.654608  4785 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:37:43.654619  4785 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:37:43.654628  4785 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:37:43.654829  4785 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:37:43.654842  4785 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:37:43.654845  4785 net.cpp:165] Memory required for data: 21325656
I0419 16:37:43.654855  4785 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:37:43.654863  4785 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:37:43.654868  4785 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:37:43.654882  4785 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:37:43.654927  4785 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:37:43.654937  4785 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:37:43.654939  4785 net.cpp:165] Memory required for data: 21341856
I0419 16:37:43.654942  4785 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:37:43.654953  4785 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:37:43.654963  4785 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:37:43.654970  4785 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:37:43.655045  4785 net.cpp:150] Setting up rpn_cls_prob
I0419 16:37:43.655058  4785 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:37:43.655061  4785 net.cpp:165] Memory required for data: 21358056
I0419 16:37:43.655066  4785 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:37:43.655078  4785 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:37:43.655089  4785 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:37:43.655097  4785 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:37:43.655136  4785 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:37:43.655148  4785 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:37:43.655149  4785 net.cpp:165] Memory required for data: 21374256
I0419 16:37:43.655153  4785 layer_factory.hpp:77] Creating layer proposal
I0419 16:37:43.656709  4785 net.cpp:106] Creating Layer proposal
I0419 16:37:43.656728  4785 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:37:43.656734  4785 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:37:43.656739  4785 net.cpp:454] proposal <- im_info
I0419 16:37:43.656749  4785 net.cpp:411] proposal -> rois
I0419 16:37:43.656766  4785 net.cpp:411] proposal -> scores
I0419 16:37:43.658068  4785 net.cpp:150] Setting up proposal
I0419 16:37:43.658090  4785 net.cpp:157] Top shape: 1 5 (5)
I0419 16:37:43.658095  4785 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:37:43.658100  4785 net.cpp:165] Memory required for data: 21374280
I0419 16:37:43.658107  4785 net.cpp:228] proposal does not need backward computation.
I0419 16:37:43.658116  4785 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:37:43.658129  4785 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:37:43.658134  4785 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:37:43.658140  4785 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:37:43.658145  4785 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:37:43.658150  4785 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:37:43.658157  4785 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:37:43.658162  4785 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:37:43.658167  4785 net.cpp:228] relu5 does not need backward computation.
I0419 16:37:43.658174  4785 net.cpp:228] conv5 does not need backward computation.
I0419 16:37:43.658179  4785 net.cpp:228] relu4 does not need backward computation.
I0419 16:37:43.658184  4785 net.cpp:228] conv4 does not need backward computation.
I0419 16:37:43.658187  4785 net.cpp:228] relu3 does not need backward computation.
I0419 16:37:43.658195  4785 net.cpp:228] conv3 does not need backward computation.
I0419 16:37:43.658200  4785 net.cpp:228] pool2 does not need backward computation.
I0419 16:37:43.658207  4785 net.cpp:228] norm2 does not need backward computation.
I0419 16:37:43.658212  4785 net.cpp:228] relu2 does not need backward computation.
I0419 16:37:43.658219  4785 net.cpp:228] conv2 does not need backward computation.
I0419 16:37:43.658224  4785 net.cpp:228] pool1 does not need backward computation.
I0419 16:37:43.658228  4785 net.cpp:228] norm1 does not need backward computation.
I0419 16:37:43.658233  4785 net.cpp:228] relu1 does not need backward computation.
I0419 16:37:43.658237  4785 net.cpp:228] conv1 does not need backward computation.
I0419 16:37:43.658242  4785 net.cpp:270] This network produces output rois
I0419 16:37:43.658249  4785 net.cpp:270] This network produces output scores
I0419 16:37:43.658278  4785 net.cpp:283] Network initialization done.
I0419 16:37:44.093132  4785 net.cpp:816] Ignoring source layer input-data
I0419 16:37:44.093168  4785 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:37:44.096737  4785 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:37:44.096763  4785 net.cpp:816] Ignoring source layer rpn-data
I0419 16:37:44.096766  4785 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:37:44.096771  4785 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:37:44.096774  4785 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:37:44.096782  4785 net.cpp:816] Ignoring source layer fc6
I0419 16:37:44.096786  4785 net.cpp:816] Ignoring source layer relu6
I0419 16:37:44.096792  4785 net.cpp:816] Ignoring source layer fc7
I0419 16:37:44.096796  4785 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.162s
im_proposals: 2/506 0.155s
im_proposals: 3/506 0.150s
im_proposals: 4/506 0.148s
im_proposals: 5/506 0.147s
im_proposals: 6/506 0.146s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.145s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.144s
im_proposals: 11/506 0.143s
im_proposals: 12/506 0.143s
im_proposals: 13/506 0.143s
im_proposals: 14/506 0.142s
im_proposals: 15/506 0.142s
im_proposals: 16/506 0.142s
im_proposals: 17/506 0.142s
im_proposals: 18/506 0.142s
im_proposals: 19/506 0.142s
im_proposals: 20/506 0.142s
im_proposals: 21/506 0.142s
im_proposals: 22/506 0.142s
im_proposals: 23/506 0.142s
im_proposals: 24/506 0.142s
im_proposals: 25/506 0.142s
im_proposals: 26/506 0.142s
im_proposals: 27/506 0.142s
im_proposals: 28/506 0.142s
im_proposals: 29/506 0.142s
im_proposals: 30/506 0.142s
im_proposals: 31/506 0.142s
im_proposals: 32/506 0.142s
im_proposals: 33/506 0.142s
im_proposals: 34/506 0.142s
im_proposals: 35/506 0.142s
im_proposals: 36/506 0.142s
im_proposals: 37/506 0.142s
im_proposals: 38/506 0.142s
im_proposals: 39/506 0.142s
im_proposals: 40/506 0.142s
im_proposals: 41/506 0.142s
im_proposals: 42/506 0.142s
im_proposals: 43/506 0.142s
im_proposals: 44/506 0.142s
im_proposals: 45/506 0.142s
im_proposals: 46/506 0.142s
im_proposals: 47/506 0.142s
im_proposals: 48/506 0.142s
im_proposals: 49/506 0.142s
im_proposals: 50/506 0.142s
im_proposals: 51/506 0.142s
im_proposals: 52/506 0.142s
im_proposals: 53/506 0.142s
im_proposals: 54/506 0.142s
im_proposals: 55/506 0.142s
im_proposals: 56/506 0.142s
im_proposals: 57/506 0.142s
im_proposals: 58/506 0.142s
im_proposals: 59/506 0.142s
im_proposals: 60/506 0.142s
im_proposals: 61/506 0.142s
im_proposals: 62/506 0.142s
im_proposals: 63/506 0.142s
im_proposals: 64/506 0.142s
im_proposals: 65/506 0.142s
im_proposals: 66/506 0.142s
im_proposals: 67/506 0.142s
im_proposals: 68/506 0.142s
im_proposals: 69/506 0.142s
im_proposals: 70/506 0.142s
im_proposals: 71/506 0.142s
im_proposals: 72/506 0.142s
im_proposals: 73/506 0.142s
im_proposals: 74/506 0.142s
im_proposals: 75/506 0.142s
im_proposals: 76/506 0.142s
im_proposals: 77/506 0.142s
im_proposals: 78/506 0.142s
im_proposals: 79/506 0.142s
im_proposals: 80/506 0.142s
im_proposals: 81/506 0.142s
im_proposals: 82/506 0.142s
im_proposals: 83/506 0.142s
im_proposals: 84/506 0.142s
im_proposals: 85/506 0.142s
im_proposals: 86/506 0.142s
im_proposals: 87/506 0.142s
im_proposals: 88/506 0.142s
im_proposals: 89/506 0.142s
im_proposals: 90/506 0.142s
im_proposals: 91/506 0.142s
im_proposals: 92/506 0.142s
im_proposals: 93/506 0.142s
im_proposals: 94/506 0.142s
im_proposals: 95/506 0.142s
im_proposals: 96/506 0.142s
im_proposals: 97/506 0.142s
im_proposals: 98/506 0.142s
im_proposals: 99/506 0.142s
im_proposals: 100/506 0.142s
im_proposals: 101/506 0.142s
im_proposals: 102/506 0.142s
im_proposals: 103/506 0.142s
im_proposals: 104/506 0.142s
im_proposals: 105/506 0.142s
im_proposals: 106/506 0.142s
im_proposals: 107/506 0.142s
im_proposals: 108/506 0.142s
im_proposals: 109/506 0.142s
im_proposals: 110/506 0.142s
im_proposals: 111/506 0.142s
im_proposals: 112/506 0.142s
im_proposals: 113/506 0.142s
im_proposals: 114/506 0.142s
im_proposals: 115/506 0.142s
im_proposals: 116/506 0.142s
im_proposals: 117/506 0.142s
im_proposals: 118/506 0.142s
im_proposals: 119/506 0.142s
im_proposals: 120/506 0.142s
im_proposals: 121/506 0.141s
im_proposals: 122/506 0.141s
im_proposals: 123/506 0.141s
im_proposals: 124/506 0.141s
im_proposals: 125/506 0.141s
im_proposals: 126/506 0.141s
im_proposals: 127/506 0.141s
im_proposals: 128/506 0.141s
im_proposals: 129/506 0.141s
im_proposals: 130/506 0.141s
im_proposals: 131/506 0.141s
im_proposals: 132/506 0.141s
im_proposals: 133/506 0.141s
im_proposals: 134/506 0.141s
im_proposals: 135/506 0.141s
im_proposals: 136/506 0.141s
im_proposals: 137/506 0.141s
im_proposals: 138/506 0.141s
im_proposals: 139/506 0.141s
im_proposals: 140/506 0.141s
im_proposals: 141/506 0.141s
im_proposals: 142/506 0.141s
im_proposals: 143/506 0.141s
im_proposals: 144/506 0.141s
im_proposals: 145/506 0.141s
im_proposals: 146/506 0.141s
im_proposals: 147/506 0.141s
im_proposals: 148/506 0.141s
im_proposals: 149/506 0.141s
im_proposals: 150/506 0.141s
im_proposals: 151/506 0.141s
im_proposals: 152/506 0.141s
im_proposals: 153/506 0.141s
im_proposals: 154/506 0.141s
im_proposals: 155/506 0.141s
im_proposals: 156/506 0.141s
im_proposals: 157/506 0.141s
im_proposals: 158/506 0.141s
im_proposals: 159/506 0.141s
im_proposals: 160/506 0.141s
im_proposals: 161/506 0.141s
im_proposals: 162/506 0.141s
im_proposals: 163/506 0.141s
im_proposals: 164/506 0.141s
im_proposals: 165/506 0.141s
im_proposals: 166/506 0.141s
im_proposals: 167/506 0.141s
im_proposals: 168/506 0.141s
im_proposals: 169/506 0.141s
im_proposals: 170/506 0.141s
im_proposals: 171/506 0.141s
im_proposals: 172/506 0.141s
im_proposals: 173/506 0.141s
im_proposals: 174/506 0.141s
im_proposals: 175/506 0.141s
im_proposals: 176/506 0.141s
im_proposals: 177/506 0.141s
im_proposals: 178/506 0.141s
im_proposals: 179/506 0.141s
im_proposals: 180/506 0.141s
im_proposals: 181/506 0.141s
im_proposals: 182/506 0.141s
im_proposals: 183/506 0.141s
im_proposals: 184/506 0.141s
im_proposals: 185/506 0.141s
im_proposals: 186/506 0.141s
im_proposals: 187/506 0.141s
im_proposals: 188/506 0.141s
im_proposals: 189/506 0.141s
im_proposals: 190/506 0.141s
im_proposals: 191/506 0.141s
im_proposals: 192/506 0.141s
im_proposals: 193/506 0.141s
im_proposals: 194/506 0.141s
im_proposals: 195/506 0.141s
im_proposals: 196/506 0.141s
im_proposals: 197/506 0.141s
im_proposals: 198/506 0.141s
im_proposals: 199/506 0.141s
im_proposals: 200/506 0.141s
im_proposals: 201/506 0.141s
im_proposals: 202/506 0.141s
im_proposals: 203/506 0.141s
im_proposals: 204/506 0.141s
im_proposals: 205/506 0.141s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.142s
im_proposals: 455/506 0.142s
im_proposals: 456/506 0.142s
im_proposals: 457/506 0.142s
im_proposals: 458/506 0.142s
im_proposals: 459/506 0.142s
im_proposals: 460/506 0.142s
im_proposals: 461/506 0.142s
im_proposals: 462/506 0.142s
im_proposals: 463/506 0.142s
im_proposals: 464/506 0.142s
im_proposals: 465/506 0.142s
im_proposals: 466/506 0.142s
im_proposals: 467/506 0.142s
im_proposals: 468/506 0.142s
im_proposals: 469/506 0.142s
im_proposals: 470/506 0.142s
im_proposals: 471/506 0.142s
im_proposals: 472/506 0.142s
im_proposals: 473/506 0.142s
im_proposals: 474/506 0.142s
im_proposals: 475/506 0.142s
im_proposals: 476/506 0.142s
im_proposals: 477/506 0.142s
im_proposals: 478/506 0.142s
im_proposals: 479/506 0.142s
im_proposals: 480/506 0.142s
im_proposals: 481/506 0.142s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:39:20.163677  4819 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:39:20.163739  4819 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 16:39:20.164575  4819 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:39:20.164772  4819 layer_factory.hpp:77] Creating layer data
I0419 16:39:20.165509  4819 net.cpp:106] Creating Layer data
I0419 16:39:20.165534  4819 net.cpp:411] data -> data
I0419 16:39:20.165560  4819 net.cpp:411] data -> rois
I0419 16:39:20.165573  4819 net.cpp:411] data -> labels
I0419 16:39:20.165586  4819 net.cpp:411] data -> bbox_targets
I0419 16:39:20.165597  4819 net.cpp:411] data -> bbox_inside_weights
I0419 16:39:20.165606  4819 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:39:20.181089  4819 net.cpp:150] Setting up data
I0419 16:39:20.181114  4819 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:39:20.181123  4819 net.cpp:157] Top shape: 1 5 (5)
I0419 16:39:20.181134  4819 net.cpp:157] Top shape: 1 (1)
I0419 16:39:20.181140  4819 net.cpp:157] Top shape: 1 176 (176)
I0419 16:39:20.181149  4819 net.cpp:157] Top shape: 1 176 (176)
I0419 16:39:20.181155  4819 net.cpp:157] Top shape: 1 176 (176)
I0419 16:39:20.181159  4819 net.cpp:165] Memory required for data: 14402136
I0419 16:39:20.181165  4819 layer_factory.hpp:77] Creating layer conv1
I0419 16:39:20.181191  4819 net.cpp:106] Creating Layer conv1
I0419 16:39:20.181202  4819 net.cpp:454] conv1 <- data
I0419 16:39:20.181216  4819 net.cpp:411] conv1 -> conv1
I0419 16:39:20.182567  4819 net.cpp:150] Setting up conv1
I0419 16:39:20.182587  4819 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:39:20.182592  4819 net.cpp:165] Memory required for data: 129602136
I0419 16:39:20.182612  4819 layer_factory.hpp:77] Creating layer relu1
I0419 16:39:20.182629  4819 net.cpp:106] Creating Layer relu1
I0419 16:39:20.182641  4819 net.cpp:454] relu1 <- conv1
I0419 16:39:20.182648  4819 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:39:20.182662  4819 net.cpp:150] Setting up relu1
I0419 16:39:20.182672  4819 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:39:20.182677  4819 net.cpp:165] Memory required for data: 244802136
I0419 16:39:20.182682  4819 layer_factory.hpp:77] Creating layer norm1
I0419 16:39:20.182693  4819 net.cpp:106] Creating Layer norm1
I0419 16:39:20.182699  4819 net.cpp:454] norm1 <- conv1
I0419 16:39:20.182708  4819 net.cpp:411] norm1 -> norm1
I0419 16:39:20.182821  4819 net.cpp:150] Setting up norm1
I0419 16:39:20.182834  4819 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:39:20.182839  4819 net.cpp:165] Memory required for data: 360002136
I0419 16:39:20.182843  4819 layer_factory.hpp:77] Creating layer pool1
I0419 16:39:20.182852  4819 net.cpp:106] Creating Layer pool1
I0419 16:39:20.182858  4819 net.cpp:454] pool1 <- norm1
I0419 16:39:20.182868  4819 net.cpp:411] pool1 -> pool1
I0419 16:39:20.182912  4819 net.cpp:150] Setting up pool1
I0419 16:39:20.182925  4819 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:39:20.182930  4819 net.cpp:165] Memory required for data: 389110104
I0419 16:39:20.182934  4819 layer_factory.hpp:77] Creating layer conv2
I0419 16:39:20.182947  4819 net.cpp:106] Creating Layer conv2
I0419 16:39:20.182958  4819 net.cpp:454] conv2 <- pool1
I0419 16:39:20.182966  4819 net.cpp:411] conv2 -> conv2
I0419 16:39:20.184648  4819 net.cpp:150] Setting up conv2
I0419 16:39:20.184667  4819 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:39:20.184672  4819 net.cpp:165] Memory required for data: 408721752
I0419 16:39:20.184685  4819 layer_factory.hpp:77] Creating layer relu2
I0419 16:39:20.184695  4819 net.cpp:106] Creating Layer relu2
I0419 16:39:20.184701  4819 net.cpp:454] relu2 <- conv2
I0419 16:39:20.184708  4819 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:39:20.184720  4819 net.cpp:150] Setting up relu2
I0419 16:39:20.184726  4819 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:39:20.184731  4819 net.cpp:165] Memory required for data: 428333400
I0419 16:39:20.184736  4819 layer_factory.hpp:77] Creating layer norm2
I0419 16:39:20.184748  4819 net.cpp:106] Creating Layer norm2
I0419 16:39:20.184758  4819 net.cpp:454] norm2 <- conv2
I0419 16:39:20.184765  4819 net.cpp:411] norm2 -> norm2
I0419 16:39:20.184855  4819 net.cpp:150] Setting up norm2
I0419 16:39:20.184869  4819 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:39:20.184872  4819 net.cpp:165] Memory required for data: 447945048
I0419 16:39:20.184877  4819 layer_factory.hpp:77] Creating layer pool2
I0419 16:39:20.184888  4819 net.cpp:106] Creating Layer pool2
I0419 16:39:20.184893  4819 net.cpp:454] pool2 <- norm2
I0419 16:39:20.184900  4819 net.cpp:411] pool2 -> pool2
I0419 16:39:20.184942  4819 net.cpp:150] Setting up pool2
I0419 16:39:20.184952  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.184957  4819 net.cpp:165] Memory required for data: 453056856
I0419 16:39:20.184962  4819 layer_factory.hpp:77] Creating layer conv3
I0419 16:39:20.184973  4819 net.cpp:106] Creating Layer conv3
I0419 16:39:20.184985  4819 net.cpp:454] conv3 <- pool2
I0419 16:39:20.184993  4819 net.cpp:411] conv3 -> conv3
I0419 16:39:20.188243  4819 net.cpp:150] Setting up conv3
I0419 16:39:20.188263  4819 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:39:20.188268  4819 net.cpp:165] Memory required for data: 460724568
I0419 16:39:20.188282  4819 layer_factory.hpp:77] Creating layer relu3
I0419 16:39:20.188289  4819 net.cpp:106] Creating Layer relu3
I0419 16:39:20.188302  4819 net.cpp:454] relu3 <- conv3
I0419 16:39:20.188313  4819 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:39:20.188323  4819 net.cpp:150] Setting up relu3
I0419 16:39:20.188331  4819 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:39:20.188335  4819 net.cpp:165] Memory required for data: 468392280
I0419 16:39:20.188340  4819 layer_factory.hpp:77] Creating layer conv4
I0419 16:39:20.188351  4819 net.cpp:106] Creating Layer conv4
I0419 16:39:20.188356  4819 net.cpp:454] conv4 <- conv3
I0419 16:39:20.188367  4819 net.cpp:411] conv4 -> conv4
I0419 16:39:20.191637  4819 net.cpp:150] Setting up conv4
I0419 16:39:20.191656  4819 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:39:20.191661  4819 net.cpp:165] Memory required for data: 476059992
I0419 16:39:20.191670  4819 layer_factory.hpp:77] Creating layer relu4
I0419 16:39:20.191681  4819 net.cpp:106] Creating Layer relu4
I0419 16:39:20.191687  4819 net.cpp:454] relu4 <- conv4
I0419 16:39:20.191701  4819 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:39:20.191710  4819 net.cpp:150] Setting up relu4
I0419 16:39:20.191720  4819 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:39:20.191725  4819 net.cpp:165] Memory required for data: 483727704
I0419 16:39:20.191728  4819 layer_factory.hpp:77] Creating layer conv5
I0419 16:39:20.191743  4819 net.cpp:106] Creating Layer conv5
I0419 16:39:20.191750  4819 net.cpp:454] conv5 <- conv4
I0419 16:39:20.191757  4819 net.cpp:411] conv5 -> conv5
I0419 16:39:20.194018  4819 net.cpp:150] Setting up conv5
I0419 16:39:20.194038  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.194043  4819 net.cpp:165] Memory required for data: 488839512
I0419 16:39:20.194056  4819 layer_factory.hpp:77] Creating layer relu5
I0419 16:39:20.194068  4819 net.cpp:106] Creating Layer relu5
I0419 16:39:20.194075  4819 net.cpp:454] relu5 <- conv5
I0419 16:39:20.194083  4819 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:39:20.194097  4819 net.cpp:150] Setting up relu5
I0419 16:39:20.194104  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.194109  4819 net.cpp:165] Memory required for data: 493951320
I0419 16:39:20.194114  4819 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:39:20.194128  4819 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:39:20.194139  4819 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:39:20.194146  4819 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:39:20.194155  4819 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:39:20.194198  4819 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:39:20.194211  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.194218  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.194222  4819 net.cpp:165] Memory required for data: 504174936
I0419 16:39:20.194226  4819 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:39:20.194239  4819 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:39:20.194245  4819 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:39:20.194252  4819 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:39:20.194263  4819 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:39:20.194277  4819 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:39:20.194345  4819 net.cpp:150] Setting up roi_pool_conv5
I0419 16:39:20.194357  4819 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:39:20.194362  4819 net.cpp:165] Memory required for data: 504211800
I0419 16:39:20.194367  4819 layer_factory.hpp:77] Creating layer fc6
I0419 16:39:20.194380  4819 net.cpp:106] Creating Layer fc6
I0419 16:39:20.194391  4819 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:39:20.194401  4819 net.cpp:411] fc6 -> fc6
I0419 16:39:20.292289  4819 net.cpp:150] Setting up fc6
I0419 16:39:20.292335  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.292340  4819 net.cpp:165] Memory required for data: 504228184
I0419 16:39:20.292352  4819 layer_factory.hpp:77] Creating layer relu6
I0419 16:39:20.292366  4819 net.cpp:106] Creating Layer relu6
I0419 16:39:20.292373  4819 net.cpp:454] relu6 <- fc6
I0419 16:39:20.292387  4819 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:39:20.292399  4819 net.cpp:150] Setting up relu6
I0419 16:39:20.292409  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.292414  4819 net.cpp:165] Memory required for data: 504244568
I0419 16:39:20.292418  4819 layer_factory.hpp:77] Creating layer drop6
I0419 16:39:20.292434  4819 net.cpp:106] Creating Layer drop6
I0419 16:39:20.292445  4819 net.cpp:454] drop6 <- fc6
I0419 16:39:20.292453  4819 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:39:20.292486  4819 net.cpp:150] Setting up drop6
I0419 16:39:20.292497  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.292502  4819 net.cpp:165] Memory required for data: 504260952
I0419 16:39:20.292507  4819 layer_factory.hpp:77] Creating layer fc7
I0419 16:39:20.292517  4819 net.cpp:106] Creating Layer fc7
I0419 16:39:20.292526  4819 net.cpp:454] fc7 <- fc6
I0419 16:39:20.292541  4819 net.cpp:411] fc7 -> fc7
I0419 16:39:20.335986  4819 net.cpp:150] Setting up fc7
I0419 16:39:20.336032  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.336037  4819 net.cpp:165] Memory required for data: 504277336
I0419 16:39:20.336051  4819 layer_factory.hpp:77] Creating layer relu7
I0419 16:39:20.336066  4819 net.cpp:106] Creating Layer relu7
I0419 16:39:20.336073  4819 net.cpp:454] relu7 <- fc7
I0419 16:39:20.336081  4819 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:39:20.336093  4819 net.cpp:150] Setting up relu7
I0419 16:39:20.336098  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.336102  4819 net.cpp:165] Memory required for data: 504293720
I0419 16:39:20.336107  4819 layer_factory.hpp:77] Creating layer drop7
I0419 16:39:20.336117  4819 net.cpp:106] Creating Layer drop7
I0419 16:39:20.336127  4819 net.cpp:454] drop7 <- fc7
I0419 16:39:20.336136  4819 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:39:20.336170  4819 net.cpp:150] Setting up drop7
I0419 16:39:20.336182  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.336190  4819 net.cpp:165] Memory required for data: 504310104
I0419 16:39:20.336195  4819 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:39:20.336208  4819 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:39:20.336213  4819 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:39:20.336220  4819 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:39:20.336230  4819 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:39:20.336277  4819 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:39:20.336289  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.336295  4819 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:20.336299  4819 net.cpp:165] Memory required for data: 504342872
I0419 16:39:20.336304  4819 layer_factory.hpp:77] Creating layer cls_score
I0419 16:39:20.336316  4819 net.cpp:106] Creating Layer cls_score
I0419 16:39:20.336328  4819 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:39:20.336339  4819 net.cpp:411] cls_score -> cls_score
I0419 16:39:20.341907  4819 net.cpp:150] Setting up cls_score
I0419 16:39:20.341925  4819 net.cpp:157] Top shape: 1 44 (44)
I0419 16:39:20.341930  4819 net.cpp:165] Memory required for data: 504343048
I0419 16:39:20.341940  4819 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:39:20.341951  4819 net.cpp:106] Creating Layer bbox_pred
I0419 16:39:20.341956  4819 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:39:20.341967  4819 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:39:20.362591  4819 net.cpp:150] Setting up bbox_pred
I0419 16:39:20.362609  4819 net.cpp:157] Top shape: 1 176 (176)
I0419 16:39:20.362614  4819 net.cpp:165] Memory required for data: 504343752
I0419 16:39:20.362630  4819 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:39:20.362645  4819 net.cpp:106] Creating Layer loss_cls
I0419 16:39:20.362653  4819 net.cpp:454] loss_cls <- cls_score
I0419 16:39:20.362659  4819 net.cpp:454] loss_cls <- labels
I0419 16:39:20.362673  4819 net.cpp:411] loss_cls -> cls_loss
I0419 16:39:20.362699  4819 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:39:20.362790  4819 net.cpp:150] Setting up loss_cls
I0419 16:39:20.362803  4819 net.cpp:157] Top shape: (1)
I0419 16:39:20.362808  4819 net.cpp:160]     with loss weight 1
I0419 16:39:20.362828  4819 net.cpp:165] Memory required for data: 504343756
I0419 16:39:20.362833  4819 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:39:20.362846  4819 net.cpp:106] Creating Layer loss_bbox
I0419 16:39:20.362857  4819 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:39:20.362864  4819 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:39:20.362869  4819 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:39:20.362875  4819 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:39:20.362885  4819 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:39:20.362962  4819 net.cpp:150] Setting up loss_bbox
I0419 16:39:20.362974  4819 net.cpp:157] Top shape: (1)
I0419 16:39:20.362979  4819 net.cpp:160]     with loss weight 1
I0419 16:39:20.362987  4819 net.cpp:165] Memory required for data: 504343760
I0419 16:39:20.362992  4819 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:39:20.363013  4819 net.cpp:106] Creating Layer rpn_conv1
I0419 16:39:20.363021  4819 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:39:20.363031  4819 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:39:20.380075  4819 net.cpp:150] Setting up rpn_conv1
I0419 16:39:20.380095  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.380100  4819 net.cpp:165] Memory required for data: 509455568
I0419 16:39:20.380110  4819 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:39:20.380121  4819 net.cpp:106] Creating Layer rpn_relu1
I0419 16:39:20.380127  4819 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:39:20.380134  4819 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:39:20.380143  4819 net.cpp:150] Setting up rpn_relu1
I0419 16:39:20.380152  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.380157  4819 net.cpp:165] Memory required for data: 514567376
I0419 16:39:20.380162  4819 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:39:20.380173  4819 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:39:20.380178  4819 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:39:20.380192  4819 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:39:20.380205  4819 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:39:20.380247  4819 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:39:20.380261  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.380269  4819 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:39:20.380272  4819 net.cpp:165] Memory required for data: 524790992
I0419 16:39:20.380277  4819 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:39:20.380296  4819 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:39:20.380303  4819 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:39:20.380312  4819 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:39:20.380704  4819 net.cpp:150] Setting up rpn_cls_score
I0419 16:39:20.380719  4819 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:39:20.380724  4819 net.cpp:165] Memory required for data: 525150416
I0419 16:39:20.380733  4819 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:39:20.380759  4819 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:39:20.380767  4819 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:39:20.380777  4819 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:39:20.381232  4819 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:39:20.381247  4819 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:39:20.381250  4819 net.cpp:165] Memory required for data: 525869264
I0419 16:39:20.381259  4819 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:39:20.381271  4819 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:39:20.381285  4819 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:39:20.381294  4819 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:39:20.381299  4819 net.cpp:165] Memory required for data: 525869264
I0419 16:39:20.381304  4819 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:39:20.381311  4819 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:39:20.381315  4819 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:39:20.381323  4819 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:39:20.381327  4819 net.cpp:165] Memory required for data: 525869264
I0419 16:39:20.381332  4819 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:39:20.381337  4819 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:39:20.381342  4819 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:39:20.381348  4819 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:39:20.381353  4819 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:39:20.381361  4819 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:39:20.381364  4819 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:39:20.381369  4819 net.cpp:226] loss_bbox needs backward computation.
I0419 16:39:20.381377  4819 net.cpp:226] loss_cls needs backward computation.
I0419 16:39:20.381382  4819 net.cpp:226] bbox_pred needs backward computation.
I0419 16:39:20.381387  4819 net.cpp:226] cls_score needs backward computation.
I0419 16:39:20.381392  4819 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:39:20.381397  4819 net.cpp:226] drop7 needs backward computation.
I0419 16:39:20.381402  4819 net.cpp:226] relu7 needs backward computation.
I0419 16:39:20.381405  4819 net.cpp:226] fc7 needs backward computation.
I0419 16:39:20.381410  4819 net.cpp:226] drop6 needs backward computation.
I0419 16:39:20.381415  4819 net.cpp:226] relu6 needs backward computation.
I0419 16:39:20.381419  4819 net.cpp:226] fc6 needs backward computation.
I0419 16:39:20.381425  4819 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 16:39:20.381433  4819 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 16:39:20.381438  4819 net.cpp:226] relu5 needs backward computation.
I0419 16:39:20.381443  4819 net.cpp:226] conv5 needs backward computation.
I0419 16:39:20.381448  4819 net.cpp:226] relu4 needs backward computation.
I0419 16:39:20.381453  4819 net.cpp:226] conv4 needs backward computation.
I0419 16:39:20.381459  4819 net.cpp:226] relu3 needs backward computation.
I0419 16:39:20.381464  4819 net.cpp:226] conv3 needs backward computation.
I0419 16:39:20.381470  4819 net.cpp:226] pool2 needs backward computation.
I0419 16:39:20.381475  4819 net.cpp:226] norm2 needs backward computation.
I0419 16:39:20.381482  4819 net.cpp:226] relu2 needs backward computation.
I0419 16:39:20.381486  4819 net.cpp:226] conv2 needs backward computation.
I0419 16:39:20.381491  4819 net.cpp:226] pool1 needs backward computation.
I0419 16:39:20.381496  4819 net.cpp:226] norm1 needs backward computation.
I0419 16:39:20.381505  4819 net.cpp:226] relu1 needs backward computation.
I0419 16:39:20.381510  4819 net.cpp:226] conv1 needs backward computation.
I0419 16:39:20.381517  4819 net.cpp:228] data does not need backward computation.
I0419 16:39:20.381522  4819 net.cpp:270] This network produces output bbox_loss
I0419 16:39:20.381527  4819 net.cpp:270] This network produces output cls_loss
I0419 16:39:20.381566  4819 net.cpp:283] Network initialization done.
I0419 16:39:20.381712  4819 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:39:20.835122  4819 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:39:20.835152  4819 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:39:20.879452  4819 net.cpp:816] Ignoring source layer fc8
I0419 16:39:20.879488  4819 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:39:21.217573  4819 solver.cpp:229] Iteration 0, loss = 3.96455
I0419 16:39:21.217625  4819 solver.cpp:245]     Train net output #0: bbox_loss = 0.00179342 (* 1 = 0.00179342 loss)
I0419 16:39:21.217638  4819 solver.cpp:245]     Train net output #1: cls_loss = 3.96275 (* 1 = 3.96275 loss)
I0419 16:39:21.217658  4819 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:39:27.271066  4819 solver.cpp:229] Iteration 20, loss = 0.158989
I0419 16:39:27.271117  4819 solver.cpp:245]     Train net output #0: bbox_loss = 0.00206027 (* 1 = 0.00206027 loss)
I0419 16:39:27.271126  4819 solver.cpp:245]     Train net output #1: cls_loss = 0.156929 (* 1 = 0.156929 loss)
I0419 16:39:27.271131  4819 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:39:33.286300  4819 solver.cpp:229] Iteration 40, loss = 0.256255
I0419 16:39:33.286355  4819 solver.cpp:245]     Train net output #0: bbox_loss = 0.0311435 (* 1 = 0.0311435 loss)
I0419 16:39:33.286362  4819 solver.cpp:245]     Train net output #1: cls_loss = 0.225112 (* 1 = 0.225112 loss)
I0419 16:39:33.286370  4819 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:39:39.304992  4819 solver.cpp:229] Iteration 60, loss = 0.387985
I0419 16:39:39.305038  4819 solver.cpp:245]     Train net output #0: bbox_loss = 0.0650192 (* 1 = 0.0650192 loss)
I0419 16:39:39.305045  4819 solver.cpp:245]     Train net output #1: cls_loss = 0.322966 (* 1 = 0.322966 loss)
I0419 16:39:39.305052  4819 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:39:45.322464  4819 solver.cpp:229] Iteration 80, loss = 0.2817
I0419 16:39:45.322510  4819 solver.cpp:245]     Train net output #0: bbox_loss = 0.0782601 (* 1 = 0.0782601 loss)
I0419 16:39:45.322517  4819 solver.cpp:245]     Train net output #1: cls_loss = 0.20344 (* 1 = 0.20344 loss)
I0419 16:39:45.322523  4819 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, init from stage 1 Fast R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:39:55.338114  4833 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:39:55.338172  4833 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt
I0419 16:39:55.338984  4833 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:39:55.339172  4833 layer_factory.hpp:77] Creating layer input-data
I0419 16:39:55.339830  4833 net.cpp:106] Creating Layer input-data
I0419 16:39:55.339855  4833 net.cpp:411] input-data -> data
I0419 16:39:55.339879  4833 net.cpp:411] input-data -> im_info
I0419 16:39:55.339895  4833 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:39:55.355643  4833 net.cpp:150] Setting up input-data
I0419 16:39:55.355669  4833 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:39:55.355676  4833 net.cpp:157] Top shape: 1 3 (3)
I0419 16:39:55.355682  4833 net.cpp:157] Top shape: 1 4 (4)
I0419 16:39:55.355690  4833 net.cpp:165] Memory required for data: 7200028
I0419 16:39:55.355697  4833 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:39:55.355713  4833 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:39:55.355720  4833 net.cpp:454] data_input-data_0_split <- data
I0419 16:39:55.355736  4833 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:39:55.355751  4833 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:39:55.355798  4833 net.cpp:150] Setting up data_input-data_0_split
I0419 16:39:55.355809  4833 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:39:55.355816  4833 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:39:55.355821  4833 net.cpp:165] Memory required for data: 21600028
I0419 16:39:55.355826  4833 layer_factory.hpp:77] Creating layer conv1
I0419 16:39:55.355845  4833 net.cpp:106] Creating Layer conv1
I0419 16:39:55.355855  4833 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:39:55.355864  4833 net.cpp:411] conv1 -> conv1
I0419 16:39:55.357204  4833 net.cpp:150] Setting up conv1
I0419 16:39:55.357228  4833 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:39:55.357233  4833 net.cpp:165] Memory required for data: 79200028
I0419 16:39:55.357252  4833 layer_factory.hpp:77] Creating layer relu1
I0419 16:39:55.357265  4833 net.cpp:106] Creating Layer relu1
I0419 16:39:55.357272  4833 net.cpp:454] relu1 <- conv1
I0419 16:39:55.357280  4833 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:39:55.357296  4833 net.cpp:150] Setting up relu1
I0419 16:39:55.357309  4833 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:39:55.357313  4833 net.cpp:165] Memory required for data: 136800028
I0419 16:39:55.357318  4833 layer_factory.hpp:77] Creating layer norm1
I0419 16:39:55.357331  4833 net.cpp:106] Creating Layer norm1
I0419 16:39:55.357336  4833 net.cpp:454] norm1 <- conv1
I0419 16:39:55.357342  4833 net.cpp:411] norm1 -> norm1
I0419 16:39:55.357453  4833 net.cpp:150] Setting up norm1
I0419 16:39:55.357466  4833 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:39:55.357471  4833 net.cpp:165] Memory required for data: 194400028
I0419 16:39:55.357475  4833 layer_factory.hpp:77] Creating layer pool1
I0419 16:39:55.357486  4833 net.cpp:106] Creating Layer pool1
I0419 16:39:55.357492  4833 net.cpp:454] pool1 <- norm1
I0419 16:39:55.357499  4833 net.cpp:411] pool1 -> pool1
I0419 16:39:55.357542  4833 net.cpp:150] Setting up pool1
I0419 16:39:55.357554  4833 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:39:55.357558  4833 net.cpp:165] Memory required for data: 208954012
I0419 16:39:55.357563  4833 layer_factory.hpp:77] Creating layer conv2
I0419 16:39:55.357573  4833 net.cpp:106] Creating Layer conv2
I0419 16:39:55.357578  4833 net.cpp:454] conv2 <- pool1
I0419 16:39:55.357589  4833 net.cpp:411] conv2 -> conv2
I0419 16:39:55.359292  4833 net.cpp:150] Setting up conv2
I0419 16:39:55.359313  4833 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:39:55.359318  4833 net.cpp:165] Memory required for data: 218759836
I0419 16:39:55.359330  4833 layer_factory.hpp:77] Creating layer relu2
I0419 16:39:55.359339  4833 net.cpp:106] Creating Layer relu2
I0419 16:39:55.359346  4833 net.cpp:454] relu2 <- conv2
I0419 16:39:55.359359  4833 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:39:55.359367  4833 net.cpp:150] Setting up relu2
I0419 16:39:55.359376  4833 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:39:55.359381  4833 net.cpp:165] Memory required for data: 228565660
I0419 16:39:55.359385  4833 layer_factory.hpp:77] Creating layer norm2
I0419 16:39:55.359395  4833 net.cpp:106] Creating Layer norm2
I0419 16:39:55.359400  4833 net.cpp:454] norm2 <- conv2
I0419 16:39:55.359410  4833 net.cpp:411] norm2 -> norm2
I0419 16:39:55.359509  4833 net.cpp:150] Setting up norm2
I0419 16:39:55.359522  4833 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:39:55.359527  4833 net.cpp:165] Memory required for data: 238371484
I0419 16:39:55.359531  4833 layer_factory.hpp:77] Creating layer pool2
I0419 16:39:55.359541  4833 net.cpp:106] Creating Layer pool2
I0419 16:39:55.359547  4833 net.cpp:454] pool2 <- norm2
I0419 16:39:55.359555  4833 net.cpp:411] pool2 -> pool2
I0419 16:39:55.359593  4833 net.cpp:150] Setting up pool2
I0419 16:39:55.359604  4833 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:39:55.359609  4833 net.cpp:165] Memory required for data: 240927388
I0419 16:39:55.359613  4833 layer_factory.hpp:77] Creating layer conv3
I0419 16:39:55.359625  4833 net.cpp:106] Creating Layer conv3
I0419 16:39:55.359632  4833 net.cpp:454] conv3 <- pool2
I0419 16:39:55.359642  4833 net.cpp:411] conv3 -> conv3
I0419 16:39:55.362913  4833 net.cpp:150] Setting up conv3
I0419 16:39:55.362933  4833 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:39:55.362938  4833 net.cpp:165] Memory required for data: 244761244
I0419 16:39:55.362951  4833 layer_factory.hpp:77] Creating layer relu3
I0419 16:39:55.362959  4833 net.cpp:106] Creating Layer relu3
I0419 16:39:55.362964  4833 net.cpp:454] relu3 <- conv3
I0419 16:39:55.362977  4833 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:39:55.362987  4833 net.cpp:150] Setting up relu3
I0419 16:39:55.362998  4833 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:39:55.363003  4833 net.cpp:165] Memory required for data: 248595100
I0419 16:39:55.363008  4833 layer_factory.hpp:77] Creating layer conv4
I0419 16:39:55.363019  4833 net.cpp:106] Creating Layer conv4
I0419 16:39:55.363029  4833 net.cpp:454] conv4 <- conv3
I0419 16:39:55.363037  4833 net.cpp:411] conv4 -> conv4
I0419 16:39:55.366348  4833 net.cpp:150] Setting up conv4
I0419 16:39:55.366364  4833 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:39:55.366369  4833 net.cpp:165] Memory required for data: 252428956
I0419 16:39:55.366379  4833 layer_factory.hpp:77] Creating layer relu4
I0419 16:39:55.366387  4833 net.cpp:106] Creating Layer relu4
I0419 16:39:55.366392  4833 net.cpp:454] relu4 <- conv4
I0419 16:39:55.366400  4833 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:39:55.366408  4833 net.cpp:150] Setting up relu4
I0419 16:39:55.366415  4833 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:39:55.366426  4833 net.cpp:165] Memory required for data: 256262812
I0419 16:39:55.366431  4833 layer_factory.hpp:77] Creating layer conv5
I0419 16:39:55.366443  4833 net.cpp:106] Creating Layer conv5
I0419 16:39:55.366454  4833 net.cpp:454] conv5 <- conv4
I0419 16:39:55.366464  4833 net.cpp:411] conv5 -> conv5
I0419 16:39:55.368742  4833 net.cpp:150] Setting up conv5
I0419 16:39:55.368764  4833 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:39:55.368770  4833 net.cpp:165] Memory required for data: 258818716
I0419 16:39:55.368782  4833 layer_factory.hpp:77] Creating layer relu5
I0419 16:39:55.368790  4833 net.cpp:106] Creating Layer relu5
I0419 16:39:55.368801  4833 net.cpp:454] relu5 <- conv5
I0419 16:39:55.368809  4833 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:39:55.368821  4833 net.cpp:150] Setting up relu5
I0419 16:39:55.368829  4833 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:39:55.368834  4833 net.cpp:165] Memory required for data: 261374620
I0419 16:39:55.368839  4833 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:39:55.368860  4833 net.cpp:106] Creating Layer rpn_conv1
I0419 16:39:55.368870  4833 net.cpp:454] rpn_conv1 <- conv5
I0419 16:39:55.368877  4833 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:39:55.385918  4833 net.cpp:150] Setting up rpn_conv1
I0419 16:39:55.385939  4833 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:39:55.385944  4833 net.cpp:165] Memory required for data: 263930524
I0419 16:39:55.385953  4833 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:39:55.385962  4833 net.cpp:106] Creating Layer rpn_relu1
I0419 16:39:55.385967  4833 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:39:55.385980  4833 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:39:55.385989  4833 net.cpp:150] Setting up rpn_relu1
I0419 16:39:55.385999  4833 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:39:55.386004  4833 net.cpp:165] Memory required for data: 266486428
I0419 16:39:55.386009  4833 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:39:55.386019  4833 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:39:55.386024  4833 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:39:55.386034  4833 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:39:55.386044  4833 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:39:55.386092  4833 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:39:55.386104  4833 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:39:55.386114  4833 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:39:55.386118  4833 net.cpp:165] Memory required for data: 271598236
I0419 16:39:55.386123  4833 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:39:55.386137  4833 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:39:55.386147  4833 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:39:55.386157  4833 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:39:55.386494  4833 net.cpp:150] Setting up rpn_cls_score
I0419 16:39:55.386512  4833 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:39:55.386517  4833 net.cpp:165] Memory required for data: 271777948
I0419 16:39:55.386525  4833 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:39:55.386533  4833 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:39:55.386539  4833 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:39:55.386548  4833 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:39:55.386557  4833 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:39:55.386602  4833 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:39:55.386615  4833 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:39:55.386620  4833 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:39:55.386625  4833 net.cpp:165] Memory required for data: 272137372
I0419 16:39:55.386628  4833 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:39:55.386642  4833 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:39:55.386653  4833 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:39:55.386665  4833 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:39:55.387118  4833 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:39:55.387132  4833 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:39:55.387137  4833 net.cpp:165] Memory required for data: 272496796
I0419 16:39:55.387145  4833 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:39:55.387157  4833 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:39:55.387167  4833 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:39:55.387176  4833 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:39:55.387214  4833 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:39:55.387226  4833 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:39:55.387231  4833 net.cpp:165] Memory required for data: 272676508
I0419 16:39:55.387235  4833 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:39:55.387774  4833 net.cpp:106] Creating Layer rpn-data
I0419 16:39:55.387794  4833 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:39:55.387800  4833 net.cpp:454] rpn-data <- gt_boxes
I0419 16:39:55.387806  4833 net.cpp:454] rpn-data <- im_info
I0419 16:39:55.387811  4833 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:39:55.387820  4833 net.cpp:411] rpn-data -> rpn_labels
I0419 16:39:55.387833  4833 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:39:55.387843  4833 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:39:55.387857  4833 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:39:55.389075  4833 net.cpp:150] Setting up rpn-data
I0419 16:39:55.389098  4833 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:39:55.389106  4833 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:39:55.389111  4833 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:39:55.389117  4833 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:39:55.389120  4833 net.cpp:165] Memory required for data: 273844636
I0419 16:39:55.389127  4833 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:39:55.389142  4833 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:39:55.389149  4833 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:39:55.389156  4833 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:39:55.389169  4833 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:39:55.389194  4833 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:39:55.389317  4833 net.cpp:150] Setting up rpn_loss_cls
I0419 16:39:55.389329  4833 net.cpp:157] Top shape: (1)
I0419 16:39:55.389333  4833 net.cpp:160]     with loss weight 1
I0419 16:39:55.389356  4833 net.cpp:165] Memory required for data: 273844640
I0419 16:39:55.389363  4833 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:39:55.389376  4833 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:39:55.389384  4833 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:39:55.389389  4833 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:39:55.389397  4833 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:39:55.389402  4833 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:39:55.389410  4833 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:39:55.389987  4833 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:39:55.390002  4833 net.cpp:157] Top shape: (1)
I0419 16:39:55.390007  4833 net.cpp:160]     with loss weight 1
I0419 16:39:55.390013  4833 net.cpp:165] Memory required for data: 273844644
I0419 16:39:55.390018  4833 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:39:55.390033  4833 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:39:55.390039  4833 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:39:55.390076  4833 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:39:55.390089  4833 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:39:55.390092  4833 net.cpp:165] Memory required for data: 273881508
I0419 16:39:55.390097  4833 layer_factory.hpp:77] Creating layer fc6
I0419 16:39:55.390107  4833 net.cpp:106] Creating Layer fc6
I0419 16:39:55.390115  4833 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:39:55.390121  4833 net.cpp:411] fc6 -> fc6
I0419 16:39:55.488152  4833 net.cpp:150] Setting up fc6
I0419 16:39:55.488193  4833 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:55.488198  4833 net.cpp:165] Memory required for data: 273897892
I0419 16:39:55.488219  4833 layer_factory.hpp:77] Creating layer relu6
I0419 16:39:55.488234  4833 net.cpp:106] Creating Layer relu6
I0419 16:39:55.488243  4833 net.cpp:454] relu6 <- fc6
I0419 16:39:55.488253  4833 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:39:55.488267  4833 net.cpp:150] Setting up relu6
I0419 16:39:55.488276  4833 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:55.488281  4833 net.cpp:165] Memory required for data: 273914276
I0419 16:39:55.488286  4833 layer_factory.hpp:77] Creating layer fc7
I0419 16:39:55.488299  4833 net.cpp:106] Creating Layer fc7
I0419 16:39:55.488304  4833 net.cpp:454] fc7 <- fc6
I0419 16:39:55.488314  4833 net.cpp:411] fc7 -> fc7
I0419 16:39:55.532138  4833 net.cpp:150] Setting up fc7
I0419 16:39:55.532181  4833 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:39:55.532186  4833 net.cpp:165] Memory required for data: 273930660
I0419 16:39:55.532199  4833 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:39:55.532219  4833 net.cpp:106] Creating Layer silence_fc7
I0419 16:39:55.532229  4833 net.cpp:454] silence_fc7 <- fc7
I0419 16:39:55.532239  4833 net.cpp:150] Setting up silence_fc7
I0419 16:39:55.532250  4833 net.cpp:165] Memory required for data: 273930660
I0419 16:39:55.532255  4833 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:39:55.532261  4833 net.cpp:228] fc7 does not need backward computation.
I0419 16:39:55.532265  4833 net.cpp:228] relu6 does not need backward computation.
I0419 16:39:55.532274  4833 net.cpp:228] fc6 does not need backward computation.
I0419 16:39:55.532279  4833 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:39:55.532284  4833 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:39:55.532294  4833 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:39:55.532300  4833 net.cpp:226] rpn-data needs backward computation.
I0419 16:39:55.532308  4833 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:39:55.532315  4833 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:39:55.532320  4833 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:39:55.532326  4833 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:39:55.532335  4833 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:39:55.532340  4833 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:39:55.532347  4833 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:39:55.532352  4833 net.cpp:228] relu5 does not need backward computation.
I0419 16:39:55.532358  4833 net.cpp:228] conv5 does not need backward computation.
I0419 16:39:55.532364  4833 net.cpp:228] relu4 does not need backward computation.
I0419 16:39:55.532371  4833 net.cpp:228] conv4 does not need backward computation.
I0419 16:39:55.532376  4833 net.cpp:228] relu3 does not need backward computation.
I0419 16:39:55.532382  4833 net.cpp:228] conv3 does not need backward computation.
I0419 16:39:55.532387  4833 net.cpp:228] pool2 does not need backward computation.
I0419 16:39:55.532393  4833 net.cpp:228] norm2 does not need backward computation.
I0419 16:39:55.532398  4833 net.cpp:228] relu2 does not need backward computation.
I0419 16:39:55.532403  4833 net.cpp:228] conv2 does not need backward computation.
I0419 16:39:55.532407  4833 net.cpp:228] pool1 does not need backward computation.
I0419 16:39:55.532413  4833 net.cpp:228] norm1 does not need backward computation.
I0419 16:39:55.532416  4833 net.cpp:228] relu1 does not need backward computation.
I0419 16:39:55.532421  4833 net.cpp:228] conv1 does not need backward computation.
I0419 16:39:55.532428  4833 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:39:55.532434  4833 net.cpp:228] input-data does not need backward computation.
I0419 16:39:55.532439  4833 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:39:55.532444  4833 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:39:55.532479  4833 net.cpp:283] Network initialization done.
I0419 16:39:55.532599  4833 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
I0419 16:39:55.968582  4833 net.cpp:816] Ignoring source layer data
I0419 16:39:55.971679  4833 net.cpp:816] Ignoring source layer conv5_relu5_0_split
I0419 16:39:55.971699  4833 net.cpp:816] Ignoring source layer roi_pool_conv5
I0419 16:39:56.002205  4833 net.cpp:816] Ignoring source layer drop6
I0419 16:39:56.016297  4833 net.cpp:816] Ignoring source layer relu7
I0419 16:39:56.016324  4833 net.cpp:816] Ignoring source layer drop7
I0419 16:39:56.016329  4833 net.cpp:816] Ignoring source layer fc7_drop7_0_split
I0419 16:39:56.016332  4833 net.cpp:816] Ignoring source layer cls_score
I0419 16:39:56.016336  4833 net.cpp:816] Ignoring source layer bbox_pred
I0419 16:39:56.016340  4833 net.cpp:816] Ignoring source layer loss_cls
I0419 16:39:56.016342  4833 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:39:56.016851  4833 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:39:56.016862  4833 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Solving...
I0419 16:39:56.197702  4833 solver.cpp:229] Iteration 0, loss = 1.1888
I0419 16:39:56.197753  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.70785 (* 1 = 0.70785 loss)
I0419 16:39:56.197767  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.480947 (* 1 = 0.480947 loss)
I0419 16:39:56.197782  4833 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:39:58.551141  4833 solver.cpp:229] Iteration 20, loss = 0.532486
I0419 16:39:58.551192  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.246661 (* 1 = 0.246661 loss)
I0419 16:39:58.551203  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.285825 (* 1 = 0.285825 loss)
I0419 16:39:58.551210  4833 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:40:00.861959  4833 solver.cpp:229] Iteration 40, loss = 0.387418
I0419 16:40:00.862005  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.208893 (* 1 = 0.208893 loss)
I0419 16:40:00.862016  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.178525 (* 1 = 0.178525 loss)
I0419 16:40:00.862023  4833 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:40:03.136859  4833 solver.cpp:229] Iteration 60, loss = 0.931276
I0419 16:40:03.136906  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.460186 (* 1 = 0.460186 loss)
I0419 16:40:03.136917  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.471089 (* 1 = 0.471089 loss)
I0419 16:40:03.136924  4833 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:40:05.454778  4833 solver.cpp:229] Iteration 80, loss = 0.649747
I0419 16:40:05.454825  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.433855 (* 1 = 0.433855 loss)
I0419 16:40:05.454835  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.215892 (* 1 = 0.215892 loss)
I0419 16:40:05.454843  4833 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:40:07.749526  4833 solver.cpp:229] Iteration 100, loss = 0.288423
I0419 16:40:07.749573  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.249034 (* 1 = 0.249034 loss)
I0419 16:40:07.749583  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0393885 (* 1 = 0.0393885 loss)
I0419 16:40:07.749590  4833 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:40:10.027853  4833 solver.cpp:229] Iteration 120, loss = 0.764852
I0419 16:40:10.027899  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.285139 (* 1 = 0.285139 loss)
I0419 16:40:10.027909  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.479713 (* 1 = 0.479713 loss)
I0419 16:40:10.027916  4833 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:40:12.322862  4833 solver.cpp:229] Iteration 140, loss = 0.244432
I0419 16:40:12.322909  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.110122 (* 1 = 0.110122 loss)
I0419 16:40:12.322921  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.134311 (* 1 = 0.134311 loss)
I0419 16:40:12.322927  4833 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:40:14.534749  4833 solver.cpp:229] Iteration 160, loss = 0.350078
I0419 16:40:14.534796  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.185072 (* 1 = 0.185072 loss)
I0419 16:40:14.534808  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165006 (* 1 = 0.165006 loss)
I0419 16:40:14.534816  4833 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:40:16.791625  4833 solver.cpp:229] Iteration 180, loss = 0.268064
I0419 16:40:16.791677  4833 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.187254 (* 1 = 0.187254 loss)
I0419 16:40:16.791688  4833 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0808104 (* 1 = 0.0808104 loss)
I0419 16:40:16.791697  4833 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.114s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:40:22.392614  4844 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:40:22.392776  4844 net.cpp:413] Input 0 -> data
I0419 16:40:22.407826  4844 net.cpp:413] Input 1 -> im_info
I0419 16:40:22.407889  4844 layer_factory.hpp:77] Creating layer conv1
I0419 16:40:22.407918  4844 net.cpp:106] Creating Layer conv1
I0419 16:40:22.407924  4844 net.cpp:454] conv1 <- data
I0419 16:40:22.407938  4844 net.cpp:411] conv1 -> conv1
I0419 16:40:22.408694  4844 net.cpp:150] Setting up conv1
I0419 16:40:22.408718  4844 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:40:22.408725  4844 net.cpp:165] Memory required for data: 4816896
I0419 16:40:22.408743  4844 layer_factory.hpp:77] Creating layer relu1
I0419 16:40:22.408761  4844 net.cpp:106] Creating Layer relu1
I0419 16:40:22.408766  4844 net.cpp:454] relu1 <- conv1
I0419 16:40:22.408773  4844 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:40:22.408787  4844 net.cpp:150] Setting up relu1
I0419 16:40:22.408795  4844 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:40:22.408799  4844 net.cpp:165] Memory required for data: 9633792
I0419 16:40:22.408804  4844 layer_factory.hpp:77] Creating layer norm1
I0419 16:40:22.408818  4844 net.cpp:106] Creating Layer norm1
I0419 16:40:22.408829  4844 net.cpp:454] norm1 <- conv1
I0419 16:40:22.408836  4844 net.cpp:411] norm1 -> norm1
I0419 16:40:22.408952  4844 net.cpp:150] Setting up norm1
I0419 16:40:22.408967  4844 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:40:22.408972  4844 net.cpp:165] Memory required for data: 14450688
I0419 16:40:22.408975  4844 layer_factory.hpp:77] Creating layer pool1
I0419 16:40:22.408983  4844 net.cpp:106] Creating Layer pool1
I0419 16:40:22.408988  4844 net.cpp:454] pool1 <- norm1
I0419 16:40:22.408998  4844 net.cpp:411] pool1 -> pool1
I0419 16:40:22.409041  4844 net.cpp:150] Setting up pool1
I0419 16:40:22.409055  4844 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:40:22.409060  4844 net.cpp:165] Memory required for data: 15698304
I0419 16:40:22.409065  4844 layer_factory.hpp:77] Creating layer conv2
I0419 16:40:22.409075  4844 net.cpp:106] Creating Layer conv2
I0419 16:40:22.409080  4844 net.cpp:454] conv2 <- pool1
I0419 16:40:22.409090  4844 net.cpp:411] conv2 -> conv2
I0419 16:40:22.411258  4844 net.cpp:150] Setting up conv2
I0419 16:40:22.411280  4844 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:40:22.411285  4844 net.cpp:165] Memory required for data: 16559488
I0419 16:40:22.411298  4844 layer_factory.hpp:77] Creating layer relu2
I0419 16:40:22.411308  4844 net.cpp:106] Creating Layer relu2
I0419 16:40:22.411319  4844 net.cpp:454] relu2 <- conv2
I0419 16:40:22.411326  4844 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:40:22.411334  4844 net.cpp:150] Setting up relu2
I0419 16:40:22.411342  4844 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:40:22.411350  4844 net.cpp:165] Memory required for data: 17420672
I0419 16:40:22.411355  4844 layer_factory.hpp:77] Creating layer norm2
I0419 16:40:22.411367  4844 net.cpp:106] Creating Layer norm2
I0419 16:40:22.411373  4844 net.cpp:454] norm2 <- conv2
I0419 16:40:22.411381  4844 net.cpp:411] norm2 -> norm2
I0419 16:40:22.411476  4844 net.cpp:150] Setting up norm2
I0419 16:40:22.411489  4844 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:40:22.411494  4844 net.cpp:165] Memory required for data: 18281856
I0419 16:40:22.411499  4844 layer_factory.hpp:77] Creating layer pool2
I0419 16:40:22.411509  4844 net.cpp:106] Creating Layer pool2
I0419 16:40:22.411514  4844 net.cpp:454] pool2 <- norm2
I0419 16:40:22.411521  4844 net.cpp:411] pool2 -> pool2
I0419 16:40:22.411563  4844 net.cpp:150] Setting up pool2
I0419 16:40:22.411576  4844 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:40:22.411579  4844 net.cpp:165] Memory required for data: 18512256
I0419 16:40:22.411584  4844 layer_factory.hpp:77] Creating layer conv3
I0419 16:40:22.411594  4844 net.cpp:106] Creating Layer conv3
I0419 16:40:22.411600  4844 net.cpp:454] conv3 <- pool2
I0419 16:40:22.411610  4844 net.cpp:411] conv3 -> conv3
I0419 16:40:22.413866  4844 net.cpp:150] Setting up conv3
I0419 16:40:22.413885  4844 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:40:22.413890  4844 net.cpp:165] Memory required for data: 18857856
I0419 16:40:22.413902  4844 layer_factory.hpp:77] Creating layer relu3
I0419 16:40:22.413913  4844 net.cpp:106] Creating Layer relu3
I0419 16:40:22.413919  4844 net.cpp:454] relu3 <- conv3
I0419 16:40:22.413925  4844 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:40:22.413934  4844 net.cpp:150] Setting up relu3
I0419 16:40:22.413942  4844 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:40:22.413946  4844 net.cpp:165] Memory required for data: 19203456
I0419 16:40:22.413951  4844 layer_factory.hpp:77] Creating layer conv4
I0419 16:40:22.413959  4844 net.cpp:106] Creating Layer conv4
I0419 16:40:22.413964  4844 net.cpp:454] conv4 <- conv3
I0419 16:40:22.413975  4844 net.cpp:411] conv4 -> conv4
I0419 16:40:22.417291  4844 net.cpp:150] Setting up conv4
I0419 16:40:22.417310  4844 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:40:22.417315  4844 net.cpp:165] Memory required for data: 19549056
I0419 16:40:22.417325  4844 layer_factory.hpp:77] Creating layer relu4
I0419 16:40:22.417338  4844 net.cpp:106] Creating Layer relu4
I0419 16:40:22.417351  4844 net.cpp:454] relu4 <- conv4
I0419 16:40:22.417357  4844 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:40:22.417366  4844 net.cpp:150] Setting up relu4
I0419 16:40:22.417372  4844 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:40:22.417381  4844 net.cpp:165] Memory required for data: 19894656
I0419 16:40:22.417385  4844 layer_factory.hpp:77] Creating layer conv5
I0419 16:40:22.417397  4844 net.cpp:106] Creating Layer conv5
I0419 16:40:22.417402  4844 net.cpp:454] conv5 <- conv4
I0419 16:40:22.417409  4844 net.cpp:411] conv5 -> conv5
I0419 16:40:22.419704  4844 net.cpp:150] Setting up conv5
I0419 16:40:22.419724  4844 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:40:22.419729  4844 net.cpp:165] Memory required for data: 20125056
I0419 16:40:22.419742  4844 layer_factory.hpp:77] Creating layer relu5
I0419 16:40:22.419754  4844 net.cpp:106] Creating Layer relu5
I0419 16:40:22.419764  4844 net.cpp:454] relu5 <- conv5
I0419 16:40:22.419771  4844 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:40:22.419780  4844 net.cpp:150] Setting up relu5
I0419 16:40:22.419786  4844 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:40:22.419793  4844 net.cpp:165] Memory required for data: 20355456
I0419 16:40:22.419798  4844 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:40:22.419811  4844 net.cpp:106] Creating Layer rpn_conv1
I0419 16:40:22.419818  4844 net.cpp:454] rpn_conv1 <- conv5
I0419 16:40:22.419826  4844 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:40:22.421442  4844 net.cpp:150] Setting up rpn_conv1
I0419 16:40:22.421461  4844 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:40:22.421466  4844 net.cpp:165] Memory required for data: 20585856
I0419 16:40:22.421476  4844 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:40:22.421483  4844 net.cpp:106] Creating Layer rpn_relu1
I0419 16:40:22.421489  4844 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:40:22.421501  4844 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:40:22.421509  4844 net.cpp:150] Setting up rpn_relu1
I0419 16:40:22.421516  4844 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:40:22.421520  4844 net.cpp:165] Memory required for data: 20816256
I0419 16:40:22.421528  4844 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:40:22.421545  4844 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:40:22.421550  4844 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:40:22.421557  4844 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:40:22.421566  4844 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:40:22.421605  4844 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:40:22.421617  4844 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:40:22.421623  4844 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:40:22.421627  4844 net.cpp:165] Memory required for data: 21277056
I0419 16:40:22.421633  4844 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:40:22.421644  4844 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:40:22.421653  4844 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:40:22.421661  4844 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:40:22.421851  4844 net.cpp:150] Setting up rpn_cls_score
I0419 16:40:22.421865  4844 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:40:22.421869  4844 net.cpp:165] Memory required for data: 21293256
I0419 16:40:22.421880  4844 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:40:22.421892  4844 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:40:22.421902  4844 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:40:22.421910  4844 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:40:22.422106  4844 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:40:22.422122  4844 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:40:22.422127  4844 net.cpp:165] Memory required for data: 21325656
I0419 16:40:22.422135  4844 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:40:22.422143  4844 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:40:22.422149  4844 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:40:22.422157  4844 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:40:22.422195  4844 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:40:22.422207  4844 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:40:22.422211  4844 net.cpp:165] Memory required for data: 21341856
I0419 16:40:22.422216  4844 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:40:22.422226  4844 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:40:22.422230  4844 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:40:22.422237  4844 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:40:22.422312  4844 net.cpp:150] Setting up rpn_cls_prob
I0419 16:40:22.422338  4844 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:40:22.422344  4844 net.cpp:165] Memory required for data: 21358056
I0419 16:40:22.422349  4844 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:40:22.422358  4844 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:40:22.422363  4844 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:40:22.422370  4844 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:40:22.422402  4844 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:40:22.422415  4844 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:40:22.422418  4844 net.cpp:165] Memory required for data: 21374256
I0419 16:40:22.422423  4844 layer_factory.hpp:77] Creating layer proposal
I0419 16:40:22.423923  4844 net.cpp:106] Creating Layer proposal
I0419 16:40:22.423943  4844 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:40:22.423950  4844 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:40:22.423956  4844 net.cpp:454] proposal <- im_info
I0419 16:40:22.423966  4844 net.cpp:411] proposal -> rois
I0419 16:40:22.423977  4844 net.cpp:411] proposal -> scores
I0419 16:40:22.425261  4844 net.cpp:150] Setting up proposal
I0419 16:40:22.425283  4844 net.cpp:157] Top shape: 1 5 (5)
I0419 16:40:22.425292  4844 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:40:22.425295  4844 net.cpp:165] Memory required for data: 21374280
I0419 16:40:22.425302  4844 net.cpp:228] proposal does not need backward computation.
I0419 16:40:22.425307  4844 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:40:22.425312  4844 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:40:22.425318  4844 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:40:22.425323  4844 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:40:22.425328  4844 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:40:22.425333  4844 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:40:22.425357  4844 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:40:22.425374  4844 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:40:22.425402  4844 net.cpp:228] relu5 does not need backward computation.
I0419 16:40:22.425418  4844 net.cpp:228] conv5 does not need backward computation.
I0419 16:40:22.425433  4844 net.cpp:228] relu4 does not need backward computation.
I0419 16:40:22.425446  4844 net.cpp:228] conv4 does not need backward computation.
I0419 16:40:22.425451  4844 net.cpp:228] relu3 does not need backward computation.
I0419 16:40:22.425454  4844 net.cpp:228] conv3 does not need backward computation.
I0419 16:40:22.425459  4844 net.cpp:228] pool2 does not need backward computation.
I0419 16:40:22.425463  4844 net.cpp:228] norm2 does not need backward computation.
I0419 16:40:22.425467  4844 net.cpp:228] relu2 does not need backward computation.
I0419 16:40:22.425470  4844 net.cpp:228] conv2 does not need backward computation.
I0419 16:40:22.425478  4844 net.cpp:228] pool1 does not need backward computation.
I0419 16:40:22.425482  4844 net.cpp:228] norm1 does not need backward computation.
I0419 16:40:22.425487  4844 net.cpp:228] relu1 does not need backward computation.
I0419 16:40:22.425493  4844 net.cpp:228] conv1 does not need backward computation.
I0419 16:40:22.425498  4844 net.cpp:270] This network produces output rois
I0419 16:40:22.425504  4844 net.cpp:270] This network produces output scores
I0419 16:40:22.425535  4844 net.cpp:283] Network initialization done.
I0419 16:40:22.856276  4844 net.cpp:816] Ignoring source layer input-data
I0419 16:40:22.856313  4844 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:40:22.859894  4844 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:40:22.859918  4844 net.cpp:816] Ignoring source layer rpn-data
I0419 16:40:22.859921  4844 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:40:22.859926  4844 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:40:22.859933  4844 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:40:22.859937  4844 net.cpp:816] Ignoring source layer fc6
I0419 16:40:22.859944  4844 net.cpp:816] Ignoring source layer relu6
I0419 16:40:22.859947  4844 net.cpp:816] Ignoring source layer fc7
I0419 16:40:22.859951  4844 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.137s
im_proposals: 2/506 0.127s
im_proposals: 3/506 0.123s
im_proposals: 4/506 0.121s
im_proposals: 5/506 0.120s
im_proposals: 6/506 0.119s
im_proposals: 7/506 0.119s
im_proposals: 8/506 0.119s
im_proposals: 9/506 0.118s
im_proposals: 10/506 0.118s
im_proposals: 11/506 0.118s
im_proposals: 12/506 0.117s
im_proposals: 13/506 0.117s
im_proposals: 14/506 0.118s
im_proposals: 15/506 0.118s
im_proposals: 16/506 0.118s
im_proposals: 17/506 0.118s
im_proposals: 18/506 0.119s
im_proposals: 19/506 0.119s
im_proposals: 20/506 0.119s
im_proposals: 21/506 0.119s
im_proposals: 22/506 0.119s
im_proposals: 23/506 0.119s
im_proposals: 24/506 0.120s
im_proposals: 25/506 0.120s
im_proposals: 26/506 0.120s
im_proposals: 27/506 0.120s
im_proposals: 28/506 0.120s
im_proposals: 29/506 0.120s
im_proposals: 30/506 0.120s
im_proposals: 31/506 0.120s
im_proposals: 32/506 0.120s
im_proposals: 33/506 0.120s
im_proposals: 34/506 0.121s
im_proposals: 35/506 0.121s
im_proposals: 36/506 0.121s
im_proposals: 37/506 0.121s
im_proposals: 38/506 0.121s
im_proposals: 39/506 0.121s
im_proposals: 40/506 0.121s
im_proposals: 41/506 0.121s
im_proposals: 42/506 0.121s
im_proposals: 43/506 0.121s
im_proposals: 44/506 0.122s
im_proposals: 45/506 0.122s
im_proposals: 46/506 0.122s
im_proposals: 47/506 0.122s
im_proposals: 48/506 0.122s
im_proposals: 49/506 0.122s
im_proposals: 50/506 0.122s
im_proposals: 51/506 0.123s
im_proposals: 52/506 0.123s
im_proposals: 53/506 0.123s
im_proposals: 54/506 0.123s
im_proposals: 55/506 0.123s
im_proposals: 56/506 0.124s
im_proposals: 57/506 0.124s
im_proposals: 58/506 0.124s
im_proposals: 59/506 0.124s
im_proposals: 60/506 0.124s
im_proposals: 61/506 0.124s
im_proposals: 62/506 0.124s
im_proposals: 63/506 0.124s
im_proposals: 64/506 0.125s
im_proposals: 65/506 0.125s
im_proposals: 66/506 0.125s
im_proposals: 67/506 0.125s
im_proposals: 68/506 0.125s
im_proposals: 69/506 0.125s
im_proposals: 70/506 0.125s
im_proposals: 71/506 0.126s
im_proposals: 72/506 0.126s
im_proposals: 73/506 0.126s
im_proposals: 74/506 0.126s
im_proposals: 75/506 0.126s
im_proposals: 76/506 0.126s
im_proposals: 77/506 0.126s
im_proposals: 78/506 0.127s
im_proposals: 79/506 0.127s
im_proposals: 80/506 0.127s
im_proposals: 81/506 0.127s
im_proposals: 82/506 0.127s
im_proposals: 83/506 0.127s
im_proposals: 84/506 0.127s
im_proposals: 85/506 0.127s
im_proposals: 86/506 0.127s
im_proposals: 87/506 0.127s
im_proposals: 88/506 0.127s
im_proposals: 89/506 0.127s
im_proposals: 90/506 0.127s
im_proposals: 91/506 0.128s
im_proposals: 92/506 0.128s
im_proposals: 93/506 0.128s
im_proposals: 94/506 0.128s
im_proposals: 95/506 0.128s
im_proposals: 96/506 0.128s
im_proposals: 97/506 0.128s
im_proposals: 98/506 0.128s
im_proposals: 99/506 0.128s
im_proposals: 100/506 0.128s
im_proposals: 101/506 0.128s
im_proposals: 102/506 0.128s
im_proposals: 103/506 0.128s
im_proposals: 104/506 0.128s
im_proposals: 105/506 0.128s
im_proposals: 106/506 0.128s
im_proposals: 107/506 0.129s
im_proposals: 108/506 0.129s
im_proposals: 109/506 0.129s
im_proposals: 110/506 0.129s
im_proposals: 111/506 0.129s
im_proposals: 112/506 0.129s
im_proposals: 113/506 0.129s
im_proposals: 114/506 0.129s
im_proposals: 115/506 0.129s
im_proposals: 116/506 0.129s
im_proposals: 117/506 0.129s
im_proposals: 118/506 0.129s
im_proposals: 119/506 0.129s
im_proposals: 120/506 0.129s
im_proposals: 121/506 0.129s
im_proposals: 122/506 0.129s
im_proposals: 123/506 0.129s
im_proposals: 124/506 0.129s
im_proposals: 125/506 0.129s
im_proposals: 126/506 0.129s
im_proposals: 127/506 0.129s
im_proposals: 128/506 0.129s
im_proposals: 129/506 0.129s
im_proposals: 130/506 0.129s
im_proposals: 131/506 0.129s
im_proposals: 132/506 0.129s
im_proposals: 133/506 0.129s
im_proposals: 134/506 0.129s
im_proposals: 135/506 0.129s
im_proposals: 136/506 0.130s
im_proposals: 137/506 0.130s
im_proposals: 138/506 0.130s
im_proposals: 139/506 0.130s
im_proposals: 140/506 0.130s
im_proposals: 141/506 0.130s
im_proposals: 142/506 0.130s
im_proposals: 143/506 0.130s
im_proposals: 144/506 0.130s
im_proposals: 145/506 0.130s
im_proposals: 146/506 0.130s
im_proposals: 147/506 0.130s
im_proposals: 148/506 0.130s
im_proposals: 149/506 0.130s
im_proposals: 150/506 0.130s
im_proposals: 151/506 0.130s
im_proposals: 152/506 0.130s
im_proposals: 153/506 0.130s
im_proposals: 154/506 0.130s
im_proposals: 155/506 0.130s
im_proposals: 156/506 0.130s
im_proposals: 157/506 0.130s
im_proposals: 158/506 0.130s
im_proposals: 159/506 0.130s
im_proposals: 160/506 0.130s
im_proposals: 161/506 0.130s
im_proposals: 162/506 0.130s
im_proposals: 163/506 0.130s
im_proposals: 164/506 0.130s
im_proposals: 165/506 0.130s
im_proposals: 166/506 0.130s
im_proposals: 167/506 0.130s
im_proposals: 168/506 0.130s
im_proposals: 169/506 0.130s
im_proposals: 170/506 0.130s
im_proposals: 171/506 0.130s
im_proposals: 172/506 0.130s
im_proposals: 173/506 0.130s
im_proposals: 174/506 0.130s
im_proposals: 175/506 0.130s
im_proposals: 176/506 0.130s
im_proposals: 177/506 0.130s
im_proposals: 178/506 0.130s
im_proposals: 179/506 0.130s
im_proposals: 180/506 0.130s
im_proposals: 181/506 0.130s
im_proposals: 182/506 0.131s
im_proposals: 183/506 0.131s
im_proposals: 184/506 0.131s
im_proposals: 185/506 0.131s
im_proposals: 186/506 0.131s
im_proposals: 187/506 0.131s
im_proposals: 188/506 0.131s
im_proposals: 189/506 0.131s
im_proposals: 190/506 0.131s
im_proposals: 191/506 0.131s
im_proposals: 192/506 0.131s
im_proposals: 193/506 0.131s
im_proposals: 194/506 0.131s
im_proposals: 195/506 0.131s
im_proposals: 196/506 0.131s
im_proposals: 197/506 0.131s
im_proposals: 198/506 0.131s
im_proposals: 199/506 0.131s
im_proposals: 200/506 0.131s
im_proposals: 201/506 0.131s
im_proposals: 202/506 0.131s
im_proposals: 203/506 0.131s
im_proposals: 204/506 0.131s
im_proposals: 205/506 0.131s
im_proposals: 206/506 0.131s
im_proposals: 207/506 0.131s
im_proposals: 208/506 0.131s
im_proposals: 209/506 0.131s
im_proposals: 210/506 0.131s
im_proposals: 211/506 0.131s
im_proposals: 212/506 0.131s
im_proposals: 213/506 0.131s
im_proposals: 214/506 0.131s
im_proposals: 215/506 0.131s
im_proposals: 216/506 0.131s
im_proposals: 217/506 0.131s
im_proposals: 218/506 0.131s
im_proposals: 219/506 0.131s
im_proposals: 220/506 0.131s
im_proposals: 221/506 0.131s
im_proposals: 222/506 0.131s
im_proposals: 223/506 0.131s
im_proposals: 224/506 0.131s
im_proposals: 225/506 0.131s
im_proposals: 226/506 0.131s
im_proposals: 227/506 0.131s
im_proposals: 228/506 0.131s
im_proposals: 229/506 0.131s
im_proposals: 230/506 0.131s
im_proposals: 231/506 0.131s
im_proposals: 232/506 0.131s
im_proposals: 233/506 0.131s
im_proposals: 234/506 0.131s
im_proposals: 235/506 0.131s
im_proposals: 236/506 0.131s
im_proposals: 237/506 0.131s
im_proposals: 238/506 0.131s
im_proposals: 239/506 0.131s
im_proposals: 240/506 0.132s
im_proposals: 241/506 0.132s
im_proposals: 242/506 0.132s
im_proposals: 243/506 0.132s
im_proposals: 244/506 0.132s
im_proposals: 245/506 0.132s
im_proposals: 246/506 0.132s
im_proposals: 247/506 0.132s
im_proposals: 248/506 0.132s
im_proposals: 249/506 0.132s
im_proposals: 250/506 0.132s
im_proposals: 251/506 0.132s
im_proposals: 252/506 0.132s
im_proposals: 253/506 0.132s
im_proposals: 254/506 0.132s
im_proposals: 255/506 0.132s
im_proposals: 256/506 0.132s
im_proposals: 257/506 0.132s
im_proposals: 258/506 0.132s
im_proposals: 259/506 0.132s
im_proposals: 260/506 0.132s
im_proposals: 261/506 0.132s
im_proposals: 262/506 0.132s
im_proposals: 263/506 0.132s
im_proposals: 264/506 0.132s
im_proposals: 265/506 0.132s
im_proposals: 266/506 0.132s
im_proposals: 267/506 0.132s
im_proposals: 268/506 0.132s
im_proposals: 269/506 0.132s
im_proposals: 270/506 0.132s
im_proposals: 271/506 0.132s
im_proposals: 272/506 0.132s
im_proposals: 273/506 0.132s
im_proposals: 274/506 0.132s
im_proposals: 275/506 0.132s
im_proposals: 276/506 0.132s
im_proposals: 277/506 0.132s
im_proposals: 278/506 0.132s
im_proposals: 279/506 0.132s
im_proposals: 280/506 0.132s
im_proposals: 281/506 0.132s
im_proposals: 282/506 0.132s
im_proposals: 283/506 0.132s
im_proposals: 284/506 0.132s
im_proposals: 285/506 0.132s
im_proposals: 286/506 0.132s
im_proposals: 287/506 0.132s
im_proposals: 288/506 0.132s
im_proposals: 289/506 0.132s
im_proposals: 290/506 0.132s
im_proposals: 291/506 0.132s
im_proposals: 292/506 0.132s
im_proposals: 293/506 0.132s
im_proposals: 294/506 0.132s
im_proposals: 295/506 0.132s
im_proposals: 296/506 0.132s
im_proposals: 297/506 0.132s
im_proposals: 298/506 0.132s
im_proposals: 299/506 0.132s
im_proposals: 300/506 0.132s
im_proposals: 301/506 0.132s
im_proposals: 302/506 0.132s
im_proposals: 303/506 0.132s
im_proposals: 304/506 0.132s
im_proposals: 305/506 0.132s
im_proposals: 306/506 0.132s
im_proposals: 307/506 0.132s
im_proposals: 308/506 0.132s
im_proposals: 309/506 0.132s
im_proposals: 310/506 0.132s
im_proposals: 311/506 0.132s
im_proposals: 312/506 0.132s
im_proposals: 313/506 0.132s
im_proposals: 314/506 0.132s
im_proposals: 315/506 0.132s
im_proposals: 316/506 0.132s
im_proposals: 317/506 0.132s
im_proposals: 318/506 0.132s
im_proposals: 319/506 0.132s
im_proposals: 320/506 0.132s
im_proposals: 321/506 0.132s
im_proposals: 322/506 0.132s
im_proposals: 323/506 0.132s
im_proposals: 324/506 0.132s
im_proposals: 325/506 0.132s
im_proposals: 326/506 0.132s
im_proposals: 327/506 0.132s
im_proposals: 328/506 0.132s
im_proposals: 329/506 0.132s
im_proposals: 330/506 0.132s
im_proposals: 331/506 0.132s
im_proposals: 332/506 0.132s
im_proposals: 333/506 0.132s
im_proposals: 334/506 0.132s
im_proposals: 335/506 0.132s
im_proposals: 336/506 0.132s
im_proposals: 337/506 0.132s
im_proposals: 338/506 0.132s
im_proposals: 339/506 0.132s
im_proposals: 340/506 0.132s
im_proposals: 341/506 0.132s
im_proposals: 342/506 0.132s
im_proposals: 343/506 0.132s
im_proposals: 344/506 0.132s
im_proposals: 345/506 0.132s
im_proposals: 346/506 0.132s
im_proposals: 347/506 0.132s
im_proposals: 348/506 0.132s
im_proposals: 349/506 0.132s
im_proposals: 350/506 0.132s
im_proposals: 351/506 0.132s
im_proposals: 352/506 0.132s
im_proposals: 353/506 0.132s
im_proposals: 354/506 0.132s
im_proposals: 355/506 0.132s
im_proposals: 356/506 0.132s
im_proposals: 357/506 0.132s
im_proposals: 358/506 0.132s
im_proposals: 359/506 0.132s
im_proposals: 360/506 0.132s
im_proposals: 361/506 0.132s
im_proposals: 362/506 0.132s
im_proposals: 363/506 0.132s
im_proposals: 364/506 0.132s
im_proposals: 365/506 0.132s
im_proposals: 366/506 0.132s
im_proposals: 367/506 0.132s
im_proposals: 368/506 0.132s
im_proposals: 369/506 0.132s
im_proposals: 370/506 0.132s
im_proposals: 371/506 0.132s
im_proposals: 372/506 0.132s
im_proposals: 373/506 0.132s
im_proposals: 374/506 0.132s
im_proposals: 375/506 0.132s
im_proposals: 376/506 0.132s
im_proposals: 377/506 0.132s
im_proposals: 378/506 0.132s
im_proposals: 379/506 0.132s
im_proposals: 380/506 0.132s
im_proposals: 381/506 0.132s
im_proposals: 382/506 0.132s
im_proposals: 383/506 0.132s
im_proposals: 384/506 0.132s
im_proposals: 385/506 0.132s
im_proposals: 386/506 0.132s
im_proposals: 387/506 0.132s
im_proposals: 388/506 0.132s
im_proposals: 389/506 0.132s
im_proposals: 390/506 0.132s
im_proposals: 391/506 0.132s
im_proposals: 392/506 0.132s
im_proposals: 393/506 0.132s
im_proposals: 394/506 0.132s
im_proposals: 395/506 0.132s
im_proposals: 396/506 0.132s
im_proposals: 397/506 0.132s
im_proposals: 398/506 0.132s
im_proposals: 399/506 0.132s
im_proposals: 400/506 0.132s
im_proposals: 401/506 0.132s
im_proposals: 402/506 0.132s
im_proposals: 403/506 0.132s
im_proposals: 404/506 0.132s
im_proposals: 405/506 0.132s
im_proposals: 406/506 0.132s
im_proposals: 407/506 0.132s
im_proposals: 408/506 0.132s
im_proposals: 409/506 0.132s
im_proposals: 410/506 0.132s
im_proposals: 411/506 0.132s
im_proposals: 412/506 0.132s
im_proposals: 413/506 0.132s
im_proposals: 414/506 0.132s
im_proposals: 415/506 0.132s
im_proposals: 416/506 0.132s
im_proposals: 417/506 0.132s
im_proposals: 418/506 0.132s
im_proposals: 419/506 0.132s
im_proposals: 420/506 0.132s
im_proposals: 421/506 0.132s
im_proposals: 422/506 0.132s
im_proposals: 423/506 0.132s
im_proposals: 424/506 0.133s
im_proposals: 425/506 0.133s
im_proposals: 426/506 0.133s
im_proposals: 427/506 0.133s
im_proposals: 428/506 0.133s
im_proposals: 429/506 0.133s
im_proposals: 430/506 0.133s
im_proposals: 431/506 0.133s
im_proposals: 432/506 0.133s
im_proposals: 433/506 0.133s
im_proposals: 434/506 0.133s
im_proposals: 435/506 0.133s
im_proposals: 436/506 0.133s
im_proposals: 437/506 0.133s
im_proposals: 438/506 0.133s
im_proposals: 439/506 0.133s
im_proposals: 440/506 0.133s
im_proposals: 441/506 0.133s
im_proposals: 442/506 0.133s
im_proposals: 443/506 0.133s
im_proposals: 444/506 0.133s
im_proposals: 445/506 0.133s
im_proposals: 446/506 0.133s
im_proposals: 447/506 0.133s
im_proposals: 448/506 0.133s
im_proposals: 449/506 0.133s
im_proposals: 450/506 0.133s
im_proposals: 451/506 0.133s
im_proposals: 452/506 0.133s
im_proposals: 453/506 0.133s
im_proposals: 454/506 0.133s
im_proposals: 455/506 0.133s
im_proposals: 456/506 0.133s
im_proposals: 457/506 0.133s
im_proposals: 458/506 0.133s
im_proposals: 459/506 0.133s
im_proposals: 460/506 0.133s
im_proposals: 461/506 0.133s
im_proposals: 462/506 0.133s
im_proposals: 463/506 0.133s
im_proposals: 464/506 0.133s
im_proposals: 465/506 0.133s
im_proposals: 466/506 0.133s
im_proposals: 467/506 0.133s
im_proposals: 468/506 0.133s
im_proposals: 469/506 0.133s
im_proposals: 470/506 0.133s
im_proposals: 471/506 0.133s
im_proposals: 472/506 0.133s
im_proposals: 473/506 0.133s
im_proposals: 474/506 0.133s
im_proposals: 475/506 0.133s
im_proposals: 476/506 0.133s
im_proposals: 477/506 0.133s
im_proposals: 478/506 0.133s
im_proposals: 479/506 0.133s
im_proposals: 480/506 0.133s
im_proposals: 481/506 0.133s
im_proposals: 482/506 0.133s
im_proposals: 483/506 0.133s
im_proposals: 484/506 0.133s
im_proposals: 485/506 0.133s
im_proposals: 486/506 0.133s
im_proposals: 487/506 0.133s
im_proposals: 488/506 0.133s
im_proposals: 489/506 0.133s
im_proposals: 490/506 0.133s
im_proposals: 491/506 0.133s
im_proposals: 492/506 0.133s
im_proposals: 493/506 0.133s
im_proposals: 494/506 0.133s
im_proposals: 495/506 0.133s
im_proposals: 496/506 0.133s
im_proposals: 497/506 0.133s
im_proposals: 498/506 0.133s
im_proposals: 499/506 0.133s
im_proposals: 500/506 0.133s
im_proposals: 501/506 0.133s
im_proposals: 502/506 0.133s
im_proposals: 503/506 0.133s
im_proposals: 504/506 0.133s
im_proposals: 505/506 0.133s
im_proposals: 506/506 0.133s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 Fast R-CNN, init from stage 2 RPN R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.15217907e-07  -5.22005132e-03  -4.10793339e-02  -7.08718981e-02]
 [  8.92164694e-09   1.57054396e-02   2.19984295e-02  -2.78301045e-02]
 [ -1.94225821e-08  -8.61593031e-03   2.96989892e-02   6.69870494e-03]
 [ -7.33882189e-08   5.15535573e-02  -1.74732055e-02  -1.51888100e-02]
 [ -3.10440858e-09   3.40905333e-03   4.68776354e-02   1.95911229e-02]
 [  4.61332605e-08   5.50199124e-03   1.79429869e-03  -1.13158196e-02]
 [  6.25020928e-08   6.30476822e-03   4.30800884e-02  -2.43445225e-02]
 [ -6.09688356e-08   5.95824371e-03   3.37530213e-02   8.76786686e-05]
 [  1.42873350e-08  -3.70246134e-03   9.61448828e-03  -4.24198652e-02]
 [ -2.70083547e-08   1.58831410e-02   2.96526237e-02  -6.28295529e-04]
 [ -2.62309697e-08  -3.76861907e-03   3.92433991e-02  -1.64119690e-02]
 [  0.00000000e+00   8.80879668e-03   2.87056245e-02  -2.28243431e-02]
 [ -1.35863529e-09  -9.36826113e-03   3.53036770e-02   6.68836523e-03]
 [  1.29442049e-08  -9.80455974e-03   3.10986247e-02  -2.54646419e-02]
 [ -5.93788696e-08   1.30135879e-03   5.14335681e-02   1.49192686e-02]
 [  7.97444955e-08   3.25487806e-03  -1.91324592e-02  -4.42155972e-02]
 [  9.22009349e-08  -2.18390419e-02   1.16236154e-02  -1.29788245e-02]
 [ -2.68220901e-08  -1.63504751e-02  -3.63551257e-02  -7.34175252e-03]
 [ -3.47987421e-09  -1.28009905e-02   8.80987278e-02   3.39212810e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.62374266e-08   1.18576192e-02   2.12963320e-02  -3.55426945e-02]
 [  0.00000000e+00  -2.73562421e-02   3.71764302e-02   3.08031489e-02]
 [  3.29954284e-08   1.68099446e-02   9.91061250e-03  -6.47755188e-02]
 [  2.33865447e-08  -1.50194568e-02   3.35465732e-02  -5.10053122e-02]
 [  0.00000000e+00  -3.37360675e-02  -1.29876547e-02  -4.63749021e-02]
 [ -1.02445483e-08  -1.05859681e-02   3.63236621e-02  -3.95815330e-02]
 [  0.00000000e+00  -3.08435158e-02   2.72995049e-02  -3.17263682e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  9.77888703e-09  -3.37978094e-02   6.62351726e-03  -8.73072081e-02]
 [  2.13583310e-07   2.10562771e-02   1.04123890e-01   4.05486003e-02]
 [ -3.28065888e-08  -1.67200157e-02   9.78282262e-02  -1.73913034e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.20222791e-08   2.34385286e-02  -1.33259988e-02  -7.88555294e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.62520358e-08   7.97461874e-04   5.48839222e-02   5.03097506e-03]
 [  0.00000000e+00   4.31492925e-04  -5.06124686e-02  -1.98517618e-02]
 [ -3.17891439e-07  -6.48143639e-02   3.39208096e-02   1.15097900e-01]
 [ -2.70295211e-08  -9.81775733e-03   3.64169462e-02  -1.26073294e-02]
 [ -5.43892384e-08   1.18854707e-03   8.86017084e-03   9.47771966e-03]
 [  0.00000000e+00  -6.53625764e-03  -2.74993025e-02  -3.78074154e-02]
 [  5.06639481e-08   1.53237820e-02  -2.71972924e-02  -7.01517552e-02]
 [  0.00000000e+00  -1.49319681e-02  -3.88354932e-02  -2.72935242e-02]]
[ -2.54797916e-09  -3.41964957e-03   1.68764901e-02  -1.36807874e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.03118599  0.07820029  0.1879694   0.14515669]
 [ 0.10536447  0.0797608   0.11253537  0.15070204]
 [ 0.08942478  0.07682879  0.13667433  0.12012078]
 [ 0.07049701  0.08686918  0.10685716  0.16090195]
 [ 0.0689664   0.05151737  0.12282298  0.11078129]
 [ 0.10360388  0.08304575  0.15080414  0.14082425]
 [ 0.11339058  0.09352458  0.12649984  0.13832591]
 [ 0.09553999  0.0839336   0.11087185  0.10994704]
 [ 0.08797301  0.09229198  0.11841849  0.1628425 ]
 [ 0.06877713  0.08209774  0.10731047  0.11249492]
 [ 0.09604479  0.08389204  0.13290211  0.14286387]
 [ 0.08018352  0.0476292   0.06521492  0.08339381]
 [ 0.09109489  0.07227066  0.13383813  0.11657726]
 [ 0.08248341  0.06775028  0.13091794  0.11488883]
 [ 0.08776188  0.06086896  0.11978036  0.13528876]
 [ 0.06678698  0.09860393  0.10633958  0.14652086]
 [ 0.07079301  0.04207947  0.11737497  0.14684446]
 [ 0.0580357   0.06989958  0.10342338  0.11984149]
 [ 0.09966203  0.06932348  0.15290589  0.07684153]
 [ 0.          0.          0.          0.        ]
 [ 0.08639607  0.08594219  0.08092752  0.13541661]
 [ 0.03014494  0.06117042  0.08312902  0.06887794]
 [ 0.0929154   0.06259105  0.06433442  0.1096136 ]
 [ 0.04194884  0.04463624  0.07054561  0.1400867 ]
 [ 0.09694613  0.04771     0.01836732  0.06558402]
 [ 0.09028725  0.07122774  0.09998849  0.12037752]
 [ 0.0663192   0.08220008  0.11306004  0.0989453 ]
 [ 0.          0.          0.          0.        ]
 [ 0.06314527  0.07380807  0.11801258  0.12682124]
 [ 0.13168107  0.08334689  0.14726568  0.06057606]
 [ 0.10438679  0.08478485  0.16519981  0.15300941]
 [ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.07618705  0.09091894  0.11355521  0.12738066]
 [ 0.          0.          0.          0.        ]
 [ 0.09182852  0.05424865  0.09980124  0.098256  ]
 [ 0.09025062  0.06356327  0.11134718  0.0849115 ]
 [ 0.18744507  0.09413033  0.02669303  0.09491941]
 [ 0.09314606  0.07054383  0.10796287  0.10054283]
 [ 0.04503347  0.00237709  0.01772034  0.01895544]
 [ 0.08338253  0.05074086  0.08206391  0.09212766]
 [ 0.082225    0.07509092  0.05039421  0.13436018]
 [ 0.08375372  0.04804325  0.084512    0.08427064]]
[ 0.07453471  0.06203401  0.09298469  0.10116723]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:41:55.716986  4877 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:41:55.717048  4877 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt
I0419 16:41:55.717906  4877 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:41:55.718139  4877 layer_factory.hpp:77] Creating layer data
I0419 16:41:55.718955  4877 net.cpp:106] Creating Layer data
I0419 16:41:55.718981  4877 net.cpp:411] data -> data
I0419 16:41:55.719003  4877 net.cpp:411] data -> rois
I0419 16:41:55.719033  4877 net.cpp:411] data -> labels
I0419 16:41:55.719050  4877 net.cpp:411] data -> bbox_targets
I0419 16:41:55.719058  4877 net.cpp:411] data -> bbox_inside_weights
I0419 16:41:55.719069  4877 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:41:55.734707  4877 net.cpp:150] Setting up data
I0419 16:41:55.734761  4877 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:41:55.734776  4877 net.cpp:157] Top shape: 1 5 (5)
I0419 16:41:55.734782  4877 net.cpp:157] Top shape: 1 (1)
I0419 16:41:55.734788  4877 net.cpp:157] Top shape: 1 176 (176)
I0419 16:41:55.734794  4877 net.cpp:157] Top shape: 1 176 (176)
I0419 16:41:55.734810  4877 net.cpp:157] Top shape: 1 176 (176)
I0419 16:41:55.734827  4877 net.cpp:165] Memory required for data: 14402136
I0419 16:41:55.734838  4877 layer_factory.hpp:77] Creating layer conv1
I0419 16:41:55.734871  4877 net.cpp:106] Creating Layer conv1
I0419 16:41:55.734884  4877 net.cpp:454] conv1 <- data
I0419 16:41:55.734902  4877 net.cpp:411] conv1 -> conv1
I0419 16:41:55.736274  4877 net.cpp:150] Setting up conv1
I0419 16:41:55.736297  4877 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:41:55.736302  4877 net.cpp:165] Memory required for data: 129602136
I0419 16:41:55.736323  4877 layer_factory.hpp:77] Creating layer relu1
I0419 16:41:55.736356  4877 net.cpp:106] Creating Layer relu1
I0419 16:41:55.736368  4877 net.cpp:454] relu1 <- conv1
I0419 16:41:55.736376  4877 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:41:55.736390  4877 net.cpp:150] Setting up relu1
I0419 16:41:55.736410  4877 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:41:55.736420  4877 net.cpp:165] Memory required for data: 244802136
I0419 16:41:55.736426  4877 layer_factory.hpp:77] Creating layer norm1
I0419 16:41:55.736439  4877 net.cpp:106] Creating Layer norm1
I0419 16:41:55.736456  4877 net.cpp:454] norm1 <- conv1
I0419 16:41:55.736466  4877 net.cpp:411] norm1 -> norm1
I0419 16:41:55.736591  4877 net.cpp:150] Setting up norm1
I0419 16:41:55.736605  4877 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:41:55.736610  4877 net.cpp:165] Memory required for data: 360002136
I0419 16:41:55.736614  4877 layer_factory.hpp:77] Creating layer pool1
I0419 16:41:55.736627  4877 net.cpp:106] Creating Layer pool1
I0419 16:41:55.736645  4877 net.cpp:454] pool1 <- norm1
I0419 16:41:55.736655  4877 net.cpp:411] pool1 -> pool1
I0419 16:41:55.736707  4877 net.cpp:150] Setting up pool1
I0419 16:41:55.736721  4877 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:41:55.736726  4877 net.cpp:165] Memory required for data: 389110104
I0419 16:41:55.736730  4877 layer_factory.hpp:77] Creating layer conv2
I0419 16:41:55.736744  4877 net.cpp:106] Creating Layer conv2
I0419 16:41:55.736780  4877 net.cpp:454] conv2 <- pool1
I0419 16:41:55.736802  4877 net.cpp:411] conv2 -> conv2
I0419 16:41:55.738507  4877 net.cpp:150] Setting up conv2
I0419 16:41:55.738526  4877 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:41:55.738531  4877 net.cpp:165] Memory required for data: 408721752
I0419 16:41:55.738545  4877 layer_factory.hpp:77] Creating layer relu2
I0419 16:41:55.738554  4877 net.cpp:106] Creating Layer relu2
I0419 16:41:55.738574  4877 net.cpp:454] relu2 <- conv2
I0419 16:41:55.738597  4877 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:41:55.738615  4877 net.cpp:150] Setting up relu2
I0419 16:41:55.738621  4877 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:41:55.738626  4877 net.cpp:165] Memory required for data: 428333400
I0419 16:41:55.738631  4877 layer_factory.hpp:77] Creating layer norm2
I0419 16:41:55.738651  4877 net.cpp:106] Creating Layer norm2
I0419 16:41:55.738657  4877 net.cpp:454] norm2 <- conv2
I0419 16:41:55.738668  4877 net.cpp:411] norm2 -> norm2
I0419 16:41:55.738771  4877 net.cpp:150] Setting up norm2
I0419 16:41:55.738785  4877 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:41:55.738790  4877 net.cpp:165] Memory required for data: 447945048
I0419 16:41:55.738795  4877 layer_factory.hpp:77] Creating layer pool2
I0419 16:41:55.738806  4877 net.cpp:106] Creating Layer pool2
I0419 16:41:55.738824  4877 net.cpp:454] pool2 <- norm2
I0419 16:41:55.738847  4877 net.cpp:411] pool2 -> pool2
I0419 16:41:55.738900  4877 net.cpp:150] Setting up pool2
I0419 16:41:55.738914  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.738919  4877 net.cpp:165] Memory required for data: 453056856
I0419 16:41:55.738922  4877 layer_factory.hpp:77] Creating layer conv3
I0419 16:41:55.738935  4877 net.cpp:106] Creating Layer conv3
I0419 16:41:55.738941  4877 net.cpp:454] conv3 <- pool2
I0419 16:41:55.738965  4877 net.cpp:411] conv3 -> conv3
I0419 16:41:55.742250  4877 net.cpp:150] Setting up conv3
I0419 16:41:55.742270  4877 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:41:55.742275  4877 net.cpp:165] Memory required for data: 460724568
I0419 16:41:55.742290  4877 layer_factory.hpp:77] Creating layer relu3
I0419 16:41:55.742313  4877 net.cpp:106] Creating Layer relu3
I0419 16:41:55.742348  4877 net.cpp:454] relu3 <- conv3
I0419 16:41:55.742369  4877 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:41:55.742379  4877 net.cpp:150] Setting up relu3
I0419 16:41:55.742398  4877 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:41:55.742403  4877 net.cpp:165] Memory required for data: 468392280
I0419 16:41:55.742409  4877 layer_factory.hpp:77] Creating layer conv4
I0419 16:41:55.742424  4877 net.cpp:106] Creating Layer conv4
I0419 16:41:55.742444  4877 net.cpp:454] conv4 <- conv3
I0419 16:41:55.742466  4877 net.cpp:411] conv4 -> conv4
I0419 16:41:55.745689  4877 net.cpp:150] Setting up conv4
I0419 16:41:55.745709  4877 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:41:55.745714  4877 net.cpp:165] Memory required for data: 476059992
I0419 16:41:55.745724  4877 layer_factory.hpp:77] Creating layer relu4
I0419 16:41:55.745733  4877 net.cpp:106] Creating Layer relu4
I0419 16:41:55.745754  4877 net.cpp:454] relu4 <- conv4
I0419 16:41:55.745774  4877 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:41:55.745795  4877 net.cpp:150] Setting up relu4
I0419 16:41:55.745810  4877 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:41:55.745815  4877 net.cpp:165] Memory required for data: 483727704
I0419 16:41:55.745820  4877 layer_factory.hpp:77] Creating layer conv5
I0419 16:41:55.745833  4877 net.cpp:106] Creating Layer conv5
I0419 16:41:55.745851  4877 net.cpp:454] conv5 <- conv4
I0419 16:41:55.745864  4877 net.cpp:411] conv5 -> conv5
I0419 16:41:55.748240  4877 net.cpp:150] Setting up conv5
I0419 16:41:55.748262  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.748267  4877 net.cpp:165] Memory required for data: 488839512
I0419 16:41:55.748281  4877 layer_factory.hpp:77] Creating layer relu5
I0419 16:41:55.748289  4877 net.cpp:106] Creating Layer relu5
I0419 16:41:55.748327  4877 net.cpp:454] relu5 <- conv5
I0419 16:41:55.748343  4877 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:41:55.748353  4877 net.cpp:150] Setting up relu5
I0419 16:41:55.748371  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.748378  4877 net.cpp:165] Memory required for data: 493951320
I0419 16:41:55.748383  4877 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:41:55.748400  4877 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:41:55.748407  4877 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:41:55.748415  4877 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:41:55.748435  4877 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:41:55.748497  4877 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:41:55.748510  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.748517  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.748522  4877 net.cpp:165] Memory required for data: 504174936
I0419 16:41:55.748527  4877 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:41:55.748556  4877 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:41:55.748567  4877 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:41:55.748574  4877 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:41:55.748581  4877 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:41:55.748606  4877 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:41:55.748677  4877 net.cpp:150] Setting up roi_pool_conv5
I0419 16:41:55.748692  4877 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:41:55.748695  4877 net.cpp:165] Memory required for data: 504211800
I0419 16:41:55.748700  4877 layer_factory.hpp:77] Creating layer fc6
I0419 16:41:55.748713  4877 net.cpp:106] Creating Layer fc6
I0419 16:41:55.748718  4877 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:41:55.748742  4877 net.cpp:411] fc6 -> fc6
I0419 16:41:55.847087  4877 net.cpp:150] Setting up fc6
I0419 16:41:55.847129  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.847134  4877 net.cpp:165] Memory required for data: 504228184
I0419 16:41:55.847148  4877 layer_factory.hpp:77] Creating layer relu6
I0419 16:41:55.847162  4877 net.cpp:106] Creating Layer relu6
I0419 16:41:55.847170  4877 net.cpp:454] relu6 <- fc6
I0419 16:41:55.847179  4877 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:41:55.847208  4877 net.cpp:150] Setting up relu6
I0419 16:41:55.847228  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.847242  4877 net.cpp:165] Memory required for data: 504244568
I0419 16:41:55.847257  4877 layer_factory.hpp:77] Creating layer drop6
I0419 16:41:55.847276  4877 net.cpp:106] Creating Layer drop6
I0419 16:41:55.847291  4877 net.cpp:454] drop6 <- fc6
I0419 16:41:55.847304  4877 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:41:55.847352  4877 net.cpp:150] Setting up drop6
I0419 16:41:55.847365  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.847370  4877 net.cpp:165] Memory required for data: 504260952
I0419 16:41:55.847375  4877 layer_factory.hpp:77] Creating layer fc7
I0419 16:41:55.847386  4877 net.cpp:106] Creating Layer fc7
I0419 16:41:55.847401  4877 net.cpp:454] fc7 <- fc6
I0419 16:41:55.847421  4877 net.cpp:411] fc7 -> fc7
I0419 16:41:55.891175  4877 net.cpp:150] Setting up fc7
I0419 16:41:55.891217  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.891223  4877 net.cpp:165] Memory required for data: 504277336
I0419 16:41:55.891238  4877 layer_factory.hpp:77] Creating layer relu7
I0419 16:41:55.891254  4877 net.cpp:106] Creating Layer relu7
I0419 16:41:55.891263  4877 net.cpp:454] relu7 <- fc7
I0419 16:41:55.891270  4877 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:41:55.891299  4877 net.cpp:150] Setting up relu7
I0419 16:41:55.891319  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.891332  4877 net.cpp:165] Memory required for data: 504293720
I0419 16:41:55.891347  4877 layer_factory.hpp:77] Creating layer drop7
I0419 16:41:55.891371  4877 net.cpp:106] Creating Layer drop7
I0419 16:41:55.891382  4877 net.cpp:454] drop7 <- fc7
I0419 16:41:55.891389  4877 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:41:55.891427  4877 net.cpp:150] Setting up drop7
I0419 16:41:55.891448  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.891463  4877 net.cpp:165] Memory required for data: 504310104
I0419 16:41:55.891479  4877 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:41:55.891502  4877 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:41:55.891520  4877 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:41:55.891538  4877 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:41:55.891563  4877 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:41:55.891624  4877 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:41:55.891638  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.891644  4877 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:41:55.891649  4877 net.cpp:165] Memory required for data: 504342872
I0419 16:41:55.891654  4877 layer_factory.hpp:77] Creating layer cls_score
I0419 16:41:55.891666  4877 net.cpp:106] Creating Layer cls_score
I0419 16:41:55.891685  4877 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:41:55.891697  4877 net.cpp:411] cls_score -> cls_score
I0419 16:41:55.897274  4877 net.cpp:150] Setting up cls_score
I0419 16:41:55.897292  4877 net.cpp:157] Top shape: 1 44 (44)
I0419 16:41:55.897297  4877 net.cpp:165] Memory required for data: 504343048
I0419 16:41:55.897307  4877 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:41:55.897318  4877 net.cpp:106] Creating Layer bbox_pred
I0419 16:41:55.897323  4877 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:41:55.897332  4877 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:41:55.918051  4877 net.cpp:150] Setting up bbox_pred
I0419 16:41:55.918071  4877 net.cpp:157] Top shape: 1 176 (176)
I0419 16:41:55.918076  4877 net.cpp:165] Memory required for data: 504343752
I0419 16:41:55.918094  4877 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:41:55.918126  4877 net.cpp:106] Creating Layer loss_cls
I0419 16:41:55.918135  4877 net.cpp:454] loss_cls <- cls_score
I0419 16:41:55.918143  4877 net.cpp:454] loss_cls <- labels
I0419 16:41:55.918150  4877 net.cpp:411] loss_cls -> cls_loss
I0419 16:41:55.918181  4877 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:41:55.918296  4877 net.cpp:150] Setting up loss_cls
I0419 16:41:55.918309  4877 net.cpp:157] Top shape: (1)
I0419 16:41:55.918314  4877 net.cpp:160]     with loss weight 1
I0419 16:41:55.918362  4877 net.cpp:165] Memory required for data: 504343756
I0419 16:41:55.918381  4877 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:41:55.918409  4877 net.cpp:106] Creating Layer loss_bbox
I0419 16:41:55.918426  4877 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:41:55.918449  4877 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:41:55.918467  4877 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:41:55.918478  4877 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:41:55.918489  4877 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:41:55.918584  4877 net.cpp:150] Setting up loss_bbox
I0419 16:41:55.918598  4877 net.cpp:157] Top shape: (1)
I0419 16:41:55.918603  4877 net.cpp:160]     with loss weight 1
I0419 16:41:55.918612  4877 net.cpp:165] Memory required for data: 504343760
I0419 16:41:55.918617  4877 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:41:55.918642  4877 net.cpp:106] Creating Layer rpn_conv1
I0419 16:41:55.918654  4877 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:41:55.918668  4877 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:41:55.935679  4877 net.cpp:150] Setting up rpn_conv1
I0419 16:41:55.935699  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.935704  4877 net.cpp:165] Memory required for data: 509455568
I0419 16:41:55.935714  4877 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:41:55.935724  4877 net.cpp:106] Creating Layer rpn_relu1
I0419 16:41:55.935742  4877 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:41:55.935763  4877 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:41:55.935775  4877 net.cpp:150] Setting up rpn_relu1
I0419 16:41:55.935783  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.935787  4877 net.cpp:165] Memory required for data: 514567376
I0419 16:41:55.935793  4877 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:41:55.935812  4877 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:41:55.935829  4877 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:41:55.935852  4877 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:41:55.935868  4877 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:41:55.935920  4877 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:41:55.935933  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.935940  4877 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:41:55.935943  4877 net.cpp:165] Memory required for data: 524790992
I0419 16:41:55.935948  4877 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:41:55.935968  4877 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:41:55.935976  4877 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:41:55.935986  4877 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:41:55.936337  4877 net.cpp:150] Setting up rpn_cls_score
I0419 16:41:55.936353  4877 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:41:55.936357  4877 net.cpp:165] Memory required for data: 525150416
I0419 16:41:55.936367  4877 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:41:55.936388  4877 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:41:55.936408  4877 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:41:55.936426  4877 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:41:55.936897  4877 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:41:55.936913  4877 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:41:55.936918  4877 net.cpp:165] Memory required for data: 525869264
I0419 16:41:55.936926  4877 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:41:55.936942  4877 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:41:55.936962  4877 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:41:55.936977  4877 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:41:55.936982  4877 net.cpp:165] Memory required for data: 525869264
I0419 16:41:55.936986  4877 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:41:55.936993  4877 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:41:55.937008  4877 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:41:55.937026  4877 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:41:55.937044  4877 net.cpp:165] Memory required for data: 525869264
I0419 16:41:55.937059  4877 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:41:55.937078  4877 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:41:55.937095  4877 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:41:55.937114  4877 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:41:55.937131  4877 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:41:55.937139  4877 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:41:55.937142  4877 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:41:55.937147  4877 net.cpp:226] loss_bbox needs backward computation.
I0419 16:41:55.937155  4877 net.cpp:226] loss_cls needs backward computation.
I0419 16:41:55.937168  4877 net.cpp:226] bbox_pred needs backward computation.
I0419 16:41:55.937180  4877 net.cpp:226] cls_score needs backward computation.
I0419 16:41:55.937187  4877 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:41:55.937192  4877 net.cpp:226] drop7 needs backward computation.
I0419 16:41:55.937196  4877 net.cpp:226] relu7 needs backward computation.
I0419 16:41:55.937211  4877 net.cpp:226] fc7 needs backward computation.
I0419 16:41:55.937239  4877 net.cpp:226] drop6 needs backward computation.
I0419 16:41:55.937257  4877 net.cpp:226] relu6 needs backward computation.
I0419 16:41:55.937263  4877 net.cpp:226] fc6 needs backward computation.
I0419 16:41:55.937269  4877 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:41:55.937276  4877 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:41:55.937290  4877 net.cpp:228] relu5 does not need backward computation.
I0419 16:41:55.937299  4877 net.cpp:228] conv5 does not need backward computation.
I0419 16:41:55.937304  4877 net.cpp:228] relu4 does not need backward computation.
I0419 16:41:55.937309  4877 net.cpp:228] conv4 does not need backward computation.
I0419 16:41:55.937324  4877 net.cpp:228] relu3 does not need backward computation.
I0419 16:41:55.937338  4877 net.cpp:228] conv3 does not need backward computation.
I0419 16:41:55.937355  4877 net.cpp:228] pool2 does not need backward computation.
I0419 16:41:55.937362  4877 net.cpp:228] norm2 does not need backward computation.
I0419 16:41:55.937368  4877 net.cpp:228] relu2 does not need backward computation.
I0419 16:41:55.937373  4877 net.cpp:228] conv2 does not need backward computation.
I0419 16:41:55.937387  4877 net.cpp:228] pool1 does not need backward computation.
I0419 16:41:55.937403  4877 net.cpp:228] norm1 does not need backward computation.
I0419 16:41:55.937418  4877 net.cpp:228] relu1 does not need backward computation.
I0419 16:41:55.937433  4877 net.cpp:228] conv1 does not need backward computation.
I0419 16:41:55.937443  4877 net.cpp:228] data does not need backward computation.
I0419 16:41:55.937448  4877 net.cpp:270] This network produces output bbox_loss
I0419 16:41:55.937453  4877 net.cpp:270] This network produces output cls_loss
I0419 16:41:55.937492  4877 net.cpp:283] Network initialization done.
I0419 16:41:55.937645  4877 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
I0419 16:41:56.385006  4877 net.cpp:816] Ignoring source layer input-data
I0419 16:41:56.385030  4877 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:41:56.388600  4877 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:41:56.388631  4877 net.cpp:816] Ignoring source layer rpn_cls_score_reshape
I0419 16:41:56.388636  4877 net.cpp:816] Ignoring source layer rpn-data
I0419 16:41:56.388640  4877 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:41:56.388645  4877 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:41:56.388648  4877 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:41:56.433394  4877 net.cpp:816] Ignoring source layer silence_fc7
Solving...
I0419 16:41:56.734884  4877 solver.cpp:229] Iteration 0, loss = 1.21757
I0419 16:41:56.734932  4877 solver.cpp:245]     Train net output #0: bbox_loss = 0.0242392 (* 1 = 0.0242392 loss)
I0419 16:41:56.734943  4877 solver.cpp:245]     Train net output #1: cls_loss = 1.19333 (* 1 = 1.19333 loss)
I0419 16:41:56.734959  4877 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:42:01.279991  4877 solver.cpp:229] Iteration 20, loss = 0.241161
I0419 16:42:01.280036  4877 solver.cpp:245]     Train net output #0: bbox_loss = 0.0410683 (* 1 = 0.0410683 loss)
I0419 16:42:01.280043  4877 solver.cpp:245]     Train net output #1: cls_loss = 0.200093 (* 1 = 0.200093 loss)
I0419 16:42:01.280050  4877 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:42:05.821367  4877 solver.cpp:229] Iteration 40, loss = 0.222941
I0419 16:42:05.821416  4877 solver.cpp:245]     Train net output #0: bbox_loss = 0.00227355 (* 1 = 0.00227355 loss)
I0419 16:42:05.821424  4877 solver.cpp:245]     Train net output #1: cls_loss = 0.220667 (* 1 = 0.220667 loss)
I0419 16:42:05.821430  4877 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:42:10.341084  4877 solver.cpp:229] Iteration 60, loss = nan
I0419 16:42:10.341128  4877 solver.cpp:245]     Train net output #0: bbox_loss = nan (* 1 = nan loss)
I0419 16:42:10.341135  4877 solver.cpp:245]     Train net output #1: cls_loss = 0.176247 (* 1 = 0.176247 loss)
I0419 16:42:10.341142  4877 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:42:14.848861  4877 solver.cpp:229] Iteration 80, loss = 0.143793
I0419 16:42:14.848903  4877 solver.cpp:245]     Train net output #0: bbox_loss = 0.0193062 (* 1 = 0.0193062 loss)
I0419 16:42:14.848911  4877 solver.cpp:245]     Train net output #1: cls_loss = 0.124486 (* 1 = 0.124486 loss)
I0419 16:42:14.848917  4877 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel
done solving
cp /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel -> /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel
Final model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel

real	5m13.218s
user	4m23.033s
sys	0m50.072s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt --net /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(caffemodel='/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', comp_mode=False, gpu_id=0, imdb_name='voc_2007_test', max_per_image=100, prototxt='models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:42:23.284008  4910 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 1360
  dim: 800
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 44
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 176
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0419 16:42:23.284207  4910 net.cpp:413] Input 0 -> data
I0419 16:42:23.299382  4910 net.cpp:413] Input 1 -> im_info
I0419 16:42:23.299446  4910 layer_factory.hpp:77] Creating layer conv1
I0419 16:42:23.299476  4910 net.cpp:106] Creating Layer conv1
I0419 16:42:23.299484  4910 net.cpp:454] conv1 <- data
I0419 16:42:23.299505  4910 net.cpp:411] conv1 -> conv1
I0419 16:42:23.300936  4910 net.cpp:150] Setting up conv1
I0419 16:42:23.300958  4910 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:42:23.300964  4910 net.cpp:165] Memory required for data: 104448000
I0419 16:42:23.300989  4910 layer_factory.hpp:77] Creating layer relu1
I0419 16:42:23.301007  4910 net.cpp:106] Creating Layer relu1
I0419 16:42:23.301015  4910 net.cpp:454] relu1 <- conv1
I0419 16:42:23.301023  4910 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:42:23.301036  4910 net.cpp:150] Setting up relu1
I0419 16:42:23.301045  4910 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:42:23.301049  4910 net.cpp:165] Memory required for data: 208896000
I0419 16:42:23.301054  4910 layer_factory.hpp:77] Creating layer norm1
I0419 16:42:23.301066  4910 net.cpp:106] Creating Layer norm1
I0419 16:42:23.301071  4910 net.cpp:454] norm1 <- conv1
I0419 16:42:23.301079  4910 net.cpp:411] norm1 -> norm1
I0419 16:42:23.301198  4910 net.cpp:150] Setting up norm1
I0419 16:42:23.301211  4910 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:42:23.301215  4910 net.cpp:165] Memory required for data: 313344000
I0419 16:42:23.301220  4910 layer_factory.hpp:77] Creating layer pool1
I0419 16:42:23.301234  4910 net.cpp:106] Creating Layer pool1
I0419 16:42:23.301240  4910 net.cpp:454] pool1 <- norm1
I0419 16:42:23.301247  4910 net.cpp:411] pool1 -> pool1
I0419 16:42:23.301290  4910 net.cpp:150] Setting up pool1
I0419 16:42:23.301301  4910 net.cpp:157] Top shape: 1 96 341 201 (6579936)
I0419 16:42:23.301306  4910 net.cpp:165] Memory required for data: 339663744
I0419 16:42:23.301311  4910 layer_factory.hpp:77] Creating layer conv2
I0419 16:42:23.301321  4910 net.cpp:106] Creating Layer conv2
I0419 16:42:23.301328  4910 net.cpp:454] conv2 <- pool1
I0419 16:42:23.301337  4910 net.cpp:411] conv2 -> conv2
I0419 16:42:23.303515  4910 net.cpp:150] Setting up conv2
I0419 16:42:23.303535  4910 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:42:23.303540  4910 net.cpp:165] Memory required for data: 357349248
I0419 16:42:23.303553  4910 layer_factory.hpp:77] Creating layer relu2
I0419 16:42:23.303562  4910 net.cpp:106] Creating Layer relu2
I0419 16:42:23.303567  4910 net.cpp:454] relu2 <- conv2
I0419 16:42:23.303584  4910 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:42:23.303593  4910 net.cpp:150] Setting up relu2
I0419 16:42:23.303602  4910 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:42:23.303606  4910 net.cpp:165] Memory required for data: 375034752
I0419 16:42:23.303611  4910 layer_factory.hpp:77] Creating layer norm2
I0419 16:42:23.303618  4910 net.cpp:106] Creating Layer norm2
I0419 16:42:23.303623  4910 net.cpp:454] norm2 <- conv2
I0419 16:42:23.303630  4910 net.cpp:411] norm2 -> norm2
I0419 16:42:23.303719  4910 net.cpp:150] Setting up norm2
I0419 16:42:23.303735  4910 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:42:23.303738  4910 net.cpp:165] Memory required for data: 392720256
I0419 16:42:23.303742  4910 layer_factory.hpp:77] Creating layer pool2
I0419 16:42:23.303752  4910 net.cpp:106] Creating Layer pool2
I0419 16:42:23.303757  4910 net.cpp:454] pool2 <- norm2
I0419 16:42:23.303763  4910 net.cpp:411] pool2 -> pool2
I0419 16:42:23.303809  4910 net.cpp:150] Setting up pool2
I0419 16:42:23.303822  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.303827  4910 net.cpp:165] Memory required for data: 397211520
I0419 16:42:23.303831  4910 layer_factory.hpp:77] Creating layer conv3
I0419 16:42:23.303841  4910 net.cpp:106] Creating Layer conv3
I0419 16:42:23.303849  4910 net.cpp:454] conv3 <- pool2
I0419 16:42:23.303856  4910 net.cpp:411] conv3 -> conv3
I0419 16:42:23.306638  4910 net.cpp:150] Setting up conv3
I0419 16:42:23.306656  4910 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:42:23.306661  4910 net.cpp:165] Memory required for data: 403948416
I0419 16:42:23.306674  4910 layer_factory.hpp:77] Creating layer relu3
I0419 16:42:23.306686  4910 net.cpp:106] Creating Layer relu3
I0419 16:42:23.306699  4910 net.cpp:454] relu3 <- conv3
I0419 16:42:23.306705  4910 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:42:23.306715  4910 net.cpp:150] Setting up relu3
I0419 16:42:23.306723  4910 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:42:23.306727  4910 net.cpp:165] Memory required for data: 410685312
I0419 16:42:23.306731  4910 layer_factory.hpp:77] Creating layer conv4
I0419 16:42:23.306740  4910 net.cpp:106] Creating Layer conv4
I0419 16:42:23.306746  4910 net.cpp:454] conv4 <- conv3
I0419 16:42:23.306756  4910 net.cpp:411] conv4 -> conv4
I0419 16:42:23.310045  4910 net.cpp:150] Setting up conv4
I0419 16:42:23.310063  4910 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:42:23.310068  4910 net.cpp:165] Memory required for data: 417422208
I0419 16:42:23.310078  4910 layer_factory.hpp:77] Creating layer relu4
I0419 16:42:23.310089  4910 net.cpp:106] Creating Layer relu4
I0419 16:42:23.310096  4910 net.cpp:454] relu4 <- conv4
I0419 16:42:23.310102  4910 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:42:23.310117  4910 net.cpp:150] Setting up relu4
I0419 16:42:23.310124  4910 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:42:23.310129  4910 net.cpp:165] Memory required for data: 424159104
I0419 16:42:23.310137  4910 layer_factory.hpp:77] Creating layer conv5
I0419 16:42:23.310149  4910 net.cpp:106] Creating Layer conv5
I0419 16:42:23.310158  4910 net.cpp:454] conv5 <- conv4
I0419 16:42:23.310165  4910 net.cpp:411] conv5 -> conv5
I0419 16:42:23.312454  4910 net.cpp:150] Setting up conv5
I0419 16:42:23.312474  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.312479  4910 net.cpp:165] Memory required for data: 428650368
I0419 16:42:23.312492  4910 layer_factory.hpp:77] Creating layer relu5
I0419 16:42:23.312505  4910 net.cpp:106] Creating Layer relu5
I0419 16:42:23.312512  4910 net.cpp:454] relu5 <- conv5
I0419 16:42:23.312520  4910 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:42:23.312528  4910 net.cpp:150] Setting up relu5
I0419 16:42:23.312537  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.312541  4910 net.cpp:165] Memory required for data: 433141632
I0419 16:42:23.312546  4910 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:42:23.312561  4910 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:42:23.312572  4910 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:42:23.312579  4910 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:42:23.312587  4910 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:42:23.312630  4910 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:42:23.312644  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.312649  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.312654  4910 net.cpp:165] Memory required for data: 442124160
I0419 16:42:23.312659  4910 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:42:23.312667  4910 net.cpp:106] Creating Layer rpn_conv1
I0419 16:42:23.312674  4910 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_0
I0419 16:42:23.312685  4910 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:42:23.314285  4910 net.cpp:150] Setting up rpn_conv1
I0419 16:42:23.314303  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.314308  4910 net.cpp:165] Memory required for data: 446615424
I0419 16:42:23.314318  4910 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:42:23.314343  4910 net.cpp:106] Creating Layer rpn_relu1
I0419 16:42:23.314352  4910 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:42:23.314359  4910 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:42:23.314368  4910 net.cpp:150] Setting up rpn_relu1
I0419 16:42:23.314378  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.314381  4910 net.cpp:165] Memory required for data: 451106688
I0419 16:42:23.314386  4910 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:42:23.314396  4910 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:42:23.314401  4910 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:42:23.314409  4910 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:42:23.314416  4910 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:42:23.314458  4910 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:42:23.314471  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.314476  4910 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:42:23.314481  4910 net.cpp:165] Memory required for data: 460089216
I0419 16:42:23.314484  4910 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:42:23.314493  4910 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:42:23.314501  4910 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:42:23.314510  4910 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:42:23.314705  4910 net.cpp:150] Setting up rpn_cls_score
I0419 16:42:23.314719  4910 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:42:23.314723  4910 net.cpp:165] Memory required for data: 460405008
I0419 16:42:23.314733  4910 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:42:23.314744  4910 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:42:23.314751  4910 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:42:23.314762  4910 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:42:23.314981  4910 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:42:23.314996  4910 net.cpp:157] Top shape: 1 36 86 51 (157896)
I0419 16:42:23.314999  4910 net.cpp:165] Memory required for data: 461036592
I0419 16:42:23.315008  4910 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:42:23.315021  4910 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:42:23.315028  4910 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:42:23.315035  4910 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:42:23.315075  4910 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:42:23.315086  4910 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:42:23.315091  4910 net.cpp:165] Memory required for data: 461352384
I0419 16:42:23.315095  4910 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:42:23.315104  4910 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:42:23.315109  4910 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:42:23.315119  4910 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:42:23.315182  4910 net.cpp:150] Setting up rpn_cls_prob
I0419 16:42:23.315194  4910 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:42:23.315199  4910 net.cpp:165] Memory required for data: 461668176
I0419 16:42:23.315203  4910 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:42:23.315213  4910 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:42:23.315220  4910 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:42:23.315228  4910 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:42:23.315258  4910 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:42:23.315269  4910 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:42:23.315274  4910 net.cpp:165] Memory required for data: 461983968
I0419 16:42:23.315279  4910 layer_factory.hpp:77] Creating layer proposal
I0419 16:42:23.315757  4910 net.cpp:106] Creating Layer proposal
I0419 16:42:23.315775  4910 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:42:23.315786  4910 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:42:23.315793  4910 net.cpp:454] proposal <- im_info
I0419 16:42:23.315800  4910 net.cpp:411] proposal -> rois
I0419 16:42:23.316478  4910 net.cpp:150] Setting up proposal
I0419 16:42:23.316500  4910 net.cpp:157] Top shape: 1 5 (5)
I0419 16:42:23.316505  4910 net.cpp:165] Memory required for data: 461983988
I0419 16:42:23.316510  4910 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:42:23.316521  4910 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:42:23.316527  4910 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0419 16:42:23.316534  4910 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:42:23.316545  4910 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:42:23.316560  4910 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:42:23.316622  4910 net.cpp:150] Setting up roi_pool_conv5
I0419 16:42:23.316634  4910 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:42:23.316639  4910 net.cpp:165] Memory required for data: 462020852
I0419 16:42:23.316644  4910 layer_factory.hpp:77] Creating layer fc6
I0419 16:42:23.316656  4910 net.cpp:106] Creating Layer fc6
I0419 16:42:23.316663  4910 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:42:23.316670  4910 net.cpp:411] fc6 -> fc6
I0419 16:42:23.415426  4910 net.cpp:150] Setting up fc6
I0419 16:42:23.415469  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.415474  4910 net.cpp:165] Memory required for data: 462037236
I0419 16:42:23.415498  4910 layer_factory.hpp:77] Creating layer relu6
I0419 16:42:23.415513  4910 net.cpp:106] Creating Layer relu6
I0419 16:42:23.415519  4910 net.cpp:454] relu6 <- fc6
I0419 16:42:23.415530  4910 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:42:23.415544  4910 net.cpp:150] Setting up relu6
I0419 16:42:23.415550  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.415563  4910 net.cpp:165] Memory required for data: 462053620
I0419 16:42:23.415568  4910 layer_factory.hpp:77] Creating layer drop6
I0419 16:42:23.415585  4910 net.cpp:106] Creating Layer drop6
I0419 16:42:23.415596  4910 net.cpp:454] drop6 <- fc6
I0419 16:42:23.415603  4910 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:42:23.415644  4910 net.cpp:150] Setting up drop6
I0419 16:42:23.415657  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.415662  4910 net.cpp:165] Memory required for data: 462070004
I0419 16:42:23.415666  4910 layer_factory.hpp:77] Creating layer fc7
I0419 16:42:23.415674  4910 net.cpp:106] Creating Layer fc7
I0419 16:42:23.415679  4910 net.cpp:454] fc7 <- fc6
I0419 16:42:23.415689  4910 net.cpp:411] fc7 -> fc7
I0419 16:42:23.459331  4910 net.cpp:150] Setting up fc7
I0419 16:42:23.459379  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.459384  4910 net.cpp:165] Memory required for data: 462086388
I0419 16:42:23.459399  4910 layer_factory.hpp:77] Creating layer relu7
I0419 16:42:23.459413  4910 net.cpp:106] Creating Layer relu7
I0419 16:42:23.459419  4910 net.cpp:454] relu7 <- fc7
I0419 16:42:23.459427  4910 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:42:23.459448  4910 net.cpp:150] Setting up relu7
I0419 16:42:23.459455  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.459460  4910 net.cpp:165] Memory required for data: 462102772
I0419 16:42:23.459468  4910 layer_factory.hpp:77] Creating layer drop7
I0419 16:42:23.459477  4910 net.cpp:106] Creating Layer drop7
I0419 16:42:23.459482  4910 net.cpp:454] drop7 <- fc7
I0419 16:42:23.459494  4910 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:42:23.459525  4910 net.cpp:150] Setting up drop7
I0419 16:42:23.459538  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.459542  4910 net.cpp:165] Memory required for data: 462119156
I0419 16:42:23.459547  4910 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:42:23.459555  4910 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:42:23.459560  4910 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:42:23.459566  4910 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:42:23.459576  4910 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:42:23.459630  4910 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:42:23.459641  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.459647  4910 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:42:23.459651  4910 net.cpp:165] Memory required for data: 462151924
I0419 16:42:23.459656  4910 layer_factory.hpp:77] Creating layer cls_score
I0419 16:42:23.459676  4910 net.cpp:106] Creating Layer cls_score
I0419 16:42:23.459686  4910 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:42:23.459695  4910 net.cpp:411] cls_score -> cls_score
I0419 16:42:23.460516  4910 net.cpp:150] Setting up cls_score
I0419 16:42:23.460535  4910 net.cpp:157] Top shape: 1 44 (44)
I0419 16:42:23.460538  4910 net.cpp:165] Memory required for data: 462152100
I0419 16:42:23.460548  4910 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:42:23.460556  4910 net.cpp:106] Creating Layer bbox_pred
I0419 16:42:23.460562  4910 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:42:23.460577  4910 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:42:23.462388  4910 net.cpp:150] Setting up bbox_pred
I0419 16:42:23.462405  4910 net.cpp:157] Top shape: 1 176 (176)
I0419 16:42:23.462409  4910 net.cpp:165] Memory required for data: 462152804
I0419 16:42:23.462420  4910 layer_factory.hpp:77] Creating layer cls_prob
I0419 16:42:23.462430  4910 net.cpp:106] Creating Layer cls_prob
I0419 16:42:23.462435  4910 net.cpp:454] cls_prob <- cls_score
I0419 16:42:23.462441  4910 net.cpp:411] cls_prob -> cls_prob
I0419 16:42:23.462509  4910 net.cpp:150] Setting up cls_prob
I0419 16:42:23.462522  4910 net.cpp:157] Top shape: 1 44 (44)
I0419 16:42:23.462527  4910 net.cpp:165] Memory required for data: 462152980
I0419 16:42:23.462532  4910 net.cpp:228] cls_prob does not need backward computation.
I0419 16:42:23.462538  4910 net.cpp:228] bbox_pred does not need backward computation.
I0419 16:42:23.462543  4910 net.cpp:228] cls_score does not need backward computation.
I0419 16:42:23.462548  4910 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0419 16:42:23.462556  4910 net.cpp:228] drop7 does not need backward computation.
I0419 16:42:23.462560  4910 net.cpp:228] relu7 does not need backward computation.
I0419 16:42:23.462564  4910 net.cpp:228] fc7 does not need backward computation.
I0419 16:42:23.462569  4910 net.cpp:228] drop6 does not need backward computation.
I0419 16:42:23.462574  4910 net.cpp:228] relu6 does not need backward computation.
I0419 16:42:23.462579  4910 net.cpp:228] fc6 does not need backward computation.
I0419 16:42:23.462584  4910 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:42:23.462590  4910 net.cpp:228] proposal does not need backward computation.
I0419 16:42:23.462596  4910 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:42:23.462602  4910 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:42:23.462607  4910 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:42:23.462612  4910 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:42:23.462617  4910 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:42:23.462623  4910 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:42:23.462628  4910 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:42:23.462633  4910 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:42:23.462641  4910 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:42:23.462646  4910 net.cpp:228] relu5 does not need backward computation.
I0419 16:42:23.462651  4910 net.cpp:228] conv5 does not need backward computation.
I0419 16:42:23.462656  4910 net.cpp:228] relu4 does not need backward computation.
I0419 16:42:23.462661  4910 net.cpp:228] conv4 does not need backward computation.
I0419 16:42:23.462666  4910 net.cpp:228] relu3 does not need backward computation.
I0419 16:42:23.462671  4910 net.cpp:228] conv3 does not need backward computation.
I0419 16:42:23.462676  4910 net.cpp:228] pool2 does not need backward computation.
I0419 16:42:23.462680  4910 net.cpp:228] norm2 does not need backward computation.
I0419 16:42:23.462685  4910 net.cpp:228] relu2 does not need backward computation.
I0419 16:42:23.462692  4910 net.cpp:228] conv2 does not need backward computation.
I0419 16:42:23.462697  4910 net.cpp:228] pool1 does not need backward computation.
I0419 16:42:23.462702  4910 net.cpp:228] norm1 does not need backward computation.
I0419 16:42:23.462707  4910 net.cpp:228] relu1 does not need backward computation.
I0419 16:42:23.462713  4910 net.cpp:228] conv1 does not need backward computation.
I0419 16:42:23.462718  4910 net.cpp:270] This network produces output bbox_pred
I0419 16:42:23.462723  4910 net.cpp:270] This network produces output cls_prob
I0419 16:42:23.462760  4910 net.cpp:283] Network initialization done.
I0419 16:42:23.901868  4910 net.cpp:816] Ignoring source layer data
I0419 16:42:23.949491  4910 net.cpp:816] Ignoring source layer loss_cls
I0419 16:42:23.949520  4910 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:42:23.950034  4910 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:42:23.950047  4910 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
im_detect: 1/50 0.142s 0.001s
im_detect: 2/50 0.120s 0.001s
im_detect: 3/50 0.112s 0.001s
im_detect: 4/50 0.108s 0.001s
im_detect: 5/50 0.106s 0.001s
im_detect: 6/50 0.104s 0.001s
im_detect: 7/50 0.103s 0.001s
im_detect: 8/50 0.102s 0.001s
im_detect: 9/50 0.101s 0.001s
im_detect: 10/50 0.101s 0.001s
im_detect: 11/50 0.100s 0.001s
im_detect: 12/50 0.100s 0.001s
im_detect: 13/50 0.100s 0.001s
im_detect: 14/50 0.100s 0.001s
im_detect: 15/50 0.100s 0.001s
im_detect: 16/50 0.100s 0.001s
im_detect: 17/50 0.100s 0.001s
im_detect: 18/50 0.100s 0.001s
im_detect: 19/50 0.100s 0.001s
im_detect: 20/50 0.100s 0.001s
im_detect: 21/50 0.100s 0.001s
im_detect: 22/50 0.100s 0.001s
im_detect: 23/50 0.100s 0.001s
im_detect: 24/50 0.100s 0.001s
im_detect: 25/50 0.100s 0.001s
im_detect: 26/50 0.100s 0.001s
im_detect: 27/50 0.100s 0.001s
im_detect: 28/50 0.100s 0.001s
im_detect: 29/50 0.100s 0.001s
im_detect: 30/50 0.100s 0.001s
im_detect: 31/50 0.100s 0.001s
im_detect: 32/50 0.100s 0.001s
im_detect: 33/50 0.100s 0.001s
im_detect: 34/50 0.100s 0.001s
im_detect: 35/50 0.100s 0.001s
im_detect: 36/50 0.100s 0.001s
im_detect: 37/50 0.101s 0.001s
im_detect: 38/50 0.101s 0.001s
im_detect: 39/50 0.101s 0.001s
im_detect: 40/50 0.101s 0.001s
im_detect: 41/50 0.101s 0.001s
im_detect: 42/50 0.101s 0.001s
im_detect: 43/50 0.101s 0.001s
im_detect: 44/50 0.101s 0.001s
im_detect: 45/50 0.101s 0.001s
im_detect: 46/50 0.101s 0.001s
im_detect: 47/50 0.101s 0.001s
im_detect: 48/50 0.101s 0.001s
im_detect: 49/50 0.101s 0.001s
im_detect: 50/50 0.101s 0.001s
Evaluating detections
Writing speedlimit-20 VOC results file
Writing speedlimit-30 VOC results file
Writing speedlimit-50 VOC results file
Writing speedlimit-60 VOC results file
Writing speedlimit-70 VOC results file
Writing speedlimit-80 VOC results file
Writing restrict-end-80 VOC results file
Writing speedlimit-100 VOC results file
Writing speedlimit-120 VOC results file
Writing no-overtake VOC results file
Writing no-overtake-truck VOC results file
Writing priority-next-intersect VOC results file
Writing priority-road VOC results file
Writing giveaway VOC results file
Writing stop VOC results file
Writing no-traffic-bothways VOC results file
Writing no-truck VOC results file
Writing no-entry VOC results file
Writing danger VOC results file
Writing bend-left VOC results file
Writing bend-right VOC results file
Writing bend VOC results file
Writing uneven-road VOC results file
Writing slippery-road VOC results file
Writing road-narrow VOC results file
Writing construction VOC results file
Writing traffic-signal VOC results file
Writing pedestrian-crossing VOC results file
Writing school-crossing VOC results file
Writing cycle-crossing VOC results file
Writing snow VOC results file
Writing animals VOC results file
Writing restriction-ends VOC results file
Writing go-right VOC results file
Writing go-left VOC results file
Writing go-straight VOC results file
Writing go-right-straight VOC results file
Writing go-left-straight VOC results file
Writing keep-right VOC results file
Writing keep-left VOC results file
Writing roundabout VOC results file
Writing restrict-ends-overtaking VOC results file
Writing restrict-ends-overtaking-truck VOC results file
VOC07 metric? Yes
Traceback (most recent call last):
  File "./tools/test_net.py", line 90, in <module>
    test_net(net, imdb, max_per_image=args.max_per_image, vis=args.vis)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/test.py", line 295, in test_net
    imdb.evaluate_detections(all_boxes, output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 326, in evaluate_detections
    self._do_python_eval(output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 289, in _do_python_eval
    use_07_metric=use_07_metric)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/voc_eval.py", line 109, in voc_eval
    recs[imagename] = parse_rec(annopath.format(imagename))
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/voc_eval.py", line 23, in parse_rec
    obj_struct['bbox'] = [int(bbox.find('xmin').text),
ValueError: invalid literal for int() with base 10: '1112.0'
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-44-41
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-44-41
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-44-41
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-19_16-44-41
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:44:42.330552  4968 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:44:42.330610  4968 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0419 16:44:42.331358  4968 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:44:42.331540  4968 layer_factory.hpp:77] Creating layer input-data
I0419 16:44:42.332093  4968 net.cpp:106] Creating Layer input-data
I0419 16:44:42.332116  4968 net.cpp:411] input-data -> data
I0419 16:44:42.332137  4968 net.cpp:411] input-data -> im_info
I0419 16:44:42.332154  4968 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:44:42.440801  4968 net.cpp:150] Setting up input-data
I0419 16:44:42.440824  4968 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:44:42.440834  4968 net.cpp:157] Top shape: 1 3 (3)
I0419 16:44:42.440840  4968 net.cpp:157] Top shape: 1 4 (4)
I0419 16:44:42.440843  4968 net.cpp:165] Memory required for data: 7200028
I0419 16:44:42.440850  4968 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:44:42.440862  4968 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:44:42.440873  4968 net.cpp:454] data_input-data_0_split <- data
I0419 16:44:42.440886  4968 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:44:42.440901  4968 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:44:42.440944  4968 net.cpp:150] Setting up data_input-data_0_split
I0419 16:44:42.440958  4968 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:44:42.440963  4968 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:44:42.440968  4968 net.cpp:165] Memory required for data: 21600028
I0419 16:44:42.440974  4968 layer_factory.hpp:77] Creating layer conv1
I0419 16:44:42.440991  4968 net.cpp:106] Creating Layer conv1
I0419 16:44:42.440999  4968 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:44:42.441007  4968 net.cpp:411] conv1 -> conv1
I0419 16:44:42.442347  4968 net.cpp:150] Setting up conv1
I0419 16:44:42.442364  4968 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:44:42.442369  4968 net.cpp:165] Memory required for data: 79200028
I0419 16:44:42.442389  4968 layer_factory.hpp:77] Creating layer relu1
I0419 16:44:42.442409  4968 net.cpp:106] Creating Layer relu1
I0419 16:44:42.442415  4968 net.cpp:454] relu1 <- conv1
I0419 16:44:42.442422  4968 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:44:42.442440  4968 net.cpp:150] Setting up relu1
I0419 16:44:42.442448  4968 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:44:42.442453  4968 net.cpp:165] Memory required for data: 136800028
I0419 16:44:42.442459  4968 layer_factory.hpp:77] Creating layer norm1
I0419 16:44:42.442471  4968 net.cpp:106] Creating Layer norm1
I0419 16:44:42.442481  4968 net.cpp:454] norm1 <- conv1
I0419 16:44:42.442487  4968 net.cpp:411] norm1 -> norm1
I0419 16:44:42.442605  4968 net.cpp:150] Setting up norm1
I0419 16:44:42.442616  4968 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:44:42.442621  4968 net.cpp:165] Memory required for data: 194400028
I0419 16:44:42.442625  4968 layer_factory.hpp:77] Creating layer pool1
I0419 16:44:42.442633  4968 net.cpp:106] Creating Layer pool1
I0419 16:44:42.442639  4968 net.cpp:454] pool1 <- norm1
I0419 16:44:42.442648  4968 net.cpp:411] pool1 -> pool1
I0419 16:44:42.442693  4968 net.cpp:150] Setting up pool1
I0419 16:44:42.442708  4968 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:44:42.442711  4968 net.cpp:165] Memory required for data: 208954012
I0419 16:44:42.442715  4968 layer_factory.hpp:77] Creating layer conv2
I0419 16:44:42.442725  4968 net.cpp:106] Creating Layer conv2
I0419 16:44:42.442734  4968 net.cpp:454] conv2 <- pool1
I0419 16:44:42.442744  4968 net.cpp:411] conv2 -> conv2
I0419 16:44:42.444406  4968 net.cpp:150] Setting up conv2
I0419 16:44:42.444425  4968 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:44:42.444430  4968 net.cpp:165] Memory required for data: 218759836
I0419 16:44:42.444442  4968 layer_factory.hpp:77] Creating layer relu2
I0419 16:44:42.444454  4968 net.cpp:106] Creating Layer relu2
I0419 16:44:42.444461  4968 net.cpp:454] relu2 <- conv2
I0419 16:44:42.444468  4968 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:44:42.444483  4968 net.cpp:150] Setting up relu2
I0419 16:44:42.444489  4968 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:44:42.444494  4968 net.cpp:165] Memory required for data: 228565660
I0419 16:44:42.444499  4968 layer_factory.hpp:77] Creating layer norm2
I0419 16:44:42.444514  4968 net.cpp:106] Creating Layer norm2
I0419 16:44:42.444522  4968 net.cpp:454] norm2 <- conv2
I0419 16:44:42.444530  4968 net.cpp:411] norm2 -> norm2
I0419 16:44:42.444622  4968 net.cpp:150] Setting up norm2
I0419 16:44:42.444633  4968 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:44:42.444638  4968 net.cpp:165] Memory required for data: 238371484
I0419 16:44:42.444641  4968 layer_factory.hpp:77] Creating layer pool2
I0419 16:44:42.444651  4968 net.cpp:106] Creating Layer pool2
I0419 16:44:42.444656  4968 net.cpp:454] pool2 <- norm2
I0419 16:44:42.444664  4968 net.cpp:411] pool2 -> pool2
I0419 16:44:42.444702  4968 net.cpp:150] Setting up pool2
I0419 16:44:42.444713  4968 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:44:42.444717  4968 net.cpp:165] Memory required for data: 240927388
I0419 16:44:42.444722  4968 layer_factory.hpp:77] Creating layer conv3
I0419 16:44:42.444731  4968 net.cpp:106] Creating Layer conv3
I0419 16:44:42.444741  4968 net.cpp:454] conv3 <- pool2
I0419 16:44:42.444748  4968 net.cpp:411] conv3 -> conv3
I0419 16:44:42.447994  4968 net.cpp:150] Setting up conv3
I0419 16:44:42.448014  4968 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:44:42.448019  4968 net.cpp:165] Memory required for data: 244761244
I0419 16:44:42.448030  4968 layer_factory.hpp:77] Creating layer relu3
I0419 16:44:42.448042  4968 net.cpp:106] Creating Layer relu3
I0419 16:44:42.448047  4968 net.cpp:454] relu3 <- conv3
I0419 16:44:42.448055  4968 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:44:42.448068  4968 net.cpp:150] Setting up relu3
I0419 16:44:42.448076  4968 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:44:42.448081  4968 net.cpp:165] Memory required for data: 248595100
I0419 16:44:42.448086  4968 layer_factory.hpp:77] Creating layer conv4
I0419 16:44:42.448098  4968 net.cpp:106] Creating Layer conv4
I0419 16:44:42.448107  4968 net.cpp:454] conv4 <- conv3
I0419 16:44:42.448117  4968 net.cpp:411] conv4 -> conv4
I0419 16:44:42.451376  4968 net.cpp:150] Setting up conv4
I0419 16:44:42.451397  4968 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:44:42.451402  4968 net.cpp:165] Memory required for data: 252428956
I0419 16:44:42.451411  4968 layer_factory.hpp:77] Creating layer relu4
I0419 16:44:42.451427  4968 net.cpp:106] Creating Layer relu4
I0419 16:44:42.451432  4968 net.cpp:454] relu4 <- conv4
I0419 16:44:42.451443  4968 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:44:42.451452  4968 net.cpp:150] Setting up relu4
I0419 16:44:42.451459  4968 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:44:42.451465  4968 net.cpp:165] Memory required for data: 256262812
I0419 16:44:42.451469  4968 layer_factory.hpp:77] Creating layer conv5
I0419 16:44:42.451483  4968 net.cpp:106] Creating Layer conv5
I0419 16:44:42.451491  4968 net.cpp:454] conv5 <- conv4
I0419 16:44:42.451501  4968 net.cpp:411] conv5 -> conv5
I0419 16:44:42.453768  4968 net.cpp:150] Setting up conv5
I0419 16:44:42.453786  4968 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:44:42.453791  4968 net.cpp:165] Memory required for data: 258818716
I0419 16:44:42.453806  4968 layer_factory.hpp:77] Creating layer relu5
I0419 16:44:42.453816  4968 net.cpp:106] Creating Layer relu5
I0419 16:44:42.453821  4968 net.cpp:454] relu5 <- conv5
I0419 16:44:42.453829  4968 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:44:42.453842  4968 net.cpp:150] Setting up relu5
I0419 16:44:42.453850  4968 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:44:42.453855  4968 net.cpp:165] Memory required for data: 261374620
I0419 16:44:42.453860  4968 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:44:42.453878  4968 net.cpp:106] Creating Layer rpn_conv1
I0419 16:44:42.453887  4968 net.cpp:454] rpn_conv1 <- conv5
I0419 16:44:42.453898  4968 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:44:42.470947  4968 net.cpp:150] Setting up rpn_conv1
I0419 16:44:42.470966  4968 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:44:42.470971  4968 net.cpp:165] Memory required for data: 263930524
I0419 16:44:42.470980  4968 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:44:42.470989  4968 net.cpp:106] Creating Layer rpn_relu1
I0419 16:44:42.470998  4968 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:44:42.471007  4968 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:44:42.471017  4968 net.cpp:150] Setting up rpn_relu1
I0419 16:44:42.471024  4968 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:44:42.471029  4968 net.cpp:165] Memory required for data: 266486428
I0419 16:44:42.471034  4968 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:44:42.471040  4968 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:44:42.471046  4968 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:44:42.471052  4968 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:44:42.471063  4968 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:44:42.471107  4968 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:44:42.471118  4968 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:44:42.471125  4968 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:44:42.471129  4968 net.cpp:165] Memory required for data: 271598236
I0419 16:44:42.471138  4968 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:44:42.471155  4968 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:44:42.471163  4968 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:44:42.471173  4968 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:44:42.471499  4968 net.cpp:150] Setting up rpn_cls_score
I0419 16:44:42.471513  4968 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:44:42.471518  4968 net.cpp:165] Memory required for data: 271777948
I0419 16:44:42.471525  4968 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:44:42.471539  4968 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:44:42.471545  4968 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:44:42.471552  4968 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:44:42.471562  4968 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:44:42.471601  4968 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:44:42.471612  4968 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:44:42.471618  4968 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:44:42.471622  4968 net.cpp:165] Memory required for data: 272137372
I0419 16:44:42.471626  4968 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:44:42.471640  4968 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:44:42.471650  4968 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:44:42.471662  4968 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:44:42.472108  4968 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:44:42.472122  4968 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:44:42.472126  4968 net.cpp:165] Memory required for data: 272496796
I0419 16:44:42.472136  4968 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:44:42.472146  4968 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:44:42.472152  4968 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:44:42.472162  4968 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:44:42.472203  4968 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:44:42.472214  4968 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:44:42.472219  4968 net.cpp:165] Memory required for data: 272676508
I0419 16:44:42.472223  4968 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:44:42.472672  4968 net.cpp:106] Creating Layer rpn-data
I0419 16:44:42.472690  4968 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:44:42.472698  4968 net.cpp:454] rpn-data <- gt_boxes
I0419 16:44:42.472704  4968 net.cpp:454] rpn-data <- im_info
I0419 16:44:42.472710  4968 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:44:42.472720  4968 net.cpp:411] rpn-data -> rpn_labels
I0419 16:44:42.472731  4968 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:44:42.472745  4968 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:44:42.472754  4968 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:44:42.473994  4968 net.cpp:150] Setting up rpn-data
I0419 16:44:42.474017  4968 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:44:42.474025  4968 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:44:42.474030  4968 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:44:42.474035  4968 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:44:42.474042  4968 net.cpp:165] Memory required for data: 273844636
I0419 16:44:42.474048  4968 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:44:42.474062  4968 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:44:42.474072  4968 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:44:42.474079  4968 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:44:42.474089  4968 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:44:42.474107  4968 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:44:42.474223  4968 net.cpp:150] Setting up rpn_loss_cls
I0419 16:44:42.474236  4968 net.cpp:157] Top shape: (1)
I0419 16:44:42.474241  4968 net.cpp:160]     with loss weight 1
I0419 16:44:42.474261  4968 net.cpp:165] Memory required for data: 273844640
I0419 16:44:42.474267  4968 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:44:42.474277  4968 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:44:42.474287  4968 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:44:42.474294  4968 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:44:42.474299  4968 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:44:42.474304  4968 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:44:42.474315  4968 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:44:42.474905  4968 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:44:42.474918  4968 net.cpp:157] Top shape: (1)
I0419 16:44:42.474923  4968 net.cpp:160]     with loss weight 1
I0419 16:44:42.474931  4968 net.cpp:165] Memory required for data: 273844644
I0419 16:44:42.474937  4968 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:44:42.474952  4968 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:44:42.474962  4968 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:44:42.475003  4968 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:44:42.475014  4968 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:44:42.475018  4968 net.cpp:165] Memory required for data: 273881508
I0419 16:44:42.475023  4968 layer_factory.hpp:77] Creating layer fc6
I0419 16:44:42.475033  4968 net.cpp:106] Creating Layer fc6
I0419 16:44:42.475042  4968 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:44:42.475050  4968 net.cpp:411] fc6 -> fc6
I0419 16:44:42.572578  4968 net.cpp:150] Setting up fc6
I0419 16:44:42.572623  4968 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:44:42.572628  4968 net.cpp:165] Memory required for data: 273897892
I0419 16:44:42.572650  4968 layer_factory.hpp:77] Creating layer relu6
I0419 16:44:42.572664  4968 net.cpp:106] Creating Layer relu6
I0419 16:44:42.572675  4968 net.cpp:454] relu6 <- fc6
I0419 16:44:42.572685  4968 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:44:42.572697  4968 net.cpp:150] Setting up relu6
I0419 16:44:42.572705  4968 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:44:42.572710  4968 net.cpp:165] Memory required for data: 273914276
I0419 16:44:42.572718  4968 layer_factory.hpp:77] Creating layer fc7
I0419 16:44:42.572728  4968 net.cpp:106] Creating Layer fc7
I0419 16:44:42.572738  4968 net.cpp:454] fc7 <- fc6
I0419 16:44:42.572751  4968 net.cpp:411] fc7 -> fc7
I0419 16:44:42.616427  4968 net.cpp:150] Setting up fc7
I0419 16:44:42.616469  4968 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:44:42.616474  4968 net.cpp:165] Memory required for data: 273930660
I0419 16:44:42.616487  4968 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:44:42.616506  4968 net.cpp:106] Creating Layer silence_fc7
I0419 16:44:42.616524  4968 net.cpp:454] silence_fc7 <- fc7
I0419 16:44:42.616535  4968 net.cpp:150] Setting up silence_fc7
I0419 16:44:42.616545  4968 net.cpp:165] Memory required for data: 273930660
I0419 16:44:42.616550  4968 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:44:42.616555  4968 net.cpp:228] fc7 does not need backward computation.
I0419 16:44:42.616559  4968 net.cpp:228] relu6 does not need backward computation.
I0419 16:44:42.616564  4968 net.cpp:228] fc6 does not need backward computation.
I0419 16:44:42.616567  4968 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:44:42.616571  4968 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:44:42.616577  4968 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:44:42.616583  4968 net.cpp:226] rpn-data needs backward computation.
I0419 16:44:42.616598  4968 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:44:42.616607  4968 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:44:42.616612  4968 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:44:42.616619  4968 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:44:42.616624  4968 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:44:42.616632  4968 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:44:42.616637  4968 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:44:42.616643  4968 net.cpp:226] relu5 needs backward computation.
I0419 16:44:42.616648  4968 net.cpp:226] conv5 needs backward computation.
I0419 16:44:42.616654  4968 net.cpp:226] relu4 needs backward computation.
I0419 16:44:42.616658  4968 net.cpp:226] conv4 needs backward computation.
I0419 16:44:42.616665  4968 net.cpp:226] relu3 needs backward computation.
I0419 16:44:42.616670  4968 net.cpp:226] conv3 needs backward computation.
I0419 16:44:42.616674  4968 net.cpp:226] pool2 needs backward computation.
I0419 16:44:42.616680  4968 net.cpp:226] norm2 needs backward computation.
I0419 16:44:42.616685  4968 net.cpp:226] relu2 needs backward computation.
I0419 16:44:42.616691  4968 net.cpp:226] conv2 needs backward computation.
I0419 16:44:42.616696  4968 net.cpp:226] pool1 needs backward computation.
I0419 16:44:42.616701  4968 net.cpp:226] norm1 needs backward computation.
I0419 16:44:42.616706  4968 net.cpp:226] relu1 needs backward computation.
I0419 16:44:42.616711  4968 net.cpp:226] conv1 needs backward computation.
I0419 16:44:42.616716  4968 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:44:42.616722  4968 net.cpp:228] input-data does not need backward computation.
I0419 16:44:42.616727  4968 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:44:42.616732  4968 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:44:42.616770  4968 net.cpp:283] Network initialization done.
I0419 16:44:42.616884  4968 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:44:43.068670  4968 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:44:43.068701  4968 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:44:43.098997  4968 net.cpp:816] Ignoring source layer drop6
I0419 16:44:43.112362  4968 net.cpp:816] Ignoring source layer relu7
I0419 16:44:43.112387  4968 net.cpp:816] Ignoring source layer drop7
I0419 16:44:43.112391  4968 net.cpp:816] Ignoring source layer fc8
I0419 16:44:43.112396  4968 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:44:43.424590  4968 solver.cpp:229] Iteration 0, loss = 1.1537
I0419 16:44:43.424636  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.629068 (* 1 = 0.629068 loss)
I0419 16:44:43.424649  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.524635 (* 1 = 0.524635 loss)
I0419 16:44:43.424664  4968 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:44:50.284595  4968 solver.cpp:229] Iteration 20, loss = 0.680041
I0419 16:44:50.284646  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.241951 (* 1 = 0.241951 loss)
I0419 16:44:50.284657  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.43809 (* 1 = 0.43809 loss)
I0419 16:44:50.284664  4968 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:44:57.148914  4968 solver.cpp:229] Iteration 40, loss = 0.323879
I0419 16:44:57.148970  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.158327 (* 1 = 0.158327 loss)
I0419 16:44:57.148980  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165553 (* 1 = 0.165553 loss)
I0419 16:44:57.148990  4968 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:45:03.795989  4968 solver.cpp:229] Iteration 60, loss = 0.921064
I0419 16:45:03.796036  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.453819 (* 1 = 0.453819 loss)
I0419 16:45:03.796046  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.467245 (* 1 = 0.467245 loss)
I0419 16:45:03.796056  4968 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:45:06.738397  4968 solver.cpp:229] Iteration 80, loss = 0.758293
I0419 16:45:06.738448  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.347361 (* 1 = 0.347361 loss)
I0419 16:45:06.738458  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.410933 (* 1 = 0.410933 loss)
I0419 16:45:06.738466  4968 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:45:09.661167  4968 solver.cpp:229] Iteration 100, loss = 0.2963
I0419 16:45:09.661218  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.207858 (* 1 = 0.207858 loss)
I0419 16:45:09.661229  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0884421 (* 1 = 0.0884421 loss)
I0419 16:45:09.661237  4968 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:45:12.582581  4968 solver.cpp:229] Iteration 120, loss = 0.841491
I0419 16:45:12.582628  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.410428 (* 1 = 0.410428 loss)
I0419 16:45:12.582638  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.431063 (* 1 = 0.431063 loss)
I0419 16:45:12.582646  4968 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:45:15.499191  4968 solver.cpp:229] Iteration 140, loss = 0.248715
I0419 16:45:15.499238  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.0911388 (* 1 = 0.0911388 loss)
I0419 16:45:15.499248  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.157576 (* 1 = 0.157576 loss)
I0419 16:45:15.499256  4968 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:45:18.417197  4968 solver.cpp:229] Iteration 160, loss = 0.421438
I0419 16:45:18.417248  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.210032 (* 1 = 0.210032 loss)
I0419 16:45:18.417258  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.211406 (* 1 = 0.211406 loss)
I0419 16:45:18.417265  4968 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:45:21.339555  4968 solver.cpp:229] Iteration 180, loss = 0.32323
I0419 16:45:21.339598  4968 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.199955 (* 1 = 0.199955 loss)
I0419 16:45:21.339609  4968 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.123274 (* 1 = 0.123274 loss)
I0419 16:45:21.339617  4968 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.205s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:45:27.997819  5015 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:45:27.997977  5015 net.cpp:413] Input 0 -> data
I0419 16:45:28.013367  5015 net.cpp:413] Input 1 -> im_info
I0419 16:45:28.013417  5015 layer_factory.hpp:77] Creating layer conv1
I0419 16:45:28.013447  5015 net.cpp:106] Creating Layer conv1
I0419 16:45:28.013460  5015 net.cpp:454] conv1 <- data
I0419 16:45:28.013478  5015 net.cpp:411] conv1 -> conv1
I0419 16:45:28.014240  5015 net.cpp:150] Setting up conv1
I0419 16:45:28.014262  5015 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:45:28.014266  5015 net.cpp:165] Memory required for data: 4816896
I0419 16:45:28.014279  5015 layer_factory.hpp:77] Creating layer relu1
I0419 16:45:28.014292  5015 net.cpp:106] Creating Layer relu1
I0419 16:45:28.014303  5015 net.cpp:454] relu1 <- conv1
I0419 16:45:28.014313  5015 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:45:28.014338  5015 net.cpp:150] Setting up relu1
I0419 16:45:28.014354  5015 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:45:28.014359  5015 net.cpp:165] Memory required for data: 9633792
I0419 16:45:28.014364  5015 layer_factory.hpp:77] Creating layer norm1
I0419 16:45:28.014374  5015 net.cpp:106] Creating Layer norm1
I0419 16:45:28.014376  5015 net.cpp:454] norm1 <- conv1
I0419 16:45:28.014384  5015 net.cpp:411] norm1 -> norm1
I0419 16:45:28.014508  5015 net.cpp:150] Setting up norm1
I0419 16:45:28.014520  5015 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:45:28.014523  5015 net.cpp:165] Memory required for data: 14450688
I0419 16:45:28.014526  5015 layer_factory.hpp:77] Creating layer pool1
I0419 16:45:28.014534  5015 net.cpp:106] Creating Layer pool1
I0419 16:45:28.014539  5015 net.cpp:454] pool1 <- norm1
I0419 16:45:28.014544  5015 net.cpp:411] pool1 -> pool1
I0419 16:45:28.014592  5015 net.cpp:150] Setting up pool1
I0419 16:45:28.014605  5015 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:45:28.014608  5015 net.cpp:165] Memory required for data: 15698304
I0419 16:45:28.014611  5015 layer_factory.hpp:77] Creating layer conv2
I0419 16:45:28.014618  5015 net.cpp:106] Creating Layer conv2
I0419 16:45:28.014623  5015 net.cpp:454] conv2 <- pool1
I0419 16:45:28.014627  5015 net.cpp:411] conv2 -> conv2
I0419 16:45:28.016803  5015 net.cpp:150] Setting up conv2
I0419 16:45:28.016820  5015 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:45:28.016824  5015 net.cpp:165] Memory required for data: 16559488
I0419 16:45:28.016832  5015 layer_factory.hpp:77] Creating layer relu2
I0419 16:45:28.016841  5015 net.cpp:106] Creating Layer relu2
I0419 16:45:28.016844  5015 net.cpp:454] relu2 <- conv2
I0419 16:45:28.016851  5015 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:45:28.016861  5015 net.cpp:150] Setting up relu2
I0419 16:45:28.016868  5015 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:45:28.016872  5015 net.cpp:165] Memory required for data: 17420672
I0419 16:45:28.016881  5015 layer_factory.hpp:77] Creating layer norm2
I0419 16:45:28.016888  5015 net.cpp:106] Creating Layer norm2
I0419 16:45:28.016894  5015 net.cpp:454] norm2 <- conv2
I0419 16:45:28.016904  5015 net.cpp:411] norm2 -> norm2
I0419 16:45:28.017014  5015 net.cpp:150] Setting up norm2
I0419 16:45:28.017027  5015 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:45:28.017030  5015 net.cpp:165] Memory required for data: 18281856
I0419 16:45:28.017032  5015 layer_factory.hpp:77] Creating layer pool2
I0419 16:45:28.017037  5015 net.cpp:106] Creating Layer pool2
I0419 16:45:28.017040  5015 net.cpp:454] pool2 <- norm2
I0419 16:45:28.017046  5015 net.cpp:411] pool2 -> pool2
I0419 16:45:28.017087  5015 net.cpp:150] Setting up pool2
I0419 16:45:28.017103  5015 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:45:28.017107  5015 net.cpp:165] Memory required for data: 18512256
I0419 16:45:28.017109  5015 layer_factory.hpp:77] Creating layer conv3
I0419 16:45:28.017119  5015 net.cpp:106] Creating Layer conv3
I0419 16:45:28.017123  5015 net.cpp:454] conv3 <- pool2
I0419 16:45:28.017129  5015 net.cpp:411] conv3 -> conv3
I0419 16:45:28.019425  5015 net.cpp:150] Setting up conv3
I0419 16:45:28.019443  5015 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:45:28.019446  5015 net.cpp:165] Memory required for data: 18857856
I0419 16:45:28.019454  5015 layer_factory.hpp:77] Creating layer relu3
I0419 16:45:28.019460  5015 net.cpp:106] Creating Layer relu3
I0419 16:45:28.019464  5015 net.cpp:454] relu3 <- conv3
I0419 16:45:28.019472  5015 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:45:28.019480  5015 net.cpp:150] Setting up relu3
I0419 16:45:28.019489  5015 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:45:28.019492  5015 net.cpp:165] Memory required for data: 19203456
I0419 16:45:28.019500  5015 layer_factory.hpp:77] Creating layer conv4
I0419 16:45:28.019510  5015 net.cpp:106] Creating Layer conv4
I0419 16:45:28.019515  5015 net.cpp:454] conv4 <- conv3
I0419 16:45:28.019526  5015 net.cpp:411] conv4 -> conv4
I0419 16:45:28.022821  5015 net.cpp:150] Setting up conv4
I0419 16:45:28.022838  5015 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:45:28.022841  5015 net.cpp:165] Memory required for data: 19549056
I0419 16:45:28.022847  5015 layer_factory.hpp:77] Creating layer relu4
I0419 16:45:28.022853  5015 net.cpp:106] Creating Layer relu4
I0419 16:45:28.022856  5015 net.cpp:454] relu4 <- conv4
I0419 16:45:28.022862  5015 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:45:28.022874  5015 net.cpp:150] Setting up relu4
I0419 16:45:28.022881  5015 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:45:28.022888  5015 net.cpp:165] Memory required for data: 19894656
I0419 16:45:28.022892  5015 layer_factory.hpp:77] Creating layer conv5
I0419 16:45:28.022903  5015 net.cpp:106] Creating Layer conv5
I0419 16:45:28.022915  5015 net.cpp:454] conv5 <- conv4
I0419 16:45:28.022923  5015 net.cpp:411] conv5 -> conv5
I0419 16:45:28.025213  5015 net.cpp:150] Setting up conv5
I0419 16:45:28.025230  5015 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:45:28.025233  5015 net.cpp:165] Memory required for data: 20125056
I0419 16:45:28.025243  5015 layer_factory.hpp:77] Creating layer relu5
I0419 16:45:28.025252  5015 net.cpp:106] Creating Layer relu5
I0419 16:45:28.025256  5015 net.cpp:454] relu5 <- conv5
I0419 16:45:28.025267  5015 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:45:28.025279  5015 net.cpp:150] Setting up relu5
I0419 16:45:28.025288  5015 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:45:28.025292  5015 net.cpp:165] Memory required for data: 20355456
I0419 16:45:28.025297  5015 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:45:28.025310  5015 net.cpp:106] Creating Layer rpn_conv1
I0419 16:45:28.025322  5015 net.cpp:454] rpn_conv1 <- conv5
I0419 16:45:28.025331  5015 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:45:28.026962  5015 net.cpp:150] Setting up rpn_conv1
I0419 16:45:28.026978  5015 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:45:28.026981  5015 net.cpp:165] Memory required for data: 20585856
I0419 16:45:28.026988  5015 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:45:28.026994  5015 net.cpp:106] Creating Layer rpn_relu1
I0419 16:45:28.027000  5015 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:45:28.027006  5015 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:45:28.027014  5015 net.cpp:150] Setting up rpn_relu1
I0419 16:45:28.027020  5015 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:45:28.027024  5015 net.cpp:165] Memory required for data: 20816256
I0419 16:45:28.027029  5015 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:45:28.027043  5015 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:45:28.027048  5015 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:45:28.027060  5015 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:45:28.027068  5015 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:45:28.027115  5015 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:45:28.027132  5015 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:45:28.027135  5015 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:45:28.027138  5015 net.cpp:165] Memory required for data: 21277056
I0419 16:45:28.027142  5015 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:45:28.027151  5015 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:45:28.027160  5015 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:45:28.027168  5015 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:45:28.027361  5015 net.cpp:150] Setting up rpn_cls_score
I0419 16:45:28.027374  5015 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:45:28.027376  5015 net.cpp:165] Memory required for data: 21293256
I0419 16:45:28.027382  5015 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:45:28.027390  5015 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:45:28.027395  5015 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:45:28.027398  5015 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:45:28.027596  5015 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:45:28.027609  5015 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:45:28.027611  5015 net.cpp:165] Memory required for data: 21325656
I0419 16:45:28.027617  5015 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:45:28.027626  5015 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:45:28.027628  5015 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:45:28.027633  5015 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:45:28.027674  5015 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:45:28.027689  5015 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:45:28.027693  5015 net.cpp:165] Memory required for data: 21341856
I0419 16:45:28.027695  5015 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:45:28.027700  5015 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:45:28.027704  5015 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:45:28.027712  5015 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:45:28.027788  5015 net.cpp:150] Setting up rpn_cls_prob
I0419 16:45:28.027801  5015 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:45:28.027803  5015 net.cpp:165] Memory required for data: 21358056
I0419 16:45:28.027806  5015 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:45:28.027812  5015 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:45:28.027815  5015 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:45:28.027820  5015 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:45:28.027851  5015 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:45:28.027868  5015 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:45:28.027873  5015 net.cpp:165] Memory required for data: 21374256
I0419 16:45:28.027876  5015 layer_factory.hpp:77] Creating layer proposal
I0419 16:45:28.029736  5015 net.cpp:106] Creating Layer proposal
I0419 16:45:28.029755  5015 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:45:28.029760  5015 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:45:28.029764  5015 net.cpp:454] proposal <- im_info
I0419 16:45:28.029770  5015 net.cpp:411] proposal -> rois
I0419 16:45:28.029778  5015 net.cpp:411] proposal -> scores
I0419 16:45:28.031126  5015 net.cpp:150] Setting up proposal
I0419 16:45:28.031148  5015 net.cpp:157] Top shape: 1 5 (5)
I0419 16:45:28.031153  5015 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:45:28.031157  5015 net.cpp:165] Memory required for data: 21374280
I0419 16:45:28.031159  5015 net.cpp:228] proposal does not need backward computation.
I0419 16:45:28.031163  5015 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:45:28.031167  5015 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:45:28.031169  5015 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:45:28.031173  5015 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:45:28.031177  5015 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:45:28.031185  5015 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:45:28.031190  5015 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:45:28.031194  5015 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:45:28.031201  5015 net.cpp:228] relu5 does not need backward computation.
I0419 16:45:28.031205  5015 net.cpp:228] conv5 does not need backward computation.
I0419 16:45:28.031209  5015 net.cpp:228] relu4 does not need backward computation.
I0419 16:45:28.031216  5015 net.cpp:228] conv4 does not need backward computation.
I0419 16:45:28.031220  5015 net.cpp:228] relu3 does not need backward computation.
I0419 16:45:28.031224  5015 net.cpp:228] conv3 does not need backward computation.
I0419 16:45:28.031231  5015 net.cpp:228] pool2 does not need backward computation.
I0419 16:45:28.031236  5015 net.cpp:228] norm2 does not need backward computation.
I0419 16:45:28.031242  5015 net.cpp:228] relu2 does not need backward computation.
I0419 16:45:28.031247  5015 net.cpp:228] conv2 does not need backward computation.
I0419 16:45:28.031255  5015 net.cpp:228] pool1 does not need backward computation.
I0419 16:45:28.031260  5015 net.cpp:228] norm1 does not need backward computation.
I0419 16:45:28.031265  5015 net.cpp:228] relu1 does not need backward computation.
I0419 16:45:28.031268  5015 net.cpp:228] conv1 does not need backward computation.
I0419 16:45:28.031272  5015 net.cpp:270] This network produces output rois
I0419 16:45:28.031278  5015 net.cpp:270] This network produces output scores
I0419 16:45:28.031306  5015 net.cpp:283] Network initialization done.
I0419 16:45:28.467141  5015 net.cpp:816] Ignoring source layer input-data
I0419 16:45:28.467180  5015 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:45:28.470765  5015 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:45:28.470793  5015 net.cpp:816] Ignoring source layer rpn-data
I0419 16:45:28.470798  5015 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:45:28.470801  5015 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:45:28.470805  5015 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:45:28.470809  5015 net.cpp:816] Ignoring source layer fc6
I0419 16:45:28.470813  5015 net.cpp:816] Ignoring source layer relu6
I0419 16:45:28.470816  5015 net.cpp:816] Ignoring source layer fc7
I0419 16:45:28.470820  5015 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.170s
im_proposals: 2/506 0.159s
im_proposals: 3/506 0.155s
im_proposals: 4/506 0.153s
im_proposals: 5/506 0.151s
im_proposals: 6/506 0.150s
im_proposals: 7/506 0.149s
im_proposals: 8/506 0.148s
im_proposals: 9/506 0.148s
im_proposals: 10/506 0.147s
im_proposals: 11/506 0.147s
im_proposals: 12/506 0.146s
im_proposals: 13/506 0.146s
im_proposals: 14/506 0.146s
im_proposals: 15/506 0.145s
im_proposals: 16/506 0.145s
im_proposals: 17/506 0.145s
im_proposals: 18/506 0.145s
im_proposals: 19/506 0.145s
im_proposals: 20/506 0.145s
im_proposals: 21/506 0.145s
im_proposals: 22/506 0.145s
im_proposals: 23/506 0.145s
im_proposals: 24/506 0.144s
im_proposals: 25/506 0.144s
im_proposals: 26/506 0.144s
im_proposals: 27/506 0.144s
im_proposals: 28/506 0.144s
im_proposals: 29/506 0.144s
im_proposals: 30/506 0.144s
im_proposals: 31/506 0.144s
im_proposals: 32/506 0.144s
im_proposals: 33/506 0.144s
im_proposals: 34/506 0.144s
im_proposals: 35/506 0.143s
im_proposals: 36/506 0.143s
im_proposals: 37/506 0.143s
im_proposals: 38/506 0.143s
im_proposals: 39/506 0.143s
im_proposals: 40/506 0.143s
im_proposals: 41/506 0.143s
im_proposals: 42/506 0.143s
im_proposals: 43/506 0.143s
im_proposals: 44/506 0.143s
im_proposals: 45/506 0.143s
im_proposals: 46/506 0.143s
im_proposals: 47/506 0.143s
im_proposals: 48/506 0.143s
im_proposals: 49/506 0.143s
im_proposals: 50/506 0.143s
im_proposals: 51/506 0.143s
im_proposals: 52/506 0.143s
im_proposals: 53/506 0.143s
im_proposals: 54/506 0.143s
im_proposals: 55/506 0.143s
im_proposals: 56/506 0.143s
im_proposals: 57/506 0.143s
im_proposals: 58/506 0.143s
im_proposals: 59/506 0.143s
im_proposals: 60/506 0.143s
im_proposals: 61/506 0.143s
im_proposals: 62/506 0.143s
im_proposals: 63/506 0.143s
im_proposals: 64/506 0.143s
im_proposals: 65/506 0.142s
im_proposals: 66/506 0.142s
im_proposals: 67/506 0.142s
im_proposals: 68/506 0.142s
im_proposals: 69/506 0.142s
im_proposals: 70/506 0.142s
im_proposals: 71/506 0.142s
im_proposals: 72/506 0.142s
im_proposals: 73/506 0.142s
im_proposals: 74/506 0.142s
im_proposals: 75/506 0.142s
im_proposals: 76/506 0.142s
im_proposals: 77/506 0.142s
im_proposals: 78/506 0.142s
im_proposals: 79/506 0.142s
im_proposals: 80/506 0.142s
im_proposals: 81/506 0.142s
im_proposals: 82/506 0.142s
im_proposals: 83/506 0.142s
im_proposals: 84/506 0.142s
im_proposals: 85/506 0.142s
im_proposals: 86/506 0.142s
im_proposals: 87/506 0.142s
im_proposals: 88/506 0.142s
im_proposals: 89/506 0.142s
im_proposals: 90/506 0.142s
im_proposals: 91/506 0.142s
im_proposals: 92/506 0.142s
im_proposals: 93/506 0.142s
im_proposals: 94/506 0.142s
im_proposals: 95/506 0.142s
im_proposals: 96/506 0.142s
im_proposals: 97/506 0.142s
im_proposals: 98/506 0.142s
im_proposals: 99/506 0.142s
im_proposals: 100/506 0.142s
im_proposals: 101/506 0.142s
im_proposals: 102/506 0.142s
im_proposals: 103/506 0.142s
im_proposals: 104/506 0.142s
im_proposals: 105/506 0.142s
im_proposals: 106/506 0.142s
im_proposals: 107/506 0.142s
im_proposals: 108/506 0.142s
im_proposals: 109/506 0.142s
im_proposals: 110/506 0.142s
im_proposals: 111/506 0.142s
im_proposals: 112/506 0.142s
im_proposals: 113/506 0.142s
im_proposals: 114/506 0.142s
im_proposals: 115/506 0.142s
im_proposals: 116/506 0.142s
im_proposals: 117/506 0.142s
im_proposals: 118/506 0.142s
im_proposals: 119/506 0.142s
im_proposals: 120/506 0.142s
im_proposals: 121/506 0.142s
im_proposals: 122/506 0.142s
im_proposals: 123/506 0.142s
im_proposals: 124/506 0.142s
im_proposals: 125/506 0.142s
im_proposals: 126/506 0.142s
im_proposals: 127/506 0.142s
im_proposals: 128/506 0.142s
im_proposals: 129/506 0.142s
im_proposals: 130/506 0.142s
im_proposals: 131/506 0.142s
im_proposals: 132/506 0.142s
im_proposals: 133/506 0.142s
im_proposals: 134/506 0.142s
im_proposals: 135/506 0.142s
im_proposals: 136/506 0.142s
im_proposals: 137/506 0.142s
im_proposals: 138/506 0.142s
im_proposals: 139/506 0.142s
im_proposals: 140/506 0.142s
im_proposals: 141/506 0.142s
im_proposals: 142/506 0.142s
im_proposals: 143/506 0.142s
im_proposals: 144/506 0.142s
im_proposals: 145/506 0.142s
im_proposals: 146/506 0.142s
im_proposals: 147/506 0.142s
im_proposals: 148/506 0.142s
im_proposals: 149/506 0.142s
im_proposals: 150/506 0.142s
im_proposals: 151/506 0.142s
im_proposals: 152/506 0.142s
im_proposals: 153/506 0.142s
im_proposals: 154/506 0.142s
im_proposals: 155/506 0.142s
im_proposals: 156/506 0.142s
im_proposals: 157/506 0.142s
im_proposals: 158/506 0.142s
im_proposals: 159/506 0.142s
im_proposals: 160/506 0.142s
im_proposals: 161/506 0.142s
im_proposals: 162/506 0.142s
im_proposals: 163/506 0.142s
im_proposals: 164/506 0.142s
im_proposals: 165/506 0.142s
im_proposals: 166/506 0.142s
im_proposals: 167/506 0.142s
im_proposals: 168/506 0.142s
im_proposals: 169/506 0.142s
im_proposals: 170/506 0.142s
im_proposals: 171/506 0.142s
im_proposals: 172/506 0.142s
im_proposals: 173/506 0.142s
im_proposals: 174/506 0.142s
im_proposals: 175/506 0.142s
im_proposals: 176/506 0.142s
im_proposals: 177/506 0.142s
im_proposals: 178/506 0.142s
im_proposals: 179/506 0.142s
im_proposals: 180/506 0.142s
im_proposals: 181/506 0.142s
im_proposals: 182/506 0.142s
im_proposals: 183/506 0.142s
im_proposals: 184/506 0.142s
im_proposals: 185/506 0.142s
im_proposals: 186/506 0.142s
im_proposals: 187/506 0.142s
im_proposals: 188/506 0.142s
im_proposals: 189/506 0.142s
im_proposals: 190/506 0.142s
im_proposals: 191/506 0.142s
im_proposals: 192/506 0.142s
im_proposals: 193/506 0.142s
im_proposals: 194/506 0.142s
im_proposals: 195/506 0.142s
im_proposals: 196/506 0.142s
im_proposals: 197/506 0.142s
im_proposals: 198/506 0.142s
im_proposals: 199/506 0.142s
im_proposals: 200/506 0.142s
im_proposals: 201/506 0.142s
im_proposals: 202/506 0.142s
im_proposals: 203/506 0.142s
im_proposals: 204/506 0.142s
im_proposals: 205/506 0.142s
im_proposals: 206/506 0.142s
im_proposals: 207/506 0.142s
im_proposals: 208/506 0.142s
im_proposals: 209/506 0.142s
im_proposals: 210/506 0.142s
im_proposals: 211/506 0.142s
im_proposals: 212/506 0.142s
im_proposals: 213/506 0.142s
im_proposals: 214/506 0.142s
im_proposals: 215/506 0.142s
im_proposals: 216/506 0.142s
im_proposals: 217/506 0.142s
im_proposals: 218/506 0.142s
im_proposals: 219/506 0.142s
im_proposals: 220/506 0.142s
im_proposals: 221/506 0.142s
im_proposals: 222/506 0.142s
im_proposals: 223/506 0.142s
im_proposals: 224/506 0.142s
im_proposals: 225/506 0.142s
im_proposals: 226/506 0.142s
im_proposals: 227/506 0.142s
im_proposals: 228/506 0.142s
im_proposals: 229/506 0.142s
im_proposals: 230/506 0.142s
im_proposals: 231/506 0.142s
im_proposals: 232/506 0.142s
im_proposals: 233/506 0.142s
im_proposals: 234/506 0.142s
im_proposals: 235/506 0.142s
im_proposals: 236/506 0.142s
im_proposals: 237/506 0.142s
im_proposals: 238/506 0.142s
im_proposals: 239/506 0.142s
im_proposals: 240/506 0.142s
im_proposals: 241/506 0.142s
im_proposals: 242/506 0.142s
im_proposals: 243/506 0.142s
im_proposals: 244/506 0.142s
im_proposals: 245/506 0.142s
im_proposals: 246/506 0.142s
im_proposals: 247/506 0.142s
im_proposals: 248/506 0.142s
im_proposals: 249/506 0.142s
im_proposals: 250/506 0.142s
im_proposals: 251/506 0.142s
im_proposals: 252/506 0.142s
im_proposals: 253/506 0.142s
im_proposals: 254/506 0.142s
im_proposals: 255/506 0.142s
im_proposals: 256/506 0.142s
im_proposals: 257/506 0.142s
im_proposals: 258/506 0.142s
im_proposals: 259/506 0.142s
im_proposals: 260/506 0.142s
im_proposals: 261/506 0.142s
im_proposals: 262/506 0.142s
im_proposals: 263/506 0.142s
im_proposals: 264/506 0.142s
im_proposals: 265/506 0.142s
im_proposals: 266/506 0.142s
im_proposals: 267/506 0.142s
im_proposals: 268/506 0.142s
im_proposals: 269/506 0.142s
im_proposals: 270/506 0.142s
im_proposals: 271/506 0.142s
im_proposals: 272/506 0.142s
im_proposals: 273/506 0.142s
im_proposals: 274/506 0.142s
im_proposals: 275/506 0.142s
im_proposals: 276/506 0.142s
im_proposals: 277/506 0.142s
im_proposals: 278/506 0.142s
im_proposals: 279/506 0.142s
im_proposals: 280/506 0.142s
im_proposals: 281/506 0.142s
im_proposals: 282/506 0.142s
im_proposals: 283/506 0.142s
im_proposals: 284/506 0.142s
im_proposals: 285/506 0.142s
im_proposals: 286/506 0.142s
im_proposals: 287/506 0.142s
im_proposals: 288/506 0.142s
im_proposals: 289/506 0.142s
im_proposals: 290/506 0.142s
im_proposals: 291/506 0.142s
im_proposals: 292/506 0.142s
im_proposals: 293/506 0.142s
im_proposals: 294/506 0.142s
im_proposals: 295/506 0.142s
im_proposals: 296/506 0.142s
im_proposals: 297/506 0.142s
im_proposals: 298/506 0.142s
im_proposals: 299/506 0.142s
im_proposals: 300/506 0.142s
im_proposals: 301/506 0.142s
im_proposals: 302/506 0.142s
im_proposals: 303/506 0.142s
im_proposals: 304/506 0.142s
im_proposals: 305/506 0.142s
im_proposals: 306/506 0.142s
im_proposals: 307/506 0.142s
im_proposals: 308/506 0.142s
im_proposals: 309/506 0.142s
im_proposals: 310/506 0.142s
im_proposals: 311/506 0.142s
im_proposals: 312/506 0.142s
im_proposals: 313/506 0.142s
im_proposals: 314/506 0.142s
im_proposals: 315/506 0.142s
im_proposals: 316/506 0.142s
im_proposals: 317/506 0.142s
im_proposals: 318/506 0.142s
im_proposals: 319/506 0.142s
im_proposals: 320/506 0.142s
im_proposals: 321/506 0.142s
im_proposals: 322/506 0.142s
im_proposals: 323/506 0.142s
im_proposals: 324/506 0.142s
im_proposals: 325/506 0.142s
im_proposals: 326/506 0.142s
im_proposals: 327/506 0.142s
im_proposals: 328/506 0.142s
im_proposals: 329/506 0.142s
im_proposals: 330/506 0.142s
im_proposals: 331/506 0.142s
im_proposals: 332/506 0.142s
im_proposals: 333/506 0.142s
im_proposals: 334/506 0.142s
im_proposals: 335/506 0.142s
im_proposals: 336/506 0.142s
im_proposals: 337/506 0.142s
im_proposals: 338/506 0.142s
im_proposals: 339/506 0.142s
im_proposals: 340/506 0.142s
im_proposals: 341/506 0.142s
im_proposals: 342/506 0.142s
im_proposals: 343/506 0.142s
im_proposals: 344/506 0.142s
im_proposals: 345/506 0.142s
im_proposals: 346/506 0.142s
im_proposals: 347/506 0.142s
im_proposals: 348/506 0.142s
im_proposals: 349/506 0.142s
im_proposals: 350/506 0.142s
im_proposals: 351/506 0.142s
im_proposals: 352/506 0.142s
im_proposals: 353/506 0.142s
im_proposals: 354/506 0.142s
im_proposals: 355/506 0.142s
im_proposals: 356/506 0.142s
im_proposals: 357/506 0.142s
im_proposals: 358/506 0.142s
im_proposals: 359/506 0.142s
im_proposals: 360/506 0.142s
im_proposals: 361/506 0.142s
im_proposals: 362/506 0.142s
im_proposals: 363/506 0.142s
im_proposals: 364/506 0.142s
im_proposals: 365/506 0.142s
im_proposals: 366/506 0.142s
im_proposals: 367/506 0.142s
im_proposals: 368/506 0.142s
im_proposals: 369/506 0.142s
im_proposals: 370/506 0.142s
im_proposals: 371/506 0.142s
im_proposals: 372/506 0.142s
im_proposals: 373/506 0.142s
im_proposals: 374/506 0.142s
im_proposals: 375/506 0.142s
im_proposals: 376/506 0.142s
im_proposals: 377/506 0.142s
im_proposals: 378/506 0.142s
im_proposals: 379/506 0.142s
im_proposals: 380/506 0.142s
im_proposals: 381/506 0.142s
im_proposals: 382/506 0.142s
im_proposals: 383/506 0.142s
im_proposals: 384/506 0.142s
im_proposals: 385/506 0.142s
im_proposals: 386/506 0.142s
im_proposals: 387/506 0.142s
im_proposals: 388/506 0.142s
im_proposals: 389/506 0.142s
im_proposals: 390/506 0.142s
im_proposals: 391/506 0.142s
im_proposals: 392/506 0.142s
im_proposals: 393/506 0.142s
im_proposals: 394/506 0.142s
im_proposals: 395/506 0.142s
im_proposals: 396/506 0.142s
im_proposals: 397/506 0.142s
im_proposals: 398/506 0.142s
im_proposals: 399/506 0.142s
im_proposals: 400/506 0.142s
im_proposals: 401/506 0.142s
im_proposals: 402/506 0.142s
im_proposals: 403/506 0.142s
im_proposals: 404/506 0.142s
im_proposals: 405/506 0.142s
im_proposals: 406/506 0.142s
im_proposals: 407/506 0.142s
im_proposals: 408/506 0.142s
im_proposals: 409/506 0.142s
im_proposals: 410/506 0.142s
im_proposals: 411/506 0.142s
im_proposals: 412/506 0.142s
im_proposals: 413/506 0.142s
im_proposals: 414/506 0.142s
im_proposals: 415/506 0.142s
im_proposals: 416/506 0.142s
im_proposals: 417/506 0.142s
im_proposals: 418/506 0.142s
im_proposals: 419/506 0.142s
im_proposals: 420/506 0.142s
im_proposals: 421/506 0.142s
im_proposals: 422/506 0.142s
im_proposals: 423/506 0.142s
im_proposals: 424/506 0.142s
im_proposals: 425/506 0.142s
im_proposals: 426/506 0.142s
im_proposals: 427/506 0.142s
im_proposals: 428/506 0.142s
im_proposals: 429/506 0.142s
im_proposals: 430/506 0.142s
im_proposals: 431/506 0.142s
im_proposals: 432/506 0.142s
im_proposals: 433/506 0.142s
im_proposals: 434/506 0.142s
im_proposals: 435/506 0.142s
im_proposals: 436/506 0.142s
im_proposals: 437/506 0.142s
im_proposals: 438/506 0.142s
im_proposals: 439/506 0.142s
im_proposals: 440/506 0.142s
im_proposals: 441/506 0.142s
im_proposals: 442/506 0.142s
im_proposals: 443/506 0.142s
im_proposals: 444/506 0.142s
im_proposals: 445/506 0.142s
im_proposals: 446/506 0.142s
im_proposals: 447/506 0.142s
im_proposals: 448/506 0.142s
im_proposals: 449/506 0.142s
im_proposals: 450/506 0.142s
im_proposals: 451/506 0.142s
im_proposals: 452/506 0.142s
im_proposals: 453/506 0.142s
im_proposals: 454/506 0.142s
im_proposals: 455/506 0.142s
im_proposals: 456/506 0.142s
im_proposals: 457/506 0.142s
im_proposals: 458/506 0.142s
im_proposals: 459/506 0.142s
im_proposals: 460/506 0.142s
im_proposals: 461/506 0.142s
im_proposals: 462/506 0.142s
im_proposals: 463/506 0.142s
im_proposals: 464/506 0.142s
im_proposals: 465/506 0.142s
im_proposals: 466/506 0.142s
im_proposals: 467/506 0.142s
im_proposals: 468/506 0.142s
im_proposals: 469/506 0.142s
im_proposals: 470/506 0.142s
im_proposals: 471/506 0.142s
im_proposals: 472/506 0.142s
im_proposals: 473/506 0.142s
im_proposals: 474/506 0.142s
im_proposals: 475/506 0.142s
im_proposals: 476/506 0.142s
im_proposals: 477/506 0.142s
im_proposals: 478/506 0.142s
im_proposals: 479/506 0.142s
im_proposals: 480/506 0.142s
im_proposals: 481/506 0.142s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  2.49535318e-08   1.19212706e-02   3.92748610e-02  -1.67159763e-02]
 [ -1.68403534e-09   1.91791192e-03   1.80788256e-02  -2.69850488e-02]
 [  3.07636876e-08  -9.32281873e-03   2.10419032e-02  -1.87665272e-02]
 [  3.22187269e-08  -9.57102228e-03   1.75227381e-02   2.29846887e-03]
 [  9.63716403e-09   1.44312820e-03   1.70816872e-02  -9.45463443e-04]
 [ -4.00362875e-08  -2.66366540e-02  -1.24324326e-02  -3.37665813e-02]
 [  5.01220877e-09  -5.30643524e-03   2.20296451e-02  -5.70172307e-02]
 [  3.22318595e-08  -1.48466468e-02   2.85399112e-02  -3.99815267e-02]
 [  5.12670903e-08   1.63170491e-03   1.34141293e-02  -1.49171444e-02]
 [  1.09380864e-08  -4.70659180e-04   2.14817552e-02  -5.32097294e-02]
 [ -2.21114005e-08  -1.38529591e-02   4.30871329e-02   3.04421049e-04]
 [  2.43586764e-08   5.80061234e-03   2.64241760e-02  -1.80221035e-02]
 [  1.33967170e-09   1.26643937e-04   1.37856164e-02  -3.05717508e-02]
 [ -1.14419631e-08   1.66544045e-02   2.98667917e-02  -1.12167203e-02]
 [ -5.38734289e-08   2.54380485e-02   1.20800149e-02  -1.35790173e-02]
 [  0.00000000e+00  -3.94065212e-03   6.92105340e-03  -4.99460064e-02]
 [  2.23517418e-09   4.60524342e-03  -6.12626391e-03  -2.28031591e-02]
 [  2.37487257e-08   5.03454928e-03   2.84094359e-02  -6.76789778e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -6.09592958e-08  -2.86317386e-02   3.62238694e-02  -1.05004681e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   8.27184245e-03   3.64215493e-02   2.97105402e-02]
 [  7.99695651e-08   7.97958275e-03   1.65492746e-02   1.36446973e-02]
 [  0.00000000e+00  -6.57334179e-02  -7.97379911e-02  -5.87359716e-02]
 [ -9.18017966e-09   2.15081634e-02   6.39198975e-02  -1.12800457e-02]
 [  4.69959699e-08  -9.26486550e-03  -9.59830330e-03  -3.25966500e-02]
 [  2.17556953e-07  -4.79538165e-02   1.49775499e-01   7.81377599e-02]
 [  2.60770321e-08  -1.35800019e-02   7.26537146e-03  -1.84816927e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.85519457e-08   2.94371757e-02   8.23620468e-02  -4.67660952e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.99036939e-07  -3.12849148e-02   1.00382356e-01   5.00501852e-02]
 [  0.00000000e+00   2.78262741e-03   2.27128629e-02   1.38247215e-02]
 [ -4.13168560e-08  -8.35861130e-03   1.70145220e-02   3.28986289e-02]
 [  4.63591682e-08   1.80647682e-02   3.57935424e-02   1.19067989e-02]
 [  1.01872362e-07  -8.50938719e-03   3.92313749e-02  -1.80004044e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.99464847e-08  -2.07952686e-03   4.54046305e-03  -5.79670228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00  -1.37246549e-02   3.12986858e-02   2.86945067e-02]
 [  0.00000000e+00  -2.67921016e-04   3.10198356e-02  -2.89177070e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]]
[  6.03248459e-09  -3.50509364e-03   2.15268799e-02  -9.94271607e-03]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.08664996  0.05121161  0.11296662  0.08949171]
 [ 0.06662267  0.04760245  0.08284209  0.08535022]
 [ 0.10026159  0.05622445  0.08793888  0.1172302 ]
 [ 0.07109959  0.03918711  0.06159491  0.06004962]
 [ 0.06053309  0.06376104  0.09243123  0.08391319]
 [ 0.04561255  0.06275526  0.10727855  0.15130997]
 [ 0.06615375  0.07562366  0.08531726  0.12420096]
 [ 0.0910474   0.0685018   0.09888626  0.12791507]
 [ 0.09177162  0.05079616  0.11904216  0.08475649]
 [ 0.07570932  0.07471199  0.09763561  0.13641077]
 [ 0.05938137  0.04677468  0.11797057  0.08333712]
 [ 0.0809093   0.05403446  0.10061615  0.09473866]
 [ 0.05063358  0.07298172  0.06962634  0.10115955]
 [ 0.07727096  0.04691449  0.13887507  0.08653418]
 [ 0.07901978  0.05327085  0.09668445  0.08900427]
 [ 0.00446841  0.01042599  0.01831139  0.13214471]
 [ 0.06902487  0.02424718  0.06802799  0.07316346]
 [ 0.06015452  0.05408977  0.09010033  0.06390508]
 [ 0.          0.          0.          0.        ]
 [ 0.06768577  0.06409943  0.07854405  0.00925655]
 [ 0.          0.          0.          0.        ]
 [ 0.0637799   0.02481553  0.10926465  0.08913162]
 [ 0.06280899  0.07608443  0.05729514  0.12801636]
 [ 0.02123959  0.09296109  0.11276655  0.08306521]
 [ 0.09295947  0.05523593  0.1362027   0.07265728]
 [ 0.06602453  0.03385134  0.0683641   0.08190204]
 [ 0.0829336   0.07480062  0.18408148  0.12423429]
 [ 0.06696382  0.04074001  0.02179611  0.05544508]
 [ 0.          0.          0.          0.        ]
 [ 0.08954525  0.08476249  0.14363854  0.13115734]
 [ 0.          0.          0.          0.        ]
 [ 0.130352    0.06007664  0.17438437  0.11954253]
 [ 0.07290045  0.01003291  0.08189239  0.04984574]
 [ 0.08402762  0.03853306  0.05080756  0.09345697]
 [ 0.09674014  0.04703355  0.09833475  0.05307402]
 [ 0.06910426  0.07017709  0.0971523   0.12523184]
 [ 0.          0.          0.          0.        ]
 [ 0.07486051  0.05502972  0.09543795  0.13544969]
 [ 0.          0.          0.          0.        ]
 [ 0.08322769  0.03631202  0.08280854  0.07591853]
 [ 0.06635245  0.07916202  0.08394078  0.07428648]
 [ 0.          0.          0.          0.        ]]
[ 0.05878675  0.04411215  0.07727576  0.07642527]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:47:02.164386  5069 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:47:02.164443  5069 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0419 16:47:02.165308  5069 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:47:02.165537  5069 layer_factory.hpp:77] Creating layer data
I0419 16:47:02.166208  5069 net.cpp:106] Creating Layer data
I0419 16:47:02.166231  5069 net.cpp:411] data -> data
I0419 16:47:02.166254  5069 net.cpp:411] data -> rois
I0419 16:47:02.166285  5069 net.cpp:411] data -> labels
I0419 16:47:02.166311  5069 net.cpp:411] data -> bbox_targets
I0419 16:47:02.166353  5069 net.cpp:411] data -> bbox_inside_weights
I0419 16:47:02.166383  5069 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:47:02.245210  5069 net.cpp:150] Setting up data
I0419 16:47:02.245249  5069 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:47:02.245271  5069 net.cpp:157] Top shape: 1 5 (5)
I0419 16:47:02.245290  5069 net.cpp:157] Top shape: 1 (1)
I0419 16:47:02.245307  5069 net.cpp:157] Top shape: 1 176 (176)
I0419 16:47:02.245324  5069 net.cpp:157] Top shape: 1 176 (176)
I0419 16:47:02.245342  5069 net.cpp:157] Top shape: 1 176 (176)
I0419 16:47:02.245358  5069 net.cpp:165] Memory required for data: 14402136
I0419 16:47:02.245374  5069 layer_factory.hpp:77] Creating layer conv1
I0419 16:47:02.245405  5069 net.cpp:106] Creating Layer conv1
I0419 16:47:02.245424  5069 net.cpp:454] conv1 <- data
I0419 16:47:02.245453  5069 net.cpp:411] conv1 -> conv1
I0419 16:47:02.246845  5069 net.cpp:150] Setting up conv1
I0419 16:47:02.246865  5069 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:47:02.246870  5069 net.cpp:165] Memory required for data: 129602136
I0419 16:47:02.246891  5069 layer_factory.hpp:77] Creating layer relu1
I0419 16:47:02.246919  5069 net.cpp:106] Creating Layer relu1
I0419 16:47:02.246938  5069 net.cpp:454] relu1 <- conv1
I0419 16:47:02.246958  5069 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:47:02.246984  5069 net.cpp:150] Setting up relu1
I0419 16:47:02.247002  5069 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:47:02.247017  5069 net.cpp:165] Memory required for data: 244802136
I0419 16:47:02.247032  5069 layer_factory.hpp:77] Creating layer norm1
I0419 16:47:02.247056  5069 net.cpp:106] Creating Layer norm1
I0419 16:47:02.247086  5069 net.cpp:454] norm1 <- conv1
I0419 16:47:02.247107  5069 net.cpp:411] norm1 -> norm1
I0419 16:47:02.247241  5069 net.cpp:150] Setting up norm1
I0419 16:47:02.247259  5069 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:47:02.247263  5069 net.cpp:165] Memory required for data: 360002136
I0419 16:47:02.247268  5069 layer_factory.hpp:77] Creating layer pool1
I0419 16:47:02.247277  5069 net.cpp:106] Creating Layer pool1
I0419 16:47:02.247294  5069 net.cpp:454] pool1 <- norm1
I0419 16:47:02.247313  5069 net.cpp:411] pool1 -> pool1
I0419 16:47:02.247380  5069 net.cpp:150] Setting up pool1
I0419 16:47:02.247395  5069 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:47:02.247400  5069 net.cpp:165] Memory required for data: 389110104
I0419 16:47:02.247406  5069 layer_factory.hpp:77] Creating layer conv2
I0419 16:47:02.247417  5069 net.cpp:106] Creating Layer conv2
I0419 16:47:02.247437  5069 net.cpp:454] conv2 <- pool1
I0419 16:47:02.247457  5069 net.cpp:411] conv2 -> conv2
I0419 16:47:02.249160  5069 net.cpp:150] Setting up conv2
I0419 16:47:02.249179  5069 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:47:02.249184  5069 net.cpp:165] Memory required for data: 408721752
I0419 16:47:02.249197  5069 layer_factory.hpp:77] Creating layer relu2
I0419 16:47:02.249209  5069 net.cpp:106] Creating Layer relu2
I0419 16:47:02.249230  5069 net.cpp:454] relu2 <- conv2
I0419 16:47:02.249250  5069 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:47:02.249272  5069 net.cpp:150] Setting up relu2
I0419 16:47:02.249290  5069 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:47:02.249305  5069 net.cpp:165] Memory required for data: 428333400
I0419 16:47:02.249318  5069 layer_factory.hpp:77] Creating layer norm2
I0419 16:47:02.249336  5069 net.cpp:106] Creating Layer norm2
I0419 16:47:02.249351  5069 net.cpp:454] norm2 <- conv2
I0419 16:47:02.249373  5069 net.cpp:411] norm2 -> norm2
I0419 16:47:02.249486  5069 net.cpp:150] Setting up norm2
I0419 16:47:02.249502  5069 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:47:02.249506  5069 net.cpp:165] Memory required for data: 447945048
I0419 16:47:02.249511  5069 layer_factory.hpp:77] Creating layer pool2
I0419 16:47:02.249521  5069 net.cpp:106] Creating Layer pool2
I0419 16:47:02.249526  5069 net.cpp:454] pool2 <- norm2
I0419 16:47:02.249534  5069 net.cpp:411] pool2 -> pool2
I0419 16:47:02.249595  5069 net.cpp:150] Setting up pool2
I0419 16:47:02.249613  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.249617  5069 net.cpp:165] Memory required for data: 453056856
I0419 16:47:02.249621  5069 layer_factory.hpp:77] Creating layer conv3
I0419 16:47:02.249631  5069 net.cpp:106] Creating Layer conv3
I0419 16:47:02.249649  5069 net.cpp:454] conv3 <- pool2
I0419 16:47:02.249671  5069 net.cpp:411] conv3 -> conv3
I0419 16:47:02.252933  5069 net.cpp:150] Setting up conv3
I0419 16:47:02.252952  5069 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:47:02.252957  5069 net.cpp:165] Memory required for data: 460724568
I0419 16:47:02.252971  5069 layer_factory.hpp:77] Creating layer relu3
I0419 16:47:02.252982  5069 net.cpp:106] Creating Layer relu3
I0419 16:47:02.253002  5069 net.cpp:454] relu3 <- conv3
I0419 16:47:02.253022  5069 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:47:02.253042  5069 net.cpp:150] Setting up relu3
I0419 16:47:02.253062  5069 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:47:02.253077  5069 net.cpp:165] Memory required for data: 468392280
I0419 16:47:02.253093  5069 layer_factory.hpp:77] Creating layer conv4
I0419 16:47:02.253116  5069 net.cpp:106] Creating Layer conv4
I0419 16:47:02.253134  5069 net.cpp:454] conv4 <- conv3
I0419 16:47:02.253154  5069 net.cpp:411] conv4 -> conv4
I0419 16:47:02.256428  5069 net.cpp:150] Setting up conv4
I0419 16:47:02.256448  5069 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:47:02.256453  5069 net.cpp:165] Memory required for data: 476059992
I0419 16:47:02.256463  5069 layer_factory.hpp:77] Creating layer relu4
I0419 16:47:02.256470  5069 net.cpp:106] Creating Layer relu4
I0419 16:47:02.256476  5069 net.cpp:454] relu4 <- conv4
I0419 16:47:02.256486  5069 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:47:02.256495  5069 net.cpp:150] Setting up relu4
I0419 16:47:02.256517  5069 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:47:02.256533  5069 net.cpp:165] Memory required for data: 483727704
I0419 16:47:02.256548  5069 layer_factory.hpp:77] Creating layer conv5
I0419 16:47:02.256573  5069 net.cpp:106] Creating Layer conv5
I0419 16:47:02.256590  5069 net.cpp:454] conv5 <- conv4
I0419 16:47:02.256610  5069 net.cpp:411] conv5 -> conv5
I0419 16:47:02.258901  5069 net.cpp:150] Setting up conv5
I0419 16:47:02.258920  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.258925  5069 net.cpp:165] Memory required for data: 488839512
I0419 16:47:02.258939  5069 layer_factory.hpp:77] Creating layer relu5
I0419 16:47:02.258947  5069 net.cpp:106] Creating Layer relu5
I0419 16:47:02.258965  5069 net.cpp:454] relu5 <- conv5
I0419 16:47:02.258988  5069 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:47:02.259011  5069 net.cpp:150] Setting up relu5
I0419 16:47:02.259030  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.259045  5069 net.cpp:165] Memory required for data: 493951320
I0419 16:47:02.259060  5069 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:47:02.259083  5069 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:47:02.259099  5069 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:47:02.259116  5069 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:47:02.259138  5069 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:47:02.259210  5069 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:47:02.259225  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.259234  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.259239  5069 net.cpp:165] Memory required for data: 504174936
I0419 16:47:02.259244  5069 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:47:02.259280  5069 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:47:02.259289  5069 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:47:02.259296  5069 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:47:02.259304  5069 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:47:02.259316  5069 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:47:02.259392  5069 net.cpp:150] Setting up roi_pool_conv5
I0419 16:47:02.259407  5069 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:47:02.259412  5069 net.cpp:165] Memory required for data: 504211800
I0419 16:47:02.259415  5069 layer_factory.hpp:77] Creating layer fc6
I0419 16:47:02.259426  5069 net.cpp:106] Creating Layer fc6
I0419 16:47:02.259443  5069 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:47:02.259465  5069 net.cpp:411] fc6 -> fc6
I0419 16:47:02.356500  5069 net.cpp:150] Setting up fc6
I0419 16:47:02.356547  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.356552  5069 net.cpp:165] Memory required for data: 504228184
I0419 16:47:02.356566  5069 layer_factory.hpp:77] Creating layer relu6
I0419 16:47:02.356580  5069 net.cpp:106] Creating Layer relu6
I0419 16:47:02.356586  5069 net.cpp:454] relu6 <- fc6
I0419 16:47:02.356596  5069 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:47:02.356629  5069 net.cpp:150] Setting up relu6
I0419 16:47:02.356647  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.356660  5069 net.cpp:165] Memory required for data: 504244568
I0419 16:47:02.356673  5069 layer_factory.hpp:77] Creating layer drop6
I0419 16:47:02.356698  5069 net.cpp:106] Creating Layer drop6
I0419 16:47:02.356714  5069 net.cpp:454] drop6 <- fc6
I0419 16:47:02.356732  5069 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:47:02.356781  5069 net.cpp:150] Setting up drop6
I0419 16:47:02.356793  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.356797  5069 net.cpp:165] Memory required for data: 504260952
I0419 16:47:02.356802  5069 layer_factory.hpp:77] Creating layer fc7
I0419 16:47:02.356812  5069 net.cpp:106] Creating Layer fc7
I0419 16:47:02.356853  5069 net.cpp:454] fc7 <- fc6
I0419 16:47:02.356876  5069 net.cpp:411] fc7 -> fc7
I0419 16:47:02.400260  5069 net.cpp:150] Setting up fc7
I0419 16:47:02.400305  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.400310  5069 net.cpp:165] Memory required for data: 504277336
I0419 16:47:02.400321  5069 layer_factory.hpp:77] Creating layer relu7
I0419 16:47:02.400336  5069 net.cpp:106] Creating Layer relu7
I0419 16:47:02.400341  5069 net.cpp:454] relu7 <- fc7
I0419 16:47:02.400353  5069 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:47:02.400384  5069 net.cpp:150] Setting up relu7
I0419 16:47:02.400403  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.400415  5069 net.cpp:165] Memory required for data: 504293720
I0419 16:47:02.400429  5069 layer_factory.hpp:77] Creating layer drop7
I0419 16:47:02.400446  5069 net.cpp:106] Creating Layer drop7
I0419 16:47:02.400460  5069 net.cpp:454] drop7 <- fc7
I0419 16:47:02.400475  5069 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:47:02.400524  5069 net.cpp:150] Setting up drop7
I0419 16:47:02.400534  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.400539  5069 net.cpp:165] Memory required for data: 504310104
I0419 16:47:02.400544  5069 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:47:02.400552  5069 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:47:02.400557  5069 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:47:02.400568  5069 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:47:02.400589  5069 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:47:02.400651  5069 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:47:02.400665  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.400672  5069 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:47:02.400676  5069 net.cpp:165] Memory required for data: 504342872
I0419 16:47:02.400681  5069 layer_factory.hpp:77] Creating layer cls_score
I0419 16:47:02.400691  5069 net.cpp:106] Creating Layer cls_score
I0419 16:47:02.400728  5069 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:47:02.400754  5069 net.cpp:411] cls_score -> cls_score
I0419 16:47:02.406344  5069 net.cpp:150] Setting up cls_score
I0419 16:47:02.406363  5069 net.cpp:157] Top shape: 1 44 (44)
I0419 16:47:02.406368  5069 net.cpp:165] Memory required for data: 504343048
I0419 16:47:02.406378  5069 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:47:02.406388  5069 net.cpp:106] Creating Layer bbox_pred
I0419 16:47:02.406407  5069 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:47:02.406426  5069 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:47:02.427127  5069 net.cpp:150] Setting up bbox_pred
I0419 16:47:02.427147  5069 net.cpp:157] Top shape: 1 176 (176)
I0419 16:47:02.427152  5069 net.cpp:165] Memory required for data: 504343752
I0419 16:47:02.427168  5069 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:47:02.427198  5069 net.cpp:106] Creating Layer loss_cls
I0419 16:47:02.427214  5069 net.cpp:454] loss_cls <- cls_score
I0419 16:47:02.427232  5069 net.cpp:454] loss_cls <- labels
I0419 16:47:02.427253  5069 net.cpp:411] loss_cls -> cls_loss
I0419 16:47:02.427283  5069 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:47:02.427402  5069 net.cpp:150] Setting up loss_cls
I0419 16:47:02.427417  5069 net.cpp:157] Top shape: (1)
I0419 16:47:02.427423  5069 net.cpp:160]     with loss weight 1
I0419 16:47:02.427450  5069 net.cpp:165] Memory required for data: 504343756
I0419 16:47:02.427465  5069 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:47:02.427487  5069 net.cpp:106] Creating Layer loss_bbox
I0419 16:47:02.427505  5069 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:47:02.427521  5069 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:47:02.427537  5069 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:47:02.427553  5069 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:47:02.427574  5069 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:47:02.427675  5069 net.cpp:150] Setting up loss_bbox
I0419 16:47:02.427690  5069 net.cpp:157] Top shape: (1)
I0419 16:47:02.427695  5069 net.cpp:160]     with loss weight 1
I0419 16:47:02.427701  5069 net.cpp:165] Memory required for data: 504343760
I0419 16:47:02.427706  5069 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:47:02.427724  5069 net.cpp:106] Creating Layer rpn_conv1
I0419 16:47:02.427742  5069 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:47:02.427763  5069 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:47:02.444790  5069 net.cpp:150] Setting up rpn_conv1
I0419 16:47:02.444810  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.444815  5069 net.cpp:165] Memory required for data: 509455568
I0419 16:47:02.444825  5069 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:47:02.444833  5069 net.cpp:106] Creating Layer rpn_relu1
I0419 16:47:02.444839  5069 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:47:02.444861  5069 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:47:02.444881  5069 net.cpp:150] Setting up rpn_relu1
I0419 16:47:02.444900  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.444913  5069 net.cpp:165] Memory required for data: 514567376
I0419 16:47:02.444927  5069 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:47:02.444947  5069 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:47:02.444962  5069 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:47:02.444980  5069 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:47:02.445000  5069 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:47:02.445065  5069 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:47:02.445080  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.445086  5069 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:47:02.445089  5069 net.cpp:165] Memory required for data: 524790992
I0419 16:47:02.445094  5069 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:47:02.445111  5069 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:47:02.445137  5069 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:47:02.445163  5069 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:47:02.445523  5069 net.cpp:150] Setting up rpn_cls_score
I0419 16:47:02.445539  5069 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:47:02.445544  5069 net.cpp:165] Memory required for data: 525150416
I0419 16:47:02.445554  5069 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:47:02.445574  5069 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:47:02.445593  5069 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:47:02.445616  5069 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:47:02.446097  5069 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:47:02.446115  5069 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:47:02.446118  5069 net.cpp:165] Memory required for data: 525869264
I0419 16:47:02.446127  5069 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:47:02.446146  5069 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:47:02.446163  5069 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:47:02.446182  5069 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:47:02.446197  5069 net.cpp:165] Memory required for data: 525869264
I0419 16:47:02.446209  5069 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:47:02.446226  5069 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:47:02.446240  5069 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:47:02.446256  5069 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:47:02.446270  5069 net.cpp:165] Memory required for data: 525869264
I0419 16:47:02.446283  5069 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:47:02.446297  5069 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:47:02.446311  5069 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:47:02.446326  5069 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:47:02.446372  5069 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:47:02.446388  5069 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:47:02.446403  5069 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:47:02.446418  5069 net.cpp:226] loss_bbox needs backward computation.
I0419 16:47:02.446434  5069 net.cpp:226] loss_cls needs backward computation.
I0419 16:47:02.446451  5069 net.cpp:226] bbox_pred needs backward computation.
I0419 16:47:02.446465  5069 net.cpp:226] cls_score needs backward computation.
I0419 16:47:02.446480  5069 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:47:02.446494  5069 net.cpp:226] drop7 needs backward computation.
I0419 16:47:02.446508  5069 net.cpp:226] relu7 needs backward computation.
I0419 16:47:02.446522  5069 net.cpp:226] fc7 needs backward computation.
I0419 16:47:02.446537  5069 net.cpp:226] drop6 needs backward computation.
I0419 16:47:02.446549  5069 net.cpp:226] relu6 needs backward computation.
I0419 16:47:02.446563  5069 net.cpp:226] fc6 needs backward computation.
I0419 16:47:02.446578  5069 net.cpp:226] roi_pool_conv5 needs backward computation.
I0419 16:47:02.446593  5069 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0419 16:47:02.446609  5069 net.cpp:226] relu5 needs backward computation.
I0419 16:47:02.446622  5069 net.cpp:226] conv5 needs backward computation.
I0419 16:47:02.446636  5069 net.cpp:226] relu4 needs backward computation.
I0419 16:47:02.446651  5069 net.cpp:226] conv4 needs backward computation.
I0419 16:47:02.446665  5069 net.cpp:226] relu3 needs backward computation.
I0419 16:47:02.446678  5069 net.cpp:226] conv3 needs backward computation.
I0419 16:47:02.446692  5069 net.cpp:226] pool2 needs backward computation.
I0419 16:47:02.446707  5069 net.cpp:226] norm2 needs backward computation.
I0419 16:47:02.446722  5069 net.cpp:226] relu2 needs backward computation.
I0419 16:47:02.446735  5069 net.cpp:226] conv2 needs backward computation.
I0419 16:47:02.446758  5069 net.cpp:226] pool1 needs backward computation.
I0419 16:47:02.446774  5069 net.cpp:226] norm1 needs backward computation.
I0419 16:47:02.446789  5069 net.cpp:226] relu1 needs backward computation.
I0419 16:47:02.446804  5069 net.cpp:226] conv1 needs backward computation.
I0419 16:47:02.446820  5069 net.cpp:228] data does not need backward computation.
I0419 16:47:02.446835  5069 net.cpp:270] This network produces output bbox_loss
I0419 16:47:02.446848  5069 net.cpp:270] This network produces output cls_loss
I0419 16:47:02.446899  5069 net.cpp:283] Network initialization done.
I0419 16:47:02.447063  5069 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0419 16:47:02.898149  5069 net.cpp:816] Ignoring source layer pool5_spm6
I0419 16:47:02.898180  5069 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0419 16:47:02.941859  5069 net.cpp:816] Ignoring source layer fc8
I0419 16:47:02.941893  5069 net.cpp:816] Ignoring source layer prob
Solving...
I0419 16:47:03.387297  5069 solver.cpp:229] Iteration 0, loss = 3.96455
I0419 16:47:03.387344  5069 solver.cpp:245]     Train net output #0: bbox_loss = 0.00179342 (* 1 = 0.00179342 loss)
I0419 16:47:03.387356  5069 solver.cpp:245]     Train net output #1: cls_loss = 3.96275 (* 1 = 3.96275 loss)
I0419 16:47:03.387375  5069 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:47:15.993604  5069 solver.cpp:229] Iteration 20, loss = 0.158989
I0419 16:47:15.993718  5069 solver.cpp:245]     Train net output #0: bbox_loss = 0.00206027 (* 1 = 0.00206027 loss)
I0419 16:47:15.993752  5069 solver.cpp:245]     Train net output #1: cls_loss = 0.156929 (* 1 = 0.156929 loss)
I0419 16:47:15.993779  5069 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:47:28.831184  5069 solver.cpp:229] Iteration 40, loss = 0.256255
I0419 16:47:28.831236  5069 solver.cpp:245]     Train net output #0: bbox_loss = 0.0311435 (* 1 = 0.0311435 loss)
I0419 16:47:28.831248  5069 solver.cpp:245]     Train net output #1: cls_loss = 0.225112 (* 1 = 0.225112 loss)
I0419 16:47:28.831256  5069 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:47:41.307718  5069 solver.cpp:229] Iteration 60, loss = 0.387985
I0419 16:47:41.307766  5069 solver.cpp:245]     Train net output #0: bbox_loss = 0.0650192 (* 1 = 0.0650192 loss)
I0419 16:47:41.307776  5069 solver.cpp:245]     Train net output #1: cls_loss = 0.322966 (* 1 = 0.322966 loss)
I0419 16:47:41.307785  5069 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:47:53.996695  5069 solver.cpp:229] Iteration 80, loss = 0.2817
I0419 16:47:53.996745  5069 solver.cpp:245]     Train net output #0: bbox_loss = 0.0782601 (* 1 = 0.0782601 loss)
I0419 16:47:53.996754  5069 solver.cpp:245]     Train net output #1: cls_loss = 0.20344 (* 1 = 0.20344 loss)
I0419 16:47:53.996764  5069 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, init from stage 1 Fast R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:48:07.977313  5082 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0419 16:48:07.977370  5082 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt
I0419 16:48:07.978314  5082 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0419 16:48:07.978570  5082 layer_factory.hpp:77] Creating layer input-data
I0419 16:48:07.979383  5082 net.cpp:106] Creating Layer input-data
I0419 16:48:07.979418  5082 net.cpp:411] input-data -> data
I0419 16:48:07.979452  5082 net.cpp:411] input-data -> im_info
I0419 16:48:07.979475  5082 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0419 16:48:08.129284  5082 net.cpp:150] Setting up input-data
I0419 16:48:08.129317  5082 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:48:08.129336  5082 net.cpp:157] Top shape: 1 3 (3)
I0419 16:48:08.129353  5082 net.cpp:157] Top shape: 1 4 (4)
I0419 16:48:08.129366  5082 net.cpp:165] Memory required for data: 7200028
I0419 16:48:08.129381  5082 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0419 16:48:08.129407  5082 net.cpp:106] Creating Layer data_input-data_0_split
I0419 16:48:08.129423  5082 net.cpp:454] data_input-data_0_split <- data
I0419 16:48:08.129446  5082 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0419 16:48:08.129467  5082 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0419 16:48:08.129532  5082 net.cpp:150] Setting up data_input-data_0_split
I0419 16:48:08.129555  5082 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:48:08.129572  5082 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0419 16:48:08.129587  5082 net.cpp:165] Memory required for data: 21600028
I0419 16:48:08.129601  5082 layer_factory.hpp:77] Creating layer conv1
I0419 16:48:08.129631  5082 net.cpp:106] Creating Layer conv1
I0419 16:48:08.129647  5082 net.cpp:454] conv1 <- data_input-data_0_split_0
I0419 16:48:08.129668  5082 net.cpp:411] conv1 -> conv1
I0419 16:48:08.131045  5082 net.cpp:150] Setting up conv1
I0419 16:48:08.131067  5082 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:48:08.131072  5082 net.cpp:165] Memory required for data: 79200028
I0419 16:48:08.131090  5082 layer_factory.hpp:77] Creating layer relu1
I0419 16:48:08.131103  5082 net.cpp:106] Creating Layer relu1
I0419 16:48:08.131122  5082 net.cpp:454] relu1 <- conv1
I0419 16:48:08.131145  5082 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:48:08.131170  5082 net.cpp:150] Setting up relu1
I0419 16:48:08.131187  5082 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:48:08.131201  5082 net.cpp:165] Memory required for data: 136800028
I0419 16:48:08.131216  5082 layer_factory.hpp:77] Creating layer norm1
I0419 16:48:08.131235  5082 net.cpp:106] Creating Layer norm1
I0419 16:48:08.131249  5082 net.cpp:454] norm1 <- conv1
I0419 16:48:08.131269  5082 net.cpp:411] norm1 -> norm1
I0419 16:48:08.131433  5082 net.cpp:150] Setting up norm1
I0419 16:48:08.131448  5082 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0419 16:48:08.131453  5082 net.cpp:165] Memory required for data: 194400028
I0419 16:48:08.131458  5082 layer_factory.hpp:77] Creating layer pool1
I0419 16:48:08.131469  5082 net.cpp:106] Creating Layer pool1
I0419 16:48:08.131485  5082 net.cpp:454] pool1 <- norm1
I0419 16:48:08.131503  5082 net.cpp:411] pool1 -> pool1
I0419 16:48:08.131568  5082 net.cpp:150] Setting up pool1
I0419 16:48:08.131587  5082 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0419 16:48:08.131602  5082 net.cpp:165] Memory required for data: 208954012
I0419 16:48:08.131614  5082 layer_factory.hpp:77] Creating layer conv2
I0419 16:48:08.131633  5082 net.cpp:106] Creating Layer conv2
I0419 16:48:08.131647  5082 net.cpp:454] conv2 <- pool1
I0419 16:48:08.131664  5082 net.cpp:411] conv2 -> conv2
I0419 16:48:08.133359  5082 net.cpp:150] Setting up conv2
I0419 16:48:08.133380  5082 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:48:08.133385  5082 net.cpp:165] Memory required for data: 218759836
I0419 16:48:08.133397  5082 layer_factory.hpp:77] Creating layer relu2
I0419 16:48:08.133409  5082 net.cpp:106] Creating Layer relu2
I0419 16:48:08.133440  5082 net.cpp:454] relu2 <- conv2
I0419 16:48:08.133461  5082 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:48:08.133481  5082 net.cpp:150] Setting up relu2
I0419 16:48:08.133496  5082 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:48:08.133510  5082 net.cpp:165] Memory required for data: 228565660
I0419 16:48:08.133523  5082 layer_factory.hpp:77] Creating layer norm2
I0419 16:48:08.133545  5082 net.cpp:106] Creating Layer norm2
I0419 16:48:08.133559  5082 net.cpp:454] norm2 <- conv2
I0419 16:48:08.133576  5082 net.cpp:411] norm2 -> norm2
I0419 16:48:08.133708  5082 net.cpp:150] Setting up norm2
I0419 16:48:08.133723  5082 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0419 16:48:08.133728  5082 net.cpp:165] Memory required for data: 238371484
I0419 16:48:08.133733  5082 layer_factory.hpp:77] Creating layer pool2
I0419 16:48:08.133740  5082 net.cpp:106] Creating Layer pool2
I0419 16:48:08.133745  5082 net.cpp:454] pool2 <- norm2
I0419 16:48:08.133754  5082 net.cpp:411] pool2 -> pool2
I0419 16:48:08.133816  5082 net.cpp:150] Setting up pool2
I0419 16:48:08.133836  5082 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:48:08.133851  5082 net.cpp:165] Memory required for data: 240927388
I0419 16:48:08.133863  5082 layer_factory.hpp:77] Creating layer conv3
I0419 16:48:08.133885  5082 net.cpp:106] Creating Layer conv3
I0419 16:48:08.133900  5082 net.cpp:454] conv3 <- pool2
I0419 16:48:08.133918  5082 net.cpp:411] conv3 -> conv3
I0419 16:48:08.137228  5082 net.cpp:150] Setting up conv3
I0419 16:48:08.137249  5082 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:48:08.137254  5082 net.cpp:165] Memory required for data: 244761244
I0419 16:48:08.137269  5082 layer_factory.hpp:77] Creating layer relu3
I0419 16:48:08.137279  5082 net.cpp:106] Creating Layer relu3
I0419 16:48:08.137298  5082 net.cpp:454] relu3 <- conv3
I0419 16:48:08.137316  5082 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:48:08.137336  5082 net.cpp:150] Setting up relu3
I0419 16:48:08.137353  5082 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:48:08.137383  5082 net.cpp:165] Memory required for data: 248595100
I0419 16:48:08.137399  5082 layer_factory.hpp:77] Creating layer conv4
I0419 16:48:08.137423  5082 net.cpp:106] Creating Layer conv4
I0419 16:48:08.137437  5082 net.cpp:454] conv4 <- conv3
I0419 16:48:08.137455  5082 net.cpp:411] conv4 -> conv4
I0419 16:48:08.140823  5082 net.cpp:150] Setting up conv4
I0419 16:48:08.140844  5082 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:48:08.140849  5082 net.cpp:165] Memory required for data: 252428956
I0419 16:48:08.140858  5082 layer_factory.hpp:77] Creating layer relu4
I0419 16:48:08.140866  5082 net.cpp:106] Creating Layer relu4
I0419 16:48:08.140872  5082 net.cpp:454] relu4 <- conv4
I0419 16:48:08.140902  5082 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:48:08.140924  5082 net.cpp:150] Setting up relu4
I0419 16:48:08.140941  5082 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0419 16:48:08.140954  5082 net.cpp:165] Memory required for data: 256262812
I0419 16:48:08.140967  5082 layer_factory.hpp:77] Creating layer conv5
I0419 16:48:08.140986  5082 net.cpp:106] Creating Layer conv5
I0419 16:48:08.141001  5082 net.cpp:454] conv5 <- conv4
I0419 16:48:08.141021  5082 net.cpp:411] conv5 -> conv5
I0419 16:48:08.143378  5082 net.cpp:150] Setting up conv5
I0419 16:48:08.143399  5082 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:48:08.143404  5082 net.cpp:165] Memory required for data: 258818716
I0419 16:48:08.143417  5082 layer_factory.hpp:77] Creating layer relu5
I0419 16:48:08.143426  5082 net.cpp:106] Creating Layer relu5
I0419 16:48:08.143445  5082 net.cpp:454] relu5 <- conv5
I0419 16:48:08.143467  5082 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:48:08.143488  5082 net.cpp:150] Setting up relu5
I0419 16:48:08.143504  5082 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:48:08.143518  5082 net.cpp:165] Memory required for data: 261374620
I0419 16:48:08.143532  5082 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:48:08.143558  5082 net.cpp:106] Creating Layer rpn_conv1
I0419 16:48:08.143584  5082 net.cpp:454] rpn_conv1 <- conv5
I0419 16:48:08.143604  5082 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:48:08.160697  5082 net.cpp:150] Setting up rpn_conv1
I0419 16:48:08.160717  5082 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:48:08.160722  5082 net.cpp:165] Memory required for data: 263930524
I0419 16:48:08.160732  5082 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:48:08.160739  5082 net.cpp:106] Creating Layer rpn_relu1
I0419 16:48:08.160745  5082 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:48:08.160753  5082 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:48:08.160774  5082 net.cpp:150] Setting up rpn_relu1
I0419 16:48:08.160794  5082 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:48:08.160806  5082 net.cpp:165] Memory required for data: 266486428
I0419 16:48:08.160820  5082 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:48:08.160840  5082 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:48:08.160853  5082 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:48:08.160869  5082 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:48:08.160888  5082 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:48:08.160955  5082 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:48:08.160975  5082 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:48:08.160991  5082 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0419 16:48:08.161005  5082 net.cpp:165] Memory required for data: 271598236
I0419 16:48:08.161018  5082 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:48:08.161042  5082 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:48:08.161057  5082 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:48:08.161078  5082 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:48:08.161449  5082 net.cpp:150] Setting up rpn_cls_score
I0419 16:48:08.161466  5082 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:48:08.161471  5082 net.cpp:165] Memory required for data: 271777948
I0419 16:48:08.161480  5082 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:48:08.161489  5082 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:48:08.161494  5082 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0419 16:48:08.161504  5082 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:48:08.161525  5082 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:48:08.161588  5082 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0419 16:48:08.161608  5082 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:48:08.161624  5082 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0419 16:48:08.161638  5082 net.cpp:165] Memory required for data: 272137372
I0419 16:48:08.161650  5082 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:48:08.161674  5082 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:48:08.161689  5082 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:48:08.161710  5082 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:48:08.162195  5082 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:48:08.162211  5082 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:48:08.162216  5082 net.cpp:165] Memory required for data: 272496796
I0419 16:48:08.162225  5082 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:48:08.162235  5082 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:48:08.162252  5082 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0419 16:48:08.162274  5082 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:48:08.162343  5082 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:48:08.162370  5082 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0419 16:48:08.162386  5082 net.cpp:165] Memory required for data: 272676508
I0419 16:48:08.162420  5082 layer_factory.hpp:77] Creating layer rpn-data
I0419 16:48:08.162921  5082 net.cpp:106] Creating Layer rpn-data
I0419 16:48:08.162940  5082 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0419 16:48:08.162948  5082 net.cpp:454] rpn-data <- gt_boxes
I0419 16:48:08.162955  5082 net.cpp:454] rpn-data <- im_info
I0419 16:48:08.162959  5082 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0419 16:48:08.162967  5082 net.cpp:411] rpn-data -> rpn_labels
I0419 16:48:08.162995  5082 net.cpp:411] rpn-data -> rpn_bbox_targets
I0419 16:48:08.163019  5082 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0419 16:48:08.163039  5082 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0419 16:48:08.164338  5082 net.cpp:150] Setting up rpn-data
I0419 16:48:08.164362  5082 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0419 16:48:08.164371  5082 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:48:08.164376  5082 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:48:08.164381  5082 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0419 16:48:08.164386  5082 net.cpp:165] Memory required for data: 273844636
I0419 16:48:08.164391  5082 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:48:08.164419  5082 net.cpp:106] Creating Layer rpn_loss_cls
I0419 16:48:08.164438  5082 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0419 16:48:08.164454  5082 net.cpp:454] rpn_loss_cls <- rpn_labels
I0419 16:48:08.164472  5082 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0419 16:48:08.164500  5082 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0419 16:48:08.164666  5082 net.cpp:150] Setting up rpn_loss_cls
I0419 16:48:08.164682  5082 net.cpp:157] Top shape: (1)
I0419 16:48:08.164687  5082 net.cpp:160]     with loss weight 1
I0419 16:48:08.164717  5082 net.cpp:165] Memory required for data: 273844640
I0419 16:48:08.164732  5082 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0419 16:48:08.164753  5082 net.cpp:106] Creating Layer rpn_loss_bbox
I0419 16:48:08.164768  5082 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0419 16:48:08.164796  5082 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0419 16:48:08.164813  5082 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0419 16:48:08.164827  5082 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0419 16:48:08.164844  5082 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0419 16:48:08.165467  5082 net.cpp:150] Setting up rpn_loss_bbox
I0419 16:48:08.165483  5082 net.cpp:157] Top shape: (1)
I0419 16:48:08.165488  5082 net.cpp:160]     with loss weight 1
I0419 16:48:08.165496  5082 net.cpp:165] Memory required for data: 273844644
I0419 16:48:08.165501  5082 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0419 16:48:08.165518  5082 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0419 16:48:08.165540  5082 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0419 16:48:08.165597  5082 net.cpp:150] Setting up dummy_roi_pool_conv5
I0419 16:48:08.165617  5082 net.cpp:157] Top shape: 1 9216 (9216)
I0419 16:48:08.165630  5082 net.cpp:165] Memory required for data: 273881508
I0419 16:48:08.165644  5082 layer_factory.hpp:77] Creating layer fc6
I0419 16:48:08.165668  5082 net.cpp:106] Creating Layer fc6
I0419 16:48:08.165683  5082 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0419 16:48:08.165700  5082 net.cpp:411] fc6 -> fc6
I0419 16:48:08.263763  5082 net.cpp:150] Setting up fc6
I0419 16:48:08.263809  5082 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:48:08.263815  5082 net.cpp:165] Memory required for data: 273897892
I0419 16:48:08.263837  5082 layer_factory.hpp:77] Creating layer relu6
I0419 16:48:08.263851  5082 net.cpp:106] Creating Layer relu6
I0419 16:48:08.263857  5082 net.cpp:454] relu6 <- fc6
I0419 16:48:08.263866  5082 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:48:08.263900  5082 net.cpp:150] Setting up relu6
I0419 16:48:08.263918  5082 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:48:08.263931  5082 net.cpp:165] Memory required for data: 273914276
I0419 16:48:08.263943  5082 layer_factory.hpp:77] Creating layer fc7
I0419 16:48:08.263963  5082 net.cpp:106] Creating Layer fc7
I0419 16:48:08.263999  5082 net.cpp:454] fc7 <- fc6
I0419 16:48:08.264019  5082 net.cpp:411] fc7 -> fc7
I0419 16:48:08.307487  5082 net.cpp:150] Setting up fc7
I0419 16:48:08.307529  5082 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:48:08.307534  5082 net.cpp:165] Memory required for data: 273930660
I0419 16:48:08.307548  5082 layer_factory.hpp:77] Creating layer silence_fc7
I0419 16:48:08.307571  5082 net.cpp:106] Creating Layer silence_fc7
I0419 16:48:08.307579  5082 net.cpp:454] silence_fc7 <- fc7
I0419 16:48:08.307588  5082 net.cpp:150] Setting up silence_fc7
I0419 16:48:08.307607  5082 net.cpp:165] Memory required for data: 273930660
I0419 16:48:08.307622  5082 net.cpp:228] silence_fc7 does not need backward computation.
I0419 16:48:08.307636  5082 net.cpp:228] fc7 does not need backward computation.
I0419 16:48:08.307649  5082 net.cpp:228] relu6 does not need backward computation.
I0419 16:48:08.307662  5082 net.cpp:228] fc6 does not need backward computation.
I0419 16:48:08.307675  5082 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0419 16:48:08.307689  5082 net.cpp:226] rpn_loss_bbox needs backward computation.
I0419 16:48:08.307704  5082 net.cpp:226] rpn_loss_cls needs backward computation.
I0419 16:48:08.307719  5082 net.cpp:226] rpn-data needs backward computation.
I0419 16:48:08.307737  5082 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0419 16:48:08.307751  5082 net.cpp:226] rpn_bbox_pred needs backward computation.
I0419 16:48:08.307767  5082 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0419 16:48:08.307781  5082 net.cpp:226] rpn_cls_score needs backward computation.
I0419 16:48:08.307796  5082 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0419 16:48:08.307811  5082 net.cpp:226] rpn_relu1 needs backward computation.
I0419 16:48:08.307826  5082 net.cpp:226] rpn_conv1 needs backward computation.
I0419 16:48:08.307839  5082 net.cpp:228] relu5 does not need backward computation.
I0419 16:48:08.307874  5082 net.cpp:228] conv5 does not need backward computation.
I0419 16:48:08.307889  5082 net.cpp:228] relu4 does not need backward computation.
I0419 16:48:08.307904  5082 net.cpp:228] conv4 does not need backward computation.
I0419 16:48:08.307917  5082 net.cpp:228] relu3 does not need backward computation.
I0419 16:48:08.307930  5082 net.cpp:228] conv3 does not need backward computation.
I0419 16:48:08.307945  5082 net.cpp:228] pool2 does not need backward computation.
I0419 16:48:08.307962  5082 net.cpp:228] norm2 does not need backward computation.
I0419 16:48:08.307976  5082 net.cpp:228] relu2 does not need backward computation.
I0419 16:48:08.307989  5082 net.cpp:228] conv2 does not need backward computation.
I0419 16:48:08.308004  5082 net.cpp:228] pool1 does not need backward computation.
I0419 16:48:08.308018  5082 net.cpp:228] norm1 does not need backward computation.
I0419 16:48:08.308033  5082 net.cpp:228] relu1 does not need backward computation.
I0419 16:48:08.308046  5082 net.cpp:228] conv1 does not need backward computation.
I0419 16:48:08.308061  5082 net.cpp:228] data_input-data_0_split does not need backward computation.
I0419 16:48:08.308076  5082 net.cpp:228] input-data does not need backward computation.
I0419 16:48:08.308089  5082 net.cpp:270] This network produces output rpn_cls_loss
I0419 16:48:08.308102  5082 net.cpp:270] This network produces output rpn_loss_bbox
I0419 16:48:08.308149  5082 net.cpp:283] Network initialization done.
I0419 16:48:08.308318  5082 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_100.caffemodel
I0419 16:48:08.749234  5082 net.cpp:816] Ignoring source layer data
I0419 16:48:08.752353  5082 net.cpp:816] Ignoring source layer conv5_relu5_0_split
I0419 16:48:08.752374  5082 net.cpp:816] Ignoring source layer roi_pool_conv5
I0419 16:48:08.782968  5082 net.cpp:816] Ignoring source layer drop6
I0419 16:48:08.796526  5082 net.cpp:816] Ignoring source layer relu7
I0419 16:48:08.796555  5082 net.cpp:816] Ignoring source layer drop7
I0419 16:48:08.796560  5082 net.cpp:816] Ignoring source layer fc7_drop7_0_split
I0419 16:48:08.796564  5082 net.cpp:816] Ignoring source layer cls_score
I0419 16:48:08.796567  5082 net.cpp:816] Ignoring source layer bbox_pred
I0419 16:48:08.796571  5082 net.cpp:816] Ignoring source layer loss_cls
I0419 16:48:08.796574  5082 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:48:08.797094  5082 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:48:08.797107  5082 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Solving...
I0419 16:48:09.052459  5082 solver.cpp:229] Iteration 0, loss = 1.1888
I0419 16:48:09.052505  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.70785 (* 1 = 0.70785 loss)
I0419 16:48:09.052518  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.480947 (* 1 = 0.480947 loss)
I0419 16:48:09.052533  5082 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:48:13.357849  5082 solver.cpp:229] Iteration 20, loss = 0.532486
I0419 16:48:13.357895  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.246661 (* 1 = 0.246661 loss)
I0419 16:48:13.357905  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.285825 (* 1 = 0.285825 loss)
I0419 16:48:13.357913  5082 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:48:17.589521  5082 solver.cpp:229] Iteration 40, loss = 0.387418
I0419 16:48:17.589570  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.208893 (* 1 = 0.208893 loss)
I0419 16:48:17.589581  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.178525 (* 1 = 0.178525 loss)
I0419 16:48:17.589588  5082 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:48:22.007763  5082 solver.cpp:229] Iteration 60, loss = 0.931276
I0419 16:48:22.007807  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.460186 (* 1 = 0.460186 loss)
I0419 16:48:22.007817  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.471089 (* 1 = 0.471089 loss)
I0419 16:48:22.007825  5082 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:48:26.316035  5082 solver.cpp:229] Iteration 80, loss = 0.649747
I0419 16:48:26.316082  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.433855 (* 1 = 0.433855 loss)
I0419 16:48:26.316094  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.215892 (* 1 = 0.215892 loss)
I0419 16:48:26.316102  5082 sgd_solver.cpp:106] Iteration 80, lr = 0.001
I0419 16:48:30.678759  5082 solver.cpp:229] Iteration 100, loss = 0.288423
I0419 16:48:30.678812  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.249034 (* 1 = 0.249034 loss)
I0419 16:48:30.678822  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0393885 (* 1 = 0.0393885 loss)
I0419 16:48:30.678829  5082 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0419 16:48:34.968920  5082 solver.cpp:229] Iteration 120, loss = 0.764852
I0419 16:48:34.968967  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.285139 (* 1 = 0.285139 loss)
I0419 16:48:34.968978  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.479713 (* 1 = 0.479713 loss)
I0419 16:48:34.968986  5082 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0419 16:48:39.463162  5082 solver.cpp:229] Iteration 140, loss = 0.244432
I0419 16:48:39.463209  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.110122 (* 1 = 0.110122 loss)
I0419 16:48:39.463220  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.134311 (* 1 = 0.134311 loss)
I0419 16:48:39.463228  5082 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0419 16:48:43.801853  5082 solver.cpp:229] Iteration 160, loss = 0.350078
I0419 16:48:43.801900  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.185072 (* 1 = 0.185072 loss)
I0419 16:48:43.801911  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.165006 (* 1 = 0.165006 loss)
I0419 16:48:43.801918  5082 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0419 16:48:48.095031  5082 solver.cpp:229] Iteration 180, loss = 0.268064
I0419 16:48:48.095080  5082 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.187254 (* 1 = 0.187254 loss)
I0419 16:48:48.095091  5082 solver.cpp:245]     Train net output #1: rpn_loss_bbox = 0.0808104 (* 1 = 0.0808104 loss)
I0419 16:48:48.095099  5082 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.217s / iter
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:48:53.508896  5090 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0419 16:48:53.509083  5090 net.cpp:413] Input 0 -> data
I0419 16:48:53.564872  5090 net.cpp:413] Input 1 -> im_info
I0419 16:48:53.564934  5090 layer_factory.hpp:77] Creating layer conv1
I0419 16:48:53.564975  5090 net.cpp:106] Creating Layer conv1
I0419 16:48:53.564993  5090 net.cpp:454] conv1 <- data
I0419 16:48:53.565021  5090 net.cpp:411] conv1 -> conv1
I0419 16:48:53.565805  5090 net.cpp:150] Setting up conv1
I0419 16:48:53.565832  5090 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:48:53.565837  5090 net.cpp:165] Memory required for data: 4816896
I0419 16:48:53.565856  5090 layer_factory.hpp:77] Creating layer relu1
I0419 16:48:53.565883  5090 net.cpp:106] Creating Layer relu1
I0419 16:48:53.565901  5090 net.cpp:454] relu1 <- conv1
I0419 16:48:53.565920  5090 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:48:53.565944  5090 net.cpp:150] Setting up relu1
I0419 16:48:53.565963  5090 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:48:53.565976  5090 net.cpp:165] Memory required for data: 9633792
I0419 16:48:53.565989  5090 layer_factory.hpp:77] Creating layer norm1
I0419 16:48:53.566009  5090 net.cpp:106] Creating Layer norm1
I0419 16:48:53.566023  5090 net.cpp:454] norm1 <- conv1
I0419 16:48:53.566042  5090 net.cpp:411] norm1 -> norm1
I0419 16:48:53.566202  5090 net.cpp:150] Setting up norm1
I0419 16:48:53.566220  5090 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0419 16:48:53.566223  5090 net.cpp:165] Memory required for data: 14450688
I0419 16:48:53.566228  5090 layer_factory.hpp:77] Creating layer pool1
I0419 16:48:53.566241  5090 net.cpp:106] Creating Layer pool1
I0419 16:48:53.566257  5090 net.cpp:454] pool1 <- norm1
I0419 16:48:53.566293  5090 net.cpp:411] pool1 -> pool1
I0419 16:48:53.566376  5090 net.cpp:150] Setting up pool1
I0419 16:48:53.566402  5090 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0419 16:48:53.566417  5090 net.cpp:165] Memory required for data: 15698304
I0419 16:48:53.566432  5090 layer_factory.hpp:77] Creating layer conv2
I0419 16:48:53.566453  5090 net.cpp:106] Creating Layer conv2
I0419 16:48:53.566468  5090 net.cpp:454] conv2 <- pool1
I0419 16:48:53.566488  5090 net.cpp:411] conv2 -> conv2
I0419 16:48:53.568856  5090 net.cpp:150] Setting up conv2
I0419 16:48:53.568876  5090 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:48:53.568881  5090 net.cpp:165] Memory required for data: 16559488
I0419 16:48:53.568894  5090 layer_factory.hpp:77] Creating layer relu2
I0419 16:48:53.568907  5090 net.cpp:106] Creating Layer relu2
I0419 16:48:53.568927  5090 net.cpp:454] relu2 <- conv2
I0419 16:48:53.568945  5090 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:48:53.568965  5090 net.cpp:150] Setting up relu2
I0419 16:48:53.568982  5090 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:48:53.568996  5090 net.cpp:165] Memory required for data: 17420672
I0419 16:48:53.569010  5090 layer_factory.hpp:77] Creating layer norm2
I0419 16:48:53.569027  5090 net.cpp:106] Creating Layer norm2
I0419 16:48:53.569041  5090 net.cpp:454] norm2 <- conv2
I0419 16:48:53.569061  5090 net.cpp:411] norm2 -> norm2
I0419 16:48:53.569202  5090 net.cpp:150] Setting up norm2
I0419 16:48:53.569226  5090 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0419 16:48:53.569241  5090 net.cpp:165] Memory required for data: 18281856
I0419 16:48:53.569254  5090 layer_factory.hpp:77] Creating layer pool2
I0419 16:48:53.569272  5090 net.cpp:106] Creating Layer pool2
I0419 16:48:53.569286  5090 net.cpp:454] pool2 <- norm2
I0419 16:48:53.569306  5090 net.cpp:411] pool2 -> pool2
I0419 16:48:53.569365  5090 net.cpp:150] Setting up pool2
I0419 16:48:53.569384  5090 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:48:53.569398  5090 net.cpp:165] Memory required for data: 18512256
I0419 16:48:53.569425  5090 layer_factory.hpp:77] Creating layer conv3
I0419 16:48:53.569450  5090 net.cpp:106] Creating Layer conv3
I0419 16:48:53.569466  5090 net.cpp:454] conv3 <- pool2
I0419 16:48:53.569486  5090 net.cpp:411] conv3 -> conv3
I0419 16:48:53.571818  5090 net.cpp:150] Setting up conv3
I0419 16:48:53.571838  5090 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:48:53.571843  5090 net.cpp:165] Memory required for data: 18857856
I0419 16:48:53.571856  5090 layer_factory.hpp:77] Creating layer relu3
I0419 16:48:53.571866  5090 net.cpp:106] Creating Layer relu3
I0419 16:48:53.571883  5090 net.cpp:454] relu3 <- conv3
I0419 16:48:53.571905  5090 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:48:53.571926  5090 net.cpp:150] Setting up relu3
I0419 16:48:53.571943  5090 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:48:53.571956  5090 net.cpp:165] Memory required for data: 19203456
I0419 16:48:53.571970  5090 layer_factory.hpp:77] Creating layer conv4
I0419 16:48:53.571990  5090 net.cpp:106] Creating Layer conv4
I0419 16:48:53.572005  5090 net.cpp:454] conv4 <- conv3
I0419 16:48:53.572024  5090 net.cpp:411] conv4 -> conv4
I0419 16:48:53.575363  5090 net.cpp:150] Setting up conv4
I0419 16:48:53.575384  5090 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:48:53.575389  5090 net.cpp:165] Memory required for data: 19549056
I0419 16:48:53.575399  5090 layer_factory.hpp:77] Creating layer relu4
I0419 16:48:53.575407  5090 net.cpp:106] Creating Layer relu4
I0419 16:48:53.575426  5090 net.cpp:454] relu4 <- conv4
I0419 16:48:53.575448  5090 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:48:53.575470  5090 net.cpp:150] Setting up relu4
I0419 16:48:53.575487  5090 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0419 16:48:53.575501  5090 net.cpp:165] Memory required for data: 19894656
I0419 16:48:53.575515  5090 layer_factory.hpp:77] Creating layer conv5
I0419 16:48:53.575538  5090 net.cpp:106] Creating Layer conv5
I0419 16:48:53.575553  5090 net.cpp:454] conv5 <- conv4
I0419 16:48:53.575582  5090 net.cpp:411] conv5 -> conv5
I0419 16:48:53.577939  5090 net.cpp:150] Setting up conv5
I0419 16:48:53.577960  5090 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:48:53.577963  5090 net.cpp:165] Memory required for data: 20125056
I0419 16:48:53.577976  5090 layer_factory.hpp:77] Creating layer relu5
I0419 16:48:53.577999  5090 net.cpp:106] Creating Layer relu5
I0419 16:48:53.578016  5090 net.cpp:454] relu5 <- conv5
I0419 16:48:53.578039  5090 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:48:53.578060  5090 net.cpp:150] Setting up relu5
I0419 16:48:53.578078  5090 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:48:53.578091  5090 net.cpp:165] Memory required for data: 20355456
I0419 16:48:53.578106  5090 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:48:53.578130  5090 net.cpp:106] Creating Layer rpn_conv1
I0419 16:48:53.578145  5090 net.cpp:454] rpn_conv1 <- conv5
I0419 16:48:53.578163  5090 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:48:53.579823  5090 net.cpp:150] Setting up rpn_conv1
I0419 16:48:53.579843  5090 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:48:53.579849  5090 net.cpp:165] Memory required for data: 20585856
I0419 16:48:53.579857  5090 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:48:53.579869  5090 net.cpp:106] Creating Layer rpn_relu1
I0419 16:48:53.579887  5090 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:48:53.579906  5090 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:48:53.579926  5090 net.cpp:150] Setting up rpn_relu1
I0419 16:48:53.579944  5090 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:48:53.579957  5090 net.cpp:165] Memory required for data: 20816256
I0419 16:48:53.579972  5090 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:48:53.579994  5090 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:48:53.580008  5090 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:48:53.580029  5090 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:48:53.580060  5090 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:48:53.580121  5090 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:48:53.580140  5090 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:48:53.580157  5090 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0419 16:48:53.580169  5090 net.cpp:165] Memory required for data: 21277056
I0419 16:48:53.580183  5090 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:48:53.580210  5090 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:48:53.580225  5090 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:48:53.580242  5090 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:48:53.580461  5090 net.cpp:150] Setting up rpn_cls_score
I0419 16:48:53.580478  5090 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:48:53.580482  5090 net.cpp:165] Memory required for data: 21293256
I0419 16:48:53.580492  5090 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:48:53.580504  5090 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:48:53.580521  5090 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:48:53.580539  5090 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:48:53.580778  5090 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:48:53.580795  5090 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0419 16:48:53.580798  5090 net.cpp:165] Memory required for data: 21325656
I0419 16:48:53.580806  5090 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:48:53.580821  5090 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:48:53.580837  5090 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:48:53.580855  5090 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:48:53.580912  5090 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:48:53.580934  5090 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:48:53.580946  5090 net.cpp:165] Memory required for data: 21341856
I0419 16:48:53.580960  5090 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:48:53.580988  5090 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:48:53.581004  5090 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:48:53.581023  5090 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:48:53.581110  5090 net.cpp:150] Setting up rpn_cls_prob
I0419 16:48:53.581125  5090 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0419 16:48:53.581128  5090 net.cpp:165] Memory required for data: 21358056
I0419 16:48:53.581133  5090 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:48:53.581145  5090 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:48:53.581161  5090 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:48:53.581178  5090 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:48:53.581225  5090 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:48:53.581245  5090 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0419 16:48:53.581259  5090 net.cpp:165] Memory required for data: 21374256
I0419 16:48:53.581272  5090 layer_factory.hpp:77] Creating layer proposal
I0419 16:48:53.583226  5090 net.cpp:106] Creating Layer proposal
I0419 16:48:53.583248  5090 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:48:53.583256  5090 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:48:53.583261  5090 net.cpp:454] proposal <- im_info
I0419 16:48:53.583271  5090 net.cpp:411] proposal -> rois
I0419 16:48:53.583281  5090 net.cpp:411] proposal -> scores
I0419 16:48:53.584676  5090 net.cpp:150] Setting up proposal
I0419 16:48:53.584700  5090 net.cpp:157] Top shape: 1 5 (5)
I0419 16:48:53.584707  5090 net.cpp:157] Top shape: 1 1 1 1 (1)
I0419 16:48:53.584712  5090 net.cpp:165] Memory required for data: 21374280
I0419 16:48:53.584717  5090 net.cpp:228] proposal does not need backward computation.
I0419 16:48:53.584723  5090 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:48:53.584729  5090 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:48:53.584749  5090 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:48:53.584779  5090 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:48:53.584794  5090 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:48:53.584810  5090 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:48:53.584823  5090 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:48:53.584836  5090 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:48:53.584849  5090 net.cpp:228] relu5 does not need backward computation.
I0419 16:48:53.584863  5090 net.cpp:228] conv5 does not need backward computation.
I0419 16:48:53.584877  5090 net.cpp:228] relu4 does not need backward computation.
I0419 16:48:53.584890  5090 net.cpp:228] conv4 does not need backward computation.
I0419 16:48:53.584903  5090 net.cpp:228] relu3 does not need backward computation.
I0419 16:48:53.584916  5090 net.cpp:228] conv3 does not need backward computation.
I0419 16:48:53.584929  5090 net.cpp:228] pool2 does not need backward computation.
I0419 16:48:53.584944  5090 net.cpp:228] norm2 does not need backward computation.
I0419 16:48:53.584957  5090 net.cpp:228] relu2 does not need backward computation.
I0419 16:48:53.584970  5090 net.cpp:228] conv2 does not need backward computation.
I0419 16:48:53.584983  5090 net.cpp:228] pool1 does not need backward computation.
I0419 16:48:53.584996  5090 net.cpp:228] norm1 does not need backward computation.
I0419 16:48:53.585009  5090 net.cpp:228] relu1 does not need backward computation.
I0419 16:48:53.585022  5090 net.cpp:228] conv1 does not need backward computation.
I0419 16:48:53.585036  5090 net.cpp:270] This network produces output rois
I0419 16:48:53.585050  5090 net.cpp:270] This network produces output scores
I0419 16:48:53.585085  5090 net.cpp:283] Network initialization done.
I0419 16:48:54.025665  5090 net.cpp:816] Ignoring source layer input-data
I0419 16:48:54.025730  5090 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:48:54.029395  5090 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:48:54.029424  5090 net.cpp:816] Ignoring source layer rpn-data
I0419 16:48:54.029429  5090 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:48:54.029433  5090 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:48:54.029438  5090 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:48:54.029441  5090 net.cpp:816] Ignoring source layer fc6
I0419 16:48:54.029445  5090 net.cpp:816] Ignoring source layer relu6
I0419 16:48:54.029449  5090 net.cpp:816] Ignoring source layer fc7
I0419 16:48:54.029453  5090 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.300s
im_proposals: 2/506 0.386s
im_proposals: 3/506 0.343s
im_proposals: 4/506 0.385s
im_proposals: 5/506 0.360s
im_proposals: 6/506 0.380s
im_proposals: 7/506 0.365s
im_proposals: 8/506 0.382s
im_proposals: 9/506 0.370s
im_proposals: 10/506 0.381s
im_proposals: 11/506 0.371s
im_proposals: 12/506 0.383s
im_proposals: 13/506 0.374s
im_proposals: 14/506 0.382s
im_proposals: 15/506 0.374s
im_proposals: 16/506 0.383s
im_proposals: 17/506 0.376s
im_proposals: 18/506 0.382s
im_proposals: 19/506 0.376s
im_proposals: 20/506 0.383s
im_proposals: 21/506 0.377s
im_proposals: 22/506 0.382s
im_proposals: 23/506 0.377s
im_proposals: 24/506 0.383s
im_proposals: 25/506 0.378s
im_proposals: 26/506 0.382s
im_proposals: 27/506 0.378s
im_proposals: 28/506 0.382s
im_proposals: 29/506 0.378s
im_proposals: 30/506 0.382s
im_proposals: 31/506 0.378s
im_proposals: 32/506 0.382s
im_proposals: 33/506 0.379s
im_proposals: 34/506 0.382s
im_proposals: 35/506 0.378s
im_proposals: 36/506 0.382s
im_proposals: 37/506 0.379s
im_proposals: 38/506 0.381s
im_proposals: 39/506 0.378s
im_proposals: 40/506 0.382s
im_proposals: 41/506 0.379s
im_proposals: 42/506 0.381s
im_proposals: 43/506 0.378s
im_proposals: 44/506 0.382s
im_proposals: 45/506 0.379s
im_proposals: 46/506 0.381s
im_proposals: 47/506 0.379s
im_proposals: 48/506 0.381s
im_proposals: 49/506 0.379s
im_proposals: 50/506 0.381s
im_proposals: 51/506 0.379s
im_proposals: 52/506 0.381s
im_proposals: 53/506 0.379s
im_proposals: 54/506 0.381s
im_proposals: 55/506 0.379s
im_proposals: 56/506 0.381s
im_proposals: 57/506 0.379s
im_proposals: 58/506 0.381s
im_proposals: 59/506 0.379s
im_proposals: 60/506 0.381s
im_proposals: 61/506 0.379s
im_proposals: 62/506 0.381s
im_proposals: 63/506 0.379s
im_proposals: 64/506 0.381s
im_proposals: 65/506 0.379s
im_proposals: 66/506 0.381s
im_proposals: 67/506 0.379s
im_proposals: 68/506 0.381s
im_proposals: 69/506 0.380s
im_proposals: 70/506 0.381s
im_proposals: 71/506 0.380s
im_proposals: 72/506 0.382s
im_proposals: 73/506 0.380s
im_proposals: 74/506 0.381s
im_proposals: 75/506 0.380s
im_proposals: 76/506 0.382s
im_proposals: 77/506 0.380s
im_proposals: 78/506 0.382s
im_proposals: 79/506 0.380s
im_proposals: 80/506 0.382s
im_proposals: 81/506 0.380s
im_proposals: 82/506 0.381s
im_proposals: 83/506 0.380s
im_proposals: 84/506 0.382s
im_proposals: 85/506 0.380s
im_proposals: 86/506 0.381s
im_proposals: 87/506 0.380s
im_proposals: 88/506 0.382s
im_proposals: 89/506 0.380s
im_proposals: 90/506 0.381s
im_proposals: 91/506 0.380s
im_proposals: 92/506 0.382s
im_proposals: 93/506 0.380s
im_proposals: 94/506 0.381s
im_proposals: 95/506 0.380s
im_proposals: 96/506 0.382s
im_proposals: 97/506 0.381s
im_proposals: 98/506 0.382s
im_proposals: 99/506 0.380s
im_proposals: 100/506 0.382s
im_proposals: 101/506 0.381s
im_proposals: 102/506 0.382s
im_proposals: 103/506 0.380s
im_proposals: 104/506 0.382s
im_proposals: 105/506 0.381s
im_proposals: 106/506 0.382s
im_proposals: 107/506 0.380s
im_proposals: 108/506 0.382s
im_proposals: 109/506 0.381s
im_proposals: 110/506 0.382s
im_proposals: 111/506 0.381s
im_proposals: 112/506 0.382s
im_proposals: 113/506 0.381s
im_proposals: 114/506 0.382s
im_proposals: 115/506 0.381s
im_proposals: 116/506 0.382s
im_proposals: 117/506 0.381s
im_proposals: 118/506 0.382s
im_proposals: 119/506 0.381s
im_proposals: 120/506 0.382s
im_proposals: 121/506 0.381s
im_proposals: 122/506 0.382s
im_proposals: 123/506 0.381s
im_proposals: 124/506 0.382s
im_proposals: 125/506 0.381s
im_proposals: 126/506 0.382s
im_proposals: 127/506 0.381s
im_proposals: 128/506 0.382s
im_proposals: 129/506 0.381s
im_proposals: 130/506 0.382s
im_proposals: 131/506 0.381s
im_proposals: 132/506 0.382s
im_proposals: 133/506 0.381s
im_proposals: 134/506 0.382s
im_proposals: 135/506 0.381s
im_proposals: 136/506 0.382s
im_proposals: 137/506 0.381s
im_proposals: 138/506 0.382s
im_proposals: 139/506 0.381s
im_proposals: 140/506 0.382s
im_proposals: 141/506 0.381s
im_proposals: 142/506 0.382s
im_proposals: 143/506 0.381s
im_proposals: 144/506 0.382s
im_proposals: 145/506 0.381s
im_proposals: 146/506 0.382s
im_proposals: 147/506 0.381s
im_proposals: 148/506 0.382s
im_proposals: 149/506 0.381s
im_proposals: 150/506 0.382s
im_proposals: 151/506 0.381s
im_proposals: 152/506 0.382s
im_proposals: 153/506 0.381s
im_proposals: 154/506 0.382s
im_proposals: 155/506 0.381s
im_proposals: 156/506 0.382s
im_proposals: 157/506 0.381s
im_proposals: 158/506 0.382s
im_proposals: 159/506 0.381s
im_proposals: 160/506 0.382s
im_proposals: 161/506 0.381s
im_proposals: 162/506 0.382s
im_proposals: 163/506 0.381s
im_proposals: 164/506 0.382s
im_proposals: 165/506 0.381s
im_proposals: 166/506 0.382s
im_proposals: 167/506 0.381s
im_proposals: 168/506 0.382s
im_proposals: 169/506 0.381s
im_proposals: 170/506 0.382s
im_proposals: 171/506 0.381s
im_proposals: 172/506 0.382s
im_proposals: 173/506 0.381s
im_proposals: 174/506 0.381s
im_proposals: 175/506 0.381s
im_proposals: 176/506 0.382s
im_proposals: 177/506 0.381s
im_proposals: 178/506 0.381s
im_proposals: 179/506 0.381s
im_proposals: 180/506 0.382s
im_proposals: 181/506 0.381s
im_proposals: 182/506 0.382s
im_proposals: 183/506 0.381s
im_proposals: 184/506 0.382s
im_proposals: 185/506 0.381s
im_proposals: 186/506 0.381s
im_proposals: 187/506 0.381s
im_proposals: 188/506 0.382s
im_proposals: 189/506 0.381s
im_proposals: 190/506 0.381s
im_proposals: 191/506 0.381s
im_proposals: 192/506 0.382s
im_proposals: 193/506 0.381s
im_proposals: 194/506 0.381s
im_proposals: 195/506 0.381s
im_proposals: 196/506 0.381s
im_proposals: 197/506 0.381s
im_proposals: 198/506 0.381s
im_proposals: 199/506 0.381s
im_proposals: 200/506 0.382s
im_proposals: 201/506 0.381s
im_proposals: 202/506 0.381s
im_proposals: 203/506 0.381s
im_proposals: 204/506 0.381s
im_proposals: 205/506 0.381s
im_proposals: 206/506 0.381s
im_proposals: 207/506 0.381s
im_proposals: 208/506 0.382s
im_proposals: 209/506 0.381s
im_proposals: 210/506 0.381s
im_proposals: 211/506 0.381s
im_proposals: 212/506 0.381s
im_proposals: 213/506 0.381s
im_proposals: 214/506 0.381s
im_proposals: 215/506 0.381s
im_proposals: 216/506 0.381s
im_proposals: 217/506 0.381s
im_proposals: 218/506 0.381s
im_proposals: 219/506 0.381s
im_proposals: 220/506 0.381s
im_proposals: 221/506 0.381s
im_proposals: 222/506 0.381s
im_proposals: 223/506 0.381s
im_proposals: 224/506 0.381s
im_proposals: 225/506 0.381s
im_proposals: 226/506 0.381s
im_proposals: 227/506 0.381s
im_proposals: 228/506 0.381s
im_proposals: 229/506 0.381s
im_proposals: 230/506 0.381s
im_proposals: 231/506 0.381s
im_proposals: 232/506 0.381s
im_proposals: 233/506 0.381s
im_proposals: 234/506 0.381s
im_proposals: 235/506 0.381s
im_proposals: 236/506 0.381s
im_proposals: 237/506 0.381s
im_proposals: 238/506 0.381s
im_proposals: 239/506 0.381s
im_proposals: 240/506 0.381s
im_proposals: 241/506 0.381s
im_proposals: 242/506 0.381s
im_proposals: 243/506 0.381s
im_proposals: 244/506 0.381s
im_proposals: 245/506 0.381s
im_proposals: 246/506 0.381s
im_proposals: 247/506 0.381s
im_proposals: 248/506 0.381s
im_proposals: 249/506 0.381s
im_proposals: 250/506 0.381s
im_proposals: 251/506 0.381s
im_proposals: 252/506 0.381s
im_proposals: 253/506 0.381s
im_proposals: 254/506 0.381s
im_proposals: 255/506 0.381s
im_proposals: 256/506 0.381s
im_proposals: 257/506 0.381s
im_proposals: 258/506 0.381s
im_proposals: 259/506 0.381s
im_proposals: 260/506 0.381s
im_proposals: 261/506 0.381s
im_proposals: 262/506 0.381s
im_proposals: 263/506 0.381s
im_proposals: 264/506 0.381s
im_proposals: 265/506 0.381s
im_proposals: 266/506 0.381s
im_proposals: 267/506 0.381s
im_proposals: 268/506 0.381s
im_proposals: 269/506 0.381s
im_proposals: 270/506 0.381s
im_proposals: 271/506 0.381s
im_proposals: 272/506 0.381s
im_proposals: 273/506 0.380s
im_proposals: 274/506 0.381s
im_proposals: 275/506 0.380s
im_proposals: 276/506 0.381s
im_proposals: 277/506 0.380s
im_proposals: 278/506 0.381s
im_proposals: 279/506 0.380s
im_proposals: 280/506 0.381s
im_proposals: 281/506 0.380s
im_proposals: 282/506 0.381s
im_proposals: 283/506 0.380s
im_proposals: 284/506 0.381s
im_proposals: 285/506 0.381s
im_proposals: 286/506 0.381s
im_proposals: 287/506 0.380s
im_proposals: 288/506 0.381s
im_proposals: 289/506 0.381s
im_proposals: 290/506 0.381s
im_proposals: 291/506 0.380s
im_proposals: 292/506 0.381s
im_proposals: 293/506 0.381s
im_proposals: 294/506 0.381s
im_proposals: 295/506 0.380s
im_proposals: 296/506 0.381s
im_proposals: 297/506 0.381s
im_proposals: 298/506 0.381s
im_proposals: 299/506 0.381s
im_proposals: 300/506 0.381s
im_proposals: 301/506 0.381s
im_proposals: 302/506 0.381s
im_proposals: 303/506 0.381s
im_proposals: 304/506 0.381s
im_proposals: 305/506 0.381s
im_proposals: 306/506 0.381s
im_proposals: 307/506 0.381s
im_proposals: 308/506 0.381s
im_proposals: 309/506 0.381s
im_proposals: 310/506 0.381s
im_proposals: 311/506 0.381s
im_proposals: 312/506 0.381s
im_proposals: 313/506 0.381s
im_proposals: 314/506 0.381s
im_proposals: 315/506 0.381s
im_proposals: 316/506 0.381s
im_proposals: 317/506 0.381s
im_proposals: 318/506 0.381s
im_proposals: 319/506 0.381s
im_proposals: 320/506 0.381s
im_proposals: 321/506 0.381s
im_proposals: 322/506 0.381s
im_proposals: 323/506 0.381s
im_proposals: 324/506 0.381s
im_proposals: 325/506 0.381s
im_proposals: 326/506 0.381s
im_proposals: 327/506 0.381s
im_proposals: 328/506 0.381s
im_proposals: 329/506 0.381s
im_proposals: 330/506 0.381s
im_proposals: 331/506 0.381s
im_proposals: 332/506 0.381s
im_proposals: 333/506 0.381s
im_proposals: 334/506 0.381s
im_proposals: 335/506 0.381s
im_proposals: 336/506 0.381s
im_proposals: 337/506 0.381s
im_proposals: 338/506 0.381s
im_proposals: 339/506 0.381s
im_proposals: 340/506 0.381s
im_proposals: 341/506 0.381s
im_proposals: 342/506 0.381s
im_proposals: 343/506 0.381s
im_proposals: 344/506 0.381s
im_proposals: 345/506 0.381s
im_proposals: 346/506 0.381s
im_proposals: 347/506 0.381s
im_proposals: 348/506 0.381s
im_proposals: 349/506 0.381s
im_proposals: 350/506 0.381s
im_proposals: 351/506 0.381s
im_proposals: 352/506 0.381s
im_proposals: 353/506 0.381s
im_proposals: 354/506 0.381s
im_proposals: 355/506 0.381s
im_proposals: 356/506 0.381s
im_proposals: 357/506 0.381s
im_proposals: 358/506 0.381s
im_proposals: 359/506 0.380s
im_proposals: 360/506 0.381s
im_proposals: 361/506 0.380s
im_proposals: 362/506 0.381s
im_proposals: 363/506 0.380s
im_proposals: 364/506 0.381s
im_proposals: 365/506 0.380s
im_proposals: 366/506 0.381s
im_proposals: 367/506 0.380s
im_proposals: 368/506 0.381s
im_proposals: 369/506 0.380s
im_proposals: 370/506 0.381s
im_proposals: 371/506 0.380s
im_proposals: 372/506 0.381s
im_proposals: 373/506 0.380s
im_proposals: 374/506 0.381s
im_proposals: 375/506 0.380s
im_proposals: 376/506 0.381s
im_proposals: 377/506 0.380s
im_proposals: 378/506 0.381s
im_proposals: 379/506 0.380s
im_proposals: 380/506 0.381s
im_proposals: 381/506 0.380s
im_proposals: 382/506 0.381s
im_proposals: 383/506 0.380s
im_proposals: 384/506 0.381s
im_proposals: 385/506 0.380s
im_proposals: 386/506 0.381s
im_proposals: 387/506 0.380s
im_proposals: 388/506 0.381s
im_proposals: 389/506 0.380s
im_proposals: 390/506 0.381s
im_proposals: 391/506 0.380s
im_proposals: 392/506 0.381s
im_proposals: 393/506 0.380s
im_proposals: 394/506 0.381s
im_proposals: 395/506 0.380s
im_proposals: 396/506 0.381s
im_proposals: 397/506 0.380s
im_proposals: 398/506 0.381s
im_proposals: 399/506 0.380s
im_proposals: 400/506 0.381s
im_proposals: 401/506 0.380s
im_proposals: 402/506 0.381s
im_proposals: 403/506 0.380s
im_proposals: 404/506 0.381s
im_proposals: 405/506 0.380s
im_proposals: 406/506 0.381s
im_proposals: 407/506 0.380s
im_proposals: 408/506 0.381s
im_proposals: 409/506 0.381s
im_proposals: 410/506 0.381s
im_proposals: 411/506 0.380s
im_proposals: 412/506 0.381s
im_proposals: 413/506 0.381s
im_proposals: 414/506 0.381s
im_proposals: 415/506 0.380s
im_proposals: 416/506 0.381s
im_proposals: 417/506 0.381s
im_proposals: 418/506 0.381s
im_proposals: 419/506 0.380s
im_proposals: 420/506 0.381s
im_proposals: 421/506 0.381s
im_proposals: 422/506 0.381s
im_proposals: 423/506 0.381s
im_proposals: 424/506 0.381s
im_proposals: 425/506 0.381s
im_proposals: 426/506 0.381s
im_proposals: 427/506 0.381s
im_proposals: 428/506 0.381s
im_proposals: 429/506 0.381s
im_proposals: 430/506 0.381s
im_proposals: 431/506 0.381s
im_proposals: 432/506 0.381s
im_proposals: 433/506 0.381s
im_proposals: 434/506 0.381s
im_proposals: 435/506 0.381s
im_proposals: 436/506 0.381s
im_proposals: 437/506 0.381s
im_proposals: 438/506 0.381s
im_proposals: 439/506 0.381s
im_proposals: 440/506 0.381s
im_proposals: 441/506 0.381s
im_proposals: 442/506 0.381s
im_proposals: 443/506 0.381s
im_proposals: 444/506 0.381s
im_proposals: 445/506 0.381s
im_proposals: 446/506 0.381s
im_proposals: 447/506 0.381s
im_proposals: 448/506 0.381s
im_proposals: 449/506 0.381s
im_proposals: 450/506 0.381s
im_proposals: 451/506 0.381s
im_proposals: 452/506 0.381s
im_proposals: 453/506 0.381s
im_proposals: 454/506 0.381s
im_proposals: 455/506 0.381s
im_proposals: 456/506 0.381s
im_proposals: 457/506 0.381s
im_proposals: 458/506 0.381s
im_proposals: 459/506 0.381s
im_proposals: 460/506 0.381s
im_proposals: 461/506 0.381s
im_proposals: 462/506 0.381s
im_proposals: 463/506 0.381s
im_proposals: 464/506 0.381s
im_proposals: 465/506 0.381s
im_proposals: 466/506 0.381s
im_proposals: 467/506 0.381s
im_proposals: 468/506 0.381s
im_proposals: 469/506 0.381s
im_proposals: 470/506 0.381s
im_proposals: 471/506 0.381s
im_proposals: 472/506 0.381s
im_proposals: 473/506 0.381s
im_proposals: 474/506 0.381s
im_proposals: 475/506 0.381s
im_proposals: 476/506 0.381s
im_proposals: 477/506 0.381s
im_proposals: 478/506 0.381s
im_proposals: 479/506 0.381s
im_proposals: 480/506 0.381s
im_proposals: 481/506 0.381s
im_proposals: 482/506 0.381s
im_proposals: 483/506 0.381s
im_proposals: 484/506 0.381s
im_proposals: 485/506 0.381s
im_proposals: 486/506 0.381s
im_proposals: 487/506 0.381s
im_proposals: 488/506 0.381s
im_proposals: 489/506 0.381s
im_proposals: 490/506 0.381s
im_proposals: 491/506 0.381s
im_proposals: 492/506 0.381s
im_proposals: 493/506 0.381s
im_proposals: 494/506 0.381s
im_proposals: 495/506 0.381s
im_proposals: 496/506 0.381s
im_proposals: 497/506 0.381s
im_proposals: 498/506 0.381s
im_proposals: 499/506 0.381s
im_proposals: 500/506 0.381s
im_proposals: 501/506 0.381s
im_proposals: 502/506 0.381s
im_proposals: 503/506 0.381s
im_proposals: 504/506 0.381s
im_proposals: 505/506 0.381s
im_proposals: 506/506 0.381s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 Fast R-CNN, init from stage 2 RPN R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.15217907e-07  -5.22005132e-03  -4.10793339e-02  -7.08718981e-02]
 [  8.92164694e-09   1.57054396e-02   2.19984295e-02  -2.78301045e-02]
 [ -1.94225821e-08  -8.61593031e-03   2.96989892e-02   6.69870494e-03]
 [ -7.33882189e-08   5.15535573e-02  -1.74732055e-02  -1.51888100e-02]
 [ -3.10440858e-09   3.40905333e-03   4.68776354e-02   1.95911229e-02]
 [  4.61332605e-08   5.50199124e-03   1.79429869e-03  -1.13158196e-02]
 [  6.25020928e-08   6.30476822e-03   4.30800884e-02  -2.43445225e-02]
 [ -6.09688356e-08   5.95824371e-03   3.37530213e-02   8.76786686e-05]
 [  1.42873350e-08  -3.70246134e-03   9.61448828e-03  -4.24198652e-02]
 [ -2.70083547e-08   1.58831410e-02   2.96526237e-02  -6.28295529e-04]
 [ -2.62309697e-08  -3.76861907e-03   3.92433991e-02  -1.64119690e-02]
 [  0.00000000e+00   8.80879668e-03   2.87056245e-02  -2.28243431e-02]
 [ -1.35863529e-09  -9.36826113e-03   3.53036770e-02   6.68836523e-03]
 [  1.29442049e-08  -9.80455974e-03   3.10986247e-02  -2.54646419e-02]
 [ -5.93788696e-08   1.30135879e-03   5.14335681e-02   1.49192686e-02]
 [  7.97444955e-08   3.25487806e-03  -1.91324592e-02  -4.42155972e-02]
 [  9.22009349e-08  -2.18390419e-02   1.16236154e-02  -1.29788245e-02]
 [ -2.68220901e-08  -1.63504751e-02  -3.63551257e-02  -7.34175252e-03]
 [ -3.47987421e-09  -1.28009905e-02   8.80987278e-02   3.39212810e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.62374266e-08   1.18576192e-02   2.12963320e-02  -3.55426945e-02]
 [  0.00000000e+00  -2.73562421e-02   3.71764302e-02   3.08031489e-02]
 [  3.29954284e-08   1.68099446e-02   9.91061250e-03  -6.47755188e-02]
 [  2.33865447e-08  -1.50194568e-02   3.35465732e-02  -5.10053122e-02]
 [  0.00000000e+00  -3.37360675e-02  -1.29876547e-02  -4.63749021e-02]
 [ -1.02445483e-08  -1.05859681e-02   3.63236621e-02  -3.95815330e-02]
 [  0.00000000e+00  -3.08435158e-02   2.72995049e-02  -3.17263682e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  9.77888703e-09  -3.37978094e-02   6.62351726e-03  -8.73072081e-02]
 [  2.13583310e-07   2.10562771e-02   1.04123890e-01   4.05486003e-02]
 [ -3.28065888e-08  -1.67200157e-02   9.78282262e-02  -1.73913034e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.20222791e-08   2.34385286e-02  -1.33259988e-02  -7.88555294e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  7.62520358e-08   7.97461874e-04   5.48839222e-02   5.03097506e-03]
 [  0.00000000e+00   4.31492925e-04  -5.06124686e-02  -1.98517618e-02]
 [ -3.17891439e-07  -6.48143639e-02   3.39208096e-02   1.15097900e-01]
 [ -2.70295211e-08  -9.81775733e-03   3.64169462e-02  -1.26073294e-02]
 [ -5.43892384e-08   1.18854707e-03   8.86017084e-03   9.47771966e-03]
 [  0.00000000e+00  -6.53625764e-03  -2.74993025e-02  -3.78074154e-02]
 [  5.06639481e-08   1.53237820e-02  -2.71972924e-02  -7.01517552e-02]
 [  0.00000000e+00  -1.49319681e-02  -3.88354932e-02  -2.72935242e-02]]
[ -2.54797916e-09  -3.41964957e-03   1.68764901e-02  -1.36807874e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.03118599  0.07820029  0.1879694   0.14515669]
 [ 0.10536447  0.0797608   0.11253537  0.15070204]
 [ 0.08942478  0.07682879  0.13667433  0.12012078]
 [ 0.07049701  0.08686918  0.10685716  0.16090195]
 [ 0.0689664   0.05151737  0.12282298  0.11078129]
 [ 0.10360388  0.08304575  0.15080414  0.14082425]
 [ 0.11339058  0.09352458  0.12649984  0.13832591]
 [ 0.09553999  0.0839336   0.11087185  0.10994704]
 [ 0.08797301  0.09229198  0.11841849  0.1628425 ]
 [ 0.06877713  0.08209774  0.10731047  0.11249492]
 [ 0.09604479  0.08389204  0.13290211  0.14286387]
 [ 0.08018352  0.0476292   0.06521492  0.08339381]
 [ 0.09109489  0.07227066  0.13383813  0.11657726]
 [ 0.08248341  0.06775028  0.13091794  0.11488883]
 [ 0.08776188  0.06086896  0.11978036  0.13528876]
 [ 0.06678698  0.09860393  0.10633958  0.14652086]
 [ 0.07079301  0.04207947  0.11737497  0.14684446]
 [ 0.0580357   0.06989958  0.10342338  0.11984149]
 [ 0.09966203  0.06932348  0.15290589  0.07684153]
 [ 0.          0.          0.          0.        ]
 [ 0.08639607  0.08594219  0.08092752  0.13541661]
 [ 0.03014494  0.06117042  0.08312902  0.06887794]
 [ 0.0929154   0.06259105  0.06433442  0.1096136 ]
 [ 0.04194884  0.04463624  0.07054561  0.1400867 ]
 [ 0.09694613  0.04771     0.01836732  0.06558402]
 [ 0.09028725  0.07122774  0.09998849  0.12037752]
 [ 0.0663192   0.08220008  0.11306004  0.0989453 ]
 [ 0.          0.          0.          0.        ]
 [ 0.06314527  0.07380807  0.11801258  0.12682124]
 [ 0.13168107  0.08334689  0.14726568  0.06057606]
 [ 0.10438679  0.08478485  0.16519981  0.15300941]
 [ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.07618705  0.09091894  0.11355521  0.12738066]
 [ 0.          0.          0.          0.        ]
 [ 0.09182852  0.05424865  0.09980124  0.098256  ]
 [ 0.09025062  0.06356327  0.11134718  0.0849115 ]
 [ 0.18744507  0.09413033  0.02669303  0.09491941]
 [ 0.09314606  0.07054383  0.10796287  0.10054283]
 [ 0.04503347  0.00237709  0.01772034  0.01895544]
 [ 0.08338253  0.05074086  0.08206391  0.09212766]
 [ 0.082225    0.07509092  0.05039421  0.13436018]
 [ 0.08375372  0.04804325  0.084512    0.08427064]]
[ 0.07453471  0.06203401  0.09298469  0.10116723]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:52:29.016093  5098 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0419 16:52:29.016152  5098 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt
I0419 16:52:29.017019  5098 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0419 16:52:29.017220  5098 layer_factory.hpp:77] Creating layer data
I0419 16:52:29.017884  5098 net.cpp:106] Creating Layer data
I0419 16:52:29.017906  5098 net.cpp:411] data -> data
I0419 16:52:29.017928  5098 net.cpp:411] data -> rois
I0419 16:52:29.017940  5098 net.cpp:411] data -> labels
I0419 16:52:29.017951  5098 net.cpp:411] data -> bbox_targets
I0419 16:52:29.017987  5098 net.cpp:411] data -> bbox_inside_weights
I0419 16:52:29.018021  5098 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0419 16:52:29.085916  5098 net.cpp:150] Setting up data
I0419 16:52:29.085955  5098 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0419 16:52:29.085978  5098 net.cpp:157] Top shape: 1 5 (5)
I0419 16:52:29.085995  5098 net.cpp:157] Top shape: 1 (1)
I0419 16:52:29.086012  5098 net.cpp:157] Top shape: 1 176 (176)
I0419 16:52:29.086030  5098 net.cpp:157] Top shape: 1 176 (176)
I0419 16:52:29.086045  5098 net.cpp:157] Top shape: 1 176 (176)
I0419 16:52:29.086060  5098 net.cpp:165] Memory required for data: 14402136
I0419 16:52:29.086076  5098 layer_factory.hpp:77] Creating layer conv1
I0419 16:52:29.086108  5098 net.cpp:106] Creating Layer conv1
I0419 16:52:29.086125  5098 net.cpp:454] conv1 <- data
I0419 16:52:29.086153  5098 net.cpp:411] conv1 -> conv1
I0419 16:52:29.087551  5098 net.cpp:150] Setting up conv1
I0419 16:52:29.087574  5098 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:52:29.087579  5098 net.cpp:165] Memory required for data: 129602136
I0419 16:52:29.087597  5098 layer_factory.hpp:77] Creating layer relu1
I0419 16:52:29.087630  5098 net.cpp:106] Creating Layer relu1
I0419 16:52:29.087649  5098 net.cpp:454] relu1 <- conv1
I0419 16:52:29.087668  5098 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:52:29.087694  5098 net.cpp:150] Setting up relu1
I0419 16:52:29.087714  5098 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:52:29.087729  5098 net.cpp:165] Memory required for data: 244802136
I0419 16:52:29.087744  5098 layer_factory.hpp:77] Creating layer norm1
I0419 16:52:29.087769  5098 net.cpp:106] Creating Layer norm1
I0419 16:52:29.087785  5098 net.cpp:454] norm1 <- conv1
I0419 16:52:29.087803  5098 net.cpp:411] norm1 -> norm1
I0419 16:52:29.087936  5098 net.cpp:150] Setting up norm1
I0419 16:52:29.087952  5098 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0419 16:52:29.087957  5098 net.cpp:165] Memory required for data: 360002136
I0419 16:52:29.087962  5098 layer_factory.hpp:77] Creating layer pool1
I0419 16:52:29.087971  5098 net.cpp:106] Creating Layer pool1
I0419 16:52:29.087975  5098 net.cpp:454] pool1 <- norm1
I0419 16:52:29.087985  5098 net.cpp:411] pool1 -> pool1
I0419 16:52:29.088037  5098 net.cpp:150] Setting up pool1
I0419 16:52:29.088070  5098 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0419 16:52:29.088088  5098 net.cpp:165] Memory required for data: 389110104
I0419 16:52:29.088102  5098 layer_factory.hpp:77] Creating layer conv2
I0419 16:52:29.088124  5098 net.cpp:106] Creating Layer conv2
I0419 16:52:29.088140  5098 net.cpp:454] conv2 <- pool1
I0419 16:52:29.088160  5098 net.cpp:411] conv2 -> conv2
I0419 16:52:29.089861  5098 net.cpp:150] Setting up conv2
I0419 16:52:29.089881  5098 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:52:29.089886  5098 net.cpp:165] Memory required for data: 408721752
I0419 16:52:29.089900  5098 layer_factory.hpp:77] Creating layer relu2
I0419 16:52:29.089921  5098 net.cpp:106] Creating Layer relu2
I0419 16:52:29.089941  5098 net.cpp:454] relu2 <- conv2
I0419 16:52:29.089964  5098 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:52:29.089988  5098 net.cpp:150] Setting up relu2
I0419 16:52:29.090006  5098 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:52:29.090021  5098 net.cpp:165] Memory required for data: 428333400
I0419 16:52:29.090036  5098 layer_factory.hpp:77] Creating layer norm2
I0419 16:52:29.090055  5098 net.cpp:106] Creating Layer norm2
I0419 16:52:29.090071  5098 net.cpp:454] norm2 <- conv2
I0419 16:52:29.090091  5098 net.cpp:411] norm2 -> norm2
I0419 16:52:29.090203  5098 net.cpp:150] Setting up norm2
I0419 16:52:29.090220  5098 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0419 16:52:29.090225  5098 net.cpp:165] Memory required for data: 447945048
I0419 16:52:29.090229  5098 layer_factory.hpp:77] Creating layer pool2
I0419 16:52:29.090240  5098 net.cpp:106] Creating Layer pool2
I0419 16:52:29.090256  5098 net.cpp:454] pool2 <- norm2
I0419 16:52:29.090276  5098 net.cpp:411] pool2 -> pool2
I0419 16:52:29.090351  5098 net.cpp:150] Setting up pool2
I0419 16:52:29.090366  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.090370  5098 net.cpp:165] Memory required for data: 453056856
I0419 16:52:29.090375  5098 layer_factory.hpp:77] Creating layer conv3
I0419 16:52:29.090387  5098 net.cpp:106] Creating Layer conv3
I0419 16:52:29.090394  5098 net.cpp:454] conv3 <- pool2
I0419 16:52:29.090401  5098 net.cpp:411] conv3 -> conv3
I0419 16:52:29.093688  5098 net.cpp:150] Setting up conv3
I0419 16:52:29.093709  5098 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:52:29.093714  5098 net.cpp:165] Memory required for data: 460724568
I0419 16:52:29.093726  5098 layer_factory.hpp:77] Creating layer relu3
I0419 16:52:29.093752  5098 net.cpp:106] Creating Layer relu3
I0419 16:52:29.093771  5098 net.cpp:454] relu3 <- conv3
I0419 16:52:29.093791  5098 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:52:29.093812  5098 net.cpp:150] Setting up relu3
I0419 16:52:29.093830  5098 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:52:29.093845  5098 net.cpp:165] Memory required for data: 468392280
I0419 16:52:29.093860  5098 layer_factory.hpp:77] Creating layer conv4
I0419 16:52:29.093880  5098 net.cpp:106] Creating Layer conv4
I0419 16:52:29.093896  5098 net.cpp:454] conv4 <- conv3
I0419 16:52:29.093925  5098 net.cpp:411] conv4 -> conv4
I0419 16:52:29.097244  5098 net.cpp:150] Setting up conv4
I0419 16:52:29.097265  5098 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:52:29.097270  5098 net.cpp:165] Memory required for data: 476059992
I0419 16:52:29.097280  5098 layer_factory.hpp:77] Creating layer relu4
I0419 16:52:29.097290  5098 net.cpp:106] Creating Layer relu4
I0419 16:52:29.097309  5098 net.cpp:454] relu4 <- conv4
I0419 16:52:29.097328  5098 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:52:29.097349  5098 net.cpp:150] Setting up relu4
I0419 16:52:29.097368  5098 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0419 16:52:29.097383  5098 net.cpp:165] Memory required for data: 483727704
I0419 16:52:29.097398  5098 layer_factory.hpp:77] Creating layer conv5
I0419 16:52:29.097436  5098 net.cpp:106] Creating Layer conv5
I0419 16:52:29.097455  5098 net.cpp:454] conv5 <- conv4
I0419 16:52:29.097479  5098 net.cpp:411] conv5 -> conv5
I0419 16:52:29.099808  5098 net.cpp:150] Setting up conv5
I0419 16:52:29.099829  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.099834  5098 net.cpp:165] Memory required for data: 488839512
I0419 16:52:29.099850  5098 layer_factory.hpp:77] Creating layer relu5
I0419 16:52:29.099874  5098 net.cpp:106] Creating Layer relu5
I0419 16:52:29.099895  5098 net.cpp:454] relu5 <- conv5
I0419 16:52:29.099915  5098 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:52:29.099937  5098 net.cpp:150] Setting up relu5
I0419 16:52:29.099956  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.099972  5098 net.cpp:165] Memory required for data: 493951320
I0419 16:52:29.099987  5098 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:52:29.100018  5098 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:52:29.100036  5098 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:52:29.100055  5098 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:52:29.100077  5098 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:52:29.100147  5098 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:52:29.100162  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.100169  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.100173  5098 net.cpp:165] Memory required for data: 504174936
I0419 16:52:29.100178  5098 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:52:29.100193  5098 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:52:29.100213  5098 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0419 16:52:29.100230  5098 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:52:29.100250  5098 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:52:29.100275  5098 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:52:29.100342  5098 net.cpp:150] Setting up roi_pool_conv5
I0419 16:52:29.100358  5098 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:52:29.100363  5098 net.cpp:165] Memory required for data: 504211800
I0419 16:52:29.100368  5098 layer_factory.hpp:77] Creating layer fc6
I0419 16:52:29.100381  5098 net.cpp:106] Creating Layer fc6
I0419 16:52:29.100386  5098 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:52:29.100409  5098 net.cpp:411] fc6 -> fc6
I0419 16:52:29.198235  5098 net.cpp:150] Setting up fc6
I0419 16:52:29.198277  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.198282  5098 net.cpp:165] Memory required for data: 504228184
I0419 16:52:29.198297  5098 layer_factory.hpp:77] Creating layer relu6
I0419 16:52:29.198310  5098 net.cpp:106] Creating Layer relu6
I0419 16:52:29.198350  5098 net.cpp:454] relu6 <- fc6
I0419 16:52:29.198376  5098 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:52:29.198400  5098 net.cpp:150] Setting up relu6
I0419 16:52:29.198416  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.198431  5098 net.cpp:165] Memory required for data: 504244568
I0419 16:52:29.198447  5098 layer_factory.hpp:77] Creating layer drop6
I0419 16:52:29.198473  5098 net.cpp:106] Creating Layer drop6
I0419 16:52:29.198492  5098 net.cpp:454] drop6 <- fc6
I0419 16:52:29.198518  5098 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:52:29.198570  5098 net.cpp:150] Setting up drop6
I0419 16:52:29.198585  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.198590  5098 net.cpp:165] Memory required for data: 504260952
I0419 16:52:29.198596  5098 layer_factory.hpp:77] Creating layer fc7
I0419 16:52:29.198611  5098 net.cpp:106] Creating Layer fc7
I0419 16:52:29.198631  5098 net.cpp:454] fc7 <- fc6
I0419 16:52:29.198650  5098 net.cpp:411] fc7 -> fc7
I0419 16:52:29.242780  5098 net.cpp:150] Setting up fc7
I0419 16:52:29.242827  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.242833  5098 net.cpp:165] Memory required for data: 504277336
I0419 16:52:29.242846  5098 layer_factory.hpp:77] Creating layer relu7
I0419 16:52:29.242861  5098 net.cpp:106] Creating Layer relu7
I0419 16:52:29.242868  5098 net.cpp:454] relu7 <- fc7
I0419 16:52:29.242877  5098 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:52:29.242887  5098 net.cpp:150] Setting up relu7
I0419 16:52:29.242893  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.242897  5098 net.cpp:165] Memory required for data: 504293720
I0419 16:52:29.242902  5098 layer_factory.hpp:77] Creating layer drop7
I0419 16:52:29.242931  5098 net.cpp:106] Creating Layer drop7
I0419 16:52:29.242947  5098 net.cpp:454] drop7 <- fc7
I0419 16:52:29.242967  5098 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:52:29.243012  5098 net.cpp:150] Setting up drop7
I0419 16:52:29.243036  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.243053  5098 net.cpp:165] Memory required for data: 504310104
I0419 16:52:29.243068  5098 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:52:29.243088  5098 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:52:29.243103  5098 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:52:29.243120  5098 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:52:29.243142  5098 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:52:29.243208  5098 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:52:29.243224  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.243230  5098 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:52:29.243234  5098 net.cpp:165] Memory required for data: 504342872
I0419 16:52:29.243239  5098 layer_factory.hpp:77] Creating layer cls_score
I0419 16:52:29.243266  5098 net.cpp:106] Creating Layer cls_score
I0419 16:52:29.243283  5098 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:52:29.243304  5098 net.cpp:411] cls_score -> cls_score
I0419 16:52:29.248917  5098 net.cpp:150] Setting up cls_score
I0419 16:52:29.248937  5098 net.cpp:157] Top shape: 1 44 (44)
I0419 16:52:29.248942  5098 net.cpp:165] Memory required for data: 504343048
I0419 16:52:29.248951  5098 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:52:29.248962  5098 net.cpp:106] Creating Layer bbox_pred
I0419 16:52:29.248967  5098 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:52:29.248980  5098 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:52:29.269673  5098 net.cpp:150] Setting up bbox_pred
I0419 16:52:29.269693  5098 net.cpp:157] Top shape: 1 176 (176)
I0419 16:52:29.269698  5098 net.cpp:165] Memory required for data: 504343752
I0419 16:52:29.269716  5098 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:52:29.269745  5098 net.cpp:106] Creating Layer loss_cls
I0419 16:52:29.269765  5098 net.cpp:454] loss_cls <- cls_score
I0419 16:52:29.269784  5098 net.cpp:454] loss_cls <- labels
I0419 16:52:29.269809  5098 net.cpp:411] loss_cls -> cls_loss
I0419 16:52:29.269841  5098 layer_factory.hpp:77] Creating layer loss_cls
I0419 16:52:29.269963  5098 net.cpp:150] Setting up loss_cls
I0419 16:52:29.269978  5098 net.cpp:157] Top shape: (1)
I0419 16:52:29.269982  5098 net.cpp:160]     with loss weight 1
I0419 16:52:29.270010  5098 net.cpp:165] Memory required for data: 504343756
I0419 16:52:29.270026  5098 layer_factory.hpp:77] Creating layer loss_bbox
I0419 16:52:29.270053  5098 net.cpp:106] Creating Layer loss_bbox
I0419 16:52:29.270071  5098 net.cpp:454] loss_bbox <- bbox_pred
I0419 16:52:29.270088  5098 net.cpp:454] loss_bbox <- bbox_targets
I0419 16:52:29.270107  5098 net.cpp:454] loss_bbox <- bbox_inside_weights
I0419 16:52:29.270123  5098 net.cpp:454] loss_bbox <- bbox_outside_weights
I0419 16:52:29.270141  5098 net.cpp:411] loss_bbox -> bbox_loss
I0419 16:52:29.270247  5098 net.cpp:150] Setting up loss_bbox
I0419 16:52:29.270263  5098 net.cpp:157] Top shape: (1)
I0419 16:52:29.270268  5098 net.cpp:160]     with loss weight 1
I0419 16:52:29.270275  5098 net.cpp:165] Memory required for data: 504343760
I0419 16:52:29.270282  5098 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:52:29.270298  5098 net.cpp:106] Creating Layer rpn_conv1
I0419 16:52:29.270318  5098 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0419 16:52:29.270375  5098 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:52:29.287436  5098 net.cpp:150] Setting up rpn_conv1
I0419 16:52:29.287456  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.287461  5098 net.cpp:165] Memory required for data: 509455568
I0419 16:52:29.287472  5098 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:52:29.287483  5098 net.cpp:106] Creating Layer rpn_relu1
I0419 16:52:29.287504  5098 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:52:29.287524  5098 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:52:29.287546  5098 net.cpp:150] Setting up rpn_relu1
I0419 16:52:29.287566  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.287581  5098 net.cpp:165] Memory required for data: 514567376
I0419 16:52:29.287596  5098 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:52:29.287617  5098 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:52:29.287633  5098 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:52:29.287652  5098 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:52:29.287673  5098 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:52:29.287739  5098 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:52:29.287755  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.287761  5098 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0419 16:52:29.287765  5098 net.cpp:165] Memory required for data: 524790992
I0419 16:52:29.287770  5098 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:52:29.287786  5098 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:52:29.287806  5098 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:52:29.287827  5098 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:52:29.288185  5098 net.cpp:150] Setting up rpn_cls_score
I0419 16:52:29.288202  5098 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0419 16:52:29.288206  5098 net.cpp:165] Memory required for data: 525150416
I0419 16:52:29.288214  5098 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:52:29.288242  5098 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:52:29.288264  5098 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:52:29.288285  5098 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:52:29.288767  5098 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:52:29.288784  5098 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0419 16:52:29.288789  5098 net.cpp:165] Memory required for data: 525869264
I0419 16:52:29.288797  5098 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0419 16:52:29.288813  5098 net.cpp:106] Creating Layer silence_rpn_cls_score
I0419 16:52:29.288832  5098 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0419 16:52:29.288852  5098 net.cpp:150] Setting up silence_rpn_cls_score
I0419 16:52:29.288874  5098 net.cpp:165] Memory required for data: 525869264
I0419 16:52:29.288890  5098 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0419 16:52:29.288908  5098 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0419 16:52:29.288923  5098 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0419 16:52:29.288941  5098 net.cpp:150] Setting up silence_rpn_bbox_pred
I0419 16:52:29.288961  5098 net.cpp:165] Memory required for data: 525869264
I0419 16:52:29.288977  5098 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0419 16:52:29.288992  5098 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0419 16:52:29.289008  5098 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:52:29.289022  5098 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:52:29.289038  5098 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:52:29.289053  5098 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:52:29.289068  5098 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:52:29.289083  5098 net.cpp:226] loss_bbox needs backward computation.
I0419 16:52:29.289111  5098 net.cpp:226] loss_cls needs backward computation.
I0419 16:52:29.289134  5098 net.cpp:226] bbox_pred needs backward computation.
I0419 16:52:29.289150  5098 net.cpp:226] cls_score needs backward computation.
I0419 16:52:29.289166  5098 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0419 16:52:29.289182  5098 net.cpp:226] drop7 needs backward computation.
I0419 16:52:29.289197  5098 net.cpp:226] relu7 needs backward computation.
I0419 16:52:29.289212  5098 net.cpp:226] fc7 needs backward computation.
I0419 16:52:29.289227  5098 net.cpp:226] drop6 needs backward computation.
I0419 16:52:29.289242  5098 net.cpp:226] relu6 needs backward computation.
I0419 16:52:29.289257  5098 net.cpp:226] fc6 needs backward computation.
I0419 16:52:29.289273  5098 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:52:29.289294  5098 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:52:29.289314  5098 net.cpp:228] relu5 does not need backward computation.
I0419 16:52:29.289330  5098 net.cpp:228] conv5 does not need backward computation.
I0419 16:52:29.289345  5098 net.cpp:228] relu4 does not need backward computation.
I0419 16:52:29.289361  5098 net.cpp:228] conv4 does not need backward computation.
I0419 16:52:29.289376  5098 net.cpp:228] relu3 does not need backward computation.
I0419 16:52:29.289391  5098 net.cpp:228] conv3 does not need backward computation.
I0419 16:52:29.289407  5098 net.cpp:228] pool2 does not need backward computation.
I0419 16:52:29.289423  5098 net.cpp:228] norm2 does not need backward computation.
I0419 16:52:29.289439  5098 net.cpp:228] relu2 does not need backward computation.
I0419 16:52:29.289460  5098 net.cpp:228] conv2 does not need backward computation.
I0419 16:52:29.289476  5098 net.cpp:228] pool1 does not need backward computation.
I0419 16:52:29.289492  5098 net.cpp:228] norm1 does not need backward computation.
I0419 16:52:29.289508  5098 net.cpp:228] relu1 does not need backward computation.
I0419 16:52:29.289525  5098 net.cpp:228] conv1 does not need backward computation.
I0419 16:52:29.289552  5098 net.cpp:228] data does not need backward computation.
I0419 16:52:29.289559  5098 net.cpp:270] This network produces output bbox_loss
I0419 16:52:29.289566  5098 net.cpp:270] This network produces output cls_loss
I0419 16:52:29.289605  5098 net.cpp:283] Network initialization done.
I0419 16:52:29.289753  5098 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_200.caffemodel
I0419 16:52:29.725118  5098 net.cpp:816] Ignoring source layer input-data
I0419 16:52:29.725147  5098 net.cpp:816] Ignoring source layer data_input-data_0_split
I0419 16:52:29.728736  5098 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0419 16:52:29.728770  5098 net.cpp:816] Ignoring source layer rpn_cls_score_reshape
I0419 16:52:29.728775  5098 net.cpp:816] Ignoring source layer rpn-data
I0419 16:52:29.728780  5098 net.cpp:816] Ignoring source layer rpn_loss_cls
I0419 16:52:29.728783  5098 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0419 16:52:29.728788  5098 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0419 16:52:29.772634  5098 net.cpp:816] Ignoring source layer silence_fc7
Solving...
I0419 16:52:30.316117  5098 solver.cpp:229] Iteration 0, loss = 1.21757
I0419 16:52:30.316165  5098 solver.cpp:245]     Train net output #0: bbox_loss = 0.0242392 (* 1 = 0.0242392 loss)
I0419 16:52:30.316177  5098 solver.cpp:245]     Train net output #1: cls_loss = 1.19333 (* 1 = 1.19333 loss)
I0419 16:52:30.316197  5098 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0419 16:52:38.336840  5098 solver.cpp:229] Iteration 20, loss = 0.241161
I0419 16:52:38.336890  5098 solver.cpp:245]     Train net output #0: bbox_loss = 0.0410683 (* 1 = 0.0410683 loss)
I0419 16:52:38.336901  5098 solver.cpp:245]     Train net output #1: cls_loss = 0.200093 (* 1 = 0.200093 loss)
I0419 16:52:38.336910  5098 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0419 16:52:46.178763  5098 solver.cpp:229] Iteration 40, loss = 0.222941
I0419 16:52:46.178812  5098 solver.cpp:245]     Train net output #0: bbox_loss = 0.00227355 (* 1 = 0.00227355 loss)
I0419 16:52:46.178822  5098 solver.cpp:245]     Train net output #1: cls_loss = 0.220667 (* 1 = 0.220667 loss)
I0419 16:52:46.178830  5098 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0419 16:52:54.219180  5098 solver.cpp:229] Iteration 60, loss = nan
I0419 16:52:54.219228  5098 solver.cpp:245]     Train net output #0: bbox_loss = nan (* 1 = nan loss)
I0419 16:52:54.219239  5098 solver.cpp:245]     Train net output #1: cls_loss = 0.176247 (* 1 = 0.176247 loss)
I0419 16:52:54.219249  5098 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0419 16:53:02.041076  5098 solver.cpp:229] Iteration 80, loss = 0.143793
I0419 16:53:02.041123  5098 solver.cpp:245]     Train net output #0: bbox_loss = 0.0193062 (* 1 = 0.0193062 loss)
I0419 16:53:02.041133  5098 solver.cpp:245]     Train net output #1: cls_loss = 0.124486 (* 1 = 0.124486 loss)
I0419 16:53:02.041142  5098 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel
done solving
cp /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_100.caffemodel -> /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel
Final model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel

real	8m28.598s
user	6m38.454s
sys	1m59.578s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt --net /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(caffemodel='/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', comp_mode=False, gpu_id=0, imdb_name='voc_2007_test', max_per_image=100, prototxt='models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0419 16:53:10.357373  5123 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 1360
  dim: 800
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 44
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 176
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0419 16:53:10.357583  5123 net.cpp:413] Input 0 -> data
I0419 16:53:10.375622  5123 net.cpp:413] Input 1 -> im_info
I0419 16:53:10.375697  5123 layer_factory.hpp:77] Creating layer conv1
I0419 16:53:10.375744  5123 net.cpp:106] Creating Layer conv1
I0419 16:53:10.375763  5123 net.cpp:454] conv1 <- data
I0419 16:53:10.375790  5123 net.cpp:411] conv1 -> conv1
I0419 16:53:10.377251  5123 net.cpp:150] Setting up conv1
I0419 16:53:10.377275  5123 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:53:10.377281  5123 net.cpp:165] Memory required for data: 104448000
I0419 16:53:10.377302  5123 layer_factory.hpp:77] Creating layer relu1
I0419 16:53:10.377336  5123 net.cpp:106] Creating Layer relu1
I0419 16:53:10.377353  5123 net.cpp:454] relu1 <- conv1
I0419 16:53:10.377372  5123 net.cpp:397] relu1 -> conv1 (in-place)
I0419 16:53:10.377394  5123 net.cpp:150] Setting up relu1
I0419 16:53:10.377413  5123 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:53:10.377449  5123 net.cpp:165] Memory required for data: 208896000
I0419 16:53:10.377463  5123 layer_factory.hpp:77] Creating layer norm1
I0419 16:53:10.377488  5123 net.cpp:106] Creating Layer norm1
I0419 16:53:10.377503  5123 net.cpp:454] norm1 <- conv1
I0419 16:53:10.377521  5123 net.cpp:411] norm1 -> norm1
I0419 16:53:10.377676  5123 net.cpp:150] Setting up norm1
I0419 16:53:10.377692  5123 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0419 16:53:10.377696  5123 net.cpp:165] Memory required for data: 313344000
I0419 16:53:10.377701  5123 layer_factory.hpp:77] Creating layer pool1
I0419 16:53:10.377709  5123 net.cpp:106] Creating Layer pool1
I0419 16:53:10.377713  5123 net.cpp:454] pool1 <- norm1
I0419 16:53:10.377737  5123 net.cpp:411] pool1 -> pool1
I0419 16:53:10.377804  5123 net.cpp:150] Setting up pool1
I0419 16:53:10.377828  5123 net.cpp:157] Top shape: 1 96 341 201 (6579936)
I0419 16:53:10.377843  5123 net.cpp:165] Memory required for data: 339663744
I0419 16:53:10.377857  5123 layer_factory.hpp:77] Creating layer conv2
I0419 16:53:10.377878  5123 net.cpp:106] Creating Layer conv2
I0419 16:53:10.377892  5123 net.cpp:454] conv2 <- pool1
I0419 16:53:10.377912  5123 net.cpp:411] conv2 -> conv2
I0419 16:53:10.380146  5123 net.cpp:150] Setting up conv2
I0419 16:53:10.380168  5123 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:53:10.380173  5123 net.cpp:165] Memory required for data: 357349248
I0419 16:53:10.380187  5123 layer_factory.hpp:77] Creating layer relu2
I0419 16:53:10.380211  5123 net.cpp:106] Creating Layer relu2
I0419 16:53:10.380228  5123 net.cpp:454] relu2 <- conv2
I0419 16:53:10.380246  5123 net.cpp:397] relu2 -> conv2 (in-place)
I0419 16:53:10.380266  5123 net.cpp:150] Setting up relu2
I0419 16:53:10.380285  5123 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:53:10.380298  5123 net.cpp:165] Memory required for data: 375034752
I0419 16:53:10.380312  5123 layer_factory.hpp:77] Creating layer norm2
I0419 16:53:10.380347  5123 net.cpp:106] Creating Layer norm2
I0419 16:53:10.380362  5123 net.cpp:454] norm2 <- conv2
I0419 16:53:10.380379  5123 net.cpp:411] norm2 -> norm2
I0419 16:53:10.380522  5123 net.cpp:150] Setting up norm2
I0419 16:53:10.380540  5123 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0419 16:53:10.380544  5123 net.cpp:165] Memory required for data: 392720256
I0419 16:53:10.380548  5123 layer_factory.hpp:77] Creating layer pool2
I0419 16:53:10.380559  5123 net.cpp:106] Creating Layer pool2
I0419 16:53:10.380576  5123 net.cpp:454] pool2 <- norm2
I0419 16:53:10.380594  5123 net.cpp:411] pool2 -> pool2
I0419 16:53:10.380659  5123 net.cpp:150] Setting up pool2
I0419 16:53:10.380681  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.380694  5123 net.cpp:165] Memory required for data: 397211520
I0419 16:53:10.380708  5123 layer_factory.hpp:77] Creating layer conv3
I0419 16:53:10.380733  5123 net.cpp:106] Creating Layer conv3
I0419 16:53:10.380748  5123 net.cpp:454] conv3 <- pool2
I0419 16:53:10.380766  5123 net.cpp:411] conv3 -> conv3
I0419 16:53:10.383574  5123 net.cpp:150] Setting up conv3
I0419 16:53:10.383594  5123 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:53:10.383599  5123 net.cpp:165] Memory required for data: 403948416
I0419 16:53:10.383611  5123 layer_factory.hpp:77] Creating layer relu3
I0419 16:53:10.383620  5123 net.cpp:106] Creating Layer relu3
I0419 16:53:10.383638  5123 net.cpp:454] relu3 <- conv3
I0419 16:53:10.383658  5123 net.cpp:397] relu3 -> conv3 (in-place)
I0419 16:53:10.383677  5123 net.cpp:150] Setting up relu3
I0419 16:53:10.383695  5123 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:53:10.383709  5123 net.cpp:165] Memory required for data: 410685312
I0419 16:53:10.383723  5123 layer_factory.hpp:77] Creating layer conv4
I0419 16:53:10.383746  5123 net.cpp:106] Creating Layer conv4
I0419 16:53:10.383761  5123 net.cpp:454] conv4 <- conv3
I0419 16:53:10.383781  5123 net.cpp:411] conv4 -> conv4
I0419 16:53:10.387131  5123 net.cpp:150] Setting up conv4
I0419 16:53:10.387151  5123 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:53:10.387156  5123 net.cpp:165] Memory required for data: 417422208
I0419 16:53:10.387166  5123 layer_factory.hpp:77] Creating layer relu4
I0419 16:53:10.387177  5123 net.cpp:106] Creating Layer relu4
I0419 16:53:10.387183  5123 net.cpp:454] relu4 <- conv4
I0419 16:53:10.387190  5123 net.cpp:397] relu4 -> conv4 (in-place)
I0419 16:53:10.387215  5123 net.cpp:150] Setting up relu4
I0419 16:53:10.387234  5123 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0419 16:53:10.387248  5123 net.cpp:165] Memory required for data: 424159104
I0419 16:53:10.387262  5123 layer_factory.hpp:77] Creating layer conv5
I0419 16:53:10.387285  5123 net.cpp:106] Creating Layer conv5
I0419 16:53:10.387300  5123 net.cpp:454] conv5 <- conv4
I0419 16:53:10.387318  5123 net.cpp:411] conv5 -> conv5
I0419 16:53:10.389673  5123 net.cpp:150] Setting up conv5
I0419 16:53:10.389694  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.389699  5123 net.cpp:165] Memory required for data: 428650368
I0419 16:53:10.389713  5123 layer_factory.hpp:77] Creating layer relu5
I0419 16:53:10.389739  5123 net.cpp:106] Creating Layer relu5
I0419 16:53:10.389756  5123 net.cpp:454] relu5 <- conv5
I0419 16:53:10.389773  5123 net.cpp:397] relu5 -> conv5 (in-place)
I0419 16:53:10.389793  5123 net.cpp:150] Setting up relu5
I0419 16:53:10.389811  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.389823  5123 net.cpp:165] Memory required for data: 433141632
I0419 16:53:10.389837  5123 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0419 16:53:10.389858  5123 net.cpp:106] Creating Layer conv5_relu5_0_split
I0419 16:53:10.389871  5123 net.cpp:454] conv5_relu5_0_split <- conv5
I0419 16:53:10.389888  5123 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0419 16:53:10.389910  5123 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0419 16:53:10.389974  5123 net.cpp:150] Setting up conv5_relu5_0_split
I0419 16:53:10.389998  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.390028  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.390043  5123 net.cpp:165] Memory required for data: 442124160
I0419 16:53:10.390058  5123 layer_factory.hpp:77] Creating layer rpn_conv1
I0419 16:53:10.390080  5123 net.cpp:106] Creating Layer rpn_conv1
I0419 16:53:10.390095  5123 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_0
I0419 16:53:10.390115  5123 net.cpp:411] rpn_conv1 -> rpn_conv1
I0419 16:53:10.391762  5123 net.cpp:150] Setting up rpn_conv1
I0419 16:53:10.391782  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.391786  5123 net.cpp:165] Memory required for data: 446615424
I0419 16:53:10.391796  5123 layer_factory.hpp:77] Creating layer rpn_relu1
I0419 16:53:10.391810  5123 net.cpp:106] Creating Layer rpn_relu1
I0419 16:53:10.391830  5123 net.cpp:454] rpn_relu1 <- rpn_conv1
I0419 16:53:10.391849  5123 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0419 16:53:10.391868  5123 net.cpp:150] Setting up rpn_relu1
I0419 16:53:10.391885  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.391899  5123 net.cpp:165] Memory required for data: 451106688
I0419 16:53:10.391913  5123 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0419 16:53:10.391929  5123 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0419 16:53:10.391943  5123 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0419 16:53:10.391963  5123 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0419 16:53:10.391981  5123 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0419 16:53:10.392041  5123 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0419 16:53:10.392062  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.392077  5123 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0419 16:53:10.392091  5123 net.cpp:165] Memory required for data: 460089216
I0419 16:53:10.392104  5123 layer_factory.hpp:77] Creating layer rpn_cls_score
I0419 16:53:10.392127  5123 net.cpp:106] Creating Layer rpn_cls_score
I0419 16:53:10.392150  5123 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0419 16:53:10.392172  5123 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0419 16:53:10.392395  5123 net.cpp:150] Setting up rpn_cls_score
I0419 16:53:10.392412  5123 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:53:10.392417  5123 net.cpp:165] Memory required for data: 460405008
I0419 16:53:10.392426  5123 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0419 16:53:10.392438  5123 net.cpp:106] Creating Layer rpn_bbox_pred
I0419 16:53:10.392455  5123 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0419 16:53:10.392474  5123 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0419 16:53:10.392729  5123 net.cpp:150] Setting up rpn_bbox_pred
I0419 16:53:10.392745  5123 net.cpp:157] Top shape: 1 36 86 51 (157896)
I0419 16:53:10.392750  5123 net.cpp:165] Memory required for data: 461036592
I0419 16:53:10.392758  5123 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0419 16:53:10.392771  5123 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0419 16:53:10.392788  5123 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0419 16:53:10.392807  5123 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0419 16:53:10.392865  5123 net.cpp:150] Setting up rpn_cls_score_reshape
I0419 16:53:10.392886  5123 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:53:10.392900  5123 net.cpp:165] Memory required for data: 461352384
I0419 16:53:10.392915  5123 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0419 16:53:10.392931  5123 net.cpp:106] Creating Layer rpn_cls_prob
I0419 16:53:10.392946  5123 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0419 16:53:10.392964  5123 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0419 16:53:10.393050  5123 net.cpp:150] Setting up rpn_cls_prob
I0419 16:53:10.393065  5123 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0419 16:53:10.393069  5123 net.cpp:165] Memory required for data: 461668176
I0419 16:53:10.393074  5123 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0419 16:53:10.393082  5123 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0419 16:53:10.393087  5123 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0419 16:53:10.393097  5123 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0419 16:53:10.393146  5123 net.cpp:150] Setting up rpn_cls_prob_reshape
I0419 16:53:10.393167  5123 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0419 16:53:10.393179  5123 net.cpp:165] Memory required for data: 461983968
I0419 16:53:10.393193  5123 layer_factory.hpp:77] Creating layer proposal
I0419 16:53:10.393714  5123 net.cpp:106] Creating Layer proposal
I0419 16:53:10.393733  5123 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0419 16:53:10.393741  5123 net.cpp:454] proposal <- rpn_bbox_pred
I0419 16:53:10.393746  5123 net.cpp:454] proposal <- im_info
I0419 16:53:10.393754  5123 net.cpp:411] proposal -> rois
I0419 16:53:10.394484  5123 net.cpp:150] Setting up proposal
I0419 16:53:10.394505  5123 net.cpp:157] Top shape: 1 5 (5)
I0419 16:53:10.394510  5123 net.cpp:165] Memory required for data: 461983988
I0419 16:53:10.394516  5123 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0419 16:53:10.394527  5123 net.cpp:106] Creating Layer roi_pool_conv5
I0419 16:53:10.394533  5123 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0419 16:53:10.394556  5123 net.cpp:454] roi_pool_conv5 <- rois
I0419 16:53:10.394578  5123 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0419 16:53:10.394603  5123 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0419 16:53:10.394680  5123 net.cpp:150] Setting up roi_pool_conv5
I0419 16:53:10.394701  5123 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0419 16:53:10.394716  5123 net.cpp:165] Memory required for data: 462020852
I0419 16:53:10.394729  5123 layer_factory.hpp:77] Creating layer fc6
I0419 16:53:10.394750  5123 net.cpp:106] Creating Layer fc6
I0419 16:53:10.394765  5123 net.cpp:454] fc6 <- roi_pool_conv5
I0419 16:53:10.394783  5123 net.cpp:411] fc6 -> fc6
I0419 16:53:10.493633  5123 net.cpp:150] Setting up fc6
I0419 16:53:10.493672  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.493679  5123 net.cpp:165] Memory required for data: 462037236
I0419 16:53:10.493705  5123 layer_factory.hpp:77] Creating layer relu6
I0419 16:53:10.493718  5123 net.cpp:106] Creating Layer relu6
I0419 16:53:10.493724  5123 net.cpp:454] relu6 <- fc6
I0419 16:53:10.493733  5123 net.cpp:397] relu6 -> fc6 (in-place)
I0419 16:53:10.493762  5123 net.cpp:150] Setting up relu6
I0419 16:53:10.493782  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.493794  5123 net.cpp:165] Memory required for data: 462053620
I0419 16:53:10.493808  5123 layer_factory.hpp:77] Creating layer drop6
I0419 16:53:10.493836  5123 net.cpp:106] Creating Layer drop6
I0419 16:53:10.493851  5123 net.cpp:454] drop6 <- fc6
I0419 16:53:10.493867  5123 net.cpp:397] drop6 -> fc6 (in-place)
I0419 16:53:10.493921  5123 net.cpp:150] Setting up drop6
I0419 16:53:10.493942  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.493954  5123 net.cpp:165] Memory required for data: 462070004
I0419 16:53:10.493968  5123 layer_factory.hpp:77] Creating layer fc7
I0419 16:53:10.493988  5123 net.cpp:106] Creating Layer fc7
I0419 16:53:10.494001  5123 net.cpp:454] fc7 <- fc6
I0419 16:53:10.494024  5123 net.cpp:411] fc7 -> fc7
I0419 16:53:10.537878  5123 net.cpp:150] Setting up fc7
I0419 16:53:10.537924  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.537930  5123 net.cpp:165] Memory required for data: 462086388
I0419 16:53:10.537943  5123 layer_factory.hpp:77] Creating layer relu7
I0419 16:53:10.537956  5123 net.cpp:106] Creating Layer relu7
I0419 16:53:10.537961  5123 net.cpp:454] relu7 <- fc7
I0419 16:53:10.537972  5123 net.cpp:397] relu7 -> fc7 (in-place)
I0419 16:53:10.538002  5123 net.cpp:150] Setting up relu7
I0419 16:53:10.538022  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.538033  5123 net.cpp:165] Memory required for data: 462102772
I0419 16:53:10.538046  5123 layer_factory.hpp:77] Creating layer drop7
I0419 16:53:10.538065  5123 net.cpp:106] Creating Layer drop7
I0419 16:53:10.538101  5123 net.cpp:454] drop7 <- fc7
I0419 16:53:10.538120  5123 net.cpp:397] drop7 -> fc7 (in-place)
I0419 16:53:10.538167  5123 net.cpp:150] Setting up drop7
I0419 16:53:10.538187  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.538202  5123 net.cpp:165] Memory required for data: 462119156
I0419 16:53:10.538215  5123 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0419 16:53:10.538236  5123 net.cpp:106] Creating Layer fc7_drop7_0_split
I0419 16:53:10.538252  5123 net.cpp:454] fc7_drop7_0_split <- fc7
I0419 16:53:10.538269  5123 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0419 16:53:10.538288  5123 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0419 16:53:10.538373  5123 net.cpp:150] Setting up fc7_drop7_0_split
I0419 16:53:10.538398  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.538414  5123 net.cpp:157] Top shape: 1 4096 (4096)
I0419 16:53:10.538427  5123 net.cpp:165] Memory required for data: 462151924
I0419 16:53:10.538441  5123 layer_factory.hpp:77] Creating layer cls_score
I0419 16:53:10.538467  5123 net.cpp:106] Creating Layer cls_score
I0419 16:53:10.538482  5123 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0419 16:53:10.538501  5123 net.cpp:411] cls_score -> cls_score
I0419 16:53:10.539386  5123 net.cpp:150] Setting up cls_score
I0419 16:53:10.539407  5123 net.cpp:157] Top shape: 1 44 (44)
I0419 16:53:10.539410  5123 net.cpp:165] Memory required for data: 462152100
I0419 16:53:10.539420  5123 layer_factory.hpp:77] Creating layer bbox_pred
I0419 16:53:10.539433  5123 net.cpp:106] Creating Layer bbox_pred
I0419 16:53:10.539450  5123 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0419 16:53:10.539470  5123 net.cpp:411] bbox_pred -> bbox_pred
I0419 16:53:10.541312  5123 net.cpp:150] Setting up bbox_pred
I0419 16:53:10.541332  5123 net.cpp:157] Top shape: 1 176 (176)
I0419 16:53:10.541337  5123 net.cpp:165] Memory required for data: 462152804
I0419 16:53:10.541347  5123 layer_factory.hpp:77] Creating layer cls_prob
I0419 16:53:10.541362  5123 net.cpp:106] Creating Layer cls_prob
I0419 16:53:10.541366  5123 net.cpp:454] cls_prob <- cls_score
I0419 16:53:10.541374  5123 net.cpp:411] cls_prob -> cls_prob
I0419 16:53:10.541481  5123 net.cpp:150] Setting up cls_prob
I0419 16:53:10.541503  5123 net.cpp:157] Top shape: 1 44 (44)
I0419 16:53:10.541518  5123 net.cpp:165] Memory required for data: 462152980
I0419 16:53:10.541532  5123 net.cpp:228] cls_prob does not need backward computation.
I0419 16:53:10.541548  5123 net.cpp:228] bbox_pred does not need backward computation.
I0419 16:53:10.541561  5123 net.cpp:228] cls_score does not need backward computation.
I0419 16:53:10.541576  5123 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0419 16:53:10.541590  5123 net.cpp:228] drop7 does not need backward computation.
I0419 16:53:10.541604  5123 net.cpp:228] relu7 does not need backward computation.
I0419 16:53:10.541617  5123 net.cpp:228] fc7 does not need backward computation.
I0419 16:53:10.541631  5123 net.cpp:228] drop6 does not need backward computation.
I0419 16:53:10.541646  5123 net.cpp:228] relu6 does not need backward computation.
I0419 16:53:10.541658  5123 net.cpp:228] fc6 does not need backward computation.
I0419 16:53:10.541673  5123 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0419 16:53:10.541690  5123 net.cpp:228] proposal does not need backward computation.
I0419 16:53:10.541707  5123 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0419 16:53:10.541721  5123 net.cpp:228] rpn_cls_prob does not need backward computation.
I0419 16:53:10.541735  5123 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0419 16:53:10.541750  5123 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0419 16:53:10.541764  5123 net.cpp:228] rpn_cls_score does not need backward computation.
I0419 16:53:10.541779  5123 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0419 16:53:10.541793  5123 net.cpp:228] rpn_relu1 does not need backward computation.
I0419 16:53:10.541818  5123 net.cpp:228] rpn_conv1 does not need backward computation.
I0419 16:53:10.541833  5123 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0419 16:53:10.541847  5123 net.cpp:228] relu5 does not need backward computation.
I0419 16:53:10.541860  5123 net.cpp:228] conv5 does not need backward computation.
I0419 16:53:10.541874  5123 net.cpp:228] relu4 does not need backward computation.
I0419 16:53:10.541887  5123 net.cpp:228] conv4 does not need backward computation.
I0419 16:53:10.541901  5123 net.cpp:228] relu3 does not need backward computation.
I0419 16:53:10.541914  5123 net.cpp:228] conv3 does not need backward computation.
I0419 16:53:10.541929  5123 net.cpp:228] pool2 does not need backward computation.
I0419 16:53:10.541942  5123 net.cpp:228] norm2 does not need backward computation.
I0419 16:53:10.541956  5123 net.cpp:228] relu2 does not need backward computation.
I0419 16:53:10.541970  5123 net.cpp:228] conv2 does not need backward computation.
I0419 16:53:10.541983  5123 net.cpp:228] pool1 does not need backward computation.
I0419 16:53:10.541997  5123 net.cpp:228] norm1 does not need backward computation.
I0419 16:53:10.542011  5123 net.cpp:228] relu1 does not need backward computation.
I0419 16:53:10.542023  5123 net.cpp:228] conv1 does not need backward computation.
I0419 16:53:10.542037  5123 net.cpp:270] This network produces output bbox_pred
I0419 16:53:10.542052  5123 net.cpp:270] This network produces output cls_prob
I0419 16:53:10.542099  5123 net.cpp:283] Network initialization done.
I0419 16:53:10.986611  5123 net.cpp:816] Ignoring source layer data
I0419 16:53:11.034471  5123 net.cpp:816] Ignoring source layer loss_cls
I0419 16:53:11.034508  5123 net.cpp:816] Ignoring source layer loss_bbox
I0419 16:53:11.035058  5123 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0419 16:53:11.035071  5123 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
im_detect: 1/50 0.281s 0.001s
im_detect: 2/50 0.232s 0.001s
im_detect: 3/50 0.221s 0.001s
im_detect: 4/50 0.207s 0.001s
im_detect: 5/50 0.213s 0.001s
im_detect: 6/50 0.208s 0.001s
im_detect: 7/50 0.216s 0.001s
im_detect: 8/50 0.211s 0.001s
im_detect: 9/50 0.215s 0.001s
im_detect: 10/50 0.212s 0.001s
im_detect: 11/50 0.215s 0.001s
im_detect: 12/50 0.214s 0.001s
im_detect: 13/50 0.217s 0.001s
im_detect: 14/50 0.216s 0.001s
im_detect: 15/50 0.218s 0.001s
im_detect: 16/50 0.217s 0.001s
im_detect: 17/50 0.218s 0.001s
im_detect: 18/50 0.217s 0.001s
im_detect: 19/50 0.216s 0.001s
im_detect: 20/50 0.215s 0.001s
im_detect: 21/50 0.214s 0.001s
im_detect: 22/50 0.213s 0.001s
im_detect: 23/50 0.213s 0.001s
im_detect: 24/50 0.212s 0.001s
im_detect: 25/50 0.212s 0.001s
im_detect: 26/50 0.211s 0.001s
im_detect: 27/50 0.212s 0.001s
im_detect: 28/50 0.211s 0.001s
im_detect: 29/50 0.211s 0.001s
im_detect: 30/50 0.210s 0.001s
im_detect: 31/50 0.210s 0.001s
im_detect: 32/50 0.209s 0.001s
im_detect: 33/50 0.210s 0.001s
im_detect: 34/50 0.208s 0.001s
im_detect: 35/50 0.208s 0.001s
im_detect: 36/50 0.205s 0.001s
im_detect: 37/50 0.205s 0.001s
im_detect: 38/50 0.204s 0.001s
im_detect: 39/50 0.203s 0.001s
im_detect: 40/50 0.204s 0.001s
im_detect: 41/50 0.204s 0.001s
im_detect: 42/50 0.205s 0.001s
im_detect: 43/50 0.204s 0.001s
im_detect: 44/50 0.205s 0.001s
im_detect: 45/50 0.204s 0.001s
im_detect: 46/50 0.205s 0.001s
im_detect: 47/50 0.204s 0.001s
im_detect: 48/50 0.204s 0.001s
im_detect: 49/50 0.202s 0.001s
im_detect: 50/50 0.202s 0.001s
Evaluating detections
Writing speedlimit-20 VOC results file
Writing speedlimit-30 VOC results file
Writing speedlimit-50 VOC results file
Writing speedlimit-60 VOC results file
Writing speedlimit-70 VOC results file
Writing speedlimit-80 VOC results file
Writing restrict-end-80 VOC results file
Writing speedlimit-100 VOC results file
Writing speedlimit-120 VOC results file
Writing no-overtake VOC results file
Writing no-overtake-truck VOC results file
Writing priority-next-intersect VOC results file
Writing priority-road VOC results file
Writing giveaway VOC results file
Writing stop VOC results file
Writing no-traffic-bothways VOC results file
Writing no-truck VOC results file
Writing no-entry VOC results file
Writing danger VOC results file
Writing bend-left VOC results file
Writing bend-right VOC results file
Writing bend VOC results file
Writing uneven-road VOC results file
Writing slippery-road VOC results file
Writing road-narrow VOC results file
Writing construction VOC results file
Writing traffic-signal VOC results file
Writing pedestrian-crossing VOC results file
Writing school-crossing VOC results file
Writing cycle-crossing VOC results file
Writing snow VOC results file
Writing animals VOC results file
Writing restriction-ends VOC results file
Writing go-right VOC results file
Writing go-left VOC results file
Writing go-straight VOC results file
Writing go-right-straight VOC results file
Writing go-left-straight VOC results file
Writing keep-right VOC results file
Writing keep-left VOC results file
Writing roundabout VOC results file
Writing restrict-ends-overtaking VOC results file
Writing restrict-ends-overtaking-truck VOC results file
VOC07 metric? Yes
Reading annotation for 1/50
Saving cached annotations to /mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/annotations_cache/annots.pkl
Traceback (most recent call last):
  File "./tools/test_net.py", line 90, in <module>
    test_net(net, imdb, max_per_image=args.max_per_image, vis=args.vis)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/test.py", line 295, in test_net
    imdb.evaluate_detections(all_boxes, output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 326, in evaluate_detections
    self._do_python_eval(output_dir)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/pascal_voc.py", line 289, in _do_python_eval
    use_07_metric=use_07_metric)
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/datasets/voc_eval.py", line 148, in voc_eval
    BB = BB[sorted_ind, :]
IndexError: too many indices for array
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-36
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-36
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-36
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-36
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
Traceback (most recent call last):
  File "./tools/train_faster_rcnn_alt_opt.py", line 17, in <module>
    from fast_rcnn.train import get_training_roidb, train_net
  File "/mnt/sdf/traffic-sign-detection/tools/../lib/fast_rcnn/train.py", line 10, in <module>
    import caffe
  File "/mnt/sdf/traffic-sign-detection/tools/../caffe-fast-rcnn/python/caffe/__init__.py", line 1, in <module>
    from .pycaffe import Net, SGDSolver, NesterovSolver, AdaGradSolver, RMSPropSolver, AdaDeltaSolver, AdamSolver
  File "/mnt/sdf/traffic-sign-detection/tools/../caffe-fast-rcnn/python/caffe/pycaffe.py", line 13, in <module>
    from ._caffe import Net, SGDSolver, NesterovSolver, AdaGradSolver, \
ImportError: libcudart.so.7.5: cannot open shared object file: No such file or directory
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-42
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-42
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-42
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-21_12-58-42
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0421 12:58:46.169250 12236 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0421 12:58:46.169311 12236 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0421 12:58:46.170116 12236 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_conv2"
  type: "Convolution"
  bottom: "conv3"
  top: "rpn_conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_relu2"
  type: "ReLU"
  bottom: "rpn_conv2"
  top: "rpn_conv2"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  bottom: "rpn_conv2"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  bottom: "rpn_conv2"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0421 12:58:46.170320 12236 layer_factory.hpp:77] Creating layer input-data
I0421 12:58:46.171027 12236 net.cpp:106] Creating Layer input-data
I0421 12:58:46.171051 12236 net.cpp:411] input-data -> data
I0421 12:58:46.171075 12236 net.cpp:411] input-data -> im_info
I0421 12:58:46.171093 12236 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0421 12:58:46.187001 12236 net.cpp:150] Setting up input-data
I0421 12:58:46.187036 12236 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0421 12:58:46.187054 12236 net.cpp:157] Top shape: 1 3 (3)
I0421 12:58:46.187062 12236 net.cpp:157] Top shape: 1 4 (4)
I0421 12:58:46.187065 12236 net.cpp:165] Memory required for data: 7200028
I0421 12:58:46.187072 12236 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0421 12:58:46.187096 12236 net.cpp:106] Creating Layer data_input-data_0_split
I0421 12:58:46.187108 12236 net.cpp:454] data_input-data_0_split <- data
I0421 12:58:46.187125 12236 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0421 12:58:46.187137 12236 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0421 12:58:46.187178 12236 net.cpp:150] Setting up data_input-data_0_split
I0421 12:58:46.187191 12236 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0421 12:58:46.187196 12236 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0421 12:58:46.187201 12236 net.cpp:165] Memory required for data: 21600028
I0421 12:58:46.187206 12236 layer_factory.hpp:77] Creating layer conv1
I0421 12:58:46.187224 12236 net.cpp:106] Creating Layer conv1
I0421 12:58:46.187233 12236 net.cpp:454] conv1 <- data_input-data_0_split_0
I0421 12:58:46.187242 12236 net.cpp:411] conv1 -> conv1
I0421 12:58:46.188603 12236 net.cpp:150] Setting up conv1
I0421 12:58:46.188623 12236 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0421 12:58:46.188628 12236 net.cpp:165] Memory required for data: 79200028
I0421 12:58:46.188652 12236 layer_factory.hpp:77] Creating layer relu1
I0421 12:58:46.188665 12236 net.cpp:106] Creating Layer relu1
I0421 12:58:46.188676 12236 net.cpp:454] relu1 <- conv1
I0421 12:58:46.188684 12236 net.cpp:397] relu1 -> conv1 (in-place)
I0421 12:58:46.188697 12236 net.cpp:150] Setting up relu1
I0421 12:58:46.188704 12236 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0421 12:58:46.188709 12236 net.cpp:165] Memory required for data: 136800028
I0421 12:58:46.188712 12236 layer_factory.hpp:77] Creating layer norm1
I0421 12:58:46.188725 12236 net.cpp:106] Creating Layer norm1
I0421 12:58:46.188735 12236 net.cpp:454] norm1 <- conv1
I0421 12:58:46.188743 12236 net.cpp:411] norm1 -> norm1
I0421 12:58:46.188854 12236 net.cpp:150] Setting up norm1
I0421 12:58:46.188868 12236 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0421 12:58:46.188871 12236 net.cpp:165] Memory required for data: 194400028
I0421 12:58:46.188876 12236 layer_factory.hpp:77] Creating layer pool1
I0421 12:58:46.188886 12236 net.cpp:106] Creating Layer pool1
I0421 12:58:46.188894 12236 net.cpp:454] pool1 <- norm1
I0421 12:58:46.188900 12236 net.cpp:411] pool1 -> pool1
I0421 12:58:46.188943 12236 net.cpp:150] Setting up pool1
I0421 12:58:46.188956 12236 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0421 12:58:46.188959 12236 net.cpp:165] Memory required for data: 208954012
I0421 12:58:46.188963 12236 layer_factory.hpp:77] Creating layer conv2
I0421 12:58:46.188973 12236 net.cpp:106] Creating Layer conv2
I0421 12:58:46.188978 12236 net.cpp:454] conv2 <- pool1
I0421 12:58:46.188989 12236 net.cpp:411] conv2 -> conv2
I0421 12:58:46.190721 12236 net.cpp:150] Setting up conv2
I0421 12:58:46.190742 12236 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0421 12:58:46.190747 12236 net.cpp:165] Memory required for data: 218759836
I0421 12:58:46.190758 12236 layer_factory.hpp:77] Creating layer relu2
I0421 12:58:46.190768 12236 net.cpp:106] Creating Layer relu2
I0421 12:58:46.190775 12236 net.cpp:454] relu2 <- conv2
I0421 12:58:46.190785 12236 net.cpp:397] relu2 -> conv2 (in-place)
I0421 12:58:46.190796 12236 net.cpp:150] Setting up relu2
I0421 12:58:46.190804 12236 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0421 12:58:46.190809 12236 net.cpp:165] Memory required for data: 228565660
I0421 12:58:46.190812 12236 layer_factory.hpp:77] Creating layer norm2
I0421 12:58:46.190821 12236 net.cpp:106] Creating Layer norm2
I0421 12:58:46.190830 12236 net.cpp:454] norm2 <- conv2
I0421 12:58:46.190840 12236 net.cpp:411] norm2 -> norm2
I0421 12:58:46.190934 12236 net.cpp:150] Setting up norm2
I0421 12:58:46.190946 12236 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0421 12:58:46.190950 12236 net.cpp:165] Memory required for data: 238371484
I0421 12:58:46.190955 12236 layer_factory.hpp:77] Creating layer pool2
I0421 12:58:46.190964 12236 net.cpp:106] Creating Layer pool2
I0421 12:58:46.190973 12236 net.cpp:454] pool2 <- norm2
I0421 12:58:46.190979 12236 net.cpp:411] pool2 -> pool2
I0421 12:58:46.191018 12236 net.cpp:150] Setting up pool2
I0421 12:58:46.191030 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.191035 12236 net.cpp:165] Memory required for data: 240927388
I0421 12:58:46.191038 12236 layer_factory.hpp:77] Creating layer conv3
I0421 12:58:46.191047 12236 net.cpp:106] Creating Layer conv3
I0421 12:58:46.191053 12236 net.cpp:454] conv3 <- pool2
I0421 12:58:46.191061 12236 net.cpp:411] conv3 -> conv3
I0421 12:58:46.194321 12236 net.cpp:150] Setting up conv3
I0421 12:58:46.194352 12236 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0421 12:58:46.194357 12236 net.cpp:165] Memory required for data: 244761244
I0421 12:58:46.194370 12236 layer_factory.hpp:77] Creating layer relu3
I0421 12:58:46.194378 12236 net.cpp:106] Creating Layer relu3
I0421 12:58:46.194386 12236 net.cpp:454] relu3 <- conv3
I0421 12:58:46.194396 12236 net.cpp:397] relu3 -> conv3 (in-place)
I0421 12:58:46.194411 12236 net.cpp:150] Setting up relu3
I0421 12:58:46.194418 12236 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0421 12:58:46.194422 12236 net.cpp:165] Memory required for data: 248595100
I0421 12:58:46.194427 12236 layer_factory.hpp:77] Creating layer conv3_relu3_0_split
I0421 12:58:46.194435 12236 net.cpp:106] Creating Layer conv3_relu3_0_split
I0421 12:58:46.194439 12236 net.cpp:454] conv3_relu3_0_split <- conv3
I0421 12:58:46.194447 12236 net.cpp:411] conv3_relu3_0_split -> conv3_relu3_0_split_0
I0421 12:58:46.194458 12236 net.cpp:411] conv3_relu3_0_split -> conv3_relu3_0_split_1
I0421 12:58:46.194499 12236 net.cpp:150] Setting up conv3_relu3_0_split
I0421 12:58:46.194514 12236 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0421 12:58:46.194519 12236 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0421 12:58:46.194524 12236 net.cpp:165] Memory required for data: 256262812
I0421 12:58:46.194528 12236 layer_factory.hpp:77] Creating layer conv4
I0421 12:58:46.194540 12236 net.cpp:106] Creating Layer conv4
I0421 12:58:46.194550 12236 net.cpp:454] conv4 <- conv3_relu3_0_split_0
I0421 12:58:46.194561 12236 net.cpp:411] conv4 -> conv4
I0421 12:58:46.197835 12236 net.cpp:150] Setting up conv4
I0421 12:58:46.197854 12236 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0421 12:58:46.197860 12236 net.cpp:165] Memory required for data: 260096668
I0421 12:58:46.197870 12236 layer_factory.hpp:77] Creating layer relu4
I0421 12:58:46.197876 12236 net.cpp:106] Creating Layer relu4
I0421 12:58:46.197881 12236 net.cpp:454] relu4 <- conv4
I0421 12:58:46.197891 12236 net.cpp:397] relu4 -> conv4 (in-place)
I0421 12:58:46.197901 12236 net.cpp:150] Setting up relu4
I0421 12:58:46.197908 12236 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0421 12:58:46.197916 12236 net.cpp:165] Memory required for data: 263930524
I0421 12:58:46.197921 12236 layer_factory.hpp:77] Creating layer conv5
I0421 12:58:46.197933 12236 net.cpp:106] Creating Layer conv5
I0421 12:58:46.197943 12236 net.cpp:454] conv5 <- conv4
I0421 12:58:46.197952 12236 net.cpp:411] conv5 -> conv5
I0421 12:58:46.200263 12236 net.cpp:150] Setting up conv5
I0421 12:58:46.200283 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.200287 12236 net.cpp:165] Memory required for data: 266486428
I0421 12:58:46.200299 12236 layer_factory.hpp:77] Creating layer relu5
I0421 12:58:46.200314 12236 net.cpp:106] Creating Layer relu5
I0421 12:58:46.200320 12236 net.cpp:454] relu5 <- conv5
I0421 12:58:46.200327 12236 net.cpp:397] relu5 -> conv5 (in-place)
I0421 12:58:46.200341 12236 net.cpp:150] Setting up relu5
I0421 12:58:46.200347 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.200353 12236 net.cpp:165] Memory required for data: 269042332
I0421 12:58:46.200357 12236 layer_factory.hpp:77] Creating layer rpn_conv1
I0421 12:58:46.200373 12236 net.cpp:106] Creating Layer rpn_conv1
I0421 12:58:46.200383 12236 net.cpp:454] rpn_conv1 <- conv5
I0421 12:58:46.200394 12236 net.cpp:411] rpn_conv1 -> rpn_conv1
I0421 12:58:46.217424 12236 net.cpp:150] Setting up rpn_conv1
I0421 12:58:46.217443 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.217448 12236 net.cpp:165] Memory required for data: 271598236
I0421 12:58:46.217458 12236 layer_factory.hpp:77] Creating layer rpn_conv2
I0421 12:58:46.217474 12236 net.cpp:106] Creating Layer rpn_conv2
I0421 12:58:46.217481 12236 net.cpp:454] rpn_conv2 <- conv3_relu3_0_split_1
I0421 12:58:46.217494 12236 net.cpp:411] rpn_conv2 -> rpn_conv2
I0421 12:58:46.242950 12236 net.cpp:150] Setting up rpn_conv2
I0421 12:58:46.242969 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.242974 12236 net.cpp:165] Memory required for data: 274154140
I0421 12:58:46.242985 12236 layer_factory.hpp:77] Creating layer rpn_relu1
I0421 12:58:46.242992 12236 net.cpp:106] Creating Layer rpn_relu1
I0421 12:58:46.242997 12236 net.cpp:454] rpn_relu1 <- rpn_conv1
I0421 12:58:46.243007 12236 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0421 12:58:46.243018 12236 net.cpp:150] Setting up rpn_relu1
I0421 12:58:46.243026 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.243033 12236 net.cpp:165] Memory required for data: 276710044
I0421 12:58:46.243038 12236 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0421 12:58:46.243049 12236 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0421 12:58:46.243054 12236 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0421 12:58:46.243060 12236 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0421 12:58:46.243068 12236 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0421 12:58:46.243119 12236 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0421 12:58:46.243131 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.243137 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.243141 12236 net.cpp:165] Memory required for data: 281821852
I0421 12:58:46.243145 12236 layer_factory.hpp:77] Creating layer rpn_relu2
I0421 12:58:46.243154 12236 net.cpp:106] Creating Layer rpn_relu2
I0421 12:58:46.243162 12236 net.cpp:454] rpn_relu2 <- rpn_conv2
I0421 12:58:46.243171 12236 net.cpp:397] rpn_relu2 -> rpn_conv2 (in-place)
I0421 12:58:46.243180 12236 net.cpp:150] Setting up rpn_relu2
I0421 12:58:46.243187 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.243192 12236 net.cpp:165] Memory required for data: 284377756
I0421 12:58:46.243197 12236 layer_factory.hpp:77] Creating layer rpn_conv2_rpn_relu2_0_split
I0421 12:58:46.243203 12236 net.cpp:106] Creating Layer rpn_conv2_rpn_relu2_0_split
I0421 12:58:46.243208 12236 net.cpp:454] rpn_conv2_rpn_relu2_0_split <- rpn_conv2
I0421 12:58:46.243217 12236 net.cpp:411] rpn_conv2_rpn_relu2_0_split -> rpn_conv2_rpn_relu2_0_split_0
I0421 12:58:46.243227 12236 net.cpp:411] rpn_conv2_rpn_relu2_0_split -> rpn_conv2_rpn_relu2_0_split_1
I0421 12:58:46.243266 12236 net.cpp:150] Setting up rpn_conv2_rpn_relu2_0_split
I0421 12:58:46.243278 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.243284 12236 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0421 12:58:46.243288 12236 net.cpp:165] Memory required for data: 289489564
I0421 12:58:46.243293 12236 layer_factory.hpp:77] Creating layer rpn_cls_score
I0421 12:58:46.243311 12236 net.cpp:106] Creating Layer rpn_cls_score
I0421 12:58:46.243320 12236 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0421 12:58:46.243326 12236 net.cpp:454] rpn_cls_score <- rpn_conv2_rpn_relu2_0_split_0
I0421 12:58:46.243337 12236 net.cpp:411] rpn_cls_score -> rpn_cls_score
F0421 12:58:46.243357 12236 layer.hpp:405] Check failed: bottom.size() == top.size() (2 vs. 1) Convolution Layer produces one top blob as output for each bottom blob input.
*** Check failure stack trace: ***
