+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=ZF
+ NET_lc=zf
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=40000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-22_07-49-07
+ exec
++ tee -a experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-22_07-49-07
+ echo Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-22_07-49-07
Logging output to experiments/logs/faster_rcnn_alt_opt_ZF_.txt.2017-04-22_07-49-07
+ ./tools/train_faster_rcnn_alt_opt.py --gpu 0 --net_name ZF --weights data/imagenet_models/ZF.v2.caffemodel --imdb voc_2007_trainval --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', gpu_id=0, imdb_name='voc_2007_trainval', net_name='ZF', pretrained_model='data/imagenet_models/ZF.v2.caffemodel', set_cfgs=None)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0422 07:49:11.037330 15458 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0422 07:49:11.037386 15458 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_rpn_train.pt
I0422 07:49:11.038378 15458 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 21"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_conv2"
  type: "Convolution"
  bottom: "conv3"
  top: "rpn_conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_relu2"
  type: "ReLU"
  bottom: "rpn_conv2"
  top: "rpn_conv2"
}
layer {
  name: "rpn_cls_score2"
  type: "Convolution"
  bottom: "rpn_conv2"
  top: "rpn_cls_score2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred2"
  type: "Convolution"
  bottom: "rpn_conv2"
  top: "rpn_bbox_pred2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape2"
  type: "Reshape"
  bottom: "rpn_cls_score2"
  top: "rpn_cls_score_reshape2"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn-data2"
  type: "Python"
  bottom: "rpn_cls_score2"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels2"
  top: "rpn_bbox_targets2"
  top: "rpn_bbox_inside_weights2"
  top: "rpn_bbox_outside_weights2"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_cls2"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape2"
  bottom: "rpn_labels2"
  top: "rpn_cls_loss2"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_loss_bbox2"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred2"
  bottom: "rpn_bbox_targets2"
  bottom: "rpn_bbox_inside_weights2"
  bottom: "rpn_bbox_outside_weights2"
  top: "rpn_loss_bbox2"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0422 07:49:11.038614 15458 layer_factory.hpp:77] Creating layer input-data
I0422 07:49:11.039156 15458 net.cpp:106] Creating Layer input-data
I0422 07:49:11.039177 15458 net.cpp:411] input-data -> data
I0422 07:49:11.039194 15458 net.cpp:411] input-data -> im_info
I0422 07:49:11.039206 15458 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0422 07:49:11.054975 15458 net.cpp:150] Setting up input-data
I0422 07:49:11.054994 15458 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:49:11.055003 15458 net.cpp:157] Top shape: 1 3 (3)
I0422 07:49:11.055006 15458 net.cpp:157] Top shape: 1 4 (4)
I0422 07:49:11.055009 15458 net.cpp:165] Memory required for data: 7200028
I0422 07:49:11.055013 15458 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0422 07:49:11.055024 15458 net.cpp:106] Creating Layer data_input-data_0_split
I0422 07:49:11.055032 15458 net.cpp:454] data_input-data_0_split <- data
I0422 07:49:11.055040 15458 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0422 07:49:11.055052 15458 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0422 07:49:11.055059 15458 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_2
I0422 07:49:11.055106 15458 net.cpp:150] Setting up data_input-data_0_split
I0422 07:49:11.055115 15458 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:49:11.055119 15458 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:49:11.055125 15458 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:49:11.055127 15458 net.cpp:165] Memory required for data: 28800028
I0422 07:49:11.055130 15458 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0422 07:49:11.055137 15458 net.cpp:106] Creating Layer im_info_input-data_1_split
I0422 07:49:11.055145 15458 net.cpp:454] im_info_input-data_1_split <- im_info
I0422 07:49:11.055148 15458 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0422 07:49:11.055153 15458 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0422 07:49:11.055183 15458 net.cpp:150] Setting up im_info_input-data_1_split
I0422 07:49:11.055192 15458 net.cpp:157] Top shape: 1 3 (3)
I0422 07:49:11.055196 15458 net.cpp:157] Top shape: 1 3 (3)
I0422 07:49:11.055198 15458 net.cpp:165] Memory required for data: 28800052
I0422 07:49:11.055202 15458 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0422 07:49:11.055207 15458 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0422 07:49:11.055209 15458 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0422 07:49:11.055213 15458 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0422 07:49:11.055225 15458 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0422 07:49:11.055251 15458 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0422 07:49:11.055259 15458 net.cpp:157] Top shape: 1 4 (4)
I0422 07:49:11.055263 15458 net.cpp:157] Top shape: 1 4 (4)
I0422 07:49:11.055265 15458 net.cpp:165] Memory required for data: 28800084
I0422 07:49:11.055268 15458 layer_factory.hpp:77] Creating layer conv1
I0422 07:49:11.055282 15458 net.cpp:106] Creating Layer conv1
I0422 07:49:11.055290 15458 net.cpp:454] conv1 <- data_input-data_0_split_0
I0422 07:49:11.055294 15458 net.cpp:411] conv1 -> conv1
I0422 07:49:11.056627 15458 net.cpp:150] Setting up conv1
I0422 07:49:11.056644 15458 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0422 07:49:11.056648 15458 net.cpp:165] Memory required for data: 86400084
I0422 07:49:11.056660 15458 layer_factory.hpp:77] Creating layer relu1
I0422 07:49:11.056674 15458 net.cpp:106] Creating Layer relu1
I0422 07:49:11.056679 15458 net.cpp:454] relu1 <- conv1
I0422 07:49:11.056685 15458 net.cpp:397] relu1 -> conv1 (in-place)
I0422 07:49:11.056699 15458 net.cpp:150] Setting up relu1
I0422 07:49:11.056704 15458 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0422 07:49:11.056706 15458 net.cpp:165] Memory required for data: 144000084
I0422 07:49:11.056710 15458 layer_factory.hpp:77] Creating layer norm1
I0422 07:49:11.056715 15458 net.cpp:106] Creating Layer norm1
I0422 07:49:11.056721 15458 net.cpp:454] norm1 <- conv1
I0422 07:49:11.056727 15458 net.cpp:411] norm1 -> norm1
I0422 07:49:11.056829 15458 net.cpp:150] Setting up norm1
I0422 07:49:11.056839 15458 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0422 07:49:11.056841 15458 net.cpp:165] Memory required for data: 201600084
I0422 07:49:11.056844 15458 layer_factory.hpp:77] Creating layer pool1
I0422 07:49:11.056852 15458 net.cpp:106] Creating Layer pool1
I0422 07:49:11.056859 15458 net.cpp:454] pool1 <- norm1
I0422 07:49:11.056862 15458 net.cpp:411] pool1 -> pool1
I0422 07:49:11.056895 15458 net.cpp:150] Setting up pool1
I0422 07:49:11.056903 15458 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0422 07:49:11.056906 15458 net.cpp:165] Memory required for data: 216154068
I0422 07:49:11.056908 15458 layer_factory.hpp:77] Creating layer conv2
I0422 07:49:11.056916 15458 net.cpp:106] Creating Layer conv2
I0422 07:49:11.056922 15458 net.cpp:454] conv2 <- pool1
I0422 07:49:11.056928 15458 net.cpp:411] conv2 -> conv2
I0422 07:49:11.058588 15458 net.cpp:150] Setting up conv2
I0422 07:49:11.058604 15458 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0422 07:49:11.058606 15458 net.cpp:165] Memory required for data: 225959892
I0422 07:49:11.058614 15458 layer_factory.hpp:77] Creating layer relu2
I0422 07:49:11.058626 15458 net.cpp:106] Creating Layer relu2
I0422 07:49:11.058629 15458 net.cpp:454] relu2 <- conv2
I0422 07:49:11.058636 15458 net.cpp:397] relu2 -> conv2 (in-place)
I0422 07:49:11.058641 15458 net.cpp:150] Setting up relu2
I0422 07:49:11.058650 15458 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0422 07:49:11.058652 15458 net.cpp:165] Memory required for data: 235765716
I0422 07:49:11.058655 15458 layer_factory.hpp:77] Creating layer norm2
I0422 07:49:11.058661 15458 net.cpp:106] Creating Layer norm2
I0422 07:49:11.058668 15458 net.cpp:454] norm2 <- conv2
I0422 07:49:11.058672 15458 net.cpp:411] norm2 -> norm2
I0422 07:49:11.058754 15458 net.cpp:150] Setting up norm2
I0422 07:49:11.058763 15458 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0422 07:49:11.058766 15458 net.cpp:165] Memory required for data: 245571540
I0422 07:49:11.058769 15458 layer_factory.hpp:77] Creating layer pool2
I0422 07:49:11.058773 15458 net.cpp:106] Creating Layer pool2
I0422 07:49:11.058781 15458 net.cpp:454] pool2 <- norm2
I0422 07:49:11.058786 15458 net.cpp:411] pool2 -> pool2
I0422 07:49:11.058814 15458 net.cpp:150] Setting up pool2
I0422 07:49:11.058822 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.058825 15458 net.cpp:165] Memory required for data: 248127444
I0422 07:49:11.058827 15458 layer_factory.hpp:77] Creating layer conv3
I0422 07:49:11.058835 15458 net.cpp:106] Creating Layer conv3
I0422 07:49:11.058841 15458 net.cpp:454] conv3 <- pool2
I0422 07:49:11.058845 15458 net.cpp:411] conv3 -> conv3
I0422 07:49:11.062077 15458 net.cpp:150] Setting up conv3
I0422 07:49:11.062096 15458 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:49:11.062101 15458 net.cpp:165] Memory required for data: 251961300
I0422 07:49:11.062109 15458 layer_factory.hpp:77] Creating layer relu3
I0422 07:49:11.062119 15458 net.cpp:106] Creating Layer relu3
I0422 07:49:11.062122 15458 net.cpp:454] relu3 <- conv3
I0422 07:49:11.062129 15458 net.cpp:397] relu3 -> conv3 (in-place)
I0422 07:49:11.062134 15458 net.cpp:150] Setting up relu3
I0422 07:49:11.062141 15458 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:49:11.062144 15458 net.cpp:165] Memory required for data: 255795156
I0422 07:49:11.062147 15458 layer_factory.hpp:77] Creating layer conv3_relu3_0_split
I0422 07:49:11.062151 15458 net.cpp:106] Creating Layer conv3_relu3_0_split
I0422 07:49:11.062155 15458 net.cpp:454] conv3_relu3_0_split <- conv3
I0422 07:49:11.062160 15458 net.cpp:411] conv3_relu3_0_split -> conv3_relu3_0_split_0
I0422 07:49:11.062170 15458 net.cpp:411] conv3_relu3_0_split -> conv3_relu3_0_split_1
I0422 07:49:11.062201 15458 net.cpp:150] Setting up conv3_relu3_0_split
I0422 07:49:11.062211 15458 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:49:11.062214 15458 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:49:11.062216 15458 net.cpp:165] Memory required for data: 263462868
I0422 07:49:11.062219 15458 layer_factory.hpp:77] Creating layer conv4
I0422 07:49:11.062230 15458 net.cpp:106] Creating Layer conv4
I0422 07:49:11.062235 15458 net.cpp:454] conv4 <- conv3_relu3_0_split_0
I0422 07:49:11.062240 15458 net.cpp:411] conv4 -> conv4
I0422 07:49:11.065521 15458 net.cpp:150] Setting up conv4
I0422 07:49:11.065538 15458 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:49:11.065541 15458 net.cpp:165] Memory required for data: 267296724
I0422 07:49:11.065547 15458 layer_factory.hpp:77] Creating layer relu4
I0422 07:49:11.065558 15458 net.cpp:106] Creating Layer relu4
I0422 07:49:11.065562 15458 net.cpp:454] relu4 <- conv4
I0422 07:49:11.065568 15458 net.cpp:397] relu4 -> conv4 (in-place)
I0422 07:49:11.065578 15458 net.cpp:150] Setting up relu4
I0422 07:49:11.065583 15458 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:49:11.065585 15458 net.cpp:165] Memory required for data: 271130580
I0422 07:49:11.065589 15458 layer_factory.hpp:77] Creating layer conv5
I0422 07:49:11.065596 15458 net.cpp:106] Creating Layer conv5
I0422 07:49:11.065604 15458 net.cpp:454] conv5 <- conv4
I0422 07:49:11.065609 15458 net.cpp:411] conv5 -> conv5
I0422 07:49:11.067903 15458 net.cpp:150] Setting up conv5
I0422 07:49:11.067919 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.067922 15458 net.cpp:165] Memory required for data: 273686484
I0422 07:49:11.067931 15458 layer_factory.hpp:77] Creating layer relu5
I0422 07:49:11.067941 15458 net.cpp:106] Creating Layer relu5
I0422 07:49:11.067945 15458 net.cpp:454] relu5 <- conv5
I0422 07:49:11.067951 15458 net.cpp:397] relu5 -> conv5 (in-place)
I0422 07:49:11.067957 15458 net.cpp:150] Setting up relu5
I0422 07:49:11.067965 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.067967 15458 net.cpp:165] Memory required for data: 276242388
I0422 07:49:11.067970 15458 layer_factory.hpp:77] Creating layer rpn_conv1
I0422 07:49:11.067982 15458 net.cpp:106] Creating Layer rpn_conv1
I0422 07:49:11.067989 15458 net.cpp:454] rpn_conv1 <- conv5
I0422 07:49:11.067994 15458 net.cpp:411] rpn_conv1 -> rpn_conv1
I0422 07:49:11.085081 15458 net.cpp:150] Setting up rpn_conv1
I0422 07:49:11.085101 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.085104 15458 net.cpp:165] Memory required for data: 278798292
I0422 07:49:11.085111 15458 layer_factory.hpp:77] Creating layer rpn_conv2
I0422 07:49:11.085122 15458 net.cpp:106] Creating Layer rpn_conv2
I0422 07:49:11.085127 15458 net.cpp:454] rpn_conv2 <- conv3_relu3_0_split_1
I0422 07:49:11.085135 15458 net.cpp:411] rpn_conv2 -> rpn_conv2
I0422 07:49:11.110507 15458 net.cpp:150] Setting up rpn_conv2
I0422 07:49:11.110523 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.110527 15458 net.cpp:165] Memory required for data: 281354196
I0422 07:49:11.110532 15458 layer_factory.hpp:77] Creating layer rpn_relu1
I0422 07:49:11.110541 15458 net.cpp:106] Creating Layer rpn_relu1
I0422 07:49:11.110548 15458 net.cpp:454] rpn_relu1 <- rpn_conv1
I0422 07:49:11.110553 15458 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0422 07:49:11.110558 15458 net.cpp:150] Setting up rpn_relu1
I0422 07:49:11.110564 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.110566 15458 net.cpp:165] Memory required for data: 283910100
I0422 07:49:11.110571 15458 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0422 07:49:11.110575 15458 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0422 07:49:11.110579 15458 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0422 07:49:11.110589 15458 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0422 07:49:11.110594 15458 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0422 07:49:11.110623 15458 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0422 07:49:11.110635 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.110638 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.110641 15458 net.cpp:165] Memory required for data: 289021908
I0422 07:49:11.110643 15458 layer_factory.hpp:77] Creating layer rpn_relu2
I0422 07:49:11.110649 15458 net.cpp:106] Creating Layer rpn_relu2
I0422 07:49:11.110651 15458 net.cpp:454] rpn_relu2 <- rpn_conv2
I0422 07:49:11.110656 15458 net.cpp:397] rpn_relu2 -> rpn_conv2 (in-place)
I0422 07:49:11.110661 15458 net.cpp:150] Setting up rpn_relu2
I0422 07:49:11.110664 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.110667 15458 net.cpp:165] Memory required for data: 291577812
I0422 07:49:11.110671 15458 layer_factory.hpp:77] Creating layer rpn_conv2_rpn_relu2_0_split
I0422 07:49:11.110674 15458 net.cpp:106] Creating Layer rpn_conv2_rpn_relu2_0_split
I0422 07:49:11.110677 15458 net.cpp:454] rpn_conv2_rpn_relu2_0_split <- rpn_conv2
I0422 07:49:11.110683 15458 net.cpp:411] rpn_conv2_rpn_relu2_0_split -> rpn_conv2_rpn_relu2_0_split_0
I0422 07:49:11.110689 15458 net.cpp:411] rpn_conv2_rpn_relu2_0_split -> rpn_conv2_rpn_relu2_0_split_1
I0422 07:49:11.110715 15458 net.cpp:150] Setting up rpn_conv2_rpn_relu2_0_split
I0422 07:49:11.110723 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.110728 15458 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:49:11.110730 15458 net.cpp:165] Memory required for data: 296689620
I0422 07:49:11.110733 15458 layer_factory.hpp:77] Creating layer rpn_cls_score2
I0422 07:49:11.110745 15458 net.cpp:106] Creating Layer rpn_cls_score2
I0422 07:49:11.110752 15458 net.cpp:454] rpn_cls_score2 <- rpn_conv2_rpn_relu2_0_split_0
I0422 07:49:11.110759 15458 net.cpp:411] rpn_cls_score2 -> rpn_cls_score2
I0422 07:49:11.111068 15458 net.cpp:150] Setting up rpn_cls_score2
I0422 07:49:11.111080 15458 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:49:11.111083 15458 net.cpp:165] Memory required for data: 296869332
I0422 07:49:11.111088 15458 layer_factory.hpp:77] Creating layer rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:49:11.111094 15458 net.cpp:106] Creating Layer rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:49:11.111098 15458 net.cpp:454] rpn_cls_score2_rpn_cls_score2_0_split <- rpn_cls_score2
I0422 07:49:11.111104 15458 net.cpp:411] rpn_cls_score2_rpn_cls_score2_0_split -> rpn_cls_score2_rpn_cls_score2_0_split_0
I0422 07:49:11.111109 15458 net.cpp:411] rpn_cls_score2_rpn_cls_score2_0_split -> rpn_cls_score2_rpn_cls_score2_0_split_1
I0422 07:49:11.111141 15458 net.cpp:150] Setting up rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:49:11.111150 15458 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:49:11.111155 15458 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:49:11.111156 15458 net.cpp:165] Memory required for data: 297228756
I0422 07:49:11.111160 15458 layer_factory.hpp:77] Creating layer rpn_cls_score
I0422 07:49:11.111167 15458 net.cpp:106] Creating Layer rpn_cls_score
I0422 07:49:11.111176 15458 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0422 07:49:11.111183 15458 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0422 07:49:11.111481 15458 net.cpp:150] Setting up rpn_cls_score
I0422 07:49:11.111491 15458 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:49:11.111495 15458 net.cpp:165] Memory required for data: 297408468
I0422 07:49:11.111505 15458 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0422 07:49:11.111513 15458 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0422 07:49:11.111516 15458 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0422 07:49:11.111523 15458 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0422 07:49:11.111529 15458 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0422 07:49:11.111562 15458 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0422 07:49:11.111570 15458 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:49:11.111573 15458 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:49:11.111577 15458 net.cpp:165] Memory required for data: 297767892
I0422 07:49:11.111579 15458 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0422 07:49:11.111588 15458 net.cpp:106] Creating Layer rpn_bbox_pred
I0422 07:49:11.111594 15458 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0422 07:49:11.111603 15458 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0422 07:49:11.112032 15458 net.cpp:150] Setting up rpn_bbox_pred
I0422 07:49:11.112043 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.112046 15458 net.cpp:165] Memory required for data: 298127316
I0422 07:49:11.112051 15458 layer_factory.hpp:77] Creating layer rpn_bbox_pred2
I0422 07:49:11.112063 15458 net.cpp:106] Creating Layer rpn_bbox_pred2
I0422 07:49:11.112071 15458 net.cpp:454] rpn_bbox_pred2 <- rpn_conv2_rpn_relu2_0_split_1
I0422 07:49:11.112076 15458 net.cpp:411] rpn_bbox_pred2 -> rpn_bbox_pred2
I0422 07:49:11.112506 15458 net.cpp:150] Setting up rpn_bbox_pred2
I0422 07:49:11.112519 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.112522 15458 net.cpp:165] Memory required for data: 298486740
I0422 07:49:11.112527 15458 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0422 07:49:11.112535 15458 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0422 07:49:11.112540 15458 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0422 07:49:11.112546 15458 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0422 07:49:11.112574 15458 net.cpp:150] Setting up rpn_cls_score_reshape
I0422 07:49:11.112583 15458 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0422 07:49:11.112586 15458 net.cpp:165] Memory required for data: 298666452
I0422 07:49:11.112588 15458 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape2
I0422 07:49:11.112599 15458 net.cpp:106] Creating Layer rpn_cls_score_reshape2
I0422 07:49:11.112604 15458 net.cpp:454] rpn_cls_score_reshape2 <- rpn_cls_score2_rpn_cls_score2_0_split_0
I0422 07:49:11.112610 15458 net.cpp:411] rpn_cls_score_reshape2 -> rpn_cls_score_reshape2
I0422 07:49:11.112629 15458 net.cpp:150] Setting up rpn_cls_score_reshape2
I0422 07:49:11.112638 15458 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0422 07:49:11.112640 15458 net.cpp:165] Memory required for data: 298846164
I0422 07:49:11.112643 15458 layer_factory.hpp:77] Creating layer rpn-data
I0422 07:49:11.113117 15458 net.cpp:106] Creating Layer rpn-data
I0422 07:49:11.113134 15458 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0422 07:49:11.113140 15458 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0422 07:49:11.113145 15458 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0422 07:49:11.113148 15458 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0422 07:49:11.113155 15458 net.cpp:411] rpn-data -> rpn_labels
I0422 07:49:11.113162 15458 net.cpp:411] rpn-data -> rpn_bbox_targets
I0422 07:49:11.113173 15458 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0422 07:49:11.113178 15458 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0422 07:49:11.114439 15458 net.cpp:150] Setting up rpn-data
I0422 07:49:11.114459 15458 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0422 07:49:11.114462 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.114467 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.114470 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.114473 15458 net.cpp:165] Memory required for data: 300014292
I0422 07:49:11.114476 15458 layer_factory.hpp:77] Creating layer rpn-data2
I0422 07:49:11.114503 15458 net.cpp:106] Creating Layer rpn-data2
I0422 07:49:11.114513 15458 net.cpp:454] rpn-data2 <- rpn_cls_score2_rpn_cls_score2_0_split_1
I0422 07:49:11.114518 15458 net.cpp:454] rpn-data2 <- gt_boxes_input-data_2_split_1
I0422 07:49:11.114523 15458 net.cpp:454] rpn-data2 <- im_info_input-data_1_split_1
I0422 07:49:11.114527 15458 net.cpp:454] rpn-data2 <- data_input-data_0_split_2
I0422 07:49:11.114536 15458 net.cpp:411] rpn-data2 -> rpn_labels2
I0422 07:49:11.114544 15458 net.cpp:411] rpn-data2 -> rpn_bbox_targets2
I0422 07:49:11.114552 15458 net.cpp:411] rpn-data2 -> rpn_bbox_inside_weights2
I0422 07:49:11.114557 15458 net.cpp:411] rpn-data2 -> rpn_bbox_outside_weights2
I0422 07:49:11.115083 15458 net.cpp:150] Setting up rpn-data2
I0422 07:49:11.115103 15458 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0422 07:49:11.115108 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.115110 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.115113 15458 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:49:11.115116 15458 net.cpp:165] Memory required for data: 301182420
I0422 07:49:11.115121 15458 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0422 07:49:11.115131 15458 net.cpp:106] Creating Layer rpn_loss_cls
I0422 07:49:11.115139 15458 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0422 07:49:11.115144 15458 net.cpp:454] rpn_loss_cls <- rpn_labels
I0422 07:49:11.115149 15458 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0422 07:49:11.115164 15458 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0422 07:49:11.115275 15458 net.cpp:150] Setting up rpn_loss_cls
I0422 07:49:11.115290 15458 net.cpp:157] Top shape: (1)
I0422 07:49:11.115293 15458 net.cpp:160]     with loss weight 1
I0422 07:49:11.115310 15458 net.cpp:165] Memory required for data: 301182424
I0422 07:49:11.115314 15458 layer_factory.hpp:77] Creating layer rpn_loss_cls2
I0422 07:49:11.115319 15458 net.cpp:106] Creating Layer rpn_loss_cls2
I0422 07:49:11.115324 15458 net.cpp:454] rpn_loss_cls2 <- rpn_cls_score_reshape2
I0422 07:49:11.115327 15458 net.cpp:454] rpn_loss_cls2 <- rpn_labels2
I0422 07:49:11.115334 15458 net.cpp:411] rpn_loss_cls2 -> rpn_cls_loss2
I0422 07:49:11.115340 15458 layer_factory.hpp:77] Creating layer rpn_loss_cls2
I0422 07:49:11.115442 15458 net.cpp:150] Setting up rpn_loss_cls2
I0422 07:49:11.115452 15458 net.cpp:157] Top shape: (1)
I0422 07:49:11.115454 15458 net.cpp:160]     with loss weight 1
I0422 07:49:11.115458 15458 net.cpp:165] Memory required for data: 301182428
I0422 07:49:11.115461 15458 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0422 07:49:11.115471 15458 net.cpp:106] Creating Layer rpn_loss_bbox
I0422 07:49:11.115475 15458 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0422 07:49:11.115480 15458 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0422 07:49:11.115483 15458 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0422 07:49:11.115489 15458 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0422 07:49:11.115495 15458 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0422 07:49:11.116062 15458 net.cpp:150] Setting up rpn_loss_bbox
I0422 07:49:11.116073 15458 net.cpp:157] Top shape: (1)
I0422 07:49:11.116076 15458 net.cpp:160]     with loss weight 1
I0422 07:49:11.116080 15458 net.cpp:165] Memory required for data: 301182432
I0422 07:49:11.116086 15458 layer_factory.hpp:77] Creating layer rpn_loss_bbox2
I0422 07:49:11.116092 15458 net.cpp:106] Creating Layer rpn_loss_bbox2
I0422 07:49:11.116096 15458 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_pred2
I0422 07:49:11.116101 15458 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_targets2
I0422 07:49:11.116106 15458 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_inside_weights2
I0422 07:49:11.116109 15458 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_outside_weights2
I0422 07:49:11.116113 15458 net.cpp:411] rpn_loss_bbox2 -> rpn_loss_bbox2
I0422 07:49:11.117182 15458 net.cpp:150] Setting up rpn_loss_bbox2
I0422 07:49:11.117197 15458 net.cpp:157] Top shape: (1)
I0422 07:49:11.117200 15458 net.cpp:160]     with loss weight 1
I0422 07:49:11.117207 15458 net.cpp:165] Memory required for data: 301182436
I0422 07:49:11.117210 15458 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0422 07:49:11.117221 15458 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0422 07:49:11.117229 15458 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0422 07:49:11.117260 15458 net.cpp:150] Setting up dummy_roi_pool_conv5
I0422 07:49:11.117269 15458 net.cpp:157] Top shape: 1 9216 (9216)
I0422 07:49:11.117272 15458 net.cpp:165] Memory required for data: 301219300
I0422 07:49:11.117274 15458 layer_factory.hpp:77] Creating layer fc6
I0422 07:49:11.117282 15458 net.cpp:106] Creating Layer fc6
I0422 07:49:11.117286 15458 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0422 07:49:11.117291 15458 net.cpp:411] fc6 -> fc6
I0422 07:49:11.215275 15458 net.cpp:150] Setting up fc6
I0422 07:49:11.215312 15458 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:49:11.215317 15458 net.cpp:165] Memory required for data: 301235684
I0422 07:49:11.215327 15458 layer_factory.hpp:77] Creating layer relu6
I0422 07:49:11.215337 15458 net.cpp:106] Creating Layer relu6
I0422 07:49:11.215342 15458 net.cpp:454] relu6 <- fc6
I0422 07:49:11.215348 15458 net.cpp:397] relu6 -> fc6 (in-place)
I0422 07:49:11.215358 15458 net.cpp:150] Setting up relu6
I0422 07:49:11.215363 15458 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:49:11.215365 15458 net.cpp:165] Memory required for data: 301252068
I0422 07:49:11.215368 15458 layer_factory.hpp:77] Creating layer fc7
I0422 07:49:11.215379 15458 net.cpp:106] Creating Layer fc7
I0422 07:49:11.215387 15458 net.cpp:454] fc7 <- fc6
I0422 07:49:11.215391 15458 net.cpp:411] fc7 -> fc7
I0422 07:49:11.258919 15458 net.cpp:150] Setting up fc7
I0422 07:49:11.258956 15458 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:49:11.258960 15458 net.cpp:165] Memory required for data: 301268452
I0422 07:49:11.258970 15458 layer_factory.hpp:77] Creating layer silence_fc7
I0422 07:49:11.258996 15458 net.cpp:106] Creating Layer silence_fc7
I0422 07:49:11.259006 15458 net.cpp:454] silence_fc7 <- fc7
I0422 07:49:11.259014 15458 net.cpp:150] Setting up silence_fc7
I0422 07:49:11.259021 15458 net.cpp:165] Memory required for data: 301268452
I0422 07:49:11.259022 15458 net.cpp:228] silence_fc7 does not need backward computation.
I0422 07:49:11.259027 15458 net.cpp:228] fc7 does not need backward computation.
I0422 07:49:11.259029 15458 net.cpp:228] relu6 does not need backward computation.
I0422 07:49:11.259034 15458 net.cpp:228] fc6 does not need backward computation.
I0422 07:49:11.259037 15458 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0422 07:49:11.259040 15458 net.cpp:226] rpn_loss_bbox2 needs backward computation.
I0422 07:49:11.259044 15458 net.cpp:226] rpn_loss_bbox needs backward computation.
I0422 07:49:11.259050 15458 net.cpp:226] rpn_loss_cls2 needs backward computation.
I0422 07:49:11.259054 15458 net.cpp:226] rpn_loss_cls needs backward computation.
I0422 07:49:11.259060 15458 net.cpp:226] rpn-data2 needs backward computation.
I0422 07:49:11.259068 15458 net.cpp:226] rpn-data needs backward computation.
I0422 07:49:11.259076 15458 net.cpp:226] rpn_cls_score_reshape2 needs backward computation.
I0422 07:49:11.259081 15458 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0422 07:49:11.259086 15458 net.cpp:226] rpn_bbox_pred2 needs backward computation.
I0422 07:49:11.259090 15458 net.cpp:226] rpn_bbox_pred needs backward computation.
I0422 07:49:11.259094 15458 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0422 07:49:11.259099 15458 net.cpp:226] rpn_cls_score needs backward computation.
I0422 07:49:11.259101 15458 net.cpp:226] rpn_cls_score2_rpn_cls_score2_0_split needs backward computation.
I0422 07:49:11.259105 15458 net.cpp:226] rpn_cls_score2 needs backward computation.
I0422 07:49:11.259110 15458 net.cpp:226] rpn_conv2_rpn_relu2_0_split needs backward computation.
I0422 07:49:11.259114 15458 net.cpp:226] rpn_relu2 needs backward computation.
I0422 07:49:11.259116 15458 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0422 07:49:11.259120 15458 net.cpp:226] rpn_relu1 needs backward computation.
I0422 07:49:11.259124 15458 net.cpp:226] rpn_conv2 needs backward computation.
I0422 07:49:11.259129 15458 net.cpp:226] rpn_conv1 needs backward computation.
I0422 07:49:11.259131 15458 net.cpp:226] relu5 needs backward computation.
I0422 07:49:11.259136 15458 net.cpp:226] conv5 needs backward computation.
I0422 07:49:11.259140 15458 net.cpp:226] relu4 needs backward computation.
I0422 07:49:11.259142 15458 net.cpp:226] conv4 needs backward computation.
I0422 07:49:11.259145 15458 net.cpp:226] conv3_relu3_0_split needs backward computation.
I0422 07:49:11.259148 15458 net.cpp:226] relu3 needs backward computation.
I0422 07:49:11.259151 15458 net.cpp:226] conv3 needs backward computation.
I0422 07:49:11.259155 15458 net.cpp:226] pool2 needs backward computation.
I0422 07:49:11.259157 15458 net.cpp:226] norm2 needs backward computation.
I0422 07:49:11.259160 15458 net.cpp:226] relu2 needs backward computation.
I0422 07:49:11.259165 15458 net.cpp:226] conv2 needs backward computation.
I0422 07:49:11.259167 15458 net.cpp:226] pool1 needs backward computation.
I0422 07:49:11.259171 15458 net.cpp:226] norm1 needs backward computation.
I0422 07:49:11.259174 15458 net.cpp:226] relu1 needs backward computation.
I0422 07:49:11.259176 15458 net.cpp:226] conv1 needs backward computation.
I0422 07:49:11.259182 15458 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0422 07:49:11.259187 15458 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0422 07:49:11.259193 15458 net.cpp:228] data_input-data_0_split does not need backward computation.
I0422 07:49:11.259197 15458 net.cpp:228] input-data does not need backward computation.
I0422 07:49:11.259202 15458 net.cpp:270] This network produces output rpn_cls_loss
I0422 07:49:11.259205 15458 net.cpp:270] This network produces output rpn_cls_loss2
I0422 07:49:11.259209 15458 net.cpp:270] This network produces output rpn_loss_bbox
I0422 07:49:11.259213 15458 net.cpp:270] This network produces output rpn_loss_bbox2
I0422 07:49:11.259251 15458 net.cpp:283] Network initialization done.
I0422 07:49:11.259392 15458 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0422 07:49:11.707564 15458 net.cpp:816] Ignoring source layer pool5_spm6
I0422 07:49:11.707593 15458 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0422 07:49:11.737823 15458 net.cpp:816] Ignoring source layer drop6
I0422 07:49:11.751351 15458 net.cpp:816] Ignoring source layer relu7
I0422 07:49:11.751371 15458 net.cpp:816] Ignoring source layer drop7
I0422 07:49:11.751374 15458 net.cpp:816] Ignoring source layer fc8
I0422 07:49:11.751377 15458 net.cpp:816] Ignoring source layer prob
Solving...
I0422 07:49:11.945111 15458 solver.cpp:229] Iteration 0, loss = 3.68591
I0422 07:49:11.945155 15458 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.729747 (* 1 = 0.729747 loss)
I0422 07:49:11.945163 15458 solver.cpp:245]     Train net output #1: rpn_cls_loss2 = 1.51607 (* 1 = 1.51607 loss)
I0422 07:49:11.945168 15458 solver.cpp:245]     Train net output #2: rpn_loss_bbox = 0.373719 (* 1 = 0.373719 loss)
I0422 07:49:11.945173 15458 solver.cpp:245]     Train net output #3: rpn_loss_bbox2 = 1.06637 (* 1 = 1.06637 loss)
I0422 07:49:11.945185 15458 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0422 07:49:15.105990 15458 solver.cpp:229] Iteration 20, loss = 1.60893
I0422 07:49:15.106036 15458 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.228224 (* 1 = 0.228224 loss)
I0422 07:49:15.106043 15458 solver.cpp:245]     Train net output #1: rpn_cls_loss2 = 0.281686 (* 1 = 0.281686 loss)
I0422 07:49:15.106050 15458 solver.cpp:245]     Train net output #2: rpn_loss_bbox = 0.268515 (* 1 = 0.268515 loss)
I0422 07:49:15.106053 15458 solver.cpp:245]     Train net output #3: rpn_loss_bbox2 = 0.830508 (* 1 = 0.830508 loss)
I0422 07:49:15.106060 15458 sgd_solver.cpp:106] Iteration 20, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_40.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_40.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0422 07:49:21.963040 15471 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0422 07:49:21.963202 15471 net.cpp:413] Input 0 -> data
I0422 07:49:21.978401 15471 net.cpp:413] Input 1 -> im_info
I0422 07:49:21.978456 15471 layer_factory.hpp:77] Creating layer conv1
I0422 07:49:21.978487 15471 net.cpp:106] Creating Layer conv1
I0422 07:49:21.978502 15471 net.cpp:454] conv1 <- data
I0422 07:49:21.978516 15471 net.cpp:411] conv1 -> conv1
I0422 07:49:21.979323 15471 net.cpp:150] Setting up conv1
I0422 07:49:21.979346 15471 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0422 07:49:21.979349 15471 net.cpp:165] Memory required for data: 4816896
I0422 07:49:21.979365 15471 layer_factory.hpp:77] Creating layer relu1
I0422 07:49:21.979382 15471 net.cpp:106] Creating Layer relu1
I0422 07:49:21.979387 15471 net.cpp:454] relu1 <- conv1
I0422 07:49:21.979394 15471 net.cpp:397] relu1 -> conv1 (in-place)
I0422 07:49:21.979409 15471 net.cpp:150] Setting up relu1
I0422 07:49:21.979423 15471 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0422 07:49:21.979427 15471 net.cpp:165] Memory required for data: 9633792
I0422 07:49:21.979431 15471 layer_factory.hpp:77] Creating layer norm1
I0422 07:49:21.979455 15471 net.cpp:106] Creating Layer norm1
I0422 07:49:21.979468 15471 net.cpp:454] norm1 <- conv1
I0422 07:49:21.979475 15471 net.cpp:411] norm1 -> norm1
I0422 07:49:21.979601 15471 net.cpp:150] Setting up norm1
I0422 07:49:21.979614 15471 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0422 07:49:21.979617 15471 net.cpp:165] Memory required for data: 14450688
I0422 07:49:21.979620 15471 layer_factory.hpp:77] Creating layer pool1
I0422 07:49:21.979629 15471 net.cpp:106] Creating Layer pool1
I0422 07:49:21.979632 15471 net.cpp:454] pool1 <- norm1
I0422 07:49:21.979636 15471 net.cpp:411] pool1 -> pool1
I0422 07:49:21.979681 15471 net.cpp:150] Setting up pool1
I0422 07:49:21.979696 15471 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0422 07:49:21.979698 15471 net.cpp:165] Memory required for data: 15698304
I0422 07:49:21.979701 15471 layer_factory.hpp:77] Creating layer conv2
I0422 07:49:21.979707 15471 net.cpp:106] Creating Layer conv2
I0422 07:49:21.979712 15471 net.cpp:454] conv2 <- pool1
I0422 07:49:21.979717 15471 net.cpp:411] conv2 -> conv2
I0422 07:49:21.981881 15471 net.cpp:150] Setting up conv2
I0422 07:49:21.981900 15471 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0422 07:49:21.981902 15471 net.cpp:165] Memory required for data: 16559488
I0422 07:49:21.981911 15471 layer_factory.hpp:77] Creating layer relu2
I0422 07:49:21.981919 15471 net.cpp:106] Creating Layer relu2
I0422 07:49:21.981922 15471 net.cpp:454] relu2 <- conv2
I0422 07:49:21.981930 15471 net.cpp:397] relu2 -> conv2 (in-place)
I0422 07:49:21.981938 15471 net.cpp:150] Setting up relu2
I0422 07:49:21.981945 15471 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0422 07:49:21.981950 15471 net.cpp:165] Memory required for data: 17420672
I0422 07:49:21.981955 15471 layer_factory.hpp:77] Creating layer norm2
I0422 07:49:21.981962 15471 net.cpp:106] Creating Layer norm2
I0422 07:49:21.981966 15471 net.cpp:454] norm2 <- conv2
I0422 07:49:21.981973 15471 net.cpp:411] norm2 -> norm2
I0422 07:49:21.982071 15471 net.cpp:150] Setting up norm2
I0422 07:49:21.982084 15471 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0422 07:49:21.982087 15471 net.cpp:165] Memory required for data: 18281856
I0422 07:49:21.982089 15471 layer_factory.hpp:77] Creating layer pool2
I0422 07:49:21.982096 15471 net.cpp:106] Creating Layer pool2
I0422 07:49:21.982101 15471 net.cpp:454] pool2 <- norm2
I0422 07:49:21.982105 15471 net.cpp:411] pool2 -> pool2
I0422 07:49:21.982146 15471 net.cpp:150] Setting up pool2
I0422 07:49:21.982161 15471 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:49:21.982164 15471 net.cpp:165] Memory required for data: 18512256
I0422 07:49:21.982167 15471 layer_factory.hpp:77] Creating layer conv3
I0422 07:49:21.982175 15471 net.cpp:106] Creating Layer conv3
I0422 07:49:21.982179 15471 net.cpp:454] conv3 <- pool2
I0422 07:49:21.982183 15471 net.cpp:411] conv3 -> conv3
I0422 07:49:21.984467 15471 net.cpp:150] Setting up conv3
I0422 07:49:21.984484 15471 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:49:21.984488 15471 net.cpp:165] Memory required for data: 18857856
I0422 07:49:21.984496 15471 layer_factory.hpp:77] Creating layer relu3
I0422 07:49:21.984505 15471 net.cpp:106] Creating Layer relu3
I0422 07:49:21.984509 15471 net.cpp:454] relu3 <- conv3
I0422 07:49:21.984514 15471 net.cpp:397] relu3 -> conv3 (in-place)
I0422 07:49:21.984522 15471 net.cpp:150] Setting up relu3
I0422 07:49:21.984535 15471 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:49:21.984539 15471 net.cpp:165] Memory required for data: 19203456
I0422 07:49:21.984544 15471 layer_factory.hpp:77] Creating layer conv4
I0422 07:49:21.984555 15471 net.cpp:106] Creating Layer conv4
I0422 07:49:21.984566 15471 net.cpp:454] conv4 <- conv3
I0422 07:49:21.984575 15471 net.cpp:411] conv4 -> conv4
I0422 07:49:21.987874 15471 net.cpp:150] Setting up conv4
I0422 07:49:21.987890 15471 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:49:21.987893 15471 net.cpp:165] Memory required for data: 19549056
I0422 07:49:21.987900 15471 layer_factory.hpp:77] Creating layer relu4
I0422 07:49:21.987905 15471 net.cpp:106] Creating Layer relu4
I0422 07:49:21.987908 15471 net.cpp:454] relu4 <- conv4
I0422 07:49:21.987912 15471 net.cpp:397] relu4 -> conv4 (in-place)
I0422 07:49:21.987923 15471 net.cpp:150] Setting up relu4
I0422 07:49:21.987929 15471 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:49:21.987933 15471 net.cpp:165] Memory required for data: 19894656
I0422 07:49:21.987937 15471 layer_factory.hpp:77] Creating layer conv5
I0422 07:49:21.987948 15471 net.cpp:106] Creating Layer conv5
I0422 07:49:21.987960 15471 net.cpp:454] conv5 <- conv4
I0422 07:49:21.987972 15471 net.cpp:411] conv5 -> conv5
I0422 07:49:21.990268 15471 net.cpp:150] Setting up conv5
I0422 07:49:21.990288 15471 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:49:21.990291 15471 net.cpp:165] Memory required for data: 20125056
I0422 07:49:21.990300 15471 layer_factory.hpp:77] Creating layer relu5
I0422 07:49:21.990309 15471 net.cpp:106] Creating Layer relu5
I0422 07:49:21.990311 15471 net.cpp:454] relu5 <- conv5
I0422 07:49:21.990316 15471 net.cpp:397] relu5 -> conv5 (in-place)
I0422 07:49:21.990324 15471 net.cpp:150] Setting up relu5
I0422 07:49:21.990351 15471 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:49:21.990356 15471 net.cpp:165] Memory required for data: 20355456
I0422 07:49:21.990360 15471 layer_factory.hpp:77] Creating layer rpn_conv1
I0422 07:49:21.990376 15471 net.cpp:106] Creating Layer rpn_conv1
I0422 07:49:21.990380 15471 net.cpp:454] rpn_conv1 <- conv5
I0422 07:49:21.990391 15471 net.cpp:411] rpn_conv1 -> rpn_conv1
I0422 07:49:21.992013 15471 net.cpp:150] Setting up rpn_conv1
I0422 07:49:21.992032 15471 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:49:21.992033 15471 net.cpp:165] Memory required for data: 20585856
I0422 07:49:21.992039 15471 layer_factory.hpp:77] Creating layer rpn_relu1
I0422 07:49:21.992045 15471 net.cpp:106] Creating Layer rpn_relu1
I0422 07:49:21.992048 15471 net.cpp:454] rpn_relu1 <- rpn_conv1
I0422 07:49:21.992054 15471 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0422 07:49:21.992060 15471 net.cpp:150] Setting up rpn_relu1
I0422 07:49:21.992067 15471 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:49:21.992071 15471 net.cpp:165] Memory required for data: 20816256
I0422 07:49:21.992076 15471 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0422 07:49:21.992087 15471 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0422 07:49:21.992094 15471 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0422 07:49:21.992101 15471 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0422 07:49:21.992116 15471 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0422 07:49:21.992162 15471 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0422 07:49:21.992174 15471 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:49:21.992178 15471 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:49:21.992180 15471 net.cpp:165] Memory required for data: 21277056
I0422 07:49:21.992183 15471 layer_factory.hpp:77] Creating layer rpn_cls_score
I0422 07:49:21.992192 15471 net.cpp:106] Creating Layer rpn_cls_score
I0422 07:49:21.992197 15471 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0422 07:49:21.992202 15471 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0422 07:49:21.992396 15471 net.cpp:150] Setting up rpn_cls_score
I0422 07:49:21.992409 15471 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0422 07:49:21.992411 15471 net.cpp:165] Memory required for data: 21293256
I0422 07:49:21.992418 15471 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0422 07:49:21.992424 15471 net.cpp:106] Creating Layer rpn_bbox_pred
I0422 07:49:21.992429 15471 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0422 07:49:21.992435 15471 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0422 07:49:21.992632 15471 net.cpp:150] Setting up rpn_bbox_pred
I0422 07:49:21.992645 15471 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0422 07:49:21.992647 15471 net.cpp:165] Memory required for data: 21325656
I0422 07:49:21.992653 15471 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0422 07:49:21.992660 15471 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0422 07:49:21.992663 15471 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0422 07:49:21.992671 15471 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0422 07:49:21.992707 15471 net.cpp:150] Setting up rpn_cls_score_reshape
I0422 07:49:21.992720 15471 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0422 07:49:21.992722 15471 net.cpp:165] Memory required for data: 21341856
I0422 07:49:21.992725 15471 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0422 07:49:21.992733 15471 net.cpp:106] Creating Layer rpn_cls_prob
I0422 07:49:21.992738 15471 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0422 07:49:21.992743 15471 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0422 07:49:21.992810 15471 net.cpp:150] Setting up rpn_cls_prob
I0422 07:49:21.992821 15471 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0422 07:49:21.992825 15471 net.cpp:165] Memory required for data: 21358056
I0422 07:49:21.992827 15471 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0422 07:49:21.992832 15471 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0422 07:49:21.992835 15471 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0422 07:49:21.992842 15471 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0422 07:49:21.992867 15471 net.cpp:150] Setting up rpn_cls_prob_reshape
I0422 07:49:21.992877 15471 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0422 07:49:21.992882 15471 net.cpp:165] Memory required for data: 21374256
I0422 07:49:21.992885 15471 layer_factory.hpp:77] Creating layer proposal
I0422 07:49:21.994302 15471 net.cpp:106] Creating Layer proposal
I0422 07:49:21.994320 15471 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0422 07:49:21.994343 15471 net.cpp:454] proposal <- rpn_bbox_pred
I0422 07:49:21.994352 15471 net.cpp:454] proposal <- im_info
I0422 07:49:21.994364 15471 net.cpp:411] proposal -> rois
I0422 07:49:21.994374 15471 net.cpp:411] proposal -> scores
I0422 07:49:21.995669 15471 net.cpp:150] Setting up proposal
I0422 07:49:21.995692 15471 net.cpp:157] Top shape: 1 5 (5)
I0422 07:49:21.995697 15471 net.cpp:157] Top shape: 1 1 1 1 (1)
I0422 07:49:21.995698 15471 net.cpp:165] Memory required for data: 21374280
I0422 07:49:21.995702 15471 net.cpp:228] proposal does not need backward computation.
I0422 07:49:21.995707 15471 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0422 07:49:21.995710 15471 net.cpp:228] rpn_cls_prob does not need backward computation.
I0422 07:49:21.995713 15471 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0422 07:49:21.995715 15471 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0422 07:49:21.995718 15471 net.cpp:228] rpn_cls_score does not need backward computation.
I0422 07:49:21.995721 15471 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0422 07:49:21.995724 15471 net.cpp:228] rpn_relu1 does not need backward computation.
I0422 07:49:21.995728 15471 net.cpp:228] rpn_conv1 does not need backward computation.
I0422 07:49:21.995730 15471 net.cpp:228] relu5 does not need backward computation.
I0422 07:49:21.995733 15471 net.cpp:228] conv5 does not need backward computation.
I0422 07:49:21.995738 15471 net.cpp:228] relu4 does not need backward computation.
I0422 07:49:21.995741 15471 net.cpp:228] conv4 does not need backward computation.
I0422 07:49:21.995745 15471 net.cpp:228] relu3 does not need backward computation.
I0422 07:49:21.995753 15471 net.cpp:228] conv3 does not need backward computation.
I0422 07:49:21.995756 15471 net.cpp:228] pool2 does not need backward computation.
I0422 07:49:21.995760 15471 net.cpp:228] norm2 does not need backward computation.
I0422 07:49:21.995764 15471 net.cpp:228] relu2 does not need backward computation.
I0422 07:49:21.995769 15471 net.cpp:228] conv2 does not need backward computation.
I0422 07:49:21.995774 15471 net.cpp:228] pool1 does not need backward computation.
I0422 07:49:21.995781 15471 net.cpp:228] norm1 does not need backward computation.
I0422 07:49:21.995785 15471 net.cpp:228] relu1 does not need backward computation.
I0422 07:49:21.995790 15471 net.cpp:228] conv1 does not need backward computation.
I0422 07:49:21.995795 15471 net.cpp:270] This network produces output rois
I0422 07:49:21.995800 15471 net.cpp:270] This network produces output scores
I0422 07:49:21.995826 15471 net.cpp:283] Network initialization done.
I0422 07:49:22.432679 15471 net.cpp:816] Ignoring source layer input-data
I0422 07:49:22.432723 15471 net.cpp:816] Ignoring source layer data_input-data_0_split
I0422 07:49:22.432729 15471 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0422 07:49:22.432732 15471 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0422 07:49:22.434011 15471 net.cpp:816] Ignoring source layer conv3_relu3_0_split
I0422 07:49:22.436333 15471 net.cpp:816] Ignoring source layer rpn_conv2
I0422 07:49:22.436347 15471 net.cpp:816] Ignoring source layer rpn_relu2
I0422 07:49:22.436350 15471 net.cpp:816] Ignoring source layer rpn_conv2_rpn_relu2_0_split
I0422 07:49:22.436352 15471 net.cpp:816] Ignoring source layer rpn_cls_score2
I0422 07:49:22.436354 15471 net.cpp:816] Ignoring source layer rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:49:22.436364 15471 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0422 07:49:22.436379 15471 net.cpp:816] Ignoring source layer rpn_bbox_pred2
I0422 07:49:22.436383 15471 net.cpp:816] Ignoring source layer rpn_cls_score_reshape2
I0422 07:49:22.436386 15471 net.cpp:816] Ignoring source layer rpn-data
I0422 07:49:22.436390 15471 net.cpp:816] Ignoring source layer rpn-data2
I0422 07:49:22.436393 15471 net.cpp:816] Ignoring source layer rpn_loss_cls
I0422 07:49:22.436398 15471 net.cpp:816] Ignoring source layer rpn_loss_cls2
I0422 07:49:22.436400 15471 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0422 07:49:22.436404 15471 net.cpp:816] Ignoring source layer rpn_loss_bbox2
I0422 07:49:22.436408 15471 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0422 07:49:22.436413 15471 net.cpp:816] Ignoring source layer fc6
I0422 07:49:22.436416 15471 net.cpp:816] Ignoring source layer relu6
I0422 07:49:22.436419 15471 net.cpp:816] Ignoring source layer fc7
I0422 07:49:22.436424 15471 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.164s
im_proposals: 2/506 0.152s
im_proposals: 3/506 0.149s
im_proposals: 4/506 0.147s
im_proposals: 5/506 0.145s
im_proposals: 6/506 0.145s
im_proposals: 7/506 0.145s
im_proposals: 8/506 0.145s
im_proposals: 9/506 0.144s
im_proposals: 10/506 0.144s
im_proposals: 11/506 0.144s
im_proposals: 12/506 0.144s
im_proposals: 13/506 0.144s
im_proposals: 14/506 0.144s
im_proposals: 15/506 0.144s
im_proposals: 16/506 0.144s
im_proposals: 17/506 0.144s
im_proposals: 18/506 0.144s
im_proposals: 19/506 0.144s
im_proposals: 20/506 0.144s
im_proposals: 21/506 0.144s
im_proposals: 22/506 0.144s
im_proposals: 23/506 0.144s
im_proposals: 24/506 0.144s
im_proposals: 25/506 0.144s
im_proposals: 26/506 0.144s
im_proposals: 27/506 0.144s
im_proposals: 28/506 0.144s
im_proposals: 29/506 0.144s
im_proposals: 30/506 0.144s
im_proposals: 31/506 0.144s
im_proposals: 32/506 0.144s
im_proposals: 33/506 0.144s
im_proposals: 34/506 0.144s
im_proposals: 35/506 0.144s
im_proposals: 36/506 0.144s
im_proposals: 37/506 0.144s
im_proposals: 38/506 0.144s
im_proposals: 39/506 0.144s
im_proposals: 40/506 0.144s
im_proposals: 41/506 0.144s
im_proposals: 42/506 0.144s
im_proposals: 43/506 0.144s
im_proposals: 44/506 0.143s
im_proposals: 45/506 0.143s
im_proposals: 46/506 0.143s
im_proposals: 47/506 0.143s
im_proposals: 48/506 0.143s
im_proposals: 49/506 0.143s
im_proposals: 50/506 0.143s
im_proposals: 51/506 0.143s
im_proposals: 52/506 0.143s
im_proposals: 53/506 0.143s
im_proposals: 54/506 0.143s
im_proposals: 55/506 0.143s
im_proposals: 56/506 0.143s
im_proposals: 57/506 0.143s
im_proposals: 58/506 0.143s
im_proposals: 59/506 0.143s
im_proposals: 60/506 0.143s
im_proposals: 61/506 0.143s
im_proposals: 62/506 0.143s
im_proposals: 63/506 0.143s
im_proposals: 64/506 0.143s
im_proposals: 65/506 0.143s
im_proposals: 66/506 0.143s
im_proposals: 67/506 0.143s
im_proposals: 68/506 0.143s
im_proposals: 69/506 0.143s
im_proposals: 70/506 0.143s
im_proposals: 71/506 0.143s
im_proposals: 72/506 0.143s
im_proposals: 73/506 0.143s
im_proposals: 74/506 0.143s
im_proposals: 75/506 0.143s
im_proposals: 76/506 0.143s
im_proposals: 77/506 0.143s
im_proposals: 78/506 0.143s
im_proposals: 79/506 0.143s
im_proposals: 80/506 0.143s
im_proposals: 81/506 0.143s
im_proposals: 82/506 0.143s
im_proposals: 83/506 0.143s
im_proposals: 84/506 0.143s
im_proposals: 85/506 0.143s
im_proposals: 86/506 0.143s
im_proposals: 87/506 0.143s
im_proposals: 88/506 0.143s
im_proposals: 89/506 0.143s
im_proposals: 90/506 0.143s
im_proposals: 91/506 0.143s
im_proposals: 92/506 0.143s
im_proposals: 93/506 0.143s
im_proposals: 94/506 0.143s
im_proposals: 95/506 0.143s
im_proposals: 96/506 0.143s
im_proposals: 97/506 0.143s
im_proposals: 98/506 0.143s
im_proposals: 99/506 0.143s
im_proposals: 100/506 0.143s
im_proposals: 101/506 0.143s
im_proposals: 102/506 0.143s
im_proposals: 103/506 0.143s
im_proposals: 104/506 0.143s
im_proposals: 105/506 0.143s
im_proposals: 106/506 0.143s
im_proposals: 107/506 0.143s
im_proposals: 108/506 0.143s
im_proposals: 109/506 0.143s
im_proposals: 110/506 0.143s
im_proposals: 111/506 0.143s
im_proposals: 112/506 0.143s
im_proposals: 113/506 0.143s
im_proposals: 114/506 0.143s
im_proposals: 115/506 0.143s
im_proposals: 116/506 0.143s
im_proposals: 117/506 0.143s
im_proposals: 118/506 0.143s
im_proposals: 119/506 0.143s
im_proposals: 120/506 0.143s
im_proposals: 121/506 0.143s
im_proposals: 122/506 0.143s
im_proposals: 123/506 0.143s
im_proposals: 124/506 0.143s
im_proposals: 125/506 0.143s
im_proposals: 126/506 0.143s
im_proposals: 127/506 0.143s
im_proposals: 128/506 0.143s
im_proposals: 129/506 0.143s
im_proposals: 130/506 0.143s
im_proposals: 131/506 0.143s
im_proposals: 132/506 0.143s
im_proposals: 133/506 0.143s
im_proposals: 134/506 0.143s
im_proposals: 135/506 0.143s
im_proposals: 136/506 0.143s
im_proposals: 137/506 0.143s
im_proposals: 138/506 0.143s
im_proposals: 139/506 0.143s
im_proposals: 140/506 0.143s
im_proposals: 141/506 0.143s
im_proposals: 142/506 0.143s
im_proposals: 143/506 0.143s
im_proposals: 144/506 0.143s
im_proposals: 145/506 0.143s
im_proposals: 146/506 0.143s
im_proposals: 147/506 0.143s
im_proposals: 148/506 0.143s
im_proposals: 149/506 0.143s
im_proposals: 150/506 0.143s
im_proposals: 151/506 0.143s
im_proposals: 152/506 0.143s
im_proposals: 153/506 0.143s
im_proposals: 154/506 0.143s
im_proposals: 155/506 0.143s
im_proposals: 156/506 0.143s
im_proposals: 157/506 0.143s
im_proposals: 158/506 0.143s
im_proposals: 159/506 0.143s
im_proposals: 160/506 0.143s
im_proposals: 161/506 0.143s
im_proposals: 162/506 0.143s
im_proposals: 163/506 0.143s
im_proposals: 164/506 0.143s
im_proposals: 165/506 0.143s
im_proposals: 166/506 0.143s
im_proposals: 167/506 0.143s
im_proposals: 168/506 0.143s
im_proposals: 169/506 0.143s
im_proposals: 170/506 0.143s
im_proposals: 171/506 0.143s
im_proposals: 172/506 0.143s
im_proposals: 173/506 0.143s
im_proposals: 174/506 0.143s
im_proposals: 175/506 0.143s
im_proposals: 176/506 0.143s
im_proposals: 177/506 0.143s
im_proposals: 178/506 0.143s
im_proposals: 179/506 0.143s
im_proposals: 180/506 0.143s
im_proposals: 181/506 0.143s
im_proposals: 182/506 0.143s
im_proposals: 183/506 0.143s
im_proposals: 184/506 0.143s
im_proposals: 185/506 0.143s
im_proposals: 186/506 0.143s
im_proposals: 187/506 0.143s
im_proposals: 188/506 0.143s
im_proposals: 189/506 0.143s
im_proposals: 190/506 0.143s
im_proposals: 191/506 0.143s
im_proposals: 192/506 0.143s
im_proposals: 193/506 0.143s
im_proposals: 194/506 0.143s
im_proposals: 195/506 0.143s
im_proposals: 196/506 0.143s
im_proposals: 197/506 0.143s
im_proposals: 198/506 0.143s
im_proposals: 199/506 0.143s
im_proposals: 200/506 0.143s
im_proposals: 201/506 0.143s
im_proposals: 202/506 0.143s
im_proposals: 203/506 0.143s
im_proposals: 204/506 0.143s
im_proposals: 205/506 0.143s
im_proposals: 206/506 0.143s
im_proposals: 207/506 0.143s
im_proposals: 208/506 0.143s
im_proposals: 209/506 0.143s
im_proposals: 210/506 0.143s
im_proposals: 211/506 0.143s
im_proposals: 212/506 0.143s
im_proposals: 213/506 0.143s
im_proposals: 214/506 0.143s
im_proposals: 215/506 0.143s
im_proposals: 216/506 0.143s
im_proposals: 217/506 0.143s
im_proposals: 218/506 0.143s
im_proposals: 219/506 0.143s
im_proposals: 220/506 0.143s
im_proposals: 221/506 0.143s
im_proposals: 222/506 0.143s
im_proposals: 223/506 0.143s
im_proposals: 224/506 0.143s
im_proposals: 225/506 0.143s
im_proposals: 226/506 0.143s
im_proposals: 227/506 0.143s
im_proposals: 228/506 0.143s
im_proposals: 229/506 0.143s
im_proposals: 230/506 0.143s
im_proposals: 231/506 0.143s
im_proposals: 232/506 0.143s
im_proposals: 233/506 0.143s
im_proposals: 234/506 0.143s
im_proposals: 235/506 0.143s
im_proposals: 236/506 0.143s
im_proposals: 237/506 0.143s
im_proposals: 238/506 0.143s
im_proposals: 239/506 0.143s
im_proposals: 240/506 0.143s
im_proposals: 241/506 0.143s
im_proposals: 242/506 0.143s
im_proposals: 243/506 0.143s
im_proposals: 244/506 0.143s
im_proposals: 245/506 0.143s
im_proposals: 246/506 0.143s
im_proposals: 247/506 0.143s
im_proposals: 248/506 0.143s
im_proposals: 249/506 0.143s
im_proposals: 250/506 0.143s
im_proposals: 251/506 0.143s
im_proposals: 252/506 0.143s
im_proposals: 253/506 0.143s
im_proposals: 254/506 0.143s
im_proposals: 255/506 0.143s
im_proposals: 256/506 0.143s
im_proposals: 257/506 0.143s
im_proposals: 258/506 0.143s
im_proposals: 259/506 0.143s
im_proposals: 260/506 0.143s
im_proposals: 261/506 0.143s
im_proposals: 262/506 0.143s
im_proposals: 263/506 0.143s
im_proposals: 264/506 0.143s
im_proposals: 265/506 0.143s
im_proposals: 266/506 0.143s
im_proposals: 267/506 0.143s
im_proposals: 268/506 0.143s
im_proposals: 269/506 0.143s
im_proposals: 270/506 0.143s
im_proposals: 271/506 0.143s
im_proposals: 272/506 0.143s
im_proposals: 273/506 0.143s
im_proposals: 274/506 0.143s
im_proposals: 275/506 0.143s
im_proposals: 276/506 0.143s
im_proposals: 277/506 0.143s
im_proposals: 278/506 0.143s
im_proposals: 279/506 0.143s
im_proposals: 280/506 0.143s
im_proposals: 281/506 0.143s
im_proposals: 282/506 0.143s
im_proposals: 283/506 0.143s
im_proposals: 284/506 0.143s
im_proposals: 285/506 0.143s
im_proposals: 286/506 0.143s
im_proposals: 287/506 0.143s
im_proposals: 288/506 0.143s
im_proposals: 289/506 0.143s
im_proposals: 290/506 0.143s
im_proposals: 291/506 0.143s
im_proposals: 292/506 0.143s
im_proposals: 293/506 0.143s
im_proposals: 294/506 0.143s
im_proposals: 295/506 0.143s
im_proposals: 296/506 0.143s
im_proposals: 297/506 0.143s
im_proposals: 298/506 0.143s
im_proposals: 299/506 0.143s
im_proposals: 300/506 0.143s
im_proposals: 301/506 0.143s
im_proposals: 302/506 0.143s
im_proposals: 303/506 0.143s
im_proposals: 304/506 0.143s
im_proposals: 305/506 0.143s
im_proposals: 306/506 0.143s
im_proposals: 307/506 0.143s
im_proposals: 308/506 0.143s
im_proposals: 309/506 0.143s
im_proposals: 310/506 0.143s
im_proposals: 311/506 0.143s
im_proposals: 312/506 0.143s
im_proposals: 313/506 0.143s
im_proposals: 314/506 0.143s
im_proposals: 315/506 0.143s
im_proposals: 316/506 0.143s
im_proposals: 317/506 0.143s
im_proposals: 318/506 0.143s
im_proposals: 319/506 0.143s
im_proposals: 320/506 0.143s
im_proposals: 321/506 0.143s
im_proposals: 322/506 0.143s
im_proposals: 323/506 0.143s
im_proposals: 324/506 0.143s
im_proposals: 325/506 0.143s
im_proposals: 326/506 0.143s
im_proposals: 327/506 0.143s
im_proposals: 328/506 0.143s
im_proposals: 329/506 0.143s
im_proposals: 330/506 0.143s
im_proposals: 331/506 0.143s
im_proposals: 332/506 0.143s
im_proposals: 333/506 0.143s
im_proposals: 334/506 0.143s
im_proposals: 335/506 0.143s
im_proposals: 336/506 0.143s
im_proposals: 337/506 0.143s
im_proposals: 338/506 0.143s
im_proposals: 339/506 0.143s
im_proposals: 340/506 0.143s
im_proposals: 341/506 0.143s
im_proposals: 342/506 0.143s
im_proposals: 343/506 0.143s
im_proposals: 344/506 0.143s
im_proposals: 345/506 0.143s
im_proposals: 346/506 0.143s
im_proposals: 347/506 0.143s
im_proposals: 348/506 0.143s
im_proposals: 349/506 0.143s
im_proposals: 350/506 0.143s
im_proposals: 351/506 0.143s
im_proposals: 352/506 0.143s
im_proposals: 353/506 0.143s
im_proposals: 354/506 0.143s
im_proposals: 355/506 0.143s
im_proposals: 356/506 0.143s
im_proposals: 357/506 0.143s
im_proposals: 358/506 0.143s
im_proposals: 359/506 0.143s
im_proposals: 360/506 0.143s
im_proposals: 361/506 0.143s
im_proposals: 362/506 0.143s
im_proposals: 363/506 0.143s
im_proposals: 364/506 0.143s
im_proposals: 365/506 0.143s
im_proposals: 366/506 0.143s
im_proposals: 367/506 0.143s
im_proposals: 368/506 0.143s
im_proposals: 369/506 0.143s
im_proposals: 370/506 0.143s
im_proposals: 371/506 0.143s
im_proposals: 372/506 0.143s
im_proposals: 373/506 0.143s
im_proposals: 374/506 0.143s
im_proposals: 375/506 0.143s
im_proposals: 376/506 0.143s
im_proposals: 377/506 0.143s
im_proposals: 378/506 0.143s
im_proposals: 379/506 0.143s
im_proposals: 380/506 0.143s
im_proposals: 381/506 0.143s
im_proposals: 382/506 0.143s
im_proposals: 383/506 0.143s
im_proposals: 384/506 0.143s
im_proposals: 385/506 0.143s
im_proposals: 386/506 0.143s
im_proposals: 387/506 0.143s
im_proposals: 388/506 0.143s
im_proposals: 389/506 0.143s
im_proposals: 390/506 0.143s
im_proposals: 391/506 0.143s
im_proposals: 392/506 0.143s
im_proposals: 393/506 0.143s
im_proposals: 394/506 0.143s
im_proposals: 395/506 0.143s
im_proposals: 396/506 0.143s
im_proposals: 397/506 0.143s
im_proposals: 398/506 0.143s
im_proposals: 399/506 0.143s
im_proposals: 400/506 0.143s
im_proposals: 401/506 0.143s
im_proposals: 402/506 0.143s
im_proposals: 403/506 0.143s
im_proposals: 404/506 0.143s
im_proposals: 405/506 0.143s
im_proposals: 406/506 0.143s
im_proposals: 407/506 0.143s
im_proposals: 408/506 0.143s
im_proposals: 409/506 0.143s
im_proposals: 410/506 0.143s
im_proposals: 411/506 0.143s
im_proposals: 412/506 0.143s
im_proposals: 413/506 0.143s
im_proposals: 414/506 0.143s
im_proposals: 415/506 0.143s
im_proposals: 416/506 0.143s
im_proposals: 417/506 0.143s
im_proposals: 418/506 0.143s
im_proposals: 419/506 0.143s
im_proposals: 420/506 0.143s
im_proposals: 421/506 0.143s
im_proposals: 422/506 0.143s
im_proposals: 423/506 0.143s
im_proposals: 424/506 0.143s
im_proposals: 425/506 0.143s
im_proposals: 426/506 0.143s
im_proposals: 427/506 0.143s
im_proposals: 428/506 0.143s
im_proposals: 429/506 0.143s
im_proposals: 430/506 0.143s
im_proposals: 431/506 0.143s
im_proposals: 432/506 0.143s
im_proposals: 433/506 0.143s
im_proposals: 434/506 0.143s
im_proposals: 435/506 0.143s
im_proposals: 436/506 0.143s
im_proposals: 437/506 0.143s
im_proposals: 438/506 0.143s
im_proposals: 439/506 0.143s
im_proposals: 440/506 0.143s
im_proposals: 441/506 0.143s
im_proposals: 442/506 0.143s
im_proposals: 443/506 0.143s
im_proposals: 444/506 0.143s
im_proposals: 445/506 0.143s
im_proposals: 446/506 0.143s
im_proposals: 447/506 0.143s
im_proposals: 448/506 0.143s
im_proposals: 449/506 0.143s
im_proposals: 450/506 0.143s
im_proposals: 451/506 0.143s
im_proposals: 452/506 0.143s
im_proposals: 453/506 0.143s
im_proposals: 454/506 0.143s
im_proposals: 455/506 0.143s
im_proposals: 456/506 0.143s
im_proposals: 457/506 0.143s
im_proposals: 458/506 0.143s
im_proposals: 459/506 0.143s
im_proposals: 460/506 0.143s
im_proposals: 461/506 0.143s
im_proposals: 462/506 0.143s
im_proposals: 463/506 0.143s
im_proposals: 464/506 0.143s
im_proposals: 465/506 0.143s
im_proposals: 466/506 0.143s
im_proposals: 467/506 0.143s
im_proposals: 468/506 0.143s
im_proposals: 469/506 0.143s
im_proposals: 470/506 0.143s
im_proposals: 471/506 0.143s
im_proposals: 472/506 0.143s
im_proposals: 473/506 0.143s
im_proposals: 474/506 0.143s
im_proposals: 475/506 0.143s
im_proposals: 476/506 0.143s
im_proposals: 477/506 0.143s
im_proposals: 478/506 0.143s
im_proposals: 479/506 0.143s
im_proposals: 480/506 0.143s
im_proposals: 481/506 0.143s
im_proposals: 482/506 0.142s
im_proposals: 483/506 0.142s
im_proposals: 484/506 0.142s
im_proposals: 485/506 0.142s
im_proposals: 486/506 0.142s
im_proposals: 487/506 0.142s
im_proposals: 488/506 0.142s
im_proposals: 489/506 0.142s
im_proposals: 490/506 0.142s
im_proposals: 491/506 0.142s
im_proposals: 492/506 0.142s
im_proposals: 493/506 0.142s
im_proposals: 494/506 0.142s
im_proposals: 495/506 0.142s
im_proposals: 496/506 0.142s
im_proposals: 497/506 0.142s
im_proposals: 498/506 0.142s
im_proposals: 499/506 0.142s
im_proposals: 500/506 0.142s
im_proposals: 501/506 0.142s
im_proposals: 502/506 0.142s
im_proposals: 503/506 0.142s
im_proposals: 504/506 0.142s
im_proposals: 505/506 0.142s
im_proposals: 506/506 0.142s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_40_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 1 Fast R-CNN using RPN proposals, init from ImageNet model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: data/imagenet_models/ZF.v2.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_40_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage1',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage1_iter_40_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  1.57207251e-07  -2.27196943e-03  -5.15637159e-02  -8.56170595e-02]
 [ -1.37965693e-08  -2.03813453e-03   8.26610831e-02  -5.98355600e-02]
 [ -3.85228883e-08   4.77072253e-03   4.02280965e-02  -4.59968459e-02]
 [ -2.47997897e-08   7.57450174e-03   4.59162252e-02  -4.69144302e-02]
 [  2.74843640e-08  -1.17430937e-02   2.18310359e-02  -5.12362399e-02]
 [  2.11293809e-08  -1.87216784e-02   4.19676193e-02  -2.03084583e-02]
 [  3.08371252e-08  -2.36690119e-02  -1.30895684e-02  -1.33272454e-02]
 [ -2.60770321e-08   9.51350532e-03   2.80768384e-02  -3.10695748e-02]
 [ -3.03843990e-08  -7.56249676e-04   1.10718115e-02  -5.75049097e-02]
 [  1.78891545e-08   1.85167232e-02   2.51138859e-02  -5.34780329e-02]
 [ -2.24667199e-08  -1.35530419e-03   1.75455433e-02  -2.85960220e-02]
 [  8.00937414e-09  -1.59167700e-02   7.41514968e-02  -2.32062085e-02]
 [ -9.00035957e-09  -1.68524047e-04   5.12819729e-02  -5.08398856e-02]
 [  5.34334568e-09   1.61086551e-02   8.07435441e-02  -8.17363619e-02]
 [ -1.16193578e-08  -4.67925803e-03   3.57190974e-02  -4.45790383e-02]
 [  3.75633438e-08   2.50163749e-02   3.60708901e-03  -1.09053900e-02]
 [  0.00000000e+00  -1.13626542e-02  -4.34564538e-02  -2.07635257e-02]
 [ -6.78002834e-08  -4.85123135e-04   7.78917999e-03   3.30673671e-03]
 [ -2.36928463e-08   2.07994461e-02   6.79469681e-02  -6.30926174e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -4.58497268e-08   1.26391162e-02   6.88688979e-02  -3.60051308e-02]
 [  0.00000000e+00  -3.41032445e-02   9.20508623e-02  -1.95216030e-02]
 [  1.24176343e-07  -1.15105997e-02   9.12973682e-02  -6.58147891e-02]
 [ -5.58793545e-10   7.91233149e-05   8.51603530e-02  -8.17889228e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  4.76490620e-09  -6.13484848e-03   7.66749075e-02  -1.00228487e-01]
 [  3.09082679e-08  -1.55247182e-02   1.97668431e-02  -7.38442987e-02]
 [  2.33412720e-07   3.21482308e-02   5.04632704e-02   7.67306006e-03]
 [ -4.35572404e-08   8.12544330e-03   7.57875649e-02  -1.66054334e-02]
 [  0.00000000e+00  -2.62363672e-02  -1.64924830e-02  -8.47912192e-02]
 [ -6.20260835e-08   1.10714361e-02   6.71659474e-02  -8.17992747e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   2.11529844e-02   5.52625582e-02   1.79143101e-02]
 [  1.94107231e-08  -9.78172590e-03   2.07452229e-02  -4.10287911e-02]
 [  0.00000000e+00  -1.24548405e-02  -9.34974104e-03  -3.00268561e-02]
 [  8.69234403e-09  -1.70467014e-02   2.10788445e-02  -1.88567878e-02]
 [  0.00000000e+00  -7.85704851e-03  -9.53825340e-03  -9.45468042e-03]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -1.74653220e-08  -2.82515589e-03   1.63139862e-02  -3.30211205e-02]
 [ -2.98023224e-08   2.94043273e-02   5.44359599e-02   4.07268192e-02]
 [  5.96046448e-08  -2.35686370e-02   5.15534058e-02  -8.51410863e-02]
 [  0.00000000e+00  -3.94554312e-02   4.28264754e-02   2.99916499e-02]
 [  9.12696123e-08  -1.82961412e-02  -8.70238803e-03  -6.89042434e-02]]
[  9.54146899e-09  -2.34982885e-03   3.19281710e-02  -3.57262222e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.01766172  0.00454394  0.10312743  0.17123412]
 [ 0.1085603   0.08900908  0.15278311  0.13732392]
 [ 0.08559646  0.08626688  0.10857755  0.14550739]
 [ 0.10057381  0.07261817  0.10777294  0.13521263]
 [ 0.08192794  0.06798175  0.11950836  0.13408976]
 [ 0.10663793  0.07786082  0.12844595  0.13191628]
 [ 0.07935388  0.06671601  0.12707434  0.16320879]
 [ 0.09385445  0.07953906  0.12436269  0.14075843]
 [ 0.07692849  0.06659004  0.07349643  0.14840849]
 [ 0.07457185  0.06557745  0.15267939  0.13277236]
 [ 0.06101435  0.05734038  0.09718151  0.10557287]
 [ 0.08724062  0.07226971  0.13368046  0.09155757]
 [ 0.09189143  0.09829234  0.14311312  0.16597317]
 [ 0.09944286  0.08739757  0.16682585  0.1656869 ]
 [ 0.07549996  0.06722003  0.12140113  0.19306035]
 [ 0.05728423  0.06566179  0.0263834   0.03283379]
 [ 0.06840919  0.03006276  0.11497497  0.05493513]
 [ 0.05792368  0.05353798  0.05295989  0.06048678]
 [ 0.10184847  0.07550302  0.15089716  0.15215973]
 [ 0.          0.          0.          0.        ]
 [ 0.08267535  0.08982132  0.11839454  0.11419304]
 [ 0.09642934  0.09651471  0.11315182  0.12858002]
 [ 0.10263834  0.0790176   0.16265168  0.14643711]
 [ 0.07870814  0.05516272  0.14725709  0.16656872]
 [ 0.          0.          0.          0.        ]
 [ 0.09203775  0.0923422   0.14622611  0.17383057]
 [ 0.03975129  0.06557957  0.12723882  0.1638545 ]
 [ 0.00436964  0.05568237  0.08740495  0.01329013]
 [ 0.1206516   0.03641567  0.17801219  0.09179556]
 [ 0.00211345  0.05247274  0.03298497  0.16958244]
 [ 0.08703341  0.08769737  0.11750939  0.13841035]
 [ 0.          0.          0.          0.        ]
 [ 0.08376476  0.03663804  0.09571756  0.03102849]
 [ 0.06290698  0.09728067  0.09661911  0.16027164]
 [ 0.04914347  0.03736452  0.02804922  0.09008057]
 [ 0.05883119  0.05795374  0.11171936  0.10441861]
 [ 0.0489      0.08557743  0.05131982  0.0206391 ]
 [ 0.          0.          0.          0.        ]
 [ 0.07036376  0.05802985  0.10404706  0.10512756]
 [ 0.07971452  0.05356143  0.17526133  0.20448236]
 [ 0.13774804  0.07141157  0.18811028  0.14778944]
 [ 0.12986904  0.11318351  0.16968642  0.18334415]
 [ 0.0250988   0.04840704  0.02302435  0.1823035 ]]
[ 0.06927838  0.06172332  0.10417748  0.11624945]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0422 07:50:59.004487 15482 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0422 07:50:59.004546 15482 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage1_fast_rcnn_train.pt
I0422 07:50:59.005378 15482 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0422 07:50:59.005547 15482 layer_factory.hpp:77] Creating layer data
I0422 07:50:59.006189 15482 net.cpp:106] Creating Layer data
I0422 07:50:59.006216 15482 net.cpp:411] data -> data
I0422 07:50:59.006239 15482 net.cpp:411] data -> rois
I0422 07:50:59.006253 15482 net.cpp:411] data -> labels
I0422 07:50:59.006261 15482 net.cpp:411] data -> bbox_targets
I0422 07:50:59.006269 15482 net.cpp:411] data -> bbox_inside_weights
I0422 07:50:59.006278 15482 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0422 07:50:59.021867 15482 net.cpp:150] Setting up data
I0422 07:50:59.021888 15482 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0422 07:50:59.021895 15482 net.cpp:157] Top shape: 1 5 (5)
I0422 07:50:59.021901 15482 net.cpp:157] Top shape: 1 (1)
I0422 07:50:59.021906 15482 net.cpp:157] Top shape: 1 176 (176)
I0422 07:50:59.021913 15482 net.cpp:157] Top shape: 1 176 (176)
I0422 07:50:59.021917 15482 net.cpp:157] Top shape: 1 176 (176)
I0422 07:50:59.021921 15482 net.cpp:165] Memory required for data: 14402136
I0422 07:50:59.021927 15482 layer_factory.hpp:77] Creating layer conv1
I0422 07:50:59.021947 15482 net.cpp:106] Creating Layer conv1
I0422 07:50:59.021958 15482 net.cpp:454] conv1 <- data
I0422 07:50:59.021973 15482 net.cpp:411] conv1 -> conv1
I0422 07:50:59.023326 15482 net.cpp:150] Setting up conv1
I0422 07:50:59.023347 15482 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0422 07:50:59.023352 15482 net.cpp:165] Memory required for data: 129602136
I0422 07:50:59.023377 15482 layer_factory.hpp:77] Creating layer relu1
I0422 07:50:59.023393 15482 net.cpp:106] Creating Layer relu1
I0422 07:50:59.023401 15482 net.cpp:454] relu1 <- conv1
I0422 07:50:59.023411 15482 net.cpp:397] relu1 -> conv1 (in-place)
I0422 07:50:59.023427 15482 net.cpp:150] Setting up relu1
I0422 07:50:59.023439 15482 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0422 07:50:59.023443 15482 net.cpp:165] Memory required for data: 244802136
I0422 07:50:59.023448 15482 layer_factory.hpp:77] Creating layer norm1
I0422 07:50:59.023457 15482 net.cpp:106] Creating Layer norm1
I0422 07:50:59.023465 15482 net.cpp:454] norm1 <- conv1
I0422 07:50:59.023473 15482 net.cpp:411] norm1 -> norm1
I0422 07:50:59.023586 15482 net.cpp:150] Setting up norm1
I0422 07:50:59.023600 15482 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0422 07:50:59.023604 15482 net.cpp:165] Memory required for data: 360002136
I0422 07:50:59.023608 15482 layer_factory.hpp:77] Creating layer pool1
I0422 07:50:59.023620 15482 net.cpp:106] Creating Layer pool1
I0422 07:50:59.023627 15482 net.cpp:454] pool1 <- norm1
I0422 07:50:59.023634 15482 net.cpp:411] pool1 -> pool1
I0422 07:50:59.023681 15482 net.cpp:150] Setting up pool1
I0422 07:50:59.023694 15482 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0422 07:50:59.023697 15482 net.cpp:165] Memory required for data: 389110104
I0422 07:50:59.023701 15482 layer_factory.hpp:77] Creating layer conv2
I0422 07:50:59.023711 15482 net.cpp:106] Creating Layer conv2
I0422 07:50:59.023717 15482 net.cpp:454] conv2 <- pool1
I0422 07:50:59.023725 15482 net.cpp:411] conv2 -> conv2
I0422 07:50:59.025387 15482 net.cpp:150] Setting up conv2
I0422 07:50:59.025406 15482 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0422 07:50:59.025410 15482 net.cpp:165] Memory required for data: 408721752
I0422 07:50:59.025424 15482 layer_factory.hpp:77] Creating layer relu2
I0422 07:50:59.025431 15482 net.cpp:106] Creating Layer relu2
I0422 07:50:59.025439 15482 net.cpp:454] relu2 <- conv2
I0422 07:50:59.025450 15482 net.cpp:397] relu2 -> conv2 (in-place)
I0422 07:50:59.025465 15482 net.cpp:150] Setting up relu2
I0422 07:50:59.025471 15482 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0422 07:50:59.025476 15482 net.cpp:165] Memory required for data: 428333400
I0422 07:50:59.025480 15482 layer_factory.hpp:77] Creating layer norm2
I0422 07:50:59.025487 15482 net.cpp:106] Creating Layer norm2
I0422 07:50:59.025501 15482 net.cpp:454] norm2 <- conv2
I0422 07:50:59.025508 15482 net.cpp:411] norm2 -> norm2
I0422 07:50:59.025599 15482 net.cpp:150] Setting up norm2
I0422 07:50:59.025611 15482 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0422 07:50:59.025615 15482 net.cpp:165] Memory required for data: 447945048
I0422 07:50:59.025619 15482 layer_factory.hpp:77] Creating layer pool2
I0422 07:50:59.025629 15482 net.cpp:106] Creating Layer pool2
I0422 07:50:59.025634 15482 net.cpp:454] pool2 <- norm2
I0422 07:50:59.025642 15482 net.cpp:411] pool2 -> pool2
I0422 07:50:59.025686 15482 net.cpp:150] Setting up pool2
I0422 07:50:59.025699 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.025703 15482 net.cpp:165] Memory required for data: 453056856
I0422 07:50:59.025708 15482 layer_factory.hpp:77] Creating layer conv3
I0422 07:50:59.025720 15482 net.cpp:106] Creating Layer conv3
I0422 07:50:59.025730 15482 net.cpp:454] conv3 <- pool2
I0422 07:50:59.025738 15482 net.cpp:411] conv3 -> conv3
I0422 07:50:59.029037 15482 net.cpp:150] Setting up conv3
I0422 07:50:59.029057 15482 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:50:59.029062 15482 net.cpp:165] Memory required for data: 460724568
I0422 07:50:59.029074 15482 layer_factory.hpp:77] Creating layer relu3
I0422 07:50:59.029086 15482 net.cpp:106] Creating Layer relu3
I0422 07:50:59.029093 15482 net.cpp:454] relu3 <- conv3
I0422 07:50:59.029101 15482 net.cpp:397] relu3 -> conv3 (in-place)
I0422 07:50:59.029110 15482 net.cpp:150] Setting up relu3
I0422 07:50:59.029122 15482 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:50:59.029127 15482 net.cpp:165] Memory required for data: 468392280
I0422 07:50:59.029131 15482 layer_factory.hpp:77] Creating layer conv4
I0422 07:50:59.029145 15482 net.cpp:106] Creating Layer conv4
I0422 07:50:59.029151 15482 net.cpp:454] conv4 <- conv3
I0422 07:50:59.029160 15482 net.cpp:411] conv4 -> conv4
I0422 07:50:59.032472 15482 net.cpp:150] Setting up conv4
I0422 07:50:59.032492 15482 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:50:59.032497 15482 net.cpp:165] Memory required for data: 476059992
I0422 07:50:59.032506 15482 layer_factory.hpp:77] Creating layer relu4
I0422 07:50:59.032515 15482 net.cpp:106] Creating Layer relu4
I0422 07:50:59.032519 15482 net.cpp:454] relu4 <- conv4
I0422 07:50:59.032537 15482 net.cpp:397] relu4 -> conv4 (in-place)
I0422 07:50:59.032547 15482 net.cpp:150] Setting up relu4
I0422 07:50:59.032554 15482 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:50:59.032562 15482 net.cpp:165] Memory required for data: 483727704
I0422 07:50:59.032567 15482 layer_factory.hpp:77] Creating layer conv5
I0422 07:50:59.032577 15482 net.cpp:106] Creating Layer conv5
I0422 07:50:59.032583 15482 net.cpp:454] conv5 <- conv4
I0422 07:50:59.032594 15482 net.cpp:411] conv5 -> conv5
I0422 07:50:59.034880 15482 net.cpp:150] Setting up conv5
I0422 07:50:59.034898 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.034904 15482 net.cpp:165] Memory required for data: 488839512
I0422 07:50:59.034924 15482 layer_factory.hpp:77] Creating layer relu5
I0422 07:50:59.034932 15482 net.cpp:106] Creating Layer relu5
I0422 07:50:59.034941 15482 net.cpp:454] relu5 <- conv5
I0422 07:50:59.034952 15482 net.cpp:397] relu5 -> conv5 (in-place)
I0422 07:50:59.034962 15482 net.cpp:150] Setting up relu5
I0422 07:50:59.034970 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.034974 15482 net.cpp:165] Memory required for data: 493951320
I0422 07:50:59.034979 15482 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0422 07:50:59.034991 15482 net.cpp:106] Creating Layer conv5_relu5_0_split
I0422 07:50:59.034996 15482 net.cpp:454] conv5_relu5_0_split <- conv5
I0422 07:50:59.035003 15482 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0422 07:50:59.035012 15482 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0422 07:50:59.035058 15482 net.cpp:150] Setting up conv5_relu5_0_split
I0422 07:50:59.035069 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.035076 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.035080 15482 net.cpp:165] Memory required for data: 504174936
I0422 07:50:59.035084 15482 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0422 07:50:59.035100 15482 net.cpp:106] Creating Layer roi_pool_conv5
I0422 07:50:59.035111 15482 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0422 07:50:59.035117 15482 net.cpp:454] roi_pool_conv5 <- rois
I0422 07:50:59.035125 15482 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0422 07:50:59.035138 15482 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0422 07:50:59.035200 15482 net.cpp:150] Setting up roi_pool_conv5
I0422 07:50:59.035213 15482 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0422 07:50:59.035218 15482 net.cpp:165] Memory required for data: 504211800
I0422 07:50:59.035223 15482 layer_factory.hpp:77] Creating layer fc6
I0422 07:50:59.035236 15482 net.cpp:106] Creating Layer fc6
I0422 07:50:59.035248 15482 net.cpp:454] fc6 <- roi_pool_conv5
I0422 07:50:59.035255 15482 net.cpp:411] fc6 -> fc6
I0422 07:50:59.133466 15482 net.cpp:150] Setting up fc6
I0422 07:50:59.133507 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.133513 15482 net.cpp:165] Memory required for data: 504228184
I0422 07:50:59.133527 15482 layer_factory.hpp:77] Creating layer relu6
I0422 07:50:59.133543 15482 net.cpp:106] Creating Layer relu6
I0422 07:50:59.133551 15482 net.cpp:454] relu6 <- fc6
I0422 07:50:59.133569 15482 net.cpp:397] relu6 -> fc6 (in-place)
I0422 07:50:59.133582 15482 net.cpp:150] Setting up relu6
I0422 07:50:59.133590 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.133594 15482 net.cpp:165] Memory required for data: 504244568
I0422 07:50:59.133599 15482 layer_factory.hpp:77] Creating layer drop6
I0422 07:50:59.133618 15482 net.cpp:106] Creating Layer drop6
I0422 07:50:59.133625 15482 net.cpp:454] drop6 <- fc6
I0422 07:50:59.133631 15482 net.cpp:397] drop6 -> fc6 (in-place)
I0422 07:50:59.133666 15482 net.cpp:150] Setting up drop6
I0422 07:50:59.133677 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.133682 15482 net.cpp:165] Memory required for data: 504260952
I0422 07:50:59.133687 15482 layer_factory.hpp:77] Creating layer fc7
I0422 07:50:59.133702 15482 net.cpp:106] Creating Layer fc7
I0422 07:50:59.133709 15482 net.cpp:454] fc7 <- fc6
I0422 07:50:59.133718 15482 net.cpp:411] fc7 -> fc7
I0422 07:50:59.177101 15482 net.cpp:150] Setting up fc7
I0422 07:50:59.177145 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.177150 15482 net.cpp:165] Memory required for data: 504277336
I0422 07:50:59.177163 15482 layer_factory.hpp:77] Creating layer relu7
I0422 07:50:59.177175 15482 net.cpp:106] Creating Layer relu7
I0422 07:50:59.177181 15482 net.cpp:454] relu7 <- fc7
I0422 07:50:59.177191 15482 net.cpp:397] relu7 -> fc7 (in-place)
I0422 07:50:59.177203 15482 net.cpp:150] Setting up relu7
I0422 07:50:59.177215 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.177219 15482 net.cpp:165] Memory required for data: 504293720
I0422 07:50:59.177224 15482 layer_factory.hpp:77] Creating layer drop7
I0422 07:50:59.177237 15482 net.cpp:106] Creating Layer drop7
I0422 07:50:59.177243 15482 net.cpp:454] drop7 <- fc7
I0422 07:50:59.177249 15482 net.cpp:397] drop7 -> fc7 (in-place)
I0422 07:50:59.177283 15482 net.cpp:150] Setting up drop7
I0422 07:50:59.177294 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.177299 15482 net.cpp:165] Memory required for data: 504310104
I0422 07:50:59.177304 15482 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0422 07:50:59.177312 15482 net.cpp:106] Creating Layer fc7_drop7_0_split
I0422 07:50:59.177316 15482 net.cpp:454] fc7_drop7_0_split <- fc7
I0422 07:50:59.177323 15482 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0422 07:50:59.177338 15482 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0422 07:50:59.177379 15482 net.cpp:150] Setting up fc7_drop7_0_split
I0422 07:50:59.177390 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.177397 15482 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:50:59.177400 15482 net.cpp:165] Memory required for data: 504342872
I0422 07:50:59.177404 15482 layer_factory.hpp:77] Creating layer cls_score
I0422 07:50:59.177419 15482 net.cpp:106] Creating Layer cls_score
I0422 07:50:59.177429 15482 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0422 07:50:59.177438 15482 net.cpp:411] cls_score -> cls_score
I0422 07:50:59.183013 15482 net.cpp:150] Setting up cls_score
I0422 07:50:59.183032 15482 net.cpp:157] Top shape: 1 44 (44)
I0422 07:50:59.183037 15482 net.cpp:165] Memory required for data: 504343048
I0422 07:50:59.183046 15482 layer_factory.hpp:77] Creating layer bbox_pred
I0422 07:50:59.183058 15482 net.cpp:106] Creating Layer bbox_pred
I0422 07:50:59.183063 15482 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0422 07:50:59.183073 15482 net.cpp:411] bbox_pred -> bbox_pred
I0422 07:50:59.203804 15482 net.cpp:150] Setting up bbox_pred
I0422 07:50:59.203824 15482 net.cpp:157] Top shape: 1 176 (176)
I0422 07:50:59.203829 15482 net.cpp:165] Memory required for data: 504343752
I0422 07:50:59.203846 15482 layer_factory.hpp:77] Creating layer loss_cls
I0422 07:50:59.203865 15482 net.cpp:106] Creating Layer loss_cls
I0422 07:50:59.203871 15482 net.cpp:454] loss_cls <- cls_score
I0422 07:50:59.203883 15482 net.cpp:454] loss_cls <- labels
I0422 07:50:59.203891 15482 net.cpp:411] loss_cls -> cls_loss
I0422 07:50:59.203912 15482 layer_factory.hpp:77] Creating layer loss_cls
I0422 07:50:59.204011 15482 net.cpp:150] Setting up loss_cls
I0422 07:50:59.204023 15482 net.cpp:157] Top shape: (1)
I0422 07:50:59.204028 15482 net.cpp:160]     with loss weight 1
I0422 07:50:59.204047 15482 net.cpp:165] Memory required for data: 504343756
I0422 07:50:59.204052 15482 layer_factory.hpp:77] Creating layer loss_bbox
I0422 07:50:59.204064 15482 net.cpp:106] Creating Layer loss_bbox
I0422 07:50:59.204075 15482 net.cpp:454] loss_bbox <- bbox_pred
I0422 07:50:59.204082 15482 net.cpp:454] loss_bbox <- bbox_targets
I0422 07:50:59.204088 15482 net.cpp:454] loss_bbox <- bbox_inside_weights
I0422 07:50:59.204093 15482 net.cpp:454] loss_bbox <- bbox_outside_weights
I0422 07:50:59.204103 15482 net.cpp:411] loss_bbox -> bbox_loss
I0422 07:50:59.204182 15482 net.cpp:150] Setting up loss_bbox
I0422 07:50:59.204195 15482 net.cpp:157] Top shape: (1)
I0422 07:50:59.204198 15482 net.cpp:160]     with loss weight 1
I0422 07:50:59.204205 15482 net.cpp:165] Memory required for data: 504343760
I0422 07:50:59.204210 15482 layer_factory.hpp:77] Creating layer rpn_conv1
I0422 07:50:59.204228 15482 net.cpp:106] Creating Layer rpn_conv1
I0422 07:50:59.204238 15482 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0422 07:50:59.204247 15482 net.cpp:411] rpn_conv1 -> rpn_conv1
I0422 07:50:59.222796 15482 net.cpp:150] Setting up rpn_conv1
I0422 07:50:59.222817 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.222822 15482 net.cpp:165] Memory required for data: 509455568
I0422 07:50:59.222832 15482 layer_factory.hpp:77] Creating layer rpn_relu1
I0422 07:50:59.222841 15482 net.cpp:106] Creating Layer rpn_relu1
I0422 07:50:59.222847 15482 net.cpp:454] rpn_relu1 <- rpn_conv1
I0422 07:50:59.222864 15482 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0422 07:50:59.222874 15482 net.cpp:150] Setting up rpn_relu1
I0422 07:50:59.222882 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.222887 15482 net.cpp:165] Memory required for data: 514567376
I0422 07:50:59.222892 15482 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0422 07:50:59.222903 15482 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0422 07:50:59.222908 15482 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0422 07:50:59.222914 15482 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0422 07:50:59.222926 15482 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0422 07:50:59.222971 15482 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0422 07:50:59.222985 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.222990 15482 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:50:59.222995 15482 net.cpp:165] Memory required for data: 524790992
I0422 07:50:59.223000 15482 layer_factory.hpp:77] Creating layer rpn_cls_score
I0422 07:50:59.223014 15482 net.cpp:106] Creating Layer rpn_cls_score
I0422 07:50:59.223026 15482 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0422 07:50:59.223037 15482 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0422 07:50:59.223372 15482 net.cpp:150] Setting up rpn_cls_score
I0422 07:50:59.223387 15482 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0422 07:50:59.223392 15482 net.cpp:165] Memory required for data: 525150416
I0422 07:50:59.223399 15482 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0422 07:50:59.223420 15482 net.cpp:106] Creating Layer rpn_bbox_pred
I0422 07:50:59.223433 15482 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0422 07:50:59.223445 15482 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0422 07:50:59.223903 15482 net.cpp:150] Setting up rpn_bbox_pred
I0422 07:50:59.223917 15482 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0422 07:50:59.223922 15482 net.cpp:165] Memory required for data: 525869264
I0422 07:50:59.223930 15482 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0422 07:50:59.223943 15482 net.cpp:106] Creating Layer silence_rpn_cls_score
I0422 07:50:59.223949 15482 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0422 07:50:59.223958 15482 net.cpp:150] Setting up silence_rpn_cls_score
I0422 07:50:59.223963 15482 net.cpp:165] Memory required for data: 525869264
I0422 07:50:59.223966 15482 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0422 07:50:59.223973 15482 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0422 07:50:59.223978 15482 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0422 07:50:59.223984 15482 net.cpp:150] Setting up silence_rpn_bbox_pred
I0422 07:50:59.223987 15482 net.cpp:165] Memory required for data: 525869264
I0422 07:50:59.223991 15482 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0422 07:50:59.223996 15482 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0422 07:50:59.224000 15482 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0422 07:50:59.224005 15482 net.cpp:228] rpn_cls_score does not need backward computation.
I0422 07:50:59.224009 15482 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0422 07:50:59.224016 15482 net.cpp:228] rpn_relu1 does not need backward computation.
I0422 07:50:59.224020 15482 net.cpp:228] rpn_conv1 does not need backward computation.
I0422 07:50:59.224025 15482 net.cpp:226] loss_bbox needs backward computation.
I0422 07:50:59.224031 15482 net.cpp:226] loss_cls needs backward computation.
I0422 07:50:59.224041 15482 net.cpp:226] bbox_pred needs backward computation.
I0422 07:50:59.224046 15482 net.cpp:226] cls_score needs backward computation.
I0422 07:50:59.224051 15482 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0422 07:50:59.224056 15482 net.cpp:226] drop7 needs backward computation.
I0422 07:50:59.224061 15482 net.cpp:226] relu7 needs backward computation.
I0422 07:50:59.224064 15482 net.cpp:226] fc7 needs backward computation.
I0422 07:50:59.224068 15482 net.cpp:226] drop6 needs backward computation.
I0422 07:50:59.224072 15482 net.cpp:226] relu6 needs backward computation.
I0422 07:50:59.224077 15482 net.cpp:226] fc6 needs backward computation.
I0422 07:50:59.224081 15482 net.cpp:226] roi_pool_conv5 needs backward computation.
I0422 07:50:59.224087 15482 net.cpp:226] conv5_relu5_0_split needs backward computation.
I0422 07:50:59.224093 15482 net.cpp:226] relu5 needs backward computation.
I0422 07:50:59.224099 15482 net.cpp:226] conv5 needs backward computation.
I0422 07:50:59.224104 15482 net.cpp:226] relu4 needs backward computation.
I0422 07:50:59.224108 15482 net.cpp:226] conv4 needs backward computation.
I0422 07:50:59.224114 15482 net.cpp:226] relu3 needs backward computation.
I0422 07:50:59.224118 15482 net.cpp:226] conv3 needs backward computation.
I0422 07:50:59.224123 15482 net.cpp:226] pool2 needs backward computation.
I0422 07:50:59.224129 15482 net.cpp:226] norm2 needs backward computation.
I0422 07:50:59.224134 15482 net.cpp:226] relu2 needs backward computation.
I0422 07:50:59.224138 15482 net.cpp:226] conv2 needs backward computation.
I0422 07:50:59.224144 15482 net.cpp:226] pool1 needs backward computation.
I0422 07:50:59.224149 15482 net.cpp:226] norm1 needs backward computation.
I0422 07:50:59.224154 15482 net.cpp:226] relu1 needs backward computation.
I0422 07:50:59.224159 15482 net.cpp:226] conv1 needs backward computation.
I0422 07:50:59.224167 15482 net.cpp:228] data does not need backward computation.
I0422 07:50:59.224171 15482 net.cpp:270] This network produces output bbox_loss
I0422 07:50:59.224176 15482 net.cpp:270] This network produces output cls_loss
I0422 07:50:59.224210 15482 net.cpp:283] Network initialization done.
I0422 07:50:59.224369 15482 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from data/imagenet_models/ZF.v2.caffemodel
I0422 07:50:59.672199 15482 net.cpp:816] Ignoring source layer pool5_spm6
I0422 07:50:59.672230 15482 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0422 07:50:59.716177 15482 net.cpp:816] Ignoring source layer fc8
I0422 07:50:59.716207 15482 net.cpp:816] Ignoring source layer prob
Solving...
I0422 07:51:00.054584 15482 solver.cpp:229] Iteration 0, loss = 3.95368
I0422 07:51:00.054636 15482 solver.cpp:245]     Train net output #0: bbox_loss = 0.0283116 (* 1 = 0.0283116 loss)
I0422 07:51:00.054648 15482 solver.cpp:245]     Train net output #1: cls_loss = 3.92536 (* 1 = 3.92536 loss)
I0422 07:51:00.054669 15482 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0422 07:51:06.091289 15482 solver.cpp:229] Iteration 20, loss = 0.160418
I0422 07:51:06.091331 15482 solver.cpp:245]     Train net output #0: bbox_loss = 0.00423572 (* 1 = 0.00423572 loss)
I0422 07:51:06.091338 15482 solver.cpp:245]     Train net output #1: cls_loss = 0.156182 (* 1 = 0.156182 loss)
I0422 07:51:06.091346 15482 sgd_solver.cpp:106] Iteration 20, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_40.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, init from stage 1 Fast R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_40.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
done
roidb len: 1012
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0422 07:51:16.085600 15493 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 60000
snapshot: 0
snapshot_prefix: "zf_rpn"
average_loss: 100
I0422 07:51:16.085656 15493 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_rpn_train.pt
I0422 07:51:16.086690 15493 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_conv2"
  type: "Convolution"
  bottom: "conv3"
  top: "rpn_conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_relu2"
  type: "ReLU"
  bottom: "rpn_conv2"
  top: "rpn_conv2"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score2"
  type: "Convolution"
  bottom: "rpn_conv2"
  top: "rpn_cls_score2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred2"
  type: "Convolution"
  bottom: "rpn_conv2"
  top: "rpn_bbox_pred2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape2"
  type: "Reshape"
  bottom: "rpn_cls_score2"
  top: "rpn_cls_score_reshape2"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn-data2"
  type: "Python"
  bottom: "rpn_cls_score2"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels2"
  top: "rpn_bbox_targets2"
  top: "rpn_bbox_inside_weights2"
  top: "rpn_bbox_outside_weights2"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_cls2"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape2"
  bottom: "rpn_labels2"
  top: "rpn_cls_loss2"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_loss_bbox2"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred2"
  bottom: "rpn_bbox_targets2"
  bottom: "rpn_bbox_inside_weights2"
  bottom: "rpn_bbox_outside_weights2"
  top: "rpn_loss_bbox2"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "dummy_roi_pool_conv5"
  type: "DummyData"
  top: "dummy_roi_pool_conv5"
  dummy_data_param {
    data_filler {
      type: "gaussian"
      std: 0.01
    }
    shape {
      dim: 1
      dim: 9216
    }
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "dummy_roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "silence_fc7"
  type: "Silence"
  bottom: "fc7"
}
I0422 07:51:16.086913 15493 layer_factory.hpp:77] Creating layer input-data
I0422 07:51:16.087458 15493 net.cpp:106] Creating Layer input-data
I0422 07:51:16.087479 15493 net.cpp:411] input-data -> data
I0422 07:51:16.087496 15493 net.cpp:411] input-data -> im_info
I0422 07:51:16.087507 15493 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0422 07:51:16.103420 15493 net.cpp:150] Setting up input-data
I0422 07:51:16.103440 15493 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:51:16.103444 15493 net.cpp:157] Top shape: 1 3 (3)
I0422 07:51:16.103448 15493 net.cpp:157] Top shape: 1 4 (4)
I0422 07:51:16.103451 15493 net.cpp:165] Memory required for data: 7200028
I0422 07:51:16.103456 15493 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0422 07:51:16.103464 15493 net.cpp:106] Creating Layer data_input-data_0_split
I0422 07:51:16.103473 15493 net.cpp:454] data_input-data_0_split <- data
I0422 07:51:16.103482 15493 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0422 07:51:16.103489 15493 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0422 07:51:16.103502 15493 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_2
I0422 07:51:16.103551 15493 net.cpp:150] Setting up data_input-data_0_split
I0422 07:51:16.103560 15493 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:51:16.103564 15493 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:51:16.103567 15493 net.cpp:157] Top shape: 1 3 600 1000 (1800000)
I0422 07:51:16.103570 15493 net.cpp:165] Memory required for data: 28800028
I0422 07:51:16.103574 15493 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0422 07:51:16.103579 15493 net.cpp:106] Creating Layer im_info_input-data_1_split
I0422 07:51:16.103584 15493 net.cpp:454] im_info_input-data_1_split <- im_info
I0422 07:51:16.103587 15493 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0422 07:51:16.103592 15493 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0422 07:51:16.103619 15493 net.cpp:150] Setting up im_info_input-data_1_split
I0422 07:51:16.103623 15493 net.cpp:157] Top shape: 1 3 (3)
I0422 07:51:16.103627 15493 net.cpp:157] Top shape: 1 3 (3)
I0422 07:51:16.103629 15493 net.cpp:165] Memory required for data: 28800052
I0422 07:51:16.103632 15493 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0422 07:51:16.103636 15493 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0422 07:51:16.103641 15493 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0422 07:51:16.103644 15493 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0422 07:51:16.103652 15493 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0422 07:51:16.103677 15493 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0422 07:51:16.103684 15493 net.cpp:157] Top shape: 1 4 (4)
I0422 07:51:16.103688 15493 net.cpp:157] Top shape: 1 4 (4)
I0422 07:51:16.103690 15493 net.cpp:165] Memory required for data: 28800084
I0422 07:51:16.103693 15493 layer_factory.hpp:77] Creating layer conv1
I0422 07:51:16.103706 15493 net.cpp:106] Creating Layer conv1
I0422 07:51:16.103709 15493 net.cpp:454] conv1 <- data_input-data_0_split_0
I0422 07:51:16.103714 15493 net.cpp:411] conv1 -> conv1
I0422 07:51:16.105026 15493 net.cpp:150] Setting up conv1
I0422 07:51:16.105043 15493 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0422 07:51:16.105046 15493 net.cpp:165] Memory required for data: 86400084
I0422 07:51:16.105060 15493 layer_factory.hpp:77] Creating layer relu1
I0422 07:51:16.105068 15493 net.cpp:106] Creating Layer relu1
I0422 07:51:16.105077 15493 net.cpp:454] relu1 <- conv1
I0422 07:51:16.105083 15493 net.cpp:397] relu1 -> conv1 (in-place)
I0422 07:51:16.105093 15493 net.cpp:150] Setting up relu1
I0422 07:51:16.105098 15493 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0422 07:51:16.105101 15493 net.cpp:165] Memory required for data: 144000084
I0422 07:51:16.105103 15493 layer_factory.hpp:77] Creating layer norm1
I0422 07:51:16.105108 15493 net.cpp:106] Creating Layer norm1
I0422 07:51:16.105111 15493 net.cpp:454] norm1 <- conv1
I0422 07:51:16.105120 15493 net.cpp:411] norm1 -> norm1
I0422 07:51:16.105226 15493 net.cpp:150] Setting up norm1
I0422 07:51:16.105237 15493 net.cpp:157] Top shape: 1 96 300 500 (14400000)
I0422 07:51:16.105239 15493 net.cpp:165] Memory required for data: 201600084
I0422 07:51:16.105242 15493 layer_factory.hpp:77] Creating layer pool1
I0422 07:51:16.105249 15493 net.cpp:106] Creating Layer pool1
I0422 07:51:16.105252 15493 net.cpp:454] pool1 <- norm1
I0422 07:51:16.105257 15493 net.cpp:411] pool1 -> pool1
I0422 07:51:16.105289 15493 net.cpp:150] Setting up pool1
I0422 07:51:16.105299 15493 net.cpp:157] Top shape: 1 96 151 251 (3638496)
I0422 07:51:16.105303 15493 net.cpp:165] Memory required for data: 216154068
I0422 07:51:16.105305 15493 layer_factory.hpp:77] Creating layer conv2
I0422 07:51:16.105312 15493 net.cpp:106] Creating Layer conv2
I0422 07:51:16.105314 15493 net.cpp:454] conv2 <- pool1
I0422 07:51:16.105321 15493 net.cpp:411] conv2 -> conv2
I0422 07:51:16.106993 15493 net.cpp:150] Setting up conv2
I0422 07:51:16.107012 15493 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0422 07:51:16.107014 15493 net.cpp:165] Memory required for data: 225959892
I0422 07:51:16.107023 15493 layer_factory.hpp:77] Creating layer relu2
I0422 07:51:16.107030 15493 net.cpp:106] Creating Layer relu2
I0422 07:51:16.107035 15493 net.cpp:454] relu2 <- conv2
I0422 07:51:16.107040 15493 net.cpp:397] relu2 -> conv2 (in-place)
I0422 07:51:16.107046 15493 net.cpp:150] Setting up relu2
I0422 07:51:16.107049 15493 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0422 07:51:16.107053 15493 net.cpp:165] Memory required for data: 235765716
I0422 07:51:16.107054 15493 layer_factory.hpp:77] Creating layer norm2
I0422 07:51:16.107062 15493 net.cpp:106] Creating Layer norm2
I0422 07:51:16.107067 15493 net.cpp:454] norm2 <- conv2
I0422 07:51:16.107071 15493 net.cpp:411] norm2 -> norm2
I0422 07:51:16.107149 15493 net.cpp:150] Setting up norm2
I0422 07:51:16.107159 15493 net.cpp:157] Top shape: 1 256 76 126 (2451456)
I0422 07:51:16.107162 15493 net.cpp:165] Memory required for data: 245571540
I0422 07:51:16.107164 15493 layer_factory.hpp:77] Creating layer pool2
I0422 07:51:16.107169 15493 net.cpp:106] Creating Layer pool2
I0422 07:51:16.107172 15493 net.cpp:454] pool2 <- norm2
I0422 07:51:16.107182 15493 net.cpp:411] pool2 -> pool2
I0422 07:51:16.107208 15493 net.cpp:150] Setting up pool2
I0422 07:51:16.107213 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.107215 15493 net.cpp:165] Memory required for data: 248127444
I0422 07:51:16.107218 15493 layer_factory.hpp:77] Creating layer conv3
I0422 07:51:16.107225 15493 net.cpp:106] Creating Layer conv3
I0422 07:51:16.107229 15493 net.cpp:454] conv3 <- pool2
I0422 07:51:16.107234 15493 net.cpp:411] conv3 -> conv3
I0422 07:51:16.110549 15493 net.cpp:150] Setting up conv3
I0422 07:51:16.110569 15493 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:51:16.110571 15493 net.cpp:165] Memory required for data: 251961300
I0422 07:51:16.110580 15493 layer_factory.hpp:77] Creating layer relu3
I0422 07:51:16.110585 15493 net.cpp:106] Creating Layer relu3
I0422 07:51:16.110589 15493 net.cpp:454] relu3 <- conv3
I0422 07:51:16.110594 15493 net.cpp:397] relu3 -> conv3 (in-place)
I0422 07:51:16.110599 15493 net.cpp:150] Setting up relu3
I0422 07:51:16.110608 15493 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:51:16.110610 15493 net.cpp:165] Memory required for data: 255795156
I0422 07:51:16.110613 15493 layer_factory.hpp:77] Creating layer conv3_relu3_0_split
I0422 07:51:16.110617 15493 net.cpp:106] Creating Layer conv3_relu3_0_split
I0422 07:51:16.110620 15493 net.cpp:454] conv3_relu3_0_split <- conv3
I0422 07:51:16.110625 15493 net.cpp:411] conv3_relu3_0_split -> conv3_relu3_0_split_0
I0422 07:51:16.110630 15493 net.cpp:411] conv3_relu3_0_split -> conv3_relu3_0_split_1
I0422 07:51:16.110663 15493 net.cpp:150] Setting up conv3_relu3_0_split
I0422 07:51:16.110669 15493 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:51:16.110672 15493 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:51:16.110676 15493 net.cpp:165] Memory required for data: 263462868
I0422 07:51:16.110677 15493 layer_factory.hpp:77] Creating layer conv4
I0422 07:51:16.110689 15493 net.cpp:106] Creating Layer conv4
I0422 07:51:16.110698 15493 net.cpp:454] conv4 <- conv3_relu3_0_split_0
I0422 07:51:16.110703 15493 net.cpp:411] conv4 -> conv4
I0422 07:51:16.114007 15493 net.cpp:150] Setting up conv4
I0422 07:51:16.114024 15493 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:51:16.114027 15493 net.cpp:165] Memory required for data: 267296724
I0422 07:51:16.114033 15493 layer_factory.hpp:77] Creating layer relu4
I0422 07:51:16.114039 15493 net.cpp:106] Creating Layer relu4
I0422 07:51:16.114048 15493 net.cpp:454] relu4 <- conv4
I0422 07:51:16.114053 15493 net.cpp:397] relu4 -> conv4 (in-place)
I0422 07:51:16.114059 15493 net.cpp:150] Setting up relu4
I0422 07:51:16.114063 15493 net.cpp:157] Top shape: 1 384 39 64 (958464)
I0422 07:51:16.114065 15493 net.cpp:165] Memory required for data: 271130580
I0422 07:51:16.114068 15493 layer_factory.hpp:77] Creating layer conv5
I0422 07:51:16.114074 15493 net.cpp:106] Creating Layer conv5
I0422 07:51:16.114086 15493 net.cpp:454] conv5 <- conv4
I0422 07:51:16.114094 15493 net.cpp:411] conv5 -> conv5
I0422 07:51:16.116397 15493 net.cpp:150] Setting up conv5
I0422 07:51:16.116417 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.116422 15493 net.cpp:165] Memory required for data: 273686484
I0422 07:51:16.116436 15493 layer_factory.hpp:77] Creating layer relu5
I0422 07:51:16.116443 15493 net.cpp:106] Creating Layer relu5
I0422 07:51:16.116449 15493 net.cpp:454] relu5 <- conv5
I0422 07:51:16.116459 15493 net.cpp:397] relu5 -> conv5 (in-place)
I0422 07:51:16.116470 15493 net.cpp:150] Setting up relu5
I0422 07:51:16.116477 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.116482 15493 net.cpp:165] Memory required for data: 276242388
I0422 07:51:16.116487 15493 layer_factory.hpp:77] Creating layer rpn_conv1
I0422 07:51:16.116503 15493 net.cpp:106] Creating Layer rpn_conv1
I0422 07:51:16.116514 15493 net.cpp:454] rpn_conv1 <- conv5
I0422 07:51:16.116523 15493 net.cpp:411] rpn_conv1 -> rpn_conv1
I0422 07:51:16.133576 15493 net.cpp:150] Setting up rpn_conv1
I0422 07:51:16.133597 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.133602 15493 net.cpp:165] Memory required for data: 278798292
I0422 07:51:16.133611 15493 layer_factory.hpp:77] Creating layer rpn_conv2
I0422 07:51:16.133625 15493 net.cpp:106] Creating Layer rpn_conv2
I0422 07:51:16.133635 15493 net.cpp:454] rpn_conv2 <- conv3_relu3_0_split_1
I0422 07:51:16.133646 15493 net.cpp:411] rpn_conv2 -> rpn_conv2
I0422 07:51:16.159041 15493 net.cpp:150] Setting up rpn_conv2
I0422 07:51:16.159060 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.159065 15493 net.cpp:165] Memory required for data: 281354196
I0422 07:51:16.159075 15493 layer_factory.hpp:77] Creating layer rpn_relu1
I0422 07:51:16.159085 15493 net.cpp:106] Creating Layer rpn_relu1
I0422 07:51:16.159091 15493 net.cpp:454] rpn_relu1 <- rpn_conv1
I0422 07:51:16.159098 15493 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0422 07:51:16.159107 15493 net.cpp:150] Setting up rpn_relu1
I0422 07:51:16.159114 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.159119 15493 net.cpp:165] Memory required for data: 283910100
I0422 07:51:16.159129 15493 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0422 07:51:16.159137 15493 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0422 07:51:16.159142 15493 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0422 07:51:16.159153 15493 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0422 07:51:16.159162 15493 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0422 07:51:16.159211 15493 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0422 07:51:16.159226 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.159232 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.159236 15493 net.cpp:165] Memory required for data: 289021908
I0422 07:51:16.159240 15493 layer_factory.hpp:77] Creating layer rpn_relu2
I0422 07:51:16.159247 15493 net.cpp:106] Creating Layer rpn_relu2
I0422 07:51:16.159255 15493 net.cpp:454] rpn_relu2 <- rpn_conv2
I0422 07:51:16.159262 15493 net.cpp:397] rpn_relu2 -> rpn_conv2 (in-place)
I0422 07:51:16.159271 15493 net.cpp:150] Setting up rpn_relu2
I0422 07:51:16.159277 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.159283 15493 net.cpp:165] Memory required for data: 291577812
I0422 07:51:16.159288 15493 layer_factory.hpp:77] Creating layer rpn_conv2_rpn_relu2_0_split
I0422 07:51:16.159294 15493 net.cpp:106] Creating Layer rpn_conv2_rpn_relu2_0_split
I0422 07:51:16.159298 15493 net.cpp:454] rpn_conv2_rpn_relu2_0_split <- rpn_conv2
I0422 07:51:16.159307 15493 net.cpp:411] rpn_conv2_rpn_relu2_0_split -> rpn_conv2_rpn_relu2_0_split_0
I0422 07:51:16.159317 15493 net.cpp:411] rpn_conv2_rpn_relu2_0_split -> rpn_conv2_rpn_relu2_0_split_1
I0422 07:51:16.159353 15493 net.cpp:150] Setting up rpn_conv2_rpn_relu2_0_split
I0422 07:51:16.159364 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.159370 15493 net.cpp:157] Top shape: 1 256 39 64 (638976)
I0422 07:51:16.159374 15493 net.cpp:165] Memory required for data: 296689620
I0422 07:51:16.159379 15493 layer_factory.hpp:77] Creating layer rpn_cls_score
I0422 07:51:16.159400 15493 net.cpp:106] Creating Layer rpn_cls_score
I0422 07:51:16.159409 15493 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0422 07:51:16.159418 15493 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0422 07:51:16.159744 15493 net.cpp:150] Setting up rpn_cls_score
I0422 07:51:16.159759 15493 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:51:16.159764 15493 net.cpp:165] Memory required for data: 296869332
I0422 07:51:16.159772 15493 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0422 07:51:16.159780 15493 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0422 07:51:16.159786 15493 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0422 07:51:16.159795 15493 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0422 07:51:16.159803 15493 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0422 07:51:16.159852 15493 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0422 07:51:16.159864 15493 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:51:16.159870 15493 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:51:16.159874 15493 net.cpp:165] Memory required for data: 297228756
I0422 07:51:16.159878 15493 layer_factory.hpp:77] Creating layer rpn_cls_score2
I0422 07:51:16.159893 15493 net.cpp:106] Creating Layer rpn_cls_score2
I0422 07:51:16.159904 15493 net.cpp:454] rpn_cls_score2 <- rpn_conv2_rpn_relu2_0_split_0
I0422 07:51:16.159915 15493 net.cpp:411] rpn_cls_score2 -> rpn_cls_score2
I0422 07:51:16.160234 15493 net.cpp:150] Setting up rpn_cls_score2
I0422 07:51:16.160248 15493 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:51:16.160253 15493 net.cpp:165] Memory required for data: 297408468
I0422 07:51:16.160269 15493 layer_factory.hpp:77] Creating layer rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:51:16.160277 15493 net.cpp:106] Creating Layer rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:51:16.160284 15493 net.cpp:454] rpn_cls_score2_rpn_cls_score2_0_split <- rpn_cls_score2
I0422 07:51:16.160293 15493 net.cpp:411] rpn_cls_score2_rpn_cls_score2_0_split -> rpn_cls_score2_rpn_cls_score2_0_split_0
I0422 07:51:16.160302 15493 net.cpp:411] rpn_cls_score2_rpn_cls_score2_0_split -> rpn_cls_score2_rpn_cls_score2_0_split_1
I0422 07:51:16.160344 15493 net.cpp:150] Setting up rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:51:16.160356 15493 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:51:16.160363 15493 net.cpp:157] Top shape: 1 18 39 64 (44928)
I0422 07:51:16.160367 15493 net.cpp:165] Memory required for data: 297767892
I0422 07:51:16.160372 15493 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0422 07:51:16.160387 15493 net.cpp:106] Creating Layer rpn_bbox_pred
I0422 07:51:16.160396 15493 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0422 07:51:16.160408 15493 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0422 07:51:16.160852 15493 net.cpp:150] Setting up rpn_bbox_pred
I0422 07:51:16.160866 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.160871 15493 net.cpp:165] Memory required for data: 298127316
I0422 07:51:16.160878 15493 layer_factory.hpp:77] Creating layer rpn_bbox_pred2
I0422 07:51:16.160894 15493 net.cpp:106] Creating Layer rpn_bbox_pred2
I0422 07:51:16.160905 15493 net.cpp:454] rpn_bbox_pred2 <- rpn_conv2_rpn_relu2_0_split_1
I0422 07:51:16.160914 15493 net.cpp:411] rpn_bbox_pred2 -> rpn_bbox_pred2
I0422 07:51:16.161362 15493 net.cpp:150] Setting up rpn_bbox_pred2
I0422 07:51:16.161378 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.161382 15493 net.cpp:165] Memory required for data: 298486740
I0422 07:51:16.161391 15493 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0422 07:51:16.161401 15493 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0422 07:51:16.161412 15493 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0422 07:51:16.161422 15493 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0422 07:51:16.161456 15493 net.cpp:150] Setting up rpn_cls_score_reshape
I0422 07:51:16.161469 15493 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0422 07:51:16.161473 15493 net.cpp:165] Memory required for data: 298666452
I0422 07:51:16.161478 15493 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape2
I0422 07:51:16.161492 15493 net.cpp:106] Creating Layer rpn_cls_score_reshape2
I0422 07:51:16.161504 15493 net.cpp:454] rpn_cls_score_reshape2 <- rpn_cls_score2_rpn_cls_score2_0_split_0
I0422 07:51:16.161514 15493 net.cpp:411] rpn_cls_score_reshape2 -> rpn_cls_score_reshape2
I0422 07:51:16.161542 15493 net.cpp:150] Setting up rpn_cls_score_reshape2
I0422 07:51:16.161554 15493 net.cpp:157] Top shape: 1 2 351 64 (44928)
I0422 07:51:16.161558 15493 net.cpp:165] Memory required for data: 298846164
I0422 07:51:16.161563 15493 layer_factory.hpp:77] Creating layer rpn-data
I0422 07:51:16.162051 15493 net.cpp:106] Creating Layer rpn-data
I0422 07:51:16.162070 15493 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0422 07:51:16.162077 15493 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0422 07:51:16.162084 15493 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0422 07:51:16.162089 15493 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0422 07:51:16.162098 15493 net.cpp:411] rpn-data -> rpn_labels
I0422 07:51:16.162111 15493 net.cpp:411] rpn-data -> rpn_bbox_targets
I0422 07:51:16.162122 15493 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0422 07:51:16.162132 15493 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0422 07:51:16.163425 15493 net.cpp:150] Setting up rpn-data
I0422 07:51:16.163450 15493 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0422 07:51:16.163456 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.163462 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.163468 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.163472 15493 net.cpp:165] Memory required for data: 300014292
I0422 07:51:16.163477 15493 layer_factory.hpp:77] Creating layer rpn-data2
I0422 07:51:16.163512 15493 net.cpp:106] Creating Layer rpn-data2
I0422 07:51:16.163525 15493 net.cpp:454] rpn-data2 <- rpn_cls_score2_rpn_cls_score2_0_split_1
I0422 07:51:16.163533 15493 net.cpp:454] rpn-data2 <- gt_boxes_input-data_2_split_1
I0422 07:51:16.163539 15493 net.cpp:454] rpn-data2 <- im_info_input-data_1_split_1
I0422 07:51:16.163545 15493 net.cpp:454] rpn-data2 <- data_input-data_0_split_2
I0422 07:51:16.163559 15493 net.cpp:411] rpn-data2 -> rpn_labels2
I0422 07:51:16.163573 15493 net.cpp:411] rpn-data2 -> rpn_bbox_targets2
I0422 07:51:16.163583 15493 net.cpp:411] rpn-data2 -> rpn_bbox_inside_weights2
I0422 07:51:16.163594 15493 net.cpp:411] rpn-data2 -> rpn_bbox_outside_weights2
I0422 07:51:16.164129 15493 net.cpp:150] Setting up rpn-data2
I0422 07:51:16.164151 15493 net.cpp:157] Top shape: 1 1 351 64 (22464)
I0422 07:51:16.164157 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.164163 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.164168 15493 net.cpp:157] Top shape: 1 36 39 64 (89856)
I0422 07:51:16.164172 15493 net.cpp:165] Memory required for data: 301182420
I0422 07:51:16.164177 15493 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0422 07:51:16.164193 15493 net.cpp:106] Creating Layer rpn_loss_cls
I0422 07:51:16.164199 15493 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape
I0422 07:51:16.164206 15493 net.cpp:454] rpn_loss_cls <- rpn_labels
I0422 07:51:16.164216 15493 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0422 07:51:16.164234 15493 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0422 07:51:16.164362 15493 net.cpp:150] Setting up rpn_loss_cls
I0422 07:51:16.164377 15493 net.cpp:157] Top shape: (1)
I0422 07:51:16.164381 15493 net.cpp:160]     with loss weight 1
I0422 07:51:16.164405 15493 net.cpp:165] Memory required for data: 301182424
I0422 07:51:16.164410 15493 layer_factory.hpp:77] Creating layer rpn_loss_cls2
I0422 07:51:16.164418 15493 net.cpp:106] Creating Layer rpn_loss_cls2
I0422 07:51:16.164424 15493 net.cpp:454] rpn_loss_cls2 <- rpn_cls_score_reshape2
I0422 07:51:16.164432 15493 net.cpp:454] rpn_loss_cls2 <- rpn_labels2
I0422 07:51:16.164439 15493 net.cpp:411] rpn_loss_cls2 -> rpn_cls_loss2
I0422 07:51:16.164450 15493 layer_factory.hpp:77] Creating layer rpn_loss_cls2
I0422 07:51:16.164567 15493 net.cpp:150] Setting up rpn_loss_cls2
I0422 07:51:16.164579 15493 net.cpp:157] Top shape: (1)
I0422 07:51:16.164583 15493 net.cpp:160]     with loss weight 1
I0422 07:51:16.164590 15493 net.cpp:165] Memory required for data: 301182428
I0422 07:51:16.164595 15493 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0422 07:51:16.164608 15493 net.cpp:106] Creating Layer rpn_loss_bbox
I0422 07:51:16.164618 15493 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred
I0422 07:51:16.164625 15493 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0422 07:51:16.164630 15493 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0422 07:51:16.164636 15493 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0422 07:51:16.164649 15493 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0422 07:51:16.165233 15493 net.cpp:150] Setting up rpn_loss_bbox
I0422 07:51:16.165246 15493 net.cpp:157] Top shape: (1)
I0422 07:51:16.165251 15493 net.cpp:160]     with loss weight 1
I0422 07:51:16.165258 15493 net.cpp:165] Memory required for data: 301182432
I0422 07:51:16.165263 15493 layer_factory.hpp:77] Creating layer rpn_loss_bbox2
I0422 07:51:16.165274 15493 net.cpp:106] Creating Layer rpn_loss_bbox2
I0422 07:51:16.165284 15493 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_pred2
I0422 07:51:16.165292 15493 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_targets2
I0422 07:51:16.165297 15493 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_inside_weights2
I0422 07:51:16.165302 15493 net.cpp:454] rpn_loss_bbox2 <- rpn_bbox_outside_weights2
I0422 07:51:16.165309 15493 net.cpp:411] rpn_loss_bbox2 -> rpn_loss_bbox2
I0422 07:51:16.166419 15493 net.cpp:150] Setting up rpn_loss_bbox2
I0422 07:51:16.166435 15493 net.cpp:157] Top shape: (1)
I0422 07:51:16.166440 15493 net.cpp:160]     with loss weight 1
I0422 07:51:16.166448 15493 net.cpp:165] Memory required for data: 301182436
I0422 07:51:16.166453 15493 layer_factory.hpp:77] Creating layer dummy_roi_pool_conv5
I0422 07:51:16.166470 15493 net.cpp:106] Creating Layer dummy_roi_pool_conv5
I0422 07:51:16.166479 15493 net.cpp:411] dummy_roi_pool_conv5 -> dummy_roi_pool_conv5
I0422 07:51:16.166522 15493 net.cpp:150] Setting up dummy_roi_pool_conv5
I0422 07:51:16.166535 15493 net.cpp:157] Top shape: 1 9216 (9216)
I0422 07:51:16.166539 15493 net.cpp:165] Memory required for data: 301219300
I0422 07:51:16.166543 15493 layer_factory.hpp:77] Creating layer fc6
I0422 07:51:16.166555 15493 net.cpp:106] Creating Layer fc6
I0422 07:51:16.166561 15493 net.cpp:454] fc6 <- dummy_roi_pool_conv5
I0422 07:51:16.166569 15493 net.cpp:411] fc6 -> fc6
I0422 07:51:16.265250 15493 net.cpp:150] Setting up fc6
I0422 07:51:16.265292 15493 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:51:16.265297 15493 net.cpp:165] Memory required for data: 301235684
I0422 07:51:16.265311 15493 layer_factory.hpp:77] Creating layer relu6
I0422 07:51:16.265324 15493 net.cpp:106] Creating Layer relu6
I0422 07:51:16.265331 15493 net.cpp:454] relu6 <- fc6
I0422 07:51:16.265341 15493 net.cpp:397] relu6 -> fc6 (in-place)
I0422 07:51:16.265352 15493 net.cpp:150] Setting up relu6
I0422 07:51:16.265363 15493 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:51:16.265367 15493 net.cpp:165] Memory required for data: 301252068
I0422 07:51:16.265372 15493 layer_factory.hpp:77] Creating layer fc7
I0422 07:51:16.265385 15493 net.cpp:106] Creating Layer fc7
I0422 07:51:16.265391 15493 net.cpp:454] fc7 <- fc6
I0422 07:51:16.265403 15493 net.cpp:411] fc7 -> fc7
I0422 07:51:16.309056 15493 net.cpp:150] Setting up fc7
I0422 07:51:16.309098 15493 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:51:16.309103 15493 net.cpp:165] Memory required for data: 301268452
I0422 07:51:16.309115 15493 layer_factory.hpp:77] Creating layer silence_fc7
I0422 07:51:16.309141 15493 net.cpp:106] Creating Layer silence_fc7
I0422 07:51:16.309149 15493 net.cpp:454] silence_fc7 <- fc7
I0422 07:51:16.309159 15493 net.cpp:150] Setting up silence_fc7
I0422 07:51:16.309168 15493 net.cpp:165] Memory required for data: 301268452
I0422 07:51:16.309172 15493 net.cpp:228] silence_fc7 does not need backward computation.
I0422 07:51:16.309178 15493 net.cpp:228] fc7 does not need backward computation.
I0422 07:51:16.309183 15493 net.cpp:228] relu6 does not need backward computation.
I0422 07:51:16.309186 15493 net.cpp:228] fc6 does not need backward computation.
I0422 07:51:16.309191 15493 net.cpp:228] dummy_roi_pool_conv5 does not need backward computation.
I0422 07:51:16.309195 15493 net.cpp:226] rpn_loss_bbox2 needs backward computation.
I0422 07:51:16.309204 15493 net.cpp:226] rpn_loss_bbox needs backward computation.
I0422 07:51:16.309211 15493 net.cpp:226] rpn_loss_cls2 needs backward computation.
I0422 07:51:16.309217 15493 net.cpp:226] rpn_loss_cls needs backward computation.
I0422 07:51:16.309223 15493 net.cpp:226] rpn-data2 needs backward computation.
I0422 07:51:16.309232 15493 net.cpp:226] rpn-data needs backward computation.
I0422 07:51:16.309242 15493 net.cpp:226] rpn_cls_score_reshape2 needs backward computation.
I0422 07:51:16.309250 15493 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0422 07:51:16.309257 15493 net.cpp:226] rpn_bbox_pred2 needs backward computation.
I0422 07:51:16.309262 15493 net.cpp:226] rpn_bbox_pred needs backward computation.
I0422 07:51:16.309267 15493 net.cpp:226] rpn_cls_score2_rpn_cls_score2_0_split needs backward computation.
I0422 07:51:16.309272 15493 net.cpp:226] rpn_cls_score2 needs backward computation.
I0422 07:51:16.309276 15493 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0422 07:51:16.309281 15493 net.cpp:226] rpn_cls_score needs backward computation.
I0422 07:51:16.309286 15493 net.cpp:226] rpn_conv2_rpn_relu2_0_split needs backward computation.
I0422 07:51:16.309290 15493 net.cpp:226] rpn_relu2 needs backward computation.
I0422 07:51:16.309295 15493 net.cpp:226] rpn_conv1_rpn_relu1_0_split needs backward computation.
I0422 07:51:16.309300 15493 net.cpp:226] rpn_relu1 needs backward computation.
I0422 07:51:16.309304 15493 net.cpp:226] rpn_conv2 needs backward computation.
I0422 07:51:16.309310 15493 net.cpp:226] rpn_conv1 needs backward computation.
I0422 07:51:16.309316 15493 net.cpp:228] relu5 does not need backward computation.
I0422 07:51:16.309321 15493 net.cpp:228] conv5 does not need backward computation.
I0422 07:51:16.309330 15493 net.cpp:228] relu4 does not need backward computation.
I0422 07:51:16.309335 15493 net.cpp:228] conv4 does not need backward computation.
I0422 07:51:16.309341 15493 net.cpp:228] conv3_relu3_0_split does not need backward computation.
I0422 07:51:16.309347 15493 net.cpp:228] relu3 does not need backward computation.
I0422 07:51:16.309355 15493 net.cpp:228] conv3 does not need backward computation.
I0422 07:51:16.309360 15493 net.cpp:228] pool2 does not need backward computation.
I0422 07:51:16.309366 15493 net.cpp:228] norm2 does not need backward computation.
I0422 07:51:16.309371 15493 net.cpp:228] relu2 does not need backward computation.
I0422 07:51:16.309376 15493 net.cpp:228] conv2 does not need backward computation.
I0422 07:51:16.309381 15493 net.cpp:228] pool1 does not need backward computation.
I0422 07:51:16.309386 15493 net.cpp:228] norm1 does not need backward computation.
I0422 07:51:16.309391 15493 net.cpp:228] relu1 does not need backward computation.
I0422 07:51:16.309396 15493 net.cpp:228] conv1 does not need backward computation.
I0422 07:51:16.309401 15493 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0422 07:51:16.309408 15493 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0422 07:51:16.309414 15493 net.cpp:228] data_input-data_0_split does not need backward computation.
I0422 07:51:16.309420 15493 net.cpp:228] input-data does not need backward computation.
I0422 07:51:16.309425 15493 net.cpp:270] This network produces output rpn_cls_loss
I0422 07:51:16.309430 15493 net.cpp:270] This network produces output rpn_cls_loss2
I0422 07:51:16.309435 15493 net.cpp:270] This network produces output rpn_loss_bbox
I0422 07:51:16.309442 15493 net.cpp:270] This network produces output rpn_loss_bbox2
I0422 07:51:16.309494 15493 net.cpp:283] Network initialization done.
I0422 07:51:16.309651 15493 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage1_iter_40.caffemodel
I0422 07:51:16.744560 15493 net.cpp:816] Ignoring source layer data
I0422 07:51:16.747670 15493 net.cpp:816] Ignoring source layer conv5_relu5_0_split
I0422 07:51:16.747684 15493 net.cpp:816] Ignoring source layer roi_pool_conv5
I0422 07:51:16.778045 15493 net.cpp:816] Ignoring source layer drop6
I0422 07:51:16.791527 15493 net.cpp:816] Ignoring source layer relu7
I0422 07:51:16.791546 15493 net.cpp:816] Ignoring source layer drop7
I0422 07:51:16.791549 15493 net.cpp:816] Ignoring source layer fc7_drop7_0_split
I0422 07:51:16.791553 15493 net.cpp:816] Ignoring source layer cls_score
I0422 07:51:16.791555 15493 net.cpp:816] Ignoring source layer bbox_pred
I0422 07:51:16.791558 15493 net.cpp:816] Ignoring source layer loss_cls
I0422 07:51:16.791563 15493 net.cpp:816] Ignoring source layer loss_bbox
I0422 07:51:16.792070 15493 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0422 07:51:16.792079 15493 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
Solving...
I0422 07:51:16.983002 15493 solver.cpp:229] Iteration 0, loss = 3.27533
I0422 07:51:16.983047 15493 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.706997 (* 1 = 0.706997 loss)
I0422 07:51:16.983055 15493 solver.cpp:245]     Train net output #1: rpn_cls_loss2 = 1.20464 (* 1 = 1.20464 loss)
I0422 07:51:16.983060 15493 solver.cpp:245]     Train net output #2: rpn_loss_bbox = 0.473455 (* 1 = 0.473455 loss)
I0422 07:51:16.983065 15493 solver.cpp:245]     Train net output #3: rpn_loss_bbox2 = 0.890239 (* 1 = 0.890239 loss)
I0422 07:51:16.983078 15493 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0422 07:51:19.474439 15493 solver.cpp:229] Iteration 20, loss = 1.33137
I0422 07:51:19.474483 15493 solver.cpp:245]     Train net output #0: rpn_cls_loss = 0.164259 (* 1 = 0.164259 loss)
I0422 07:51:19.474490 15493 solver.cpp:245]     Train net output #1: rpn_cls_loss2 = 0.309626 (* 1 = 0.309626 loss)
I0422 07:51:19.474495 15493 solver.cpp:245]     Train net output #2: rpn_loss_bbox = 0.233039 (* 1 = 0.233039 loss)
I0422 07:51:19.474500 15493 solver.cpp:245]     Train net output #3: rpn_loss_bbox2 = 0.624446 (* 1 = 0.624446 loss)
I0422 07:51:19.474505 15493 sgd_solver.cpp:106] Iteration 20, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_40.caffemodel
done solving
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 RPN, generate proposals
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
RPN model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_40.caffemodel
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 2000,
          'RPN_PRE_NMS_TOP_N': -1,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for proposal generation
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0422 07:51:25.621357 15504 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  top: "scores"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
I0422 07:51:25.621500 15504 net.cpp:413] Input 0 -> data
I0422 07:51:25.636526 15504 net.cpp:413] Input 1 -> im_info
I0422 07:51:25.636576 15504 layer_factory.hpp:77] Creating layer conv1
I0422 07:51:25.636605 15504 net.cpp:106] Creating Layer conv1
I0422 07:51:25.636617 15504 net.cpp:454] conv1 <- data
I0422 07:51:25.636632 15504 net.cpp:411] conv1 -> conv1
I0422 07:51:25.637414 15504 net.cpp:150] Setting up conv1
I0422 07:51:25.637436 15504 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0422 07:51:25.637439 15504 net.cpp:165] Memory required for data: 4816896
I0422 07:51:25.637455 15504 layer_factory.hpp:77] Creating layer relu1
I0422 07:51:25.637473 15504 net.cpp:106] Creating Layer relu1
I0422 07:51:25.637478 15504 net.cpp:454] relu1 <- conv1
I0422 07:51:25.637485 15504 net.cpp:397] relu1 -> conv1 (in-place)
I0422 07:51:25.637501 15504 net.cpp:150] Setting up relu1
I0422 07:51:25.637509 15504 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0422 07:51:25.637513 15504 net.cpp:165] Memory required for data: 9633792
I0422 07:51:25.637518 15504 layer_factory.hpp:77] Creating layer norm1
I0422 07:51:25.637538 15504 net.cpp:106] Creating Layer norm1
I0422 07:51:25.637550 15504 net.cpp:454] norm1 <- conv1
I0422 07:51:25.637558 15504 net.cpp:411] norm1 -> norm1
I0422 07:51:25.637686 15504 net.cpp:150] Setting up norm1
I0422 07:51:25.637699 15504 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0422 07:51:25.637702 15504 net.cpp:165] Memory required for data: 14450688
I0422 07:51:25.637706 15504 layer_factory.hpp:77] Creating layer pool1
I0422 07:51:25.637713 15504 net.cpp:106] Creating Layer pool1
I0422 07:51:25.637717 15504 net.cpp:454] pool1 <- norm1
I0422 07:51:25.637720 15504 net.cpp:411] pool1 -> pool1
I0422 07:51:25.637763 15504 net.cpp:150] Setting up pool1
I0422 07:51:25.637778 15504 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0422 07:51:25.637783 15504 net.cpp:165] Memory required for data: 15698304
I0422 07:51:25.637784 15504 layer_factory.hpp:77] Creating layer conv2
I0422 07:51:25.637791 15504 net.cpp:106] Creating Layer conv2
I0422 07:51:25.637795 15504 net.cpp:454] conv2 <- pool1
I0422 07:51:25.637800 15504 net.cpp:411] conv2 -> conv2
I0422 07:51:25.639979 15504 net.cpp:150] Setting up conv2
I0422 07:51:25.639997 15504 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0422 07:51:25.640000 15504 net.cpp:165] Memory required for data: 16559488
I0422 07:51:25.640009 15504 layer_factory.hpp:77] Creating layer relu2
I0422 07:51:25.640015 15504 net.cpp:106] Creating Layer relu2
I0422 07:51:25.640020 15504 net.cpp:454] relu2 <- conv2
I0422 07:51:25.640033 15504 net.cpp:397] relu2 -> conv2 (in-place)
I0422 07:51:25.640041 15504 net.cpp:150] Setting up relu2
I0422 07:51:25.640049 15504 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0422 07:51:25.640053 15504 net.cpp:165] Memory required for data: 17420672
I0422 07:51:25.640058 15504 layer_factory.hpp:77] Creating layer norm2
I0422 07:51:25.640065 15504 net.cpp:106] Creating Layer norm2
I0422 07:51:25.640071 15504 net.cpp:454] norm2 <- conv2
I0422 07:51:25.640079 15504 net.cpp:411] norm2 -> norm2
I0422 07:51:25.640180 15504 net.cpp:150] Setting up norm2
I0422 07:51:25.640193 15504 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0422 07:51:25.640197 15504 net.cpp:165] Memory required for data: 18281856
I0422 07:51:25.640199 15504 layer_factory.hpp:77] Creating layer pool2
I0422 07:51:25.640205 15504 net.cpp:106] Creating Layer pool2
I0422 07:51:25.640210 15504 net.cpp:454] pool2 <- norm2
I0422 07:51:25.640214 15504 net.cpp:411] pool2 -> pool2
I0422 07:51:25.640256 15504 net.cpp:150] Setting up pool2
I0422 07:51:25.640270 15504 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:51:25.640274 15504 net.cpp:165] Memory required for data: 18512256
I0422 07:51:25.640276 15504 layer_factory.hpp:77] Creating layer conv3
I0422 07:51:25.640283 15504 net.cpp:106] Creating Layer conv3
I0422 07:51:25.640287 15504 net.cpp:454] conv3 <- pool2
I0422 07:51:25.640291 15504 net.cpp:411] conv3 -> conv3
I0422 07:51:25.642575 15504 net.cpp:150] Setting up conv3
I0422 07:51:25.642592 15504 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:51:25.642594 15504 net.cpp:165] Memory required for data: 18857856
I0422 07:51:25.642603 15504 layer_factory.hpp:77] Creating layer relu3
I0422 07:51:25.642611 15504 net.cpp:106] Creating Layer relu3
I0422 07:51:25.642616 15504 net.cpp:454] relu3 <- conv3
I0422 07:51:25.642621 15504 net.cpp:397] relu3 -> conv3 (in-place)
I0422 07:51:25.642629 15504 net.cpp:150] Setting up relu3
I0422 07:51:25.642637 15504 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:51:25.642642 15504 net.cpp:165] Memory required for data: 19203456
I0422 07:51:25.642645 15504 layer_factory.hpp:77] Creating layer conv4
I0422 07:51:25.642657 15504 net.cpp:106] Creating Layer conv4
I0422 07:51:25.642668 15504 net.cpp:454] conv4 <- conv3
I0422 07:51:25.642676 15504 net.cpp:411] conv4 -> conv4
I0422 07:51:25.645970 15504 net.cpp:150] Setting up conv4
I0422 07:51:25.645987 15504 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:51:25.645990 15504 net.cpp:165] Memory required for data: 19549056
I0422 07:51:25.645998 15504 layer_factory.hpp:77] Creating layer relu4
I0422 07:51:25.646003 15504 net.cpp:106] Creating Layer relu4
I0422 07:51:25.646005 15504 net.cpp:454] relu4 <- conv4
I0422 07:51:25.646010 15504 net.cpp:397] relu4 -> conv4 (in-place)
I0422 07:51:25.646015 15504 net.cpp:150] Setting up relu4
I0422 07:51:25.646023 15504 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0422 07:51:25.646028 15504 net.cpp:165] Memory required for data: 19894656
I0422 07:51:25.646031 15504 layer_factory.hpp:77] Creating layer conv5
I0422 07:51:25.646042 15504 net.cpp:106] Creating Layer conv5
I0422 07:51:25.646047 15504 net.cpp:454] conv5 <- conv4
I0422 07:51:25.646056 15504 net.cpp:411] conv5 -> conv5
I0422 07:51:25.648351 15504 net.cpp:150] Setting up conv5
I0422 07:51:25.648370 15504 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:51:25.648373 15504 net.cpp:165] Memory required for data: 20125056
I0422 07:51:25.648382 15504 layer_factory.hpp:77] Creating layer relu5
I0422 07:51:25.648391 15504 net.cpp:106] Creating Layer relu5
I0422 07:51:25.648393 15504 net.cpp:454] relu5 <- conv5
I0422 07:51:25.648399 15504 net.cpp:397] relu5 -> conv5 (in-place)
I0422 07:51:25.648412 15504 net.cpp:150] Setting up relu5
I0422 07:51:25.648418 15504 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:51:25.648422 15504 net.cpp:165] Memory required for data: 20355456
I0422 07:51:25.648427 15504 layer_factory.hpp:77] Creating layer rpn_conv1
I0422 07:51:25.648439 15504 net.cpp:106] Creating Layer rpn_conv1
I0422 07:51:25.648452 15504 net.cpp:454] rpn_conv1 <- conv5
I0422 07:51:25.648463 15504 net.cpp:411] rpn_conv1 -> rpn_conv1
I0422 07:51:25.650069 15504 net.cpp:150] Setting up rpn_conv1
I0422 07:51:25.650087 15504 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:51:25.650090 15504 net.cpp:165] Memory required for data: 20585856
I0422 07:51:25.650096 15504 layer_factory.hpp:77] Creating layer rpn_relu1
I0422 07:51:25.650101 15504 net.cpp:106] Creating Layer rpn_relu1
I0422 07:51:25.650108 15504 net.cpp:454] rpn_relu1 <- rpn_conv1
I0422 07:51:25.650116 15504 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0422 07:51:25.650125 15504 net.cpp:150] Setting up rpn_relu1
I0422 07:51:25.650131 15504 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:51:25.650138 15504 net.cpp:165] Memory required for data: 20816256
I0422 07:51:25.650142 15504 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0422 07:51:25.650154 15504 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0422 07:51:25.650161 15504 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0422 07:51:25.650168 15504 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0422 07:51:25.650182 15504 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0422 07:51:25.650228 15504 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0422 07:51:25.650244 15504 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:51:25.650249 15504 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0422 07:51:25.650252 15504 net.cpp:165] Memory required for data: 21277056
I0422 07:51:25.650255 15504 layer_factory.hpp:77] Creating layer rpn_cls_score
I0422 07:51:25.650264 15504 net.cpp:106] Creating Layer rpn_cls_score
I0422 07:51:25.650269 15504 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0422 07:51:25.650276 15504 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0422 07:51:25.650486 15504 net.cpp:150] Setting up rpn_cls_score
I0422 07:51:25.650499 15504 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0422 07:51:25.650502 15504 net.cpp:165] Memory required for data: 21293256
I0422 07:51:25.650507 15504 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0422 07:51:25.650516 15504 net.cpp:106] Creating Layer rpn_bbox_pred
I0422 07:51:25.650521 15504 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0422 07:51:25.650527 15504 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0422 07:51:25.650739 15504 net.cpp:150] Setting up rpn_bbox_pred
I0422 07:51:25.650753 15504 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0422 07:51:25.650754 15504 net.cpp:165] Memory required for data: 21325656
I0422 07:51:25.650760 15504 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0422 07:51:25.650768 15504 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0422 07:51:25.650771 15504 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0422 07:51:25.650779 15504 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0422 07:51:25.650817 15504 net.cpp:150] Setting up rpn_cls_score_reshape
I0422 07:51:25.650832 15504 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0422 07:51:25.650835 15504 net.cpp:165] Memory required for data: 21341856
I0422 07:51:25.650837 15504 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0422 07:51:25.650846 15504 net.cpp:106] Creating Layer rpn_cls_prob
I0422 07:51:25.650849 15504 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0422 07:51:25.650854 15504 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0422 07:51:25.650926 15504 net.cpp:150] Setting up rpn_cls_prob
I0422 07:51:25.650936 15504 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0422 07:51:25.650939 15504 net.cpp:165] Memory required for data: 21358056
I0422 07:51:25.650943 15504 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0422 07:51:25.650948 15504 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0422 07:51:25.650950 15504 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0422 07:51:25.650956 15504 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0422 07:51:25.650982 15504 net.cpp:150] Setting up rpn_cls_prob_reshape
I0422 07:51:25.650997 15504 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0422 07:51:25.651001 15504 net.cpp:165] Memory required for data: 21374256
I0422 07:51:25.651006 15504 layer_factory.hpp:77] Creating layer proposal
I0422 07:51:25.652374 15504 net.cpp:106] Creating Layer proposal
I0422 07:51:25.652392 15504 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0422 07:51:25.652398 15504 net.cpp:454] proposal <- rpn_bbox_pred
I0422 07:51:25.652402 15504 net.cpp:454] proposal <- im_info
I0422 07:51:25.652408 15504 net.cpp:411] proposal -> rois
I0422 07:51:25.652416 15504 net.cpp:411] proposal -> scores
I0422 07:51:25.653707 15504 net.cpp:150] Setting up proposal
I0422 07:51:25.653728 15504 net.cpp:157] Top shape: 1 5 (5)
I0422 07:51:25.653733 15504 net.cpp:157] Top shape: 1 1 1 1 (1)
I0422 07:51:25.653735 15504 net.cpp:165] Memory required for data: 21374280
I0422 07:51:25.653739 15504 net.cpp:228] proposal does not need backward computation.
I0422 07:51:25.653744 15504 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0422 07:51:25.653749 15504 net.cpp:228] rpn_cls_prob does not need backward computation.
I0422 07:51:25.653753 15504 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0422 07:51:25.653755 15504 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0422 07:51:25.653759 15504 net.cpp:228] rpn_cls_score does not need backward computation.
I0422 07:51:25.653761 15504 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0422 07:51:25.653765 15504 net.cpp:228] rpn_relu1 does not need backward computation.
I0422 07:51:25.653769 15504 net.cpp:228] rpn_conv1 does not need backward computation.
I0422 07:51:25.653774 15504 net.cpp:228] relu5 does not need backward computation.
I0422 07:51:25.653780 15504 net.cpp:228] conv5 does not need backward computation.
I0422 07:51:25.653785 15504 net.cpp:228] relu4 does not need backward computation.
I0422 07:51:25.653789 15504 net.cpp:228] conv4 does not need backward computation.
I0422 07:51:25.653794 15504 net.cpp:228] relu3 does not need backward computation.
I0422 07:51:25.653797 15504 net.cpp:228] conv3 does not need backward computation.
I0422 07:51:25.653801 15504 net.cpp:228] pool2 does not need backward computation.
I0422 07:51:25.653806 15504 net.cpp:228] norm2 does not need backward computation.
I0422 07:51:25.653813 15504 net.cpp:228] relu2 does not need backward computation.
I0422 07:51:25.653817 15504 net.cpp:228] conv2 does not need backward computation.
I0422 07:51:25.653822 15504 net.cpp:228] pool1 does not need backward computation.
I0422 07:51:25.653826 15504 net.cpp:228] norm1 does not need backward computation.
I0422 07:51:25.653831 15504 net.cpp:228] relu1 does not need backward computation.
I0422 07:51:25.653836 15504 net.cpp:228] conv1 does not need backward computation.
I0422 07:51:25.653839 15504 net.cpp:270] This network produces output rois
I0422 07:51:25.653848 15504 net.cpp:270] This network produces output scores
I0422 07:51:25.653872 15504 net.cpp:283] Network initialization done.
I0422 07:51:26.088801 15504 net.cpp:816] Ignoring source layer input-data
I0422 07:51:26.088837 15504 net.cpp:816] Ignoring source layer data_input-data_0_split
I0422 07:51:26.088841 15504 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0422 07:51:26.088845 15504 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0422 07:51:26.090126 15504 net.cpp:816] Ignoring source layer conv3_relu3_0_split
I0422 07:51:26.092423 15504 net.cpp:816] Ignoring source layer rpn_conv2
I0422 07:51:26.092437 15504 net.cpp:816] Ignoring source layer rpn_relu2
I0422 07:51:26.092439 15504 net.cpp:816] Ignoring source layer rpn_conv2_rpn_relu2_0_split
I0422 07:51:26.092448 15504 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0422 07:51:26.092453 15504 net.cpp:816] Ignoring source layer rpn_cls_score2
I0422 07:51:26.092454 15504 net.cpp:816] Ignoring source layer rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:51:26.092466 15504 net.cpp:816] Ignoring source layer rpn_bbox_pred2
I0422 07:51:26.092470 15504 net.cpp:816] Ignoring source layer rpn_cls_score_reshape2
I0422 07:51:26.092473 15504 net.cpp:816] Ignoring source layer rpn-data
I0422 07:51:26.092476 15504 net.cpp:816] Ignoring source layer rpn-data2
I0422 07:51:26.092480 15504 net.cpp:816] Ignoring source layer rpn_loss_cls
I0422 07:51:26.092484 15504 net.cpp:816] Ignoring source layer rpn_loss_cls2
I0422 07:51:26.092489 15504 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0422 07:51:26.092492 15504 net.cpp:816] Ignoring source layer rpn_loss_bbox2
I0422 07:51:26.092495 15504 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0422 07:51:26.092499 15504 net.cpp:816] Ignoring source layer fc6
I0422 07:51:26.092504 15504 net.cpp:816] Ignoring source layer relu6
I0422 07:51:26.092507 15504 net.cpp:816] Ignoring source layer fc7
I0422 07:51:26.092511 15504 net.cpp:816] Ignoring source layer silence_fc7
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
im_proposals: 1/506 0.162s
im_proposals: 2/506 0.150s
im_proposals: 3/506 0.145s
im_proposals: 4/506 0.143s
im_proposals: 5/506 0.142s
im_proposals: 6/506 0.141s
im_proposals: 7/506 0.141s
im_proposals: 8/506 0.141s
im_proposals: 9/506 0.140s
im_proposals: 10/506 0.139s
im_proposals: 11/506 0.138s
im_proposals: 12/506 0.138s
im_proposals: 13/506 0.138s
im_proposals: 14/506 0.138s
im_proposals: 15/506 0.138s
im_proposals: 16/506 0.138s
im_proposals: 17/506 0.138s
im_proposals: 18/506 0.138s
im_proposals: 19/506 0.138s
im_proposals: 20/506 0.138s
im_proposals: 21/506 0.138s
im_proposals: 22/506 0.138s
im_proposals: 23/506 0.138s
im_proposals: 24/506 0.138s
im_proposals: 25/506 0.138s
im_proposals: 26/506 0.138s
im_proposals: 27/506 0.138s
im_proposals: 28/506 0.138s
im_proposals: 29/506 0.138s
im_proposals: 30/506 0.138s
im_proposals: 31/506 0.138s
im_proposals: 32/506 0.138s
im_proposals: 33/506 0.138s
im_proposals: 34/506 0.138s
im_proposals: 35/506 0.138s
im_proposals: 36/506 0.138s
im_proposals: 37/506 0.138s
im_proposals: 38/506 0.138s
im_proposals: 39/506 0.138s
im_proposals: 40/506 0.138s
im_proposals: 41/506 0.138s
im_proposals: 42/506 0.138s
im_proposals: 43/506 0.138s
im_proposals: 44/506 0.138s
im_proposals: 45/506 0.138s
im_proposals: 46/506 0.138s
im_proposals: 47/506 0.138s
im_proposals: 48/506 0.138s
im_proposals: 49/506 0.138s
im_proposals: 50/506 0.138s
im_proposals: 51/506 0.138s
im_proposals: 52/506 0.138s
im_proposals: 53/506 0.138s
im_proposals: 54/506 0.138s
im_proposals: 55/506 0.138s
im_proposals: 56/506 0.138s
im_proposals: 57/506 0.138s
im_proposals: 58/506 0.138s
im_proposals: 59/506 0.138s
im_proposals: 60/506 0.138s
im_proposals: 61/506 0.138s
im_proposals: 62/506 0.138s
im_proposals: 63/506 0.138s
im_proposals: 64/506 0.138s
im_proposals: 65/506 0.138s
im_proposals: 66/506 0.138s
im_proposals: 67/506 0.138s
im_proposals: 68/506 0.138s
im_proposals: 69/506 0.138s
im_proposals: 70/506 0.138s
im_proposals: 71/506 0.138s
im_proposals: 72/506 0.138s
im_proposals: 73/506 0.138s
im_proposals: 74/506 0.138s
im_proposals: 75/506 0.138s
im_proposals: 76/506 0.138s
im_proposals: 77/506 0.138s
im_proposals: 78/506 0.138s
im_proposals: 79/506 0.138s
im_proposals: 80/506 0.138s
im_proposals: 81/506 0.138s
im_proposals: 82/506 0.138s
im_proposals: 83/506 0.138s
im_proposals: 84/506 0.138s
im_proposals: 85/506 0.138s
im_proposals: 86/506 0.138s
im_proposals: 87/506 0.138s
im_proposals: 88/506 0.138s
im_proposals: 89/506 0.138s
im_proposals: 90/506 0.138s
im_proposals: 91/506 0.138s
im_proposals: 92/506 0.138s
im_proposals: 93/506 0.138s
im_proposals: 94/506 0.138s
im_proposals: 95/506 0.138s
im_proposals: 96/506 0.138s
im_proposals: 97/506 0.138s
im_proposals: 98/506 0.138s
im_proposals: 99/506 0.138s
im_proposals: 100/506 0.138s
im_proposals: 101/506 0.138s
im_proposals: 102/506 0.138s
im_proposals: 103/506 0.138s
im_proposals: 104/506 0.138s
im_proposals: 105/506 0.138s
im_proposals: 106/506 0.138s
im_proposals: 107/506 0.138s
im_proposals: 108/506 0.138s
im_proposals: 109/506 0.138s
im_proposals: 110/506 0.138s
im_proposals: 111/506 0.138s
im_proposals: 112/506 0.138s
im_proposals: 113/506 0.138s
im_proposals: 114/506 0.138s
im_proposals: 115/506 0.138s
im_proposals: 116/506 0.138s
im_proposals: 117/506 0.138s
im_proposals: 118/506 0.138s
im_proposals: 119/506 0.138s
im_proposals: 120/506 0.138s
im_proposals: 121/506 0.138s
im_proposals: 122/506 0.138s
im_proposals: 123/506 0.138s
im_proposals: 124/506 0.138s
im_proposals: 125/506 0.138s
im_proposals: 126/506 0.138s
im_proposals: 127/506 0.138s
im_proposals: 128/506 0.138s
im_proposals: 129/506 0.138s
im_proposals: 130/506 0.138s
im_proposals: 131/506 0.138s
im_proposals: 132/506 0.138s
im_proposals: 133/506 0.138s
im_proposals: 134/506 0.138s
im_proposals: 135/506 0.138s
im_proposals: 136/506 0.138s
im_proposals: 137/506 0.138s
im_proposals: 138/506 0.138s
im_proposals: 139/506 0.138s
im_proposals: 140/506 0.138s
im_proposals: 141/506 0.138s
im_proposals: 142/506 0.138s
im_proposals: 143/506 0.138s
im_proposals: 144/506 0.138s
im_proposals: 145/506 0.138s
im_proposals: 146/506 0.138s
im_proposals: 147/506 0.138s
im_proposals: 148/506 0.138s
im_proposals: 149/506 0.138s
im_proposals: 150/506 0.138s
im_proposals: 151/506 0.138s
im_proposals: 152/506 0.138s
im_proposals: 153/506 0.138s
im_proposals: 154/506 0.138s
im_proposals: 155/506 0.138s
im_proposals: 156/506 0.138s
im_proposals: 157/506 0.138s
im_proposals: 158/506 0.138s
im_proposals: 159/506 0.138s
im_proposals: 160/506 0.138s
im_proposals: 161/506 0.138s
im_proposals: 162/506 0.138s
im_proposals: 163/506 0.138s
im_proposals: 164/506 0.138s
im_proposals: 165/506 0.138s
im_proposals: 166/506 0.138s
im_proposals: 167/506 0.138s
im_proposals: 168/506 0.138s
im_proposals: 169/506 0.138s
im_proposals: 170/506 0.138s
im_proposals: 171/506 0.138s
im_proposals: 172/506 0.138s
im_proposals: 173/506 0.138s
im_proposals: 174/506 0.138s
im_proposals: 175/506 0.138s
im_proposals: 176/506 0.138s
im_proposals: 177/506 0.138s
im_proposals: 178/506 0.138s
im_proposals: 179/506 0.138s
im_proposals: 180/506 0.138s
im_proposals: 181/506 0.138s
im_proposals: 182/506 0.138s
im_proposals: 183/506 0.138s
im_proposals: 184/506 0.138s
im_proposals: 185/506 0.138s
im_proposals: 186/506 0.138s
im_proposals: 187/506 0.138s
im_proposals: 188/506 0.138s
im_proposals: 189/506 0.138s
im_proposals: 190/506 0.138s
im_proposals: 191/506 0.138s
im_proposals: 192/506 0.138s
im_proposals: 193/506 0.138s
im_proposals: 194/506 0.138s
im_proposals: 195/506 0.139s
im_proposals: 196/506 0.139s
im_proposals: 197/506 0.139s
im_proposals: 198/506 0.139s
im_proposals: 199/506 0.139s
im_proposals: 200/506 0.139s
im_proposals: 201/506 0.139s
im_proposals: 202/506 0.139s
im_proposals: 203/506 0.139s
im_proposals: 204/506 0.139s
im_proposals: 205/506 0.139s
im_proposals: 206/506 0.139s
im_proposals: 207/506 0.139s
im_proposals: 208/506 0.139s
im_proposals: 209/506 0.139s
im_proposals: 210/506 0.139s
im_proposals: 211/506 0.139s
im_proposals: 212/506 0.139s
im_proposals: 213/506 0.139s
im_proposals: 214/506 0.139s
im_proposals: 215/506 0.139s
im_proposals: 216/506 0.139s
im_proposals: 217/506 0.139s
im_proposals: 218/506 0.139s
im_proposals: 219/506 0.139s
im_proposals: 220/506 0.139s
im_proposals: 221/506 0.139s
im_proposals: 222/506 0.139s
im_proposals: 223/506 0.139s
im_proposals: 224/506 0.139s
im_proposals: 225/506 0.139s
im_proposals: 226/506 0.139s
im_proposals: 227/506 0.139s
im_proposals: 228/506 0.139s
im_proposals: 229/506 0.139s
im_proposals: 230/506 0.139s
im_proposals: 231/506 0.139s
im_proposals: 232/506 0.139s
im_proposals: 233/506 0.139s
im_proposals: 234/506 0.139s
im_proposals: 235/506 0.139s
im_proposals: 236/506 0.139s
im_proposals: 237/506 0.139s
im_proposals: 238/506 0.139s
im_proposals: 239/506 0.139s
im_proposals: 240/506 0.139s
im_proposals: 241/506 0.139s
im_proposals: 242/506 0.139s
im_proposals: 243/506 0.139s
im_proposals: 244/506 0.139s
im_proposals: 245/506 0.139s
im_proposals: 246/506 0.139s
im_proposals: 247/506 0.139s
im_proposals: 248/506 0.139s
im_proposals: 249/506 0.139s
im_proposals: 250/506 0.139s
im_proposals: 251/506 0.139s
im_proposals: 252/506 0.139s
im_proposals: 253/506 0.139s
im_proposals: 254/506 0.139s
im_proposals: 255/506 0.139s
im_proposals: 256/506 0.139s
im_proposals: 257/506 0.139s
im_proposals: 258/506 0.139s
im_proposals: 259/506 0.139s
im_proposals: 260/506 0.139s
im_proposals: 261/506 0.139s
im_proposals: 262/506 0.139s
im_proposals: 263/506 0.139s
im_proposals: 264/506 0.139s
im_proposals: 265/506 0.139s
im_proposals: 266/506 0.139s
im_proposals: 267/506 0.139s
im_proposals: 268/506 0.139s
im_proposals: 269/506 0.139s
im_proposals: 270/506 0.139s
im_proposals: 271/506 0.139s
im_proposals: 272/506 0.139s
im_proposals: 273/506 0.139s
im_proposals: 274/506 0.139s
im_proposals: 275/506 0.139s
im_proposals: 276/506 0.139s
im_proposals: 277/506 0.139s
im_proposals: 278/506 0.139s
im_proposals: 279/506 0.139s
im_proposals: 280/506 0.139s
im_proposals: 281/506 0.139s
im_proposals: 282/506 0.139s
im_proposals: 283/506 0.139s
im_proposals: 284/506 0.139s
im_proposals: 285/506 0.139s
im_proposals: 286/506 0.139s
im_proposals: 287/506 0.139s
im_proposals: 288/506 0.139s
im_proposals: 289/506 0.139s
im_proposals: 290/506 0.139s
im_proposals: 291/506 0.139s
im_proposals: 292/506 0.139s
im_proposals: 293/506 0.139s
im_proposals: 294/506 0.139s
im_proposals: 295/506 0.139s
im_proposals: 296/506 0.139s
im_proposals: 297/506 0.139s
im_proposals: 298/506 0.139s
im_proposals: 299/506 0.139s
im_proposals: 300/506 0.139s
im_proposals: 301/506 0.139s
im_proposals: 302/506 0.139s
im_proposals: 303/506 0.139s
im_proposals: 304/506 0.139s
im_proposals: 305/506 0.139s
im_proposals: 306/506 0.139s
im_proposals: 307/506 0.139s
im_proposals: 308/506 0.139s
im_proposals: 309/506 0.139s
im_proposals: 310/506 0.139s
im_proposals: 311/506 0.139s
im_proposals: 312/506 0.139s
im_proposals: 313/506 0.139s
im_proposals: 314/506 0.139s
im_proposals: 315/506 0.139s
im_proposals: 316/506 0.139s
im_proposals: 317/506 0.139s
im_proposals: 318/506 0.139s
im_proposals: 319/506 0.139s
im_proposals: 320/506 0.139s
im_proposals: 321/506 0.139s
im_proposals: 322/506 0.139s
im_proposals: 323/506 0.139s
im_proposals: 324/506 0.139s
im_proposals: 325/506 0.139s
im_proposals: 326/506 0.139s
im_proposals: 327/506 0.139s
im_proposals: 328/506 0.139s
im_proposals: 329/506 0.139s
im_proposals: 330/506 0.139s
im_proposals: 331/506 0.139s
im_proposals: 332/506 0.139s
im_proposals: 333/506 0.139s
im_proposals: 334/506 0.139s
im_proposals: 335/506 0.139s
im_proposals: 336/506 0.139s
im_proposals: 337/506 0.139s
im_proposals: 338/506 0.139s
im_proposals: 339/506 0.139s
im_proposals: 340/506 0.139s
im_proposals: 341/506 0.139s
im_proposals: 342/506 0.139s
im_proposals: 343/506 0.139s
im_proposals: 344/506 0.139s
im_proposals: 345/506 0.139s
im_proposals: 346/506 0.139s
im_proposals: 347/506 0.139s
im_proposals: 348/506 0.139s
im_proposals: 349/506 0.139s
im_proposals: 350/506 0.139s
im_proposals: 351/506 0.139s
im_proposals: 352/506 0.139s
im_proposals: 353/506 0.139s
im_proposals: 354/506 0.139s
im_proposals: 355/506 0.139s
im_proposals: 356/506 0.139s
im_proposals: 357/506 0.139s
im_proposals: 358/506 0.139s
im_proposals: 359/506 0.139s
im_proposals: 360/506 0.139s
im_proposals: 361/506 0.139s
im_proposals: 362/506 0.139s
im_proposals: 363/506 0.139s
im_proposals: 364/506 0.139s
im_proposals: 365/506 0.139s
im_proposals: 366/506 0.139s
im_proposals: 367/506 0.139s
im_proposals: 368/506 0.139s
im_proposals: 369/506 0.139s
im_proposals: 370/506 0.139s
im_proposals: 371/506 0.139s
im_proposals: 372/506 0.139s
im_proposals: 373/506 0.139s
im_proposals: 374/506 0.139s
im_proposals: 375/506 0.139s
im_proposals: 376/506 0.139s
im_proposals: 377/506 0.139s
im_proposals: 378/506 0.139s
im_proposals: 379/506 0.139s
im_proposals: 380/506 0.139s
im_proposals: 381/506 0.139s
im_proposals: 382/506 0.139s
im_proposals: 383/506 0.139s
im_proposals: 384/506 0.139s
im_proposals: 385/506 0.139s
im_proposals: 386/506 0.139s
im_proposals: 387/506 0.139s
im_proposals: 388/506 0.139s
im_proposals: 389/506 0.139s
im_proposals: 390/506 0.139s
im_proposals: 391/506 0.139s
im_proposals: 392/506 0.139s
im_proposals: 393/506 0.139s
im_proposals: 394/506 0.139s
im_proposals: 395/506 0.139s
im_proposals: 396/506 0.139s
im_proposals: 397/506 0.139s
im_proposals: 398/506 0.139s
im_proposals: 399/506 0.139s
im_proposals: 400/506 0.139s
im_proposals: 401/506 0.139s
im_proposals: 402/506 0.139s
im_proposals: 403/506 0.139s
im_proposals: 404/506 0.139s
im_proposals: 405/506 0.139s
im_proposals: 406/506 0.139s
im_proposals: 407/506 0.139s
im_proposals: 408/506 0.139s
im_proposals: 409/506 0.139s
im_proposals: 410/506 0.139s
im_proposals: 411/506 0.139s
im_proposals: 412/506 0.139s
im_proposals: 413/506 0.139s
im_proposals: 414/506 0.139s
im_proposals: 415/506 0.139s
im_proposals: 416/506 0.139s
im_proposals: 417/506 0.139s
im_proposals: 418/506 0.139s
im_proposals: 419/506 0.139s
im_proposals: 420/506 0.139s
im_proposals: 421/506 0.139s
im_proposals: 422/506 0.139s
im_proposals: 423/506 0.139s
im_proposals: 424/506 0.139s
im_proposals: 425/506 0.139s
im_proposals: 426/506 0.139s
im_proposals: 427/506 0.139s
im_proposals: 428/506 0.139s
im_proposals: 429/506 0.139s
im_proposals: 430/506 0.139s
im_proposals: 431/506 0.139s
im_proposals: 432/506 0.139s
im_proposals: 433/506 0.139s
im_proposals: 434/506 0.139s
im_proposals: 435/506 0.139s
im_proposals: 436/506 0.139s
im_proposals: 437/506 0.139s
im_proposals: 438/506 0.139s
im_proposals: 439/506 0.139s
im_proposals: 440/506 0.139s
im_proposals: 441/506 0.139s
im_proposals: 442/506 0.139s
im_proposals: 443/506 0.139s
im_proposals: 444/506 0.139s
im_proposals: 445/506 0.139s
im_proposals: 446/506 0.139s
im_proposals: 447/506 0.139s
im_proposals: 448/506 0.139s
im_proposals: 449/506 0.139s
im_proposals: 450/506 0.139s
im_proposals: 451/506 0.139s
im_proposals: 452/506 0.139s
im_proposals: 453/506 0.139s
im_proposals: 454/506 0.139s
im_proposals: 455/506 0.139s
im_proposals: 456/506 0.139s
im_proposals: 457/506 0.139s
im_proposals: 458/506 0.139s
im_proposals: 459/506 0.139s
im_proposals: 460/506 0.139s
im_proposals: 461/506 0.139s
im_proposals: 462/506 0.139s
im_proposals: 463/506 0.139s
im_proposals: 464/506 0.139s
im_proposals: 465/506 0.139s
im_proposals: 466/506 0.139s
im_proposals: 467/506 0.139s
im_proposals: 468/506 0.139s
im_proposals: 469/506 0.139s
im_proposals: 470/506 0.139s
im_proposals: 471/506 0.139s
im_proposals: 472/506 0.139s
im_proposals: 473/506 0.139s
im_proposals: 474/506 0.139s
im_proposals: 475/506 0.139s
im_proposals: 476/506 0.139s
im_proposals: 477/506 0.139s
im_proposals: 478/506 0.139s
im_proposals: 479/506 0.139s
im_proposals: 480/506 0.139s
im_proposals: 481/506 0.139s
im_proposals: 482/506 0.139s
im_proposals: 483/506 0.139s
im_proposals: 484/506 0.139s
im_proposals: 485/506 0.139s
im_proposals: 486/506 0.139s
im_proposals: 487/506 0.139s
im_proposals: 488/506 0.139s
im_proposals: 489/506 0.139s
im_proposals: 490/506 0.139s
im_proposals: 491/506 0.139s
im_proposals: 492/506 0.139s
im_proposals: 493/506 0.139s
im_proposals: 494/506 0.139s
im_proposals: 495/506 0.139s
im_proposals: 496/506 0.139s
im_proposals: 497/506 0.139s
im_proposals: 498/506 0.139s
im_proposals: 499/506 0.139s
im_proposals: 500/506 0.139s
im_proposals: 501/506 0.139s
im_proposals: 502/506 0.139s
im_proposals: 503/506 0.139s
im_proposals: 504/506 0.139s
im_proposals: 505/506 0.139s
im_proposals: 506/506 0.139s
Wrote RPN proposals to /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_40_proposals.pkl
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Stage 2 Fast R-CNN, init from stage 2 RPN R-CNN model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Init model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_40.caffemodel
RPN proposals: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_40_proposals.pkl
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'rpn',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': 'stage2',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: rpn
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /mnt/sdf/traffic-sign-detection/data/cache/voc_2007_trainval_gt_roidb.pkl
loading /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_40_proposals.pkl
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:182: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(M) != 2:
/usr/lib/python2.7/dist-packages/scipy/sparse/coo.py:200: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.row) != 1 or np.rank(self.col) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/compressed.py:130: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(self.data) != 1 or np.rank(self.indices) != 1 or np.rank(self.indptr) != 1:
/usr/lib/python2.7/dist-packages/scipy/sparse/construct.py:502: VisibleDeprecationWarning: `rank` is deprecated; use the `ndim` attribute or function instead. To find the rank of a matrix see `numpy.linalg.matrix_rank`.
  if np.rank(blocks) != 2:
done
Preparing training data...
done
Output will be saved to `/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval`
Filtered 0 roidb entries: 1012 -> 1012
Computing bounding-box regression targets...
bbox target means:
[[  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   1.68710783e-02  -3.30368787e-02   1.17172243e-04]
 [  5.82076609e-10   6.69099255e-03   2.84357916e-03  -1.47018011e-02]
 [  2.47595514e-08   3.31199521e-03   2.84638007e-02  -2.21049672e-02]
 [  1.87428668e-08   4.55629431e-03  -2.92179262e-03  -1.66180013e-02]
 [  5.43108112e-08   3.46445594e-03   3.04700400e-02  -4.97489475e-02]
 [  1.03255329e-08   2.59693627e-03   3.19595919e-02  -5.51632342e-02]
 [  7.56520491e-08  -2.54614651e-02  -6.40440288e-03  -7.62147757e-02]
 [  5.06639481e-09   2.81147122e-03   1.89873056e-02  -7.93506968e-02]
 [  8.80238836e-09   1.21240574e-04   1.70833533e-02  -5.23313986e-02]
 [  9.79219164e-09  -1.12033529e-04   9.28299235e-03  -1.04515424e-02]
 [ -2.34289342e-08   4.79387654e-03   2.21032927e-02  -4.65121195e-02]
 [  2.90572643e-08  -1.05740501e-02   1.13301466e-02  -1.34886577e-02]
 [ -2.47368362e-08   1.11989615e-02   4.13555535e-02   1.06794924e-02]
 [  2.49543419e-08  -4.72288423e-03   2.68667196e-02  -2.90150950e-02]
 [ -4.71870104e-08  -1.48036679e-02   4.66663350e-02  -2.16600389e-02]
 [  5.10675212e-08   7.85729910e-03   5.41366736e-02  -1.76320324e-02]
 [  4.85219061e-08   3.02565403e-02   9.00731474e-02   6.11765787e-02]
 [ -4.65661287e-09  -2.12768625e-05  -7.53411278e-03  -1.98921503e-02]
 [ -6.18307329e-08   1.21940024e-02   2.98554311e-02  -5.72459620e-02]
 [  0.00000000e+00  -5.16927789e-02   3.02709142e-02   1.12039795e-01]
 [  3.02679837e-08  -3.08434237e-02   5.26351382e-02  -1.30732673e-02]
 [  2.81466378e-08  -4.67885037e-03   1.05465925e-01   2.65570556e-02]
 [  4.97834249e-08   7.99526342e-03   5.71931492e-03  -4.16414629e-02]
 [  5.78661760e-08   8.03590678e-03   1.39917548e-02   1.54543519e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -2.22186957e-08  -3.42442787e-03   1.60693391e-02  -5.06549796e-02]
 [  5.03787305e-08   1.08441277e-02   1.01601863e-02  -8.95301439e-03]
 [ -4.96705373e-08  -8.89197489e-03  -8.01166836e-02  -9.94618299e-02]
 [  0.00000000e+00   2.44240162e-02   7.83869770e-02  -7.89494164e-02]
 [ -1.05549892e-07  -1.66304279e-02   1.05888779e-01   2.46656487e-02]
 [ -2.18658344e-09  -4.24985914e-03   2.40161591e-02  -1.12133846e-01]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [  6.68223947e-08   3.09872208e-03   5.71372453e-03  -1.58323124e-02]
 [ -1.27038220e-08   2.13929947e-02   1.29327457e-02  -7.94831663e-03]
 [  3.64250607e-08  -8.71365869e-03   1.86010040e-02  -3.68683040e-03]
 [ -2.34161104e-08  -1.67735803e-02  -4.20901062e-02   2.31933030e-02]
 [  0.00000000e+00   0.00000000e+00   0.00000000e+00   0.00000000e+00]
 [ -3.86757569e-09   9.85648017e-03  -5.77962414e-04   2.47411714e-04]
 [  0.00000000e+00   2.12710425e-02   4.26677585e-02  -2.50989884e-02]
 [  4.88944352e-08  -2.34486349e-02   9.93138831e-03  -5.19328341e-02]
 [  0.00000000e+00   1.88517932e-02   2.73352159e-02  -3.20451494e-02]
 [ -1.19209290e-07  -3.69381422e-02   3.35844208e-02   4.41981479e-02]]
[  5.33853738e-09  -6.85712683e-04   2.05155063e-02  -1.87259235e-02]
bbox target stdevs:
[[ 0.          0.          0.          0.        ]
 [ 0.02679483  0.03374216  0.06607376  0.00023434]
 [ 0.06189927  0.06367952  0.13034584  0.12680506]
 [ 0.08116217  0.06529874  0.1401593   0.12801401]
 [ 0.06981103  0.07418925  0.14616291  0.18540773]
 [ 0.08382023  0.04390737  0.13154093  0.11694279]
 [ 0.0753327   0.04823729  0.11597141  0.13939658]
 [ 0.08413285  0.0534282   0.08074858  0.16048948]
 [ 0.05231561  0.08315516  0.10328458  0.19568695]
 [ 0.07643327  0.05614196  0.13411207  0.11446848]
 [ 0.05993547  0.02347546  0.0598994   0.05095834]
 [ 0.08346822  0.0496103   0.11739939  0.12834395]
 [ 0.08019105  0.10319113  0.12002202  0.15434267]
 [ 0.0828459   0.07546395  0.14456142  0.15799122]
 [ 0.06164863  0.07054995  0.11036953  0.14544024]
 [ 0.11045893  0.06965287  0.15921739  0.11122476]
 [ 0.01904022  0.02368701  0.13545902  0.13516061]
 [ 0.09476365  0.06933689  0.147141    0.11428556]
 [ 0.04958471  0.01870255  0.04947915  0.10302591]
 [ 0.07965198  0.07269744  0.13400061  0.14231555]
 [ 0.05122118  0.07310463  0.04280954  0.15844819]
 [ 0.0788365   0.05486521  0.10185892  0.07234224]
 [ 0.10863582  0.10529436  0.13787835  0.13760214]
 [ 0.04838825  0.0729763   0.01610613  0.0889922 ]
 [ 0.05650753  0.02310301  0.04229948  0.14864995]
 [ 0.          0.          0.          0.        ]
 [ 0.06066956  0.09206671  0.12392684  0.17235912]
 [ 0.07007894  0.06012093  0.16431266  0.14240072]
 [ 0.08818337  0.09002478  0.13599766  0.15605607]
 [ 0.0928847   0.06381074  0.12574614  0.15696484]
 [ 0.09906729  0.0626073   0.14982813  0.03490935]
 [ 0.05273189  0.09604382  0.15675381  0.18954964]
 [ 0.          0.          0.          0.        ]
 [ 0.          0.          0.          0.        ]
 [ 0.06190309  0.06645256  0.04426227  0.06634199]
 [ 0.04418086  0.06488155  0.04454545  0.11275909]
 [ 0.05512852  0.04003556  0.06807117  0.09974621]
 [ 0.10231337  0.06389691  0.14912324  0.20500382]
 [ 0.          0.          0.          0.        ]
 [ 0.06520075  0.07074509  0.0869309   0.12915807]
 [ 0.00327441  0.04254209  0.08533552  0.05019798]
 [ 0.03722284  0.06203926  0.02627598  0.13740137]
 [ 0.01369279  0.04617727  0.06695733  0.07849427]
 [ 0.08253625  0.06994077  0.12682035  0.09008777]]
[ 0.06060346  0.05625293  0.09585554  0.11251161]
Normalizing targets
/mnt/sdf/traffic-sign-detection/tools/../lib/roi_data_layer/roidb.py:101: RuntimeWarning: invalid value encountered in divide
  roidb[im_i]['bbox_targets'][cls_inds, 1:] /= stds[cls, :]
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0422 07:53:00.782732 15515 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 30000
snapshot: 0
snapshot_prefix: "zf_fast_rcnn"
average_loss: 100
I0422 07:53:00.782793 15515 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/ZF/faster_rcnn_alt_opt/stage2_fast_rcnn_train.pt
I0422 07:53:00.783648 15515 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 44"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 44
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 176
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "silence_rpn_cls_score"
  type: "Silence"
  bottom: "rpn_cls_score"
}
layer {
  name: "silence_rpn_bbox_pred"
  type: "Silence"
  bottom: "rpn_bbox_pred"
}
I0422 07:53:00.783851 15515 layer_factory.hpp:77] Creating layer data
I0422 07:53:00.784479 15515 net.cpp:106] Creating Layer data
I0422 07:53:00.784503 15515 net.cpp:411] data -> data
I0422 07:53:00.784528 15515 net.cpp:411] data -> rois
I0422 07:53:00.784540 15515 net.cpp:411] data -> labels
I0422 07:53:00.784549 15515 net.cpp:411] data -> bbox_targets
I0422 07:53:00.784557 15515 net.cpp:411] data -> bbox_inside_weights
I0422 07:53:00.784569 15515 net.cpp:411] data -> bbox_outside_weights
RoiDataLayer: name_to_top: {'bbox_inside_weights': 4, 'labels': 2, 'rois': 1, 'bbox_targets': 3, 'bbox_outside_weights': 5, 'data': 0}
I0422 07:53:00.800011 15515 net.cpp:150] Setting up data
I0422 07:53:00.800035 15515 net.cpp:157] Top shape: 2 3 600 1000 (3600000)
I0422 07:53:00.800043 15515 net.cpp:157] Top shape: 1 5 (5)
I0422 07:53:00.800050 15515 net.cpp:157] Top shape: 1 (1)
I0422 07:53:00.800058 15515 net.cpp:157] Top shape: 1 176 (176)
I0422 07:53:00.800065 15515 net.cpp:157] Top shape: 1 176 (176)
I0422 07:53:00.800070 15515 net.cpp:157] Top shape: 1 176 (176)
I0422 07:53:00.800073 15515 net.cpp:165] Memory required for data: 14402136
I0422 07:53:00.800079 15515 layer_factory.hpp:77] Creating layer conv1
I0422 07:53:00.800099 15515 net.cpp:106] Creating Layer conv1
I0422 07:53:00.800110 15515 net.cpp:454] conv1 <- data
I0422 07:53:00.800123 15515 net.cpp:411] conv1 -> conv1
I0422 07:53:00.801461 15515 net.cpp:150] Setting up conv1
I0422 07:53:00.801481 15515 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0422 07:53:00.801486 15515 net.cpp:165] Memory required for data: 129602136
I0422 07:53:00.801506 15515 layer_factory.hpp:77] Creating layer relu1
I0422 07:53:00.801527 15515 net.cpp:106] Creating Layer relu1
I0422 07:53:00.801532 15515 net.cpp:454] relu1 <- conv1
I0422 07:53:00.801540 15515 net.cpp:397] relu1 -> conv1 (in-place)
I0422 07:53:00.801556 15515 net.cpp:150] Setting up relu1
I0422 07:53:00.801563 15515 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0422 07:53:00.801568 15515 net.cpp:165] Memory required for data: 244802136
I0422 07:53:00.801576 15515 layer_factory.hpp:77] Creating layer norm1
I0422 07:53:00.801584 15515 net.cpp:106] Creating Layer norm1
I0422 07:53:00.801589 15515 net.cpp:454] norm1 <- conv1
I0422 07:53:00.801599 15515 net.cpp:411] norm1 -> norm1
I0422 07:53:00.801717 15515 net.cpp:150] Setting up norm1
I0422 07:53:00.801731 15515 net.cpp:157] Top shape: 2 96 300 500 (28800000)
I0422 07:53:00.801736 15515 net.cpp:165] Memory required for data: 360002136
I0422 07:53:00.801740 15515 layer_factory.hpp:77] Creating layer pool1
I0422 07:53:00.801753 15515 net.cpp:106] Creating Layer pool1
I0422 07:53:00.801758 15515 net.cpp:454] pool1 <- norm1
I0422 07:53:00.801769 15515 net.cpp:411] pool1 -> pool1
I0422 07:53:00.801817 15515 net.cpp:150] Setting up pool1
I0422 07:53:00.801832 15515 net.cpp:157] Top shape: 2 96 151 251 (7276992)
I0422 07:53:00.801836 15515 net.cpp:165] Memory required for data: 389110104
I0422 07:53:00.801841 15515 layer_factory.hpp:77] Creating layer conv2
I0422 07:53:00.801851 15515 net.cpp:106] Creating Layer conv2
I0422 07:53:00.801856 15515 net.cpp:454] conv2 <- pool1
I0422 07:53:00.801867 15515 net.cpp:411] conv2 -> conv2
I0422 07:53:00.803552 15515 net.cpp:150] Setting up conv2
I0422 07:53:00.803571 15515 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0422 07:53:00.803575 15515 net.cpp:165] Memory required for data: 408721752
I0422 07:53:00.803588 15515 layer_factory.hpp:77] Creating layer relu2
I0422 07:53:00.803599 15515 net.cpp:106] Creating Layer relu2
I0422 07:53:00.803606 15515 net.cpp:454] relu2 <- conv2
I0422 07:53:00.803616 15515 net.cpp:397] relu2 -> conv2 (in-place)
I0422 07:53:00.803624 15515 net.cpp:150] Setting up relu2
I0422 07:53:00.803630 15515 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0422 07:53:00.803635 15515 net.cpp:165] Memory required for data: 428333400
I0422 07:53:00.803639 15515 layer_factory.hpp:77] Creating layer norm2
I0422 07:53:00.803650 15515 net.cpp:106] Creating Layer norm2
I0422 07:53:00.803660 15515 net.cpp:454] norm2 <- conv2
I0422 07:53:00.803668 15515 net.cpp:411] norm2 -> norm2
I0422 07:53:00.803756 15515 net.cpp:150] Setting up norm2
I0422 07:53:00.803769 15515 net.cpp:157] Top shape: 2 256 76 126 (4902912)
I0422 07:53:00.803774 15515 net.cpp:165] Memory required for data: 447945048
I0422 07:53:00.803778 15515 layer_factory.hpp:77] Creating layer pool2
I0422 07:53:00.803789 15515 net.cpp:106] Creating Layer pool2
I0422 07:53:00.803794 15515 net.cpp:454] pool2 <- norm2
I0422 07:53:00.803803 15515 net.cpp:411] pool2 -> pool2
I0422 07:53:00.803844 15515 net.cpp:150] Setting up pool2
I0422 07:53:00.803855 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.803859 15515 net.cpp:165] Memory required for data: 453056856
I0422 07:53:00.803864 15515 layer_factory.hpp:77] Creating layer conv3
I0422 07:53:00.803874 15515 net.cpp:106] Creating Layer conv3
I0422 07:53:00.803879 15515 net.cpp:454] conv3 <- pool2
I0422 07:53:00.803885 15515 net.cpp:411] conv3 -> conv3
I0422 07:53:00.807190 15515 net.cpp:150] Setting up conv3
I0422 07:53:00.807209 15515 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:53:00.807214 15515 net.cpp:165] Memory required for data: 460724568
I0422 07:53:00.807227 15515 layer_factory.hpp:77] Creating layer relu3
I0422 07:53:00.807235 15515 net.cpp:106] Creating Layer relu3
I0422 07:53:00.807241 15515 net.cpp:454] relu3 <- conv3
I0422 07:53:00.807248 15515 net.cpp:397] relu3 -> conv3 (in-place)
I0422 07:53:00.807262 15515 net.cpp:150] Setting up relu3
I0422 07:53:00.807268 15515 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:53:00.807272 15515 net.cpp:165] Memory required for data: 468392280
I0422 07:53:00.807276 15515 layer_factory.hpp:77] Creating layer conv4
I0422 07:53:00.807289 15515 net.cpp:106] Creating Layer conv4
I0422 07:53:00.807296 15515 net.cpp:454] conv4 <- conv3
I0422 07:53:00.807306 15515 net.cpp:411] conv4 -> conv4
I0422 07:53:00.810588 15515 net.cpp:150] Setting up conv4
I0422 07:53:00.810607 15515 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:53:00.810612 15515 net.cpp:165] Memory required for data: 476059992
I0422 07:53:00.810621 15515 layer_factory.hpp:77] Creating layer relu4
I0422 07:53:00.810632 15515 net.cpp:106] Creating Layer relu4
I0422 07:53:00.810637 15515 net.cpp:454] relu4 <- conv4
I0422 07:53:00.810650 15515 net.cpp:397] relu4 -> conv4 (in-place)
I0422 07:53:00.810659 15515 net.cpp:150] Setting up relu4
I0422 07:53:00.810667 15515 net.cpp:157] Top shape: 2 384 39 64 (1916928)
I0422 07:53:00.810672 15515 net.cpp:165] Memory required for data: 483727704
I0422 07:53:00.810679 15515 layer_factory.hpp:77] Creating layer conv5
I0422 07:53:00.810691 15515 net.cpp:106] Creating Layer conv5
I0422 07:53:00.810696 15515 net.cpp:454] conv5 <- conv4
I0422 07:53:00.810703 15515 net.cpp:411] conv5 -> conv5
I0422 07:53:00.812995 15515 net.cpp:150] Setting up conv5
I0422 07:53:00.813014 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.813019 15515 net.cpp:165] Memory required for data: 488839512
I0422 07:53:00.813035 15515 layer_factory.hpp:77] Creating layer relu5
I0422 07:53:00.813043 15515 net.cpp:106] Creating Layer relu5
I0422 07:53:00.813055 15515 net.cpp:454] relu5 <- conv5
I0422 07:53:00.813062 15515 net.cpp:397] relu5 -> conv5 (in-place)
I0422 07:53:00.813071 15515 net.cpp:150] Setting up relu5
I0422 07:53:00.813077 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.813081 15515 net.cpp:165] Memory required for data: 493951320
I0422 07:53:00.813086 15515 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0422 07:53:00.813097 15515 net.cpp:106] Creating Layer conv5_relu5_0_split
I0422 07:53:00.813102 15515 net.cpp:454] conv5_relu5_0_split <- conv5
I0422 07:53:00.813114 15515 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0422 07:53:00.813124 15515 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0422 07:53:00.813174 15515 net.cpp:150] Setting up conv5_relu5_0_split
I0422 07:53:00.813185 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.813195 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.813199 15515 net.cpp:165] Memory required for data: 504174936
I0422 07:53:00.813205 15515 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0422 07:53:00.813216 15515 net.cpp:106] Creating Layer roi_pool_conv5
I0422 07:53:00.813227 15515 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_0
I0422 07:53:00.813235 15515 net.cpp:454] roi_pool_conv5 <- rois
I0422 07:53:00.813244 15515 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0422 07:53:00.813257 15515 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0422 07:53:00.813315 15515 net.cpp:150] Setting up roi_pool_conv5
I0422 07:53:00.813328 15515 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0422 07:53:00.813333 15515 net.cpp:165] Memory required for data: 504211800
I0422 07:53:00.813338 15515 layer_factory.hpp:77] Creating layer fc6
I0422 07:53:00.813349 15515 net.cpp:106] Creating Layer fc6
I0422 07:53:00.813354 15515 net.cpp:454] fc6 <- roi_pool_conv5
I0422 07:53:00.813361 15515 net.cpp:411] fc6 -> fc6
I0422 07:53:00.911092 15515 net.cpp:150] Setting up fc6
I0422 07:53:00.911136 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.911142 15515 net.cpp:165] Memory required for data: 504228184
I0422 07:53:00.911156 15515 layer_factory.hpp:77] Creating layer relu6
I0422 07:53:00.911170 15515 net.cpp:106] Creating Layer relu6
I0422 07:53:00.911176 15515 net.cpp:454] relu6 <- fc6
I0422 07:53:00.911185 15515 net.cpp:397] relu6 -> fc6 (in-place)
I0422 07:53:00.911196 15515 net.cpp:150] Setting up relu6
I0422 07:53:00.911208 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.911212 15515 net.cpp:165] Memory required for data: 504244568
I0422 07:53:00.911217 15515 layer_factory.hpp:77] Creating layer drop6
I0422 07:53:00.911232 15515 net.cpp:106] Creating Layer drop6
I0422 07:53:00.911239 15515 net.cpp:454] drop6 <- fc6
I0422 07:53:00.911247 15515 net.cpp:397] drop6 -> fc6 (in-place)
I0422 07:53:00.911283 15515 net.cpp:150] Setting up drop6
I0422 07:53:00.911296 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.911300 15515 net.cpp:165] Memory required for data: 504260952
I0422 07:53:00.911305 15515 layer_factory.hpp:77] Creating layer fc7
I0422 07:53:00.911316 15515 net.cpp:106] Creating Layer fc7
I0422 07:53:00.911320 15515 net.cpp:454] fc7 <- fc6
I0422 07:53:00.911334 15515 net.cpp:411] fc7 -> fc7
I0422 07:53:00.954900 15515 net.cpp:150] Setting up fc7
I0422 07:53:00.954942 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.954947 15515 net.cpp:165] Memory required for data: 504277336
I0422 07:53:00.954962 15515 layer_factory.hpp:77] Creating layer relu7
I0422 07:53:00.954975 15515 net.cpp:106] Creating Layer relu7
I0422 07:53:00.954982 15515 net.cpp:454] relu7 <- fc7
I0422 07:53:00.954993 15515 net.cpp:397] relu7 -> fc7 (in-place)
I0422 07:53:00.955005 15515 net.cpp:150] Setting up relu7
I0422 07:53:00.955010 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.955014 15515 net.cpp:165] Memory required for data: 504293720
I0422 07:53:00.955018 15515 layer_factory.hpp:77] Creating layer drop7
I0422 07:53:00.955027 15515 net.cpp:106] Creating Layer drop7
I0422 07:53:00.955031 15515 net.cpp:454] drop7 <- fc7
I0422 07:53:00.955040 15515 net.cpp:397] drop7 -> fc7 (in-place)
I0422 07:53:00.955077 15515 net.cpp:150] Setting up drop7
I0422 07:53:00.955085 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.955090 15515 net.cpp:165] Memory required for data: 504310104
I0422 07:53:00.955094 15515 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0422 07:53:00.955103 15515 net.cpp:106] Creating Layer fc7_drop7_0_split
I0422 07:53:00.955107 15515 net.cpp:454] fc7_drop7_0_split <- fc7
I0422 07:53:00.955117 15515 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0422 07:53:00.955127 15515 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0422 07:53:00.955179 15515 net.cpp:150] Setting up fc7_drop7_0_split
I0422 07:53:00.955193 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.955199 15515 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:00.955202 15515 net.cpp:165] Memory required for data: 504342872
I0422 07:53:00.955207 15515 layer_factory.hpp:77] Creating layer cls_score
I0422 07:53:00.955219 15515 net.cpp:106] Creating Layer cls_score
I0422 07:53:00.955226 15515 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0422 07:53:00.955235 15515 net.cpp:411] cls_score -> cls_score
I0422 07:53:00.960808 15515 net.cpp:150] Setting up cls_score
I0422 07:53:00.960826 15515 net.cpp:157] Top shape: 1 44 (44)
I0422 07:53:00.960831 15515 net.cpp:165] Memory required for data: 504343048
I0422 07:53:00.960840 15515 layer_factory.hpp:77] Creating layer bbox_pred
I0422 07:53:00.960855 15515 net.cpp:106] Creating Layer bbox_pred
I0422 07:53:00.960865 15515 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0422 07:53:00.960875 15515 net.cpp:411] bbox_pred -> bbox_pred
I0422 07:53:00.981489 15515 net.cpp:150] Setting up bbox_pred
I0422 07:53:00.981506 15515 net.cpp:157] Top shape: 1 176 (176)
I0422 07:53:00.981511 15515 net.cpp:165] Memory required for data: 504343752
I0422 07:53:00.981531 15515 layer_factory.hpp:77] Creating layer loss_cls
I0422 07:53:00.981551 15515 net.cpp:106] Creating Layer loss_cls
I0422 07:53:00.981557 15515 net.cpp:454] loss_cls <- cls_score
I0422 07:53:00.981564 15515 net.cpp:454] loss_cls <- labels
I0422 07:53:00.981580 15515 net.cpp:411] loss_cls -> cls_loss
I0422 07:53:00.981600 15515 layer_factory.hpp:77] Creating layer loss_cls
I0422 07:53:00.981695 15515 net.cpp:150] Setting up loss_cls
I0422 07:53:00.981709 15515 net.cpp:157] Top shape: (1)
I0422 07:53:00.981714 15515 net.cpp:160]     with loss weight 1
I0422 07:53:00.981734 15515 net.cpp:165] Memory required for data: 504343756
I0422 07:53:00.981739 15515 layer_factory.hpp:77] Creating layer loss_bbox
I0422 07:53:00.981750 15515 net.cpp:106] Creating Layer loss_bbox
I0422 07:53:00.981757 15515 net.cpp:454] loss_bbox <- bbox_pred
I0422 07:53:00.981763 15515 net.cpp:454] loss_bbox <- bbox_targets
I0422 07:53:00.981770 15515 net.cpp:454] loss_bbox <- bbox_inside_weights
I0422 07:53:00.981775 15515 net.cpp:454] loss_bbox <- bbox_outside_weights
I0422 07:53:00.981781 15515 net.cpp:411] loss_bbox -> bbox_loss
I0422 07:53:00.981866 15515 net.cpp:150] Setting up loss_bbox
I0422 07:53:00.981878 15515 net.cpp:157] Top shape: (1)
I0422 07:53:00.981883 15515 net.cpp:160]     with loss weight 1
I0422 07:53:00.981890 15515 net.cpp:165] Memory required for data: 504343760
I0422 07:53:00.981895 15515 layer_factory.hpp:77] Creating layer rpn_conv1
I0422 07:53:00.981912 15515 net.cpp:106] Creating Layer rpn_conv1
I0422 07:53:00.981922 15515 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_1
I0422 07:53:00.981931 15515 net.cpp:411] rpn_conv1 -> rpn_conv1
I0422 07:53:00.998983 15515 net.cpp:150] Setting up rpn_conv1
I0422 07:53:00.999003 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.999008 15515 net.cpp:165] Memory required for data: 509455568
I0422 07:53:00.999017 15515 layer_factory.hpp:77] Creating layer rpn_relu1
I0422 07:53:00.999028 15515 net.cpp:106] Creating Layer rpn_relu1
I0422 07:53:00.999034 15515 net.cpp:454] rpn_relu1 <- rpn_conv1
I0422 07:53:00.999042 15515 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0422 07:53:00.999052 15515 net.cpp:150] Setting up rpn_relu1
I0422 07:53:00.999060 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.999065 15515 net.cpp:165] Memory required for data: 514567376
I0422 07:53:00.999069 15515 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0422 07:53:00.999078 15515 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0422 07:53:00.999081 15515 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0422 07:53:00.999089 15515 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0422 07:53:00.999099 15515 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0422 07:53:00.999150 15515 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0422 07:53:00.999164 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.999171 15515 net.cpp:157] Top shape: 2 256 39 64 (1277952)
I0422 07:53:00.999174 15515 net.cpp:165] Memory required for data: 524790992
I0422 07:53:00.999179 15515 layer_factory.hpp:77] Creating layer rpn_cls_score
I0422 07:53:00.999195 15515 net.cpp:106] Creating Layer rpn_cls_score
I0422 07:53:00.999212 15515 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0422 07:53:00.999222 15515 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0422 07:53:00.999564 15515 net.cpp:150] Setting up rpn_cls_score
I0422 07:53:00.999578 15515 net.cpp:157] Top shape: 2 18 39 64 (89856)
I0422 07:53:00.999583 15515 net.cpp:165] Memory required for data: 525150416
I0422 07:53:00.999591 15515 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0422 07:53:00.999614 15515 net.cpp:106] Creating Layer rpn_bbox_pred
I0422 07:53:00.999624 15515 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0422 07:53:00.999636 15515 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0422 07:53:01.000098 15515 net.cpp:150] Setting up rpn_bbox_pred
I0422 07:53:01.000113 15515 net.cpp:157] Top shape: 2 36 39 64 (179712)
I0422 07:53:01.000118 15515 net.cpp:165] Memory required for data: 525869264
I0422 07:53:01.000126 15515 layer_factory.hpp:77] Creating layer silence_rpn_cls_score
I0422 07:53:01.000139 15515 net.cpp:106] Creating Layer silence_rpn_cls_score
I0422 07:53:01.000146 15515 net.cpp:454] silence_rpn_cls_score <- rpn_cls_score
I0422 07:53:01.000154 15515 net.cpp:150] Setting up silence_rpn_cls_score
I0422 07:53:01.000159 15515 net.cpp:165] Memory required for data: 525869264
I0422 07:53:01.000162 15515 layer_factory.hpp:77] Creating layer silence_rpn_bbox_pred
I0422 07:53:01.000171 15515 net.cpp:106] Creating Layer silence_rpn_bbox_pred
I0422 07:53:01.000176 15515 net.cpp:454] silence_rpn_bbox_pred <- rpn_bbox_pred
I0422 07:53:01.000182 15515 net.cpp:150] Setting up silence_rpn_bbox_pred
I0422 07:53:01.000186 15515 net.cpp:165] Memory required for data: 525869264
I0422 07:53:01.000190 15515 net.cpp:228] silence_rpn_bbox_pred does not need backward computation.
I0422 07:53:01.000195 15515 net.cpp:228] silence_rpn_cls_score does not need backward computation.
I0422 07:53:01.000200 15515 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0422 07:53:01.000203 15515 net.cpp:228] rpn_cls_score does not need backward computation.
I0422 07:53:01.000211 15515 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0422 07:53:01.000216 15515 net.cpp:228] rpn_relu1 does not need backward computation.
I0422 07:53:01.000219 15515 net.cpp:228] rpn_conv1 does not need backward computation.
I0422 07:53:01.000223 15515 net.cpp:226] loss_bbox needs backward computation.
I0422 07:53:01.000231 15515 net.cpp:226] loss_cls needs backward computation.
I0422 07:53:01.000236 15515 net.cpp:226] bbox_pred needs backward computation.
I0422 07:53:01.000241 15515 net.cpp:226] cls_score needs backward computation.
I0422 07:53:01.000247 15515 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0422 07:53:01.000252 15515 net.cpp:226] drop7 needs backward computation.
I0422 07:53:01.000255 15515 net.cpp:226] relu7 needs backward computation.
I0422 07:53:01.000259 15515 net.cpp:226] fc7 needs backward computation.
I0422 07:53:01.000263 15515 net.cpp:226] drop6 needs backward computation.
I0422 07:53:01.000268 15515 net.cpp:226] relu6 needs backward computation.
I0422 07:53:01.000273 15515 net.cpp:226] fc6 needs backward computation.
I0422 07:53:01.000278 15515 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0422 07:53:01.000285 15515 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0422 07:53:01.000291 15515 net.cpp:228] relu5 does not need backward computation.
I0422 07:53:01.000296 15515 net.cpp:228] conv5 does not need backward computation.
I0422 07:53:01.000303 15515 net.cpp:228] relu4 does not need backward computation.
I0422 07:53:01.000308 15515 net.cpp:228] conv4 does not need backward computation.
I0422 07:53:01.000313 15515 net.cpp:228] relu3 does not need backward computation.
I0422 07:53:01.000321 15515 net.cpp:228] conv3 does not need backward computation.
I0422 07:53:01.000327 15515 net.cpp:228] pool2 does not need backward computation.
I0422 07:53:01.000334 15515 net.cpp:228] norm2 does not need backward computation.
I0422 07:53:01.000339 15515 net.cpp:228] relu2 does not need backward computation.
I0422 07:53:01.000342 15515 net.cpp:228] conv2 does not need backward computation.
I0422 07:53:01.000347 15515 net.cpp:228] pool1 does not need backward computation.
I0422 07:53:01.000354 15515 net.cpp:228] norm1 does not need backward computation.
I0422 07:53:01.000360 15515 net.cpp:228] relu1 does not need backward computation.
I0422 07:53:01.000363 15515 net.cpp:228] conv1 does not need backward computation.
I0422 07:53:01.000371 15515 net.cpp:228] data does not need backward computation.
I0422 07:53:01.000375 15515 net.cpp:270] This network produces output bbox_loss
I0422 07:53:01.000381 15515 net.cpp:270] This network produces output cls_loss
I0422 07:53:01.000419 15515 net.cpp:283] Network initialization done.
I0422 07:53:01.000578 15515 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_rpn_stage2_iter_40.caffemodel
I0422 07:53:01.433591 15515 net.cpp:816] Ignoring source layer input-data
I0422 07:53:01.433629 15515 net.cpp:816] Ignoring source layer data_input-data_0_split
I0422 07:53:01.433635 15515 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0422 07:53:01.433640 15515 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0422 07:53:01.434907 15515 net.cpp:816] Ignoring source layer conv3_relu3_0_split
I0422 07:53:01.437219 15515 net.cpp:816] Ignoring source layer rpn_conv2
I0422 07:53:01.437232 15515 net.cpp:816] Ignoring source layer rpn_relu2
I0422 07:53:01.437237 15515 net.cpp:816] Ignoring source layer rpn_conv2_rpn_relu2_0_split
I0422 07:53:01.437249 15515 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0422 07:53:01.437254 15515 net.cpp:816] Ignoring source layer rpn_cls_score2
I0422 07:53:01.437258 15515 net.cpp:816] Ignoring source layer rpn_cls_score2_rpn_cls_score2_0_split
I0422 07:53:01.437274 15515 net.cpp:816] Ignoring source layer rpn_bbox_pred2
I0422 07:53:01.437285 15515 net.cpp:816] Ignoring source layer rpn_cls_score_reshape
I0422 07:53:01.437289 15515 net.cpp:816] Ignoring source layer rpn_cls_score_reshape2
I0422 07:53:01.437294 15515 net.cpp:816] Ignoring source layer rpn-data
I0422 07:53:01.437297 15515 net.cpp:816] Ignoring source layer rpn-data2
I0422 07:53:01.437301 15515 net.cpp:816] Ignoring source layer rpn_loss_cls
I0422 07:53:01.437305 15515 net.cpp:816] Ignoring source layer rpn_loss_cls2
I0422 07:53:01.437309 15515 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0422 07:53:01.437314 15515 net.cpp:816] Ignoring source layer rpn_loss_bbox2
I0422 07:53:01.437317 15515 net.cpp:816] Ignoring source layer dummy_roi_pool_conv5
I0422 07:53:01.480787 15515 net.cpp:816] Ignoring source layer silence_fc7
Solving...
I0422 07:53:01.811269 15515 solver.cpp:229] Iteration 0, loss = 1.09537
I0422 07:53:01.811317 15515 solver.cpp:245]     Train net output #0: bbox_loss = 0.0420873 (* 1 = 0.0420873 loss)
I0422 07:53:01.811331 15515 solver.cpp:245]     Train net output #1: cls_loss = 1.05329 (* 1 = 1.05329 loss)
I0422 07:53:01.811350 15515 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0422 07:53:06.384908 15515 solver.cpp:229] Iteration 20, loss = 0.32921
I0422 07:53:06.384960 15515 solver.cpp:245]     Train net output #0: bbox_loss = 0.0403482 (* 1 = 0.0403482 loss)
I0422 07:53:06.384971 15515 solver.cpp:245]     Train net output #1: cls_loss = 0.288862 (* 1 = 0.288862 loss)
I0422 07:53:06.384980 15515 sgd_solver.cpp:106] Iteration 20, lr = 0.001
Wrote snapshot to: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_40.caffemodel
done solving
cp /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/zf_fast_rcnn_stage2_iter_40.caffemodel -> /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel
Final model: /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel

real	4m4.491s
user	3m17.352s
sys	0m42.663s
+ set +x
+ ./tools/test_net.py --gpu 0 --def models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt --net /mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel --imdb voc_2007_test --cfg experiments/cfgs/faster_rcnn_alt_opt.yml
libdc1394 error: Failed to initialize libdc1394
Called with args:
Namespace(caffemodel='/mnt/sdf/traffic-sign-detection/output/faster_rcnn_alt_opt/voc_2007_trainval/ZF_faster_rcnn_final.caffemodel', cfg_file='experiments/cfgs/faster_rcnn_alt_opt.yml', comp_mode=False, gpu_id=0, imdb_name='voc_2007_test', max_per_image=100, prototxt='models/pascal_voc/ZF/faster_rcnn_alt_opt/faster_rcnn_test.pt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/mnt/sdf/traffic-sign-detection/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_alt_opt',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/mnt/sdf/traffic-sign-detection/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/mnt/sdf/traffic-sign-detection',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': False,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': False,
           'IMS_PER_BATCH': 2,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'selective_search',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0422 07:53:15.244791 15530 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 1360
  dim: 800
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv1"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn_conv1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "rpn_relu1"
  type: "ReLU"
  bottom: "rpn_conv1"
  top: "rpn_conv1"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn_conv1"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 44
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 176
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0422 07:53:15.244951 15530 net.cpp:413] Input 0 -> data
I0422 07:53:15.260365 15530 net.cpp:413] Input 1 -> im_info
I0422 07:53:15.260416 15530 layer_factory.hpp:77] Creating layer conv1
I0422 07:53:15.260443 15530 net.cpp:106] Creating Layer conv1
I0422 07:53:15.260457 15530 net.cpp:454] conv1 <- data
I0422 07:53:15.260475 15530 net.cpp:411] conv1 -> conv1
I0422 07:53:15.261940 15530 net.cpp:150] Setting up conv1
I0422 07:53:15.261960 15530 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0422 07:53:15.261963 15530 net.cpp:165] Memory required for data: 104448000
I0422 07:53:15.261977 15530 layer_factory.hpp:77] Creating layer relu1
I0422 07:53:15.261994 15530 net.cpp:106] Creating Layer relu1
I0422 07:53:15.261999 15530 net.cpp:454] relu1 <- conv1
I0422 07:53:15.262009 15530 net.cpp:397] relu1 -> conv1 (in-place)
I0422 07:53:15.262025 15530 net.cpp:150] Setting up relu1
I0422 07:53:15.262042 15530 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0422 07:53:15.262046 15530 net.cpp:165] Memory required for data: 208896000
I0422 07:53:15.262051 15530 layer_factory.hpp:77] Creating layer norm1
I0422 07:53:15.262064 15530 net.cpp:106] Creating Layer norm1
I0422 07:53:15.262076 15530 net.cpp:454] norm1 <- conv1
I0422 07:53:15.262084 15530 net.cpp:411] norm1 -> norm1
I0422 07:53:15.262208 15530 net.cpp:150] Setting up norm1
I0422 07:53:15.262222 15530 net.cpp:157] Top shape: 1 96 680 400 (26112000)
I0422 07:53:15.262224 15530 net.cpp:165] Memory required for data: 313344000
I0422 07:53:15.262228 15530 layer_factory.hpp:77] Creating layer pool1
I0422 07:53:15.262233 15530 net.cpp:106] Creating Layer pool1
I0422 07:53:15.262238 15530 net.cpp:454] pool1 <- norm1
I0422 07:53:15.262241 15530 net.cpp:411] pool1 -> pool1
I0422 07:53:15.262282 15530 net.cpp:150] Setting up pool1
I0422 07:53:15.262300 15530 net.cpp:157] Top shape: 1 96 341 201 (6579936)
I0422 07:53:15.262303 15530 net.cpp:165] Memory required for data: 339663744
I0422 07:53:15.262306 15530 layer_factory.hpp:77] Creating layer conv2
I0422 07:53:15.262315 15530 net.cpp:106] Creating Layer conv2
I0422 07:53:15.262323 15530 net.cpp:454] conv2 <- pool1
I0422 07:53:15.262342 15530 net.cpp:411] conv2 -> conv2
I0422 07:53:15.264531 15530 net.cpp:150] Setting up conv2
I0422 07:53:15.264549 15530 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0422 07:53:15.264552 15530 net.cpp:165] Memory required for data: 357349248
I0422 07:53:15.264561 15530 layer_factory.hpp:77] Creating layer relu2
I0422 07:53:15.264570 15530 net.cpp:106] Creating Layer relu2
I0422 07:53:15.264575 15530 net.cpp:454] relu2 <- conv2
I0422 07:53:15.264581 15530 net.cpp:397] relu2 -> conv2 (in-place)
I0422 07:53:15.264592 15530 net.cpp:150] Setting up relu2
I0422 07:53:15.264600 15530 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0422 07:53:15.264611 15530 net.cpp:165] Memory required for data: 375034752
I0422 07:53:15.264616 15530 layer_factory.hpp:77] Creating layer norm2
I0422 07:53:15.264626 15530 net.cpp:106] Creating Layer norm2
I0422 07:53:15.264638 15530 net.cpp:454] norm2 <- conv2
I0422 07:53:15.264645 15530 net.cpp:411] norm2 -> norm2
I0422 07:53:15.264745 15530 net.cpp:150] Setting up norm2
I0422 07:53:15.264758 15530 net.cpp:157] Top shape: 1 256 171 101 (4421376)
I0422 07:53:15.264761 15530 net.cpp:165] Memory required for data: 392720256
I0422 07:53:15.264765 15530 layer_factory.hpp:77] Creating layer pool2
I0422 07:53:15.264768 15530 net.cpp:106] Creating Layer pool2
I0422 07:53:15.264771 15530 net.cpp:454] pool2 <- norm2
I0422 07:53:15.264777 15530 net.cpp:411] pool2 -> pool2
I0422 07:53:15.264811 15530 net.cpp:150] Setting up pool2
I0422 07:53:15.264825 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.264829 15530 net.cpp:165] Memory required for data: 397211520
I0422 07:53:15.264834 15530 layer_factory.hpp:77] Creating layer conv3
I0422 07:53:15.264847 15530 net.cpp:106] Creating Layer conv3
I0422 07:53:15.264856 15530 net.cpp:454] conv3 <- pool2
I0422 07:53:15.264863 15530 net.cpp:411] conv3 -> conv3
I0422 07:53:15.267662 15530 net.cpp:150] Setting up conv3
I0422 07:53:15.267679 15530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0422 07:53:15.267683 15530 net.cpp:165] Memory required for data: 403948416
I0422 07:53:15.267691 15530 layer_factory.hpp:77] Creating layer relu3
I0422 07:53:15.267700 15530 net.cpp:106] Creating Layer relu3
I0422 07:53:15.267704 15530 net.cpp:454] relu3 <- conv3
I0422 07:53:15.267709 15530 net.cpp:397] relu3 -> conv3 (in-place)
I0422 07:53:15.267717 15530 net.cpp:150] Setting up relu3
I0422 07:53:15.267730 15530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0422 07:53:15.267735 15530 net.cpp:165] Memory required for data: 410685312
I0422 07:53:15.267738 15530 layer_factory.hpp:77] Creating layer conv4
I0422 07:53:15.267750 15530 net.cpp:106] Creating Layer conv4
I0422 07:53:15.267761 15530 net.cpp:454] conv4 <- conv3
I0422 07:53:15.267769 15530 net.cpp:411] conv4 -> conv4
I0422 07:53:15.271067 15530 net.cpp:150] Setting up conv4
I0422 07:53:15.271085 15530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0422 07:53:15.271088 15530 net.cpp:165] Memory required for data: 417422208
I0422 07:53:15.271095 15530 layer_factory.hpp:77] Creating layer relu4
I0422 07:53:15.271100 15530 net.cpp:106] Creating Layer relu4
I0422 07:53:15.271106 15530 net.cpp:454] relu4 <- conv4
I0422 07:53:15.271113 15530 net.cpp:397] relu4 -> conv4 (in-place)
I0422 07:53:15.271122 15530 net.cpp:150] Setting up relu4
I0422 07:53:15.271131 15530 net.cpp:157] Top shape: 1 384 86 51 (1684224)
I0422 07:53:15.271134 15530 net.cpp:165] Memory required for data: 424159104
I0422 07:53:15.271139 15530 layer_factory.hpp:77] Creating layer conv5
I0422 07:53:15.271152 15530 net.cpp:106] Creating Layer conv5
I0422 07:53:15.271164 15530 net.cpp:454] conv5 <- conv4
I0422 07:53:15.271173 15530 net.cpp:411] conv5 -> conv5
I0422 07:53:15.273478 15530 net.cpp:150] Setting up conv5
I0422 07:53:15.273496 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.273499 15530 net.cpp:165] Memory required for data: 428650368
I0422 07:53:15.273509 15530 layer_factory.hpp:77] Creating layer relu5
I0422 07:53:15.273515 15530 net.cpp:106] Creating Layer relu5
I0422 07:53:15.273519 15530 net.cpp:454] relu5 <- conv5
I0422 07:53:15.273526 15530 net.cpp:397] relu5 -> conv5 (in-place)
I0422 07:53:15.273537 15530 net.cpp:150] Setting up relu5
I0422 07:53:15.273545 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.273553 15530 net.cpp:165] Memory required for data: 433141632
I0422 07:53:15.273557 15530 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0422 07:53:15.273568 15530 net.cpp:106] Creating Layer conv5_relu5_0_split
I0422 07:53:15.273581 15530 net.cpp:454] conv5_relu5_0_split <- conv5
I0422 07:53:15.273588 15530 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0422 07:53:15.273597 15530 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0422 07:53:15.273651 15530 net.cpp:150] Setting up conv5_relu5_0_split
I0422 07:53:15.273665 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.273670 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.273672 15530 net.cpp:165] Memory required for data: 442124160
I0422 07:53:15.273675 15530 layer_factory.hpp:77] Creating layer rpn_conv1
I0422 07:53:15.273684 15530 net.cpp:106] Creating Layer rpn_conv1
I0422 07:53:15.273687 15530 net.cpp:454] rpn_conv1 <- conv5_relu5_0_split_0
I0422 07:53:15.273692 15530 net.cpp:411] rpn_conv1 -> rpn_conv1
I0422 07:53:15.275352 15530 net.cpp:150] Setting up rpn_conv1
I0422 07:53:15.275369 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.275372 15530 net.cpp:165] Memory required for data: 446615424
I0422 07:53:15.275379 15530 layer_factory.hpp:77] Creating layer rpn_relu1
I0422 07:53:15.275387 15530 net.cpp:106] Creating Layer rpn_relu1
I0422 07:53:15.275389 15530 net.cpp:454] rpn_relu1 <- rpn_conv1
I0422 07:53:15.275396 15530 net.cpp:397] rpn_relu1 -> rpn_conv1 (in-place)
I0422 07:53:15.275405 15530 net.cpp:150] Setting up rpn_relu1
I0422 07:53:15.275410 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.275413 15530 net.cpp:165] Memory required for data: 451106688
I0422 07:53:15.275415 15530 layer_factory.hpp:77] Creating layer rpn_conv1_rpn_relu1_0_split
I0422 07:53:15.275419 15530 net.cpp:106] Creating Layer rpn_conv1_rpn_relu1_0_split
I0422 07:53:15.275423 15530 net.cpp:454] rpn_conv1_rpn_relu1_0_split <- rpn_conv1
I0422 07:53:15.275445 15530 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_0
I0422 07:53:15.275456 15530 net.cpp:411] rpn_conv1_rpn_relu1_0_split -> rpn_conv1_rpn_relu1_0_split_1
I0422 07:53:15.275506 15530 net.cpp:150] Setting up rpn_conv1_rpn_relu1_0_split
I0422 07:53:15.275518 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.275522 15530 net.cpp:157] Top shape: 1 256 86 51 (1122816)
I0422 07:53:15.275526 15530 net.cpp:165] Memory required for data: 460089216
I0422 07:53:15.275527 15530 layer_factory.hpp:77] Creating layer rpn_cls_score
I0422 07:53:15.275537 15530 net.cpp:106] Creating Layer rpn_cls_score
I0422 07:53:15.275543 15530 net.cpp:454] rpn_cls_score <- rpn_conv1_rpn_relu1_0_split_0
I0422 07:53:15.275548 15530 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0422 07:53:15.275765 15530 net.cpp:150] Setting up rpn_cls_score
I0422 07:53:15.275780 15530 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0422 07:53:15.275784 15530 net.cpp:165] Memory required for data: 460405008
I0422 07:53:15.275789 15530 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0422 07:53:15.275795 15530 net.cpp:106] Creating Layer rpn_bbox_pred
I0422 07:53:15.275800 15530 net.cpp:454] rpn_bbox_pred <- rpn_conv1_rpn_relu1_0_split_1
I0422 07:53:15.275807 15530 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0422 07:53:15.276031 15530 net.cpp:150] Setting up rpn_bbox_pred
I0422 07:53:15.276043 15530 net.cpp:157] Top shape: 1 36 86 51 (157896)
I0422 07:53:15.276046 15530 net.cpp:165] Memory required for data: 461036592
I0422 07:53:15.276051 15530 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0422 07:53:15.276058 15530 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0422 07:53:15.276063 15530 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0422 07:53:15.276073 15530 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0422 07:53:15.276119 15530 net.cpp:150] Setting up rpn_cls_score_reshape
I0422 07:53:15.276139 15530 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0422 07:53:15.276144 15530 net.cpp:165] Memory required for data: 461352384
I0422 07:53:15.276149 15530 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0422 07:53:15.276154 15530 net.cpp:106] Creating Layer rpn_cls_prob
I0422 07:53:15.276157 15530 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0422 07:53:15.276161 15530 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0422 07:53:15.276235 15530 net.cpp:150] Setting up rpn_cls_prob
I0422 07:53:15.276248 15530 net.cpp:157] Top shape: 1 2 774 51 (78948)
I0422 07:53:15.276252 15530 net.cpp:165] Memory required for data: 461668176
I0422 07:53:15.276254 15530 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0422 07:53:15.276259 15530 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0422 07:53:15.276264 15530 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0422 07:53:15.276269 15530 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0422 07:53:15.276298 15530 net.cpp:150] Setting up rpn_cls_prob_reshape
I0422 07:53:15.276309 15530 net.cpp:157] Top shape: 1 18 86 51 (78948)
I0422 07:53:15.276314 15530 net.cpp:165] Memory required for data: 461983968
I0422 07:53:15.276319 15530 layer_factory.hpp:77] Creating layer proposal
I0422 07:53:15.276779 15530 net.cpp:106] Creating Layer proposal
I0422 07:53:15.276796 15530 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0422 07:53:15.276801 15530 net.cpp:454] proposal <- rpn_bbox_pred
I0422 07:53:15.276805 15530 net.cpp:454] proposal <- im_info
I0422 07:53:15.276810 15530 net.cpp:411] proposal -> rois
I0422 07:53:15.277496 15530 net.cpp:150] Setting up proposal
I0422 07:53:15.277518 15530 net.cpp:157] Top shape: 1 5 (5)
I0422 07:53:15.277520 15530 net.cpp:165] Memory required for data: 461983988
I0422 07:53:15.277524 15530 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0422 07:53:15.277532 15530 net.cpp:106] Creating Layer roi_pool_conv5
I0422 07:53:15.277541 15530 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0422 07:53:15.277549 15530 net.cpp:454] roi_pool_conv5 <- rois
I0422 07:53:15.277559 15530 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0422 07:53:15.277575 15530 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0422 07:53:15.277637 15530 net.cpp:150] Setting up roi_pool_conv5
I0422 07:53:15.277652 15530 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0422 07:53:15.277658 15530 net.cpp:165] Memory required for data: 462020852
I0422 07:53:15.277663 15530 layer_factory.hpp:77] Creating layer fc6
I0422 07:53:15.277674 15530 net.cpp:106] Creating Layer fc6
I0422 07:53:15.277680 15530 net.cpp:454] fc6 <- roi_pool_conv5
I0422 07:53:15.277686 15530 net.cpp:411] fc6 -> fc6
I0422 07:53:15.376672 15530 net.cpp:150] Setting up fc6
I0422 07:53:15.376708 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.376713 15530 net.cpp:165] Memory required for data: 462037236
I0422 07:53:15.376734 15530 layer_factory.hpp:77] Creating layer relu6
I0422 07:53:15.376744 15530 net.cpp:106] Creating Layer relu6
I0422 07:53:15.376754 15530 net.cpp:454] relu6 <- fc6
I0422 07:53:15.376760 15530 net.cpp:397] relu6 -> fc6 (in-place)
I0422 07:53:15.376768 15530 net.cpp:150] Setting up relu6
I0422 07:53:15.376778 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.376783 15530 net.cpp:165] Memory required for data: 462053620
I0422 07:53:15.376788 15530 layer_factory.hpp:77] Creating layer drop6
I0422 07:53:15.376802 15530 net.cpp:106] Creating Layer drop6
I0422 07:53:15.376813 15530 net.cpp:454] drop6 <- fc6
I0422 07:53:15.376822 15530 net.cpp:397] drop6 -> fc6 (in-place)
I0422 07:53:15.376858 15530 net.cpp:150] Setting up drop6
I0422 07:53:15.376878 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.376881 15530 net.cpp:165] Memory required for data: 462070004
I0422 07:53:15.376884 15530 layer_factory.hpp:77] Creating layer fc7
I0422 07:53:15.376891 15530 net.cpp:106] Creating Layer fc7
I0422 07:53:15.376895 15530 net.cpp:454] fc7 <- fc6
I0422 07:53:15.376899 15530 net.cpp:411] fc7 -> fc7
I0422 07:53:15.420436 15530 net.cpp:150] Setting up fc7
I0422 07:53:15.420478 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.420481 15530 net.cpp:165] Memory required for data: 462086388
I0422 07:53:15.420493 15530 layer_factory.hpp:77] Creating layer relu7
I0422 07:53:15.420503 15530 net.cpp:106] Creating Layer relu7
I0422 07:53:15.420513 15530 net.cpp:454] relu7 <- fc7
I0422 07:53:15.420521 15530 net.cpp:397] relu7 -> fc7 (in-place)
I0422 07:53:15.420532 15530 net.cpp:150] Setting up relu7
I0422 07:53:15.420536 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.420538 15530 net.cpp:165] Memory required for data: 462102772
I0422 07:53:15.420542 15530 layer_factory.hpp:77] Creating layer drop7
I0422 07:53:15.420549 15530 net.cpp:106] Creating Layer drop7
I0422 07:53:15.420553 15530 net.cpp:454] drop7 <- fc7
I0422 07:53:15.420559 15530 net.cpp:397] drop7 -> fc7 (in-place)
I0422 07:53:15.420590 15530 net.cpp:150] Setting up drop7
I0422 07:53:15.420606 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.420610 15530 net.cpp:165] Memory required for data: 462119156
I0422 07:53:15.420614 15530 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0422 07:53:15.420621 15530 net.cpp:106] Creating Layer fc7_drop7_0_split
I0422 07:53:15.420625 15530 net.cpp:454] fc7_drop7_0_split <- fc7
I0422 07:53:15.420632 15530 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0422 07:53:15.420644 15530 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0422 07:53:15.420694 15530 net.cpp:150] Setting up fc7_drop7_0_split
I0422 07:53:15.420708 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.420712 15530 net.cpp:157] Top shape: 1 4096 (4096)
I0422 07:53:15.420714 15530 net.cpp:165] Memory required for data: 462151924
I0422 07:53:15.420717 15530 layer_factory.hpp:77] Creating layer cls_score
I0422 07:53:15.420729 15530 net.cpp:106] Creating Layer cls_score
I0422 07:53:15.420737 15530 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0422 07:53:15.420748 15530 net.cpp:411] cls_score -> cls_score
I0422 07:53:15.421591 15530 net.cpp:150] Setting up cls_score
I0422 07:53:15.421609 15530 net.cpp:157] Top shape: 1 44 (44)
I0422 07:53:15.421612 15530 net.cpp:165] Memory required for data: 462152100
I0422 07:53:15.421619 15530 layer_factory.hpp:77] Creating layer bbox_pred
I0422 07:53:15.421629 15530 net.cpp:106] Creating Layer bbox_pred
I0422 07:53:15.421633 15530 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0422 07:53:15.421638 15530 net.cpp:411] bbox_pred -> bbox_pred
I0422 07:53:15.423465 15530 net.cpp:150] Setting up bbox_pred
I0422 07:53:15.423481 15530 net.cpp:157] Top shape: 1 176 (176)
I0422 07:53:15.423485 15530 net.cpp:165] Memory required for data: 462152804
I0422 07:53:15.423491 15530 layer_factory.hpp:77] Creating layer cls_prob
I0422 07:53:15.423497 15530 net.cpp:106] Creating Layer cls_prob
I0422 07:53:15.423502 15530 net.cpp:454] cls_prob <- cls_score
I0422 07:53:15.423507 15530 net.cpp:411] cls_prob -> cls_prob
I0422 07:53:15.423580 15530 net.cpp:150] Setting up cls_prob
I0422 07:53:15.423593 15530 net.cpp:157] Top shape: 1 44 (44)
I0422 07:53:15.423596 15530 net.cpp:165] Memory required for data: 462152980
I0422 07:53:15.423599 15530 net.cpp:228] cls_prob does not need backward computation.
I0422 07:53:15.423602 15530 net.cpp:228] bbox_pred does not need backward computation.
I0422 07:53:15.423604 15530 net.cpp:228] cls_score does not need backward computation.
I0422 07:53:15.423607 15530 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0422 07:53:15.423610 15530 net.cpp:228] drop7 does not need backward computation.
I0422 07:53:15.423614 15530 net.cpp:228] relu7 does not need backward computation.
I0422 07:53:15.423615 15530 net.cpp:228] fc7 does not need backward computation.
I0422 07:53:15.423619 15530 net.cpp:228] drop6 does not need backward computation.
I0422 07:53:15.423621 15530 net.cpp:228] relu6 does not need backward computation.
I0422 07:53:15.423624 15530 net.cpp:228] fc6 does not need backward computation.
I0422 07:53:15.423626 15530 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0422 07:53:15.423630 15530 net.cpp:228] proposal does not need backward computation.
I0422 07:53:15.423633 15530 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0422 07:53:15.423640 15530 net.cpp:228] rpn_cls_prob does not need backward computation.
I0422 07:53:15.423645 15530 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0422 07:53:15.423650 15530 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0422 07:53:15.423656 15530 net.cpp:228] rpn_cls_score does not need backward computation.
I0422 07:53:15.423662 15530 net.cpp:228] rpn_conv1_rpn_relu1_0_split does not need backward computation.
I0422 07:53:15.423669 15530 net.cpp:228] rpn_relu1 does not need backward computation.
I0422 07:53:15.423673 15530 net.cpp:228] rpn_conv1 does not need backward computation.
I0422 07:53:15.423679 15530 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0422 07:53:15.423683 15530 net.cpp:228] relu5 does not need backward computation.
I0422 07:53:15.423688 15530 net.cpp:228] conv5 does not need backward computation.
I0422 07:53:15.423693 15530 net.cpp:228] relu4 does not need backward computation.
I0422 07:53:15.423697 15530 net.cpp:228] conv4 does not need backward computation.
I0422 07:53:15.423705 15530 net.cpp:228] relu3 does not need backward computation.
I0422 07:53:15.423710 15530 net.cpp:228] conv3 does not need backward computation.
I0422 07:53:15.423714 15530 net.cpp:228] pool2 does not need backward computation.
I0422 07:53:15.423719 15530 net.cpp:228] norm2 does not need backward computation.
I0422 07:53:15.423724 15530 net.cpp:228] relu2 does not need backward computation.
I0422 07:53:15.423728 15530 net.cpp:228] conv2 does not need backward computation.
I0422 07:53:15.423733 15530 net.cpp:228] pool1 does not need backward computation.
I0422 07:53:15.423739 15530 net.cpp:228] norm1 does not need backward computation.
I0422 07:53:15.423744 15530 net.cpp:228] relu1 does not need backward computation.
I0422 07:53:15.423748 15530 net.cpp:228] conv1 does not need backward computation.
I0422 07:53:15.423755 15530 net.cpp:270] This network produces output bbox_pred
I0422 07:53:15.423760 15530 net.cpp:270] This network produces output cls_prob
I0422 07:53:15.423800 15530 net.cpp:283] Network initialization done.
I0422 07:53:15.862803 15530 net.cpp:816] Ignoring source layer data
I0422 07:53:15.910686 15530 net.cpp:816] Ignoring source layer loss_cls
I0422 07:53:15.910713 15530 net.cpp:816] Ignoring source layer loss_bbox
I0422 07:53:15.911216 15530 net.cpp:816] Ignoring source layer silence_rpn_cls_score
I0422 07:53:15.911224 15530 net.cpp:816] Ignoring source layer silence_rpn_bbox_pred
im_detect: 1/50 0.165s 0.001s
im_detect: 2/50 0.138s 0.001s
im_detect: 3/50 0.129s 0.001s
im_detect: 4/50 0.124s 0.001s
im_detect: 5/50 0.121s 0.001s
im_detect: 6/50 0.118s 0.001s
im_detect: 7/50 0.117s 0.001s
im_detect: 8/50 0.116s 0.001s
im_detect: 9/50 0.115s 0.001s
im_detect: 10/50 0.114s 0.001s
im_detect: 11/50 0.114s 0.001s
im_detect: 12/50 0.113s 0.001s
im_detect: 13/50 0.113s 0.001s
im_detect: 14/50 0.113s 0.001s
im_detect: 15/50 0.112s 0.001s
im_detect: 16/50 0.112s 0.001s
im_detect: 17/50 0.112s 0.001s
im_detect: 18/50 0.112s 0.001s
im_detect: 19/50 0.112s 0.001s
im_detect: 20/50 0.111s 0.001s
im_detect: 21/50 0.111s 0.001s
im_detect: 22/50 0.111s 0.001s
im_detect: 23/50 0.111s 0.001s
im_detect: 24/50 0.111s 0.001s
im_detect: 25/50 0.111s 0.001s
im_detect: 26/50 0.111s 0.001s
im_detect: 27/50 0.111s 0.001s
im_detect: 28/50 0.111s 0.001s
im_detect: 29/50 0.111s 0.001s
im_detect: 30/50 0.110s 0.001s
im_detect: 31/50 0.110s 0.001s
im_detect: 32/50 0.110s 0.001s
im_detect: 33/50 0.110s 0.001s
im_detect: 34/50 0.110s 0.001s
im_detect: 35/50 0.110s 0.001s
im_detect: 36/50 0.110s 0.001s
im_detect: 37/50 0.110s 0.001s
im_detect: 38/50 0.110s 0.001s
im_detect: 39/50 0.110s 0.001s
im_detect: 40/50 0.110s 0.001s
im_detect: 41/50 0.110s 0.001s
im_detect: 42/50 0.110s 0.001s
im_detect: 43/50 0.110s 0.001s
im_detect: 44/50 0.110s 0.001s
im_detect: 45/50 0.110s 0.001s
im_detect: 46/50 0.110s 0.001s
im_detect: 47/50 0.110s 0.001s
im_detect: 48/50 0.110s 0.001s
im_detect: 49/50 0.110s 0.001s
im_detect: 50/50 0.110s 0.001s
Evaluating detections
Writing speedlimit-20 VOC results file
Writing speedlimit-30 VOC results file
Writing speedlimit-50 VOC results file
Writing speedlimit-60 VOC results file
Writing speedlimit-70 VOC results file
Writing speedlimit-80 VOC results file
Writing restrict-end-80 VOC results file
Writing speedlimit-100 VOC results file
Writing speedlimit-120 VOC results file
Writing no-overtake VOC results file
Writing no-overtake-truck VOC results file
Writing priority-next-intersect VOC results file
Writing priority-road VOC results file
Writing giveaway VOC results file
Writing stop VOC results file
Writing no-traffic-bothways VOC results file
Writing no-truck VOC results file
Writing no-entry VOC results file
Writing danger VOC results file
Writing bend-left VOC results file
Writing bend-right VOC results file
Writing bend VOC results file
Writing uneven-road VOC results file
Writing slippery-road VOC results file
Writing road-narrow VOC results file
Writing construction VOC results file
Writing traffic-signal VOC results file
Writing pedestrian-crossing VOC results file
Writing school-crossing VOC results file
Writing cycle-crossing VOC results file
Writing snow VOC results file
Writing animals VOC results file
Writing restriction-ends VOC results file
Writing go-right VOC results file
Writing go-left VOC results file
Writing go-straight VOC results file
Writing go-right-straight VOC results file
Writing go-left-straight VOC results file
Writing keep-right VOC results file
Writing keep-left VOC results file
Writing roundabout VOC results file
Writing restrict-ends-overtaking VOC results file
Writing restrict-ends-overtaking-truck VOC results file
VOC07 metric? Yes
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-20.txt
[]
AP for speedlimit-20 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-30.txt
[]
AP for speedlimit-30 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-50.txt
[]
AP for speedlimit-50 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-60.txt
[]
AP for speedlimit-60 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-70.txt
[]
AP for speedlimit-70 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-80.txt
[]
AP for speedlimit-80 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_restrict-end-80.txt
[]
AP for restrict-end-80 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-100.txt
[]
AP for speedlimit-100 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_speedlimit-120.txt
[]
AP for speedlimit-120 = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_no-overtake.txt
[]
AP for no-overtake = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_no-overtake-truck.txt
[]
AP for no-overtake-truck = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_priority-next-intersect.txt
[]
AP for priority-next-intersect = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_priority-road.txt
[]
AP for priority-road = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_giveaway.txt
[]
AP for giveaway = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_stop.txt
[]
AP for stop = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_no-traffic-bothways.txt
[]
AP for no-traffic-bothways = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_no-truck.txt
[]
AP for no-truck = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_no-entry.txt
[]
AP for no-entry = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_danger.txt
[]
AP for danger = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_bend-left.txt
[]
AP for bend-left = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_bend-right.txt
[]
AP for bend-right = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_bend.txt
[]
AP for bend = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_uneven-road.txt
[]
AP for uneven-road = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_slippery-road.txt
[]
AP for slippery-road = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_road-narrow.txt
[]
AP for road-narrow = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_construction.txt
[]
AP for construction = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_traffic-signal.txt
[]
AP for traffic-signal = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_pedestrian-crossing.txt
[]
AP for pedestrian-crossing = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_school-crossing.txt
[]
AP for school-crossing = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_cycle-crossing.txt
[]
AP for cycle-crossing = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_snow.txt
[]
AP for snow = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_animals.txt
[]
AP for animals = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_restriction-ends.txt
[]
AP for restriction-ends = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_go-right.txt
[]
AP for go-right = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_go-left.txt
[]
AP for go-left = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_go-straight.txt
[]
AP for go-straight = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_go-right-straight.txt
[]
AP for go-right-straight = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_go-left-straight.txt
[]
AP for go-left-straight = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_keep-right.txt
[]
AP for keep-right = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_keep-left.txt
[]
AP for keep-left = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_roundabout.txt
[]
AP for roundabout = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_restrict-ends-overtaking.txt
[]
AP for restrict-ends-overtaking = 0.0000
/mnt/sdf/traffic-sign-detection/data/VOCdevkit2007/results/VOC2007/Main/comp4_23efd0e0-8c6c-4193-b7d4-4c150e0584a3_det_test_restrict-ends-overtaking-truck.txt
[]
AP for restrict-ends-overtaking-truck = 0.0000
/usr/local/lib/python2.7/dist-packages/numpy/core/fromnumeric.py:2889: RuntimeWarning: Mean of empty slice.
  out=out, **kwargs)
/usr/local/lib/python2.7/dist-packages/numpy/core/_methods.py:80: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)
Mean AP = nan
~~~~~~~~
Results:
nan
~~~~~~~~

--------------------------------------------------------------
Results computed with the **unofficial** Python eval code.
Results should be very close to the official MATLAB eval code.
Recompute with `./tools/reval.py --matlab ...` for your paper.
-- Thanks, The Management
--------------------------------------------------------------

real	0m11.656s
user	0m7.519s
sys	0m2.490s
